bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(jsonToken.nextToken()!=  JsonToken.NAME)  {  [CE]  cannot  find  symbol  jsonToken  [FE]        IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(jsonToken.nextToken()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(jsonToken.nextToken()!=  JsonToken.NAME)  {	  if(nextToken()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  jsonToken	59	None	replace
2	[BUG]  [BUGGY]  if(nextToken()!=  JsonToken.VALUE_NAME)  {  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()!=  JsonToken.VALUE_NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()!=  JsonToken.VALUE_NAME)  {	  if(nextToken()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
3	[BUG]  [BUGGY]  if(nextToken()!=  JsonToken.STRING)  {  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()!=  JsonToken.STRING)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()!=  JsonToken.STRING)  {	  if(nextToken()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
4	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_STRING  ||  stackSize  ==  JsonToken.VALUE_STRING)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_STRING  ||  stackSize  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_STRING  ||  stackSize  ==  JsonToken.VALUE_STRING)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	46	None	replace
5	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize!=  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize!=  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize!=  JsonToken.VALUE_NULL)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	46	None	replace
6	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  ==  JsonToken.VALUE_NULL)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	46	None	replace
7	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	46	None	replace
8	[BUG]  [BUGGY]  if(next()!=  JsonToken.VALUE_NAME)  {  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()!=  JsonToken.VALUE_NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()!=  JsonToken.VALUE_NAME)  {	  if(next()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
9	[BUG]  [BUGGY]  if(jsonToken!=  JsonToken.NAME)  {  [CE]  cannot  find  symbol  jsonToken  [FE]                IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(jsonToken!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(jsonToken!=  JsonToken.NAME)  {	  if(next()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  jsonToken	62	None	replace
10	[BUG]  [BUGGY]  if(next()!=  JsonToken.NAME  ||  nextName()!=  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()!=  JsonToken.NAME  ||  nextName()!=  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()!=  JsonToken.NAME  ||  nextName()!=  JsonToken.START_OBJECT)  {	  if(next()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
11	[BUG]  [BUGGY]  if(this.next()!=  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(this.next()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(this.next()!=  JsonToken.NAME)  {	  if(next()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
12	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.VALUE_NUMBER)  {  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]            IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.VALUE_NUMBER)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=  JsonToken.VALUE_NUMBER)  {	  if(peekStack()!=    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	61	None	replace
13	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]              IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=  JsonToken.VALUE_NUMBER_INT)  {	  if(peekStack()!=    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	61	None	replace
14	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peekStack()!=    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	61	None	replace
15	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.VALUE_STRING)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                  IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.VALUE_STRING)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=  JsonToken.VALUE_STRING)  {	  if(peekStack()!=    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	61	None	replace
16	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
17	[BUG]  [BUGGY]  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
18	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.SINGLE_QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.SINGLE_QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.SINGLE_QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
19	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	78	None	replace
20	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
21	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.STRICT_MODE))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.STRICT_MODE))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.STRICT_MODE))  {  throw  new  IllegalStateException( " ");  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
22	[BUG]  [BUGGY]  if(this.next()  ==  JsonToken.VALUE_NAME)  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(this.next()  ==  JsonToken.VALUE_NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(this.next()  ==  JsonToken.VALUE_NAME)  {	  if(next()    ==    JsonToken.VALUE_NAME)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
23	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NAME  ||  next()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NAME  ||  next()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.VALUE_NAME  ||  next()  ==  JsonToken.END_OBJECT)  {	  if(next()    ==    JsonToken.VALUE_NAME)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
24	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NAME  ||  next()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NAME  ||  next()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.VALUE_NAME  ||  next()  ==  JsonToken.START_OBJECT)  {	  if(next()    ==    JsonToken.VALUE_NAME)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
25	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NAME  ||  nextName()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NAME  ||  nextName()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.VALUE_NAME  ||  nextName()  ==  JsonToken.END_OBJECT)  {	  if(next()    ==    JsonToken.VALUE_NAME)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
26	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NAME  ||  nextName()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NAME  ||  nextName()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.VALUE_NAME  ||  nextName()  ==  JsonToken.START_OBJECT)  {	  if(next()    ==    JsonToken.VALUE_NAME)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
27	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NAME  ||  next()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NAME  ||  next()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.VALUE_NAME  ||  next()  ==  JsonToken.END_ARRAY)  {	  if(next()    ==    JsonToken.VALUE_NAME)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
28	[BUG]  [BUGGY]  if(stackSize  >  JsonToken.NAME  ||  stackSize  >  0)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  >  JsonToken.NAME  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  >  JsonToken.NAME  ||  stackSize  >  0)  {	  if(peekStack()!=    JsonToken.NAME    ||    stackSize    >    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	100	None	replace
29	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.NAME  &&  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(peekStack()  ==  JsonToken.NAME  &&  stackSize  >  0)  {	  if(peekStack()!=    JsonToken.NAME    ||    stackSize    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	100	2	replace
30	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.NAME  &&  stackSize  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.NAME  &&  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.NAME  &&  stackSize  >  0)  {	  if(peekStack()!=    JsonToken.NAME    ||    stackSize    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	100	2	replace
31	[BUG]  [BUGGY]  if(stackSize  >=  JsonToken.NAME  ||  stackSize  >  0)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  >=  JsonToken.NAME  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  >=  JsonToken.NAME  ||  stackSize  >  0)  {	  if(peekStack()!=    JsonToken.NAME    ||    stackSize    >    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	100	None	replace
32	[BUG]  [BUGGY]  if(stackSize!=  JsonToken.NAME  ||  stackSize  >  0)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]          IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize!=  JsonToken.NAME  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize!=  JsonToken.NAME  ||  stackSize  >  0)  {	  if(peekStack()!=    JsonToken.NAME    ||    stackSize    >    0)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	100	None	replace
33	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  1)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  1)  {	  if(peekStack()!=    JsonToken.NAME    ||    stackSize    >    0)    {    	compilable	  [FE]  IllegalStateException  	100	2	replace
34	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  1)  {  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  1)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  1)  {	  if(peekStack()!=    JsonToken.NAME    ||    stackSize    >    0)    {    	compilable	  [FE]  IllegalStateException  	100	2	replace
35	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.NAME  ||  stackSize  >  0)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]              IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.NAME  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.NAME  ||  stackSize  >  0)  {	  if(peekStack()!=    JsonToken.NAME    ||    stackSize    >    0)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	100	None	replace
36	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  stackSize  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  stackSize  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  stackSize  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(stackSize    ==    JsonToken.VALUE_NUMBER_INT    ||    stackSize    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	63	None	replace
37	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_STRING  ||  stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_STRING  ||  stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_STRING  ||  stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(stackSize    ==    JsonToken.VALUE_NUMBER_INT    ||    stackSize    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	63	None	replace
38	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_ARRAY  ||  stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_ARRAY  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_ARRAY  ||  stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NUMBER_ARRAY  ||  stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(stackSize    ==    JsonToken.VALUE_NUMBER_INT    ||    stackSize    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_ARRAY	63	None	replace
39	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(stackSize    ==    JsonToken.VALUE_NUMBER_INT    ||    stackSize    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	63	None	replace
40	[BUG]  [BUGGY]  if(peek()!=  JsonToken.VALUE_NUMBER)  {  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()!=  JsonToken.VALUE_NUMBER)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()!=  JsonToken.VALUE_NUMBER)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	49	None	replace
41	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(peek()  ==  JsonToken.END_ARRAY)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	49	2	replace
42	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.END_ARRAY)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.END_ARRAY)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	49	2	replace
43	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  ==  JsonToken.START_OBJECT)  {	  if(stackSize    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	43	None	replace
44	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  ==  JsonToken.END_ARRAY)  {	  if(stackSize    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	43	None	replace
45	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.END_OBJECT  ||  peek()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.END_OBJECT  ||  peek()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.END_OBJECT  ||  peek()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peek()    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	25	None	replace
46	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  &&  peek()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  &&  peek()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  &&  peek()  ==  JsonToken.END_OBJECT)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peek()    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	25	None	replace
47	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peek()!=  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peek()!=  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  peek()!=  JsonToken.END_OBJECT)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peek()    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	25	None	replace
48	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.END_OBJECT)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peek()    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	25	None	replace
49	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.FIELD_NAME  ||  peek()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.FIELD_NAME  ||  peek()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.FIELD_NAME  ||  peek()  ==  JsonToken.END_OBJECT)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peek()    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	25	None	replace
50	[BUG]  [BUGGY]  if(next()  ==  JsonToken.END_OBJECT  ||  nextName()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.END_OBJECT  ||  nextName()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.END_OBJECT  ||  nextName()  ==  JsonToken.NAME)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
51	[BUG]  [BUGGY]  if(nextName()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.END_OBJECT)  {  [CE]  incomparable  types:  String  and  JsonToken  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.END_OBJECT)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  incomparable  types:  String  and  JsonToken	16	None	replace
52	[BUG]  [BUGGY]  if(next()  ==  JsonToken.NAME  &&  nextName()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.NAME  &&  nextName()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.NAME  &&  nextName()  ==  JsonToken.END_OBJECT)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
53	[BUG]  [BUGGY]  if(next()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.NAME)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
54	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.END_OBJECT)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
55	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(peek()    ==    JsonToken.NAME    ||    peek()    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	10	None	replace
56	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(peek()    ==    JsonToken.NAME    ||    peek()    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	10	None	replace
57	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(peek()    ==    JsonToken.NAME    ||    peek()    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	10	None	replace
58	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(peek()    ==    JsonToken.NAME    ||    peek()    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	10	None	replace
59	[BUG]  [BUGGY]  if(nextName()  ==  JsonToken.NAME)  {  [CE]  incomparable  types:  String  and  JsonToken  [FE]            IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName()  ==  JsonToken.NAME)  {	  if(peekStack()!=    JsonToken.NAME)    {    if(peekStack()    >=    JsonToken.NAME)    {    	non-compiled	[CE]  incomparable  types:  String  and  JsonToken	3	None	replace
60	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  null;  }  [CE]  cannot  find  symbol  Feature  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    for(int    i    =    0;    i    <    stackSize;    ++i)    {    pathNames[i]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	106	None	replace
61	[BUG]  [BUGGY]  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    for(int    i    =    0;    i    <    stackSize;    ++i)    {    pathNames[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
62	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }  [CE]  cannot  find  symbol  Feature  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    for(int    i    =    0;    i    <    stackSize;    ++i)    {    pathNames[i]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	106	None	replace
63	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  null;  }  [CE]  cannot  find  symbol  Feature  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    for(int    i    =    0;    i    <    stackSize;    ++i)    {    pathNames[i]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	106	None	replace
64	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  null;  }  [CE]  cannot  find  symbol  Feature  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    for(int    i    =    0;    i    <    stackSize;    ++i)    {    pathNames[i]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	106	None	replace
65	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  nu  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  nu  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  nu	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    for(int    i    =    0;    i    <    stackSize;    ++i)    {    pathNames[i]    =    null;    }    	non-compiled	[CE]  ';'  expected	106	None	replace
66	[BUG]  [BUGGY]  if(popStack()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()  ==  JsonToken.START_OBJECT)  {	  if(popStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	94	None	replace
67	[BUG]  [BUGGY]  if(popStack()  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(popStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	94	None	replace
68	[BUG]  [BUGGY]  if(popStack()  ==  JsonToken.VALUE_NUMBER)  {  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()  ==  JsonToken.VALUE_NUMBER)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()  ==  JsonToken.VALUE_NUMBER)  {	  if(popStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	94	None	replace
69	[BUG]  [BUGGY]  if(popStack()  ==  JsonToken.VALUE_STRING)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()  ==  JsonToken.VALUE_STRING)  {	  if(popStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	94	None	replace
70	[BUG]  [BUGGY]  if(popStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(popStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	94	None	replace
71	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	97	None	replace
72	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	97	None	replace
73	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	97	None	replace
74	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	97	None	replace
75	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.VALUE_STRING)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.VALUE_STRING)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	97	None	replace
76	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	97	None	replace
77	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    count);    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
78	[BUG]  [BUGGY]  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    count);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
79	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  int[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  int[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  int[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    count);    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
80	[BUG]  [BUGGY]  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    count);    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
81	[BUG]  [BUGGY]  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    count);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
82	[BUG]  [BUGGY]  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    count);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
83	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    skipValue();    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
84	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  popStack();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  popStack();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  popStack();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    skipValue();    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
85	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    skipValue();    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
86	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.SINGLE_QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.SINGLE_QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.SINGLE_QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    skipValue();    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
87	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    skipValue();    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  ';'  expected	73	None	replace
88	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.NAME  &&  nextToken()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.NAME  &&  nextToken()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.NAME  &&  nextToken()  ==  JsonToken.END_ARRAY)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
89	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()  ==  JsonToken.END_ARRAY)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
90	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.FIELD_NAME  ||  nextToken()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.FIELD_NAME  ||  nextToken()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.FIELD_NAME  ||  nextToken()  ==  JsonToken.END_ARRAY)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
91	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextToken()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextToken()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextToken()  ==  JsonToken.END_ARRAY)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
92	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.END_ARRAY  ||  nextToken()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.END_ARRAY  ||  nextToken()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.END_ARRAY  ||  nextToken()  ==  JsonToken.NAME)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
93	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.NAME  &&  nextToken()!=  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.NAME  &&  nextToken()!=  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.NAME  &&  nextToken()!=  JsonToken.END_OBJECT)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()!=    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
94	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.END_OBJECT  ||  nextToken()!=  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.END_OBJECT  ||  nextToken()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.END_OBJECT  ||  nextToken()!=  JsonToken.NAME)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()!=    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
95	[BUG]  [BUGGY]  if(nextToken()!=  JsonToken.NAME  ||  nextToken()!=  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()!=  JsonToken.NAME  ||  nextToken()!=  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()!=  JsonToken.NAME  ||  nextToken()!=  JsonToken.END_OBJECT)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()!=    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
96	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()!=  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()!=  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()!=  JsonToken.END_OBJECT)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()!=    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
97	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextToken()!=  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextToken()!=  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextToken()!=  JsonToken.END_OBJECT)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()!=    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
98	[BUG]  [BUGGY]  if(nextToken()!=  JsonToken.NAME  &&  nextToken()!=  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()!=  JsonToken.NAME  &&  nextToken()!=  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()!=  JsonToken.NAME  &&  nextToken()!=  JsonToken.END_OBJECT)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()!=    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
99	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(next()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
100	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NUMBER_INT  ||  next()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NUMBER_INT  ||  next()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.VALUE_NUMBER_INT  ||  next()  ==  JsonToken.VALUE_NULL)  {	  if(next()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
101	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NULL  ||  next()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NULL  ||  next()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.VALUE_NULL  ||  next()  ==  JsonToken.START_OBJECT)  {	  if(next()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
102	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NULL  ||  next()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NULL  ||  next()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.VALUE_NULL  ||  next()  ==  JsonToken.END_OBJECT)  {	  if(next()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
103	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NULL  ||  next()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NULL  ||  next()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.VALUE_NULL  ||  next()  ==  JsonToken.END_ARRAY)  {	  if(next()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
104	[BUG]  [BUGGY]  if(this.next()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(this.next()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(this.next()  ==  JsonToken.VALUE_NULL)  {	  if(next()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
105	[BUG]  [BUGGY]  String[]  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  String[]  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	String[]  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    for(int    i    =    0;    i    <    count;    ++i)    {    pathNames[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
106	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  +  1];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }  [CE]  cannot  find  symbol  Feature  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  +  1];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  +  1];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    for(int    i    =    0;    i    <    count;    ++i)    {    pathNames[i]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	105	None	replace
107	[BUG]  [BUGGY]  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    for(int    i    =    0;    i    <    count;    ++i)    {    pathNames[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
108	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames[size()  ]  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }  [CE]  cannot  find  symbol  Feature  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames[size()  ]  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames[size()  ]  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    for(int    i    =    0;    i    <    count;    ++i)    {    pathNames[i]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	105	None	replace
109	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[  [CE]  ']'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    for(int    i    =    0;    i    <    count;    ++i)    {    pathNames[i]    =    null;    }    	non-compiled	[CE]  ']'  expected	105	None	replace
110	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null;  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  pathIndices[stackSize  -  1]  =  null;  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	pathIndices[stackSize  -  1]  =  null;	  if(stack.length()    >    0)    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    else    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
111	[BUG]  [BUGGY]  pathIndices[stackSize  -  2]  =   "null ";  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  pathIndices[stackSize  -  2]  =   "null ";  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	pathIndices[stackSize  -  2]  =   "null ";	  if(stack.length()    >    0)    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    else    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
112	[BUG]  [BUGGY]  pathStack();  pathNames[stackSize  -  1]  =   "null ";  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  pathStack();  pathNames[stackSize  -  1]  =   "null ";  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	pathStack();  pathNames[stackSize  -  1]  =   "null ";	  if(stack.length()    >    0)    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    else    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
113	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null ";  [CE]  illegal  start  of  type  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  pathNames[stackSize  -  1]  =   "null ";  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	pathNames[stackSize  -  1]  =   "null ";	  if(stack.length()    >    0)    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    else    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
114	[BUG]  [BUGGY]  pathIndices[stackSize  -  2]  =  null;  [CE]  illegal  start  of  type  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  pathIndices[stackSize  -  2]  =  null;  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	pathIndices[stackSize  -  2]  =  null;	  if(stack.length()    >    0)    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    else    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
115	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.START_BLOCK)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.START_BLOCK)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.START_BLOCK)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_BLOCK)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	96	None	replace
116	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.START_BLOCK)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.START_BLOCK)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.START_BLOCK)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_BLOCK)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	96	None	replace
117	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  &&  peekStack()  ==  JsonToken.START_BLOCK)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  &&  peekStack()  ==  JsonToken.START_BLOCK)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  &&  peekStack()  ==  JsonToken.START_BLOCK)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_BLOCK)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	96	None	replace
118	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_BLOCK)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_BLOCK)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_BLOCK)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_BLOCK)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	96	None	replace
119	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_BLOCK)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_BLOCK)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_BLOCK)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_BLOCK)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	96	None	replace
120	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.START_BLOCK)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.START_BLOCK)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.START_BLOCK)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_BLOCK)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	96	None	replace
121	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peek()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peek()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_STRING  ||  peek()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	20	None	replace
122	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	20	None	replace
123	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	20	None	replace
124	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peek()  ==  JsonToken.VALUE_STRING)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peek()  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_STRING  ||  peek()  ==  JsonToken.VALUE_STRING)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	20	None	replace
125	[BUG]  [BUGGY]  if(stack.nextToken()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack.nextToken()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack.nextToken()  ==  JsonToken.NAME)  {	  if(jsonToken.nextToken()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
126	[BUG]  [BUGGY]  if(buffer.nextToken()  ==  JsonToken.NAME)  {  [CE]  buffer  has  private  access  in  JsonReader  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(buffer.nextToken()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(buffer.nextToken()  ==  JsonToken.NAME)  {	  if(jsonToken.nextToken()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	29	None	replace
127	[BUG]  [BUGGY]  if(jsonStack.nextToken()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  jsonStack  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(jsonStack.nextToken()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(jsonStack.nextToken()  ==  JsonToken.NAME)  {	  if(jsonToken.nextToken()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  jsonStack	29	None	replace
128	[BUG]  [BUGGY]  if(stackSize.nextToken()  ==  JsonToken.NAME)  {  [CE]  int  cannot  be  dereferenced  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize.nextToken()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize.nextToken()  ==  JsonToken.NAME)  {	  if(jsonToken.nextToken()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	29	None	replace
129	[BUG]  [BUGGY]  if(i.nextToken()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  i  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(i.nextToken()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(i.nextToken()  ==  JsonToken.NAME)  {	  if(jsonToken.nextToken()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  i	29	None	replace
130	[BUG]  [BUGGY]  if(stack.length()  ==  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[  [CE]  ']'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack.length()  ==  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack.length()  ==  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    for(int    i    =    0;    i    <    count;    ++i)    {    result[    	non-compiled	[CE]  ']'  expected	53	None	replace
131	[BUG]  [BUGGY]  if(nextName())  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[  [CE]  ']'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName())  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName())  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    for(int    i    =    0;    i    <    count;    ++i)    {    result[    	non-compiled	[CE]  ']'  expected	53	None	replace
132	[BUG]  [BUGGY]  if(stack.length()!=  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[  [CE]  ']'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack.length()!=  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack.length()!=  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    for(int    i    =    0;    i    <    count;    ++i)    {    result[    	non-compiled	[CE]  ']'  expected	53	None	replace
133	[BUG]  [BUGGY]  if(nextName())  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  [CE]  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName())  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName())  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    for(int    i    =    0;    i    <    count;    ++i)    {    result[    	non-compiled	[CE]  	53	None	replace
134	[BUG]  [BUGGY]  if(nextName())  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName())  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName())  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    for(int    i    =    0;    i    <    count;    ++i)    {    result[    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
135	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  [CE]  ')'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    for(int    i    =    0;    i    <    count;    ++i)    {    result[    	non-compiled	[CE]  ')'  expected	53	None	replace
136	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  stackSize  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  stackSize  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  stackSize  ==  JsonToken.VALUE_NULL)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	111	None	replace
137	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	111	None	replace
138	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  stackSize  ==  JsonToken.VALUE_NUMBER_BLOCK)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  stackSize  ==  JsonToken.VALUE_NUMBER_BLOCK)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  stackSize  ==  JsonToken.VALUE_NUMBER_BLOCK)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	111	None	replace
139	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.FUNCTION)  {  [CE]  cannot  find  symbol  FUNCTION  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.FUNCTION)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=  JsonToken.FUNCTION)  {	  if(peekStack()    ==    JsonToken.NAME)    {    if(peekStack()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  FUNCTION	38	None	replace
140	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  popStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  popStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  popStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peekStack()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	35	None	replace
141	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peerStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peerStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peerStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peekStack()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	35	None	replace
142	[BUG]  [BUGGY]  if(next()  ==  JsonToken.START_ARRAY  ||  nextName()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.START_ARRAY  ||  nextName()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.START_ARRAY  ||  nextName()  ==  JsonToken.NAME)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
143	[BUG]  [BUGGY]  if(next()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.START_ARRAY)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
144	[BUG]  [BUGGY]  if(next()  ==  JsonToken.START_ARRAY  ||  nextName()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.START_ARRAY  ||  nextName()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.START_ARRAY  ||  nextName()  ==  JsonToken.END_OBJECT)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
145	[BUG]  [BUGGY]  if(next()  ==  JsonToken.END_ARRAY  ||  nextName()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.END_ARRAY  ||  nextName()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.END_ARRAY  ||  nextName()  ==  JsonToken.START_ARRAY)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
146	[BUG]  [BUGGY]  if(nextName()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.START_ARRAY)  {  [CE]  incomparable  types:  String  and  JsonToken  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.START_ARRAY)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  incomparable  types:  String  and  JsonToken	117	None	replace
147	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null   ";  }  [CE]  unclosed  string  literal  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null   ";  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null   ";  }	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    skipValue();    }    else    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  unclosed  string  literal	77	None	replace
148	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    skipValue();    }    else    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
149	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =   "null  [CE]  unclosed  string  literal  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =   "null  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =   "null	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    skipValue();    }    else    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  unclosed  string  literal	77	None	replace
150	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  popStack();  }  else  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  popStack();  }  else  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  popStack();  }  else  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    skipValue();    }    else    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
151	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.START_ARRAY  ||  stackSize  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  START_ARRAY  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.START_ARRAY  ||  stackSize  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.START_ARRAY  ||  stackSize  ==  JsonToken.VALUE_NULL)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	110	None	replace
152	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.VALUE_NULL)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	110	None	replace
153	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  ==  JsonToken.START_ARRAY)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	110	None	replace
154	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.START_ARRAY)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	110	None	replace
155	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.FIELD_NAME  ||  stackSize  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.FIELD_NAME  ||  stackSize  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.FIELD_NAME  ||  stackSize  ==  JsonToken.START_ARRAY)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	110	None	replace
156	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_STRING  ||  stackSize  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_STRING  ||  stackSize  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_STRING  ||  stackSize  ==  JsonToken.START_ARRAY)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	110	None	replace
157	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.START_ARRAY)  {	  if(peekStack()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	33	None	replace
158	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_OBJECT)  {	  if(peekStack()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	33	None	replace
159	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NULL)  {	  if(peek()    ==    JsonToken.VALUE_NULL    ||    peekStack()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	114	None	replace
160	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NULL)  {	  if(peek()    ==    JsonToken.VALUE_NULL    ||    peekStack()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	114	None	replace
161	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NULL    ||    peekStack()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	114	None	replace
162	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peek()    ==    JsonToken.VALUE_NULL    ||    peekStack()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	114	None	replace
163	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.FIELD_NAME  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.FIELD_NAME  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.FIELD_NAME  ||  peekStack()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NULL    ||    peekStack()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	114	None	replace
164	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_STRING  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.STRING)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	11	None	replace
165	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peek()  ==  JsonToken.STRING)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peek()  ==  JsonToken.STRING)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peek()  ==  JsonToken.STRING)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.STRING)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	11	None	replace
166	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.STRING)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.STRING)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.STRING)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.STRING)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	11	None	replace
167	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.STRING)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.STRING)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.STRING)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.STRING)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	11	None	replace
168	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()!=  JsonToken.STRING)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()!=  JsonToken.STRING)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()!=  JsonToken.STRING)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.STRING)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	11	None	replace
169	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName()  ==  null)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(nextName()  ==  null)  {	  if(peekStack()!=    JsonToken.NAME)    {    if(peekStack()    [Delete]    JsonToken.NAME)    {    	compilable	  [FE]  IllegalStateException  	6	2	replace
170	[BUG]  [BUGGY]  if(nextName()  ==  null)  {  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName()  ==  null)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName()  ==  null)  {	  if(peekStack()!=    JsonToken.NAME)    {    if(peekStack()    [Delete]    JsonToken.NAME)    {    	compilable	  [FE]  IllegalStateException  	6	2	replace
171	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(peekStack()!=  JsonToken.END_OBJECT)  {	  if(peekStack()!=    JsonToken.START_OBJECT)    {    	compilable	  [FE]  IllegalStateException  	98	2	replace
172	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.END_OBJECT)  {  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=  JsonToken.END_OBJECT)  {	  if(peekStack()!=    JsonToken.START_OBJECT)    {    	compilable	  [FE]  IllegalStateException  	98	2	replace
173	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.FIELD_NAME)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]          IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.FIELD_NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=  JsonToken.FIELD_NAME)  {	  if(peekStack()!=    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	98	None	replace
174	[BUG]  [BUGGY]  if(stack()  ==  JsonToken.START_OBJECT  ||  stack()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack()  ==  JsonToken.START_OBJECT  ||  stack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack()  ==  JsonToken.START_OBJECT  ||  stack()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.START_OBJECT    ||    stack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
175	[BUG]  [BUGGY]  if(stackStack()  ==  JsonToken.START_OBJECT  ||  stack()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackStack()  ==  JsonToken.START_OBJECT  ||  stack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackStack()  ==  JsonToken.START_OBJECT  ||  stack()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.START_OBJECT    ||    stack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
176	[BUG]  [BUGGY]  if(stack()  ==  JsonToken.NAME  ||  stack()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack()  ==  JsonToken.NAME  ||  stack()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack()  ==  JsonToken.NAME  ||  stack()  ==  JsonToken.START_OBJECT)  {	  if(peekStack()    ==    JsonToken.START_OBJECT    ||    stack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
177	[BUG]  [BUGGY]  if(stack()  ==  JsonToken.FIELD_NAME  ||  stack()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack()  ==  JsonToken.FIELD_NAME  ||  stack()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack()  ==  JsonToken.FIELD_NAME  ||  stack()  ==  JsonToken.START_OBJECT)  {	  if(peekStack()    ==    JsonToken.START_OBJECT    ||    stack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
178	[BUG]  [BUGGY]  if(stack()  ==  JsonToken.START_OBJECT  ||  stack()!=  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack()  ==  JsonToken.START_OBJECT  ||  stack()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack()  ==  JsonToken.START_OBJECT  ||  stack()!=  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.START_OBJECT    ||    stack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
179	[BUG]  [BUGGY]  if(stack()  ==  JsonToken.END_OBJECT  ||  stack()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack()  ==  JsonToken.END_OBJECT  ||  stack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack()  ==  JsonToken.END_OBJECT  ||  stack()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.START_OBJECT    ||    stack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
180	[BUG]  [BUGGY]  if(popStack()!=  JsonToken.NAME)  {  if(popStack()!=  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()!=  JsonToken.NAME)  {  if(popStack()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()!=    JsonToken.NAME)    {    if(popStack()!=  JsonToken.NAME)  {	  	non-compiled	[CE]  ';'  expected	86	None	add
181	[BUG]  [BUGGY]  if(popStack()!=  JsonToken.NAME)  {  if(popStack()  >=  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()!=  JsonToken.NAME)  {  if(popStack()  >=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()!=    JsonToken.NAME)    {    if(popStack()  >=  JsonToken.NAME)  {	  	non-compiled	[CE]  ';'  expected	86	None	add
182	[BUG]  [BUGGY]  if(popStack()!=  JsonToken.NAME)  {  if(popStack()  ==  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()!=  JsonToken.NAME)  {  if(popStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()!=    JsonToken.NAME)    {    if(popStack()  ==  JsonToken.NAME)  {	  	non-compiled	[CE]  ';'  expected	86	None	add
183	[BUG]  [BUGGY]  if(popStack()!=  JsonToken.NAME)  {  if(popStack()  >>  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()!=  JsonToken.NAME)  {  if(popStack()  >>  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()!=    JsonToken.NAME)    {    if(popStack()  >>  JsonToken.NAME)  {	  	non-compiled	[CE]  ';'  expected	86	None	add
184	[BUG]  [BUGGY]  if(popStack()!=  JsonToken.NAME)  {  if(peekStack()!=  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()!=  JsonToken.NAME)  {  if(peekStack()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()!=    JsonToken.NAME)    {    if(peekStack()!=  JsonToken.NAME)  {	  	non-compiled	[CE]  ';'  expected	86	None	add
185	[BUG]  [BUGGY]  if(popStack()!=  JsonToken.NAME)  {  if(popStack()  [Delete]  JsonToken.NAME)  {  [CE]  ')'  expected  [FE]              IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()!=  JsonToken.NAME)  {  if(popStack()  [Delete]  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()!=    JsonToken.NAME)    {    if(popStack()  [Delete]  JsonToken.NAME)  {	  	non-compiled	[CE]  ')'  expected	86	None	add
186	[BUG]  [BUGGY]  if(popStack()!=  JsonToken.NAME)  {  If(popStack()!=  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()!=  JsonToken.NAME)  {  If(popStack()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()!=    JsonToken.NAME)    {    If(popStack()!=  JsonToken.NAME)  {	  	non-compiled	[CE]  ';'  expected	86	None	add
187	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.FIELD_NAME)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.FIELD_NAME)  {	  if(peek()    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	23	None	replace
188	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.NAME  ||  peekStack()  ==  JsonToken.START_OBJECT)  {	  if(peekStack()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	118	None	replace
189	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.NAME)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	118	None	replace
190	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  &&  peekStack()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  &&  peekStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  &&  peekStack()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	118	None	replace
191	[BUG]  [BUGGY]  if(popStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	118	None	replace
192	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.FIELD_NAME  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.FIELD_NAME  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.FIELD_NAME  ||  peekStack()  ==  JsonToken.START_OBJECT)  {	  if(peekStack()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	118	None	replace
193	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.END_OBJECT  ||  peekStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(peekStack()  ==  JsonToken.END_OBJECT  ||  peekStack()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	118	2	replace
194	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.END_OBJECT  ||  peekStack()  ==  JsonToken.NAME)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.END_OBJECT  ||  peekStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.END_OBJECT  ||  peekStack()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	118	2	replace
195	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NULL    ||    peek()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	13	None	replace
196	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.NAME  ||  peek()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.NAME  ||  peek()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.NAME  ||  peek()  ==  JsonToken.VALUE_NULL)  {	  if(peek()    ==    JsonToken.VALUE_NULL    ||    peek()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	13	None	replace
197	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER  ||  peek()  ==  JsonToken.VALUE_NAME)  {  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER  ||  peek()  ==  JsonToken.VALUE_NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER  ||  peek()  ==  JsonToken.VALUE_NAME)  {	  if(peek()    ==    JsonToken.VALUE_NULL    ||    peek()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	13	None	replace
198	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.FIELD_NAME  ||  peek()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.FIELD_NAME  ||  peek()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.FIELD_NAME  ||  peek()  ==  JsonToken.VALUE_NULL)  {	  if(peek()    ==    JsonToken.VALUE_NULL    ||    peek()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	13	None	replace
199	[BUG]  [BUGGY]  String[]  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  = "null ";  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  String[]  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  = "null ";  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	String[]  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  = "null ";  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    for(int    i    =    0;    i    <    count;    ++i)    {    pathNames[i]    =       "null   ";    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
200	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null   ";  }  [CE]  unclosed  string  literal  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null   ";  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null   ";  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    for(int    i    =    0;    i    <    count;    ++i)    {    pathNames[i]    =       "null   ";    }    	non-compiled	[CE]  unclosed  string  literal	104	None	replace
201	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.START_CLOSED)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.START_CLOSED)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.START_CLOSED)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_CLOSED)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	68	None	replace
202	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  &&  peekStack()  ==  JsonToken.START_CLOSED)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  &&  peekStack()  ==  JsonToken.START_CLOSED)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  &&  peekStack()  ==  JsonToken.START_CLOSED)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_CLOSED)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	68	None	replace
203	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.START_CLOSED)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.START_CLOSED)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.START_CLOSED)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_CLOSED)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	68	None	replace
204	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_CLOSED)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_CLOSED)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_CLOSED)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_CLOSED)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	68	None	replace
205	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_CLOSED)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_CLOSED)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_CLOSED)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_CLOSED)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	68	None	replace
206	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.START_CLOSED)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.START_CLOSED)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.START_CLOSED)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_CLOSED)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	68	None	replace
207	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	80	None	replace
208	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	80	None	replace
209	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peekStack()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	80	None	replace
210	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	80	None	replace
211	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	80	None	replace
212	[BUG]  [BUGGY]  if(nextName()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.END_ARRAY)  {  [CE]  incomparable  types:  String  and  JsonToken  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.END_ARRAY)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  incomparable  types:  String  and  JsonToken	65	None	replace
213	[BUG]  [BUGGY]  if(next()  ==  JsonToken.NAME  &&  nextName()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.NAME  &&  nextName()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.NAME  &&  nextName()  ==  JsonToken.END_ARRAY)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
214	[BUG]  [BUGGY]  if(next()  ==  JsonToken.END_ARRAY  ||  nextName()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.END_ARRAY  ||  nextName()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.END_ARRAY  ||  nextName()  ==  JsonToken.NAME)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
215	[BUG]  [BUGGY]  if(next()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.END_ARRAY)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
216	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NAME  ||  nextName()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NAME  ||  nextName()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.VALUE_NAME  ||  nextName()  ==  JsonToken.END_ARRAY)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
217	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.END_ARRAY)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
218	[BUG]  [BUGGY]  JsonTreeReader.this.skipStack();  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  JsonTreeReader.this.skipStack();  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	JsonTreeReader.this.skipStack();	  JsonTreeReader.this.skipValue();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
219	[BUG]  [BUGGY]  JsonTreeReader.this.skipValue(null);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  JsonTreeReader.this.skipValue(null);  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	JsonTreeReader.this.skipValue(null);	  JsonTreeReader.this.skipValue();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
220	[BUG]  [BUGGY]  JsonTreeReader.this.skip();  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  JsonTreeReader.this.skip();  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	JsonTreeReader.this.skip();	  JsonTreeReader.this.skipValue();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
221	[BUG]  [BUGGY]  JsonTreeReader.this.skipValue(JsonTreeReader.this);  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  JsonTreeReader.this.skipValue(JsonTreeReader.this);  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	JsonTreeReader.this.skipValue(JsonTreeReader.this);	  JsonTreeReader.this.skipValue();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
222	[BUG]  [BUGGY]  JsonTreeReader.this.next();  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  JsonTreeReader.this.next();  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	JsonTreeReader.this.next();	  JsonTreeReader.this.skipValue();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
223	[BUG]  [BUGGY]  JsonTreeReader.this.skipLine();  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  JsonTreeReader.this.skipLine();  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	JsonTreeReader.this.skipLine();	  JsonTreeReader.this.skipValue();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
224	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()  ==  JsonToken.NAME)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
225	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.FIELD_NAME  ||  nextToken()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.FIELD_NAME  ||  nextToken()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.FIELD_NAME  ||  nextToken()  ==  JsonToken.START_OBJECT)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
226	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()  ==  JsonToken.END_OBJECT)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
227	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.NAME  &&  nextToken()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.NAME  &&  nextToken()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.NAME  &&  nextToken()  ==  JsonToken.START_OBJECT)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
228	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.STRING  ||  nextToken()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.STRING  ||  nextToken()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.STRING  ||  nextToken()  ==  JsonToken.START_OBJECT)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
229	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  pathNames[stackSize  -  1]  =  null;  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	pathNames[stackSize  -  1]  =  null;	  if(stack.length()    >    0)    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
230	[BUG]  [BUGGY]  pathStack();  pathNames[stackSize  -  1]  =  null;  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  pathStack();  pathNames[stackSize  -  1]  =  null;  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	pathStack();  pathNames[stackSize  -  1]  =  null;	  if(stack.length()    >    0)    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
231	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.SAME)  {  [CE]  cannot  find  symbol  SAME  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.SAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.SAME)  {	  if(peekStack()    ==    JsonToken.NAME)    {    if(peekStack()    ==    JsonToken.SAME)    {    	non-compiled	[CE]  cannot  find  symbol  SAME	70	None	replace
232	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
233	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  int[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  int[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  int[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
234	[BUG]  [BUGGY]  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
235	[BUG]  [BUGGY]  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  [CE]  illegal  start  of  type  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
236	[BUG]  [BUGGY]  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
237	[BUG]  [BUGGY]  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
238	[BUG]  [BUGGY]  if(next()  ==  JsonToken.NAME  &&  nextName()  ==  JsonToken.FUNCTION)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.NAME  &&  nextName()  ==  JsonToken.FUNCTION)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.NAME  &&  nextName()  ==  JsonToken.FUNCTION)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
239	[BUG]  [BUGGY]  if(nextName()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.FUNCTION)  {  [CE]  incomparable  types:  String  and  JsonToken  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.FUNCTION)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.FUNCTION)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.FUNCTION)    {    	non-compiled	[CE]  incomparable  types:  String  and  JsonToken	18	None	replace
240	[BUG]  [BUGGY]  if(next()  ==  JsonToken.FUNCTION  ||  nextName()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.FUNCTION  ||  nextName()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.FUNCTION  ||  nextName()  ==  JsonToken.NAME)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
241	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NAME  ||  nextName()  ==  JsonToken.FUNCTION)  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NAME  ||  nextName()  ==  JsonToken.FUNCTION)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.VALUE_NAME  ||  nextName()  ==  JsonToken.FUNCTION)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
242	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.FUNCTION)  {  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.FUNCTION)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.FUNCTION)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
243	[BUG]  [BUGGY]  if(next()  ==  JsonToken.NAME  ||  nextName()!=  JsonToken.FUNCTION)  {  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.NAME  ||  nextName()!=  JsonToken.FUNCTION)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.NAME  ||  nextName()!=  JsonToken.FUNCTION)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
244	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  START_ARRAY  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.VALUE_NULL)  {	  if(peek()    ==    JsonToken.VALUE_NULL    ||    peekStack()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	113	None	replace
245	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  START_ARRAY  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.VALUE_NULL)  {	  if(peek()    ==    JsonToken.VALUE_NULL    ||    peekStack()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	113	None	replace
246	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.START_ARRAY)  {	  if(peek()    ==    JsonToken.VALUE_NULL    ||    peekStack()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	113	None	replace
247	[BUG]  [BUGGY]  if(next()  ==  JsonToken.START_OBJECT  ||  next()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.START_OBJECT  ||  next()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.START_OBJECT  ||  next()  ==  JsonToken.NAME)  {	  if(next()    ==    JsonToken.NAME    ||    next()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
248	[BUG]  [BUGGY]  if(next()  ==  JsonToken.FIELD_NAME  ||  next()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.FIELD_NAME  ||  next()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.FIELD_NAME  ||  next()  ==  JsonToken.START_OBJECT)  {	  if(next()    ==    JsonToken.NAME    ||    next()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
249	[BUG]  [BUGGY]  if(next()  ==  JsonToken.NAME  &&  next()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.NAME  &&  next()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.NAME  &&  next()  ==  JsonToken.START_OBJECT)  {	  if(next()    ==    JsonToken.NAME    ||    next()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
250	[BUG]  [BUGGY]  if(next()  ==  JsonToken.STRING  ||  next()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.STRING  ||  next()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.STRING  ||  next()  ==  JsonToken.START_OBJECT)  {	  if(next()    ==    JsonToken.NAME    ||    next()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
251	[BUG]  [BUGGY]  if(next()  ==  JsonToken.END_OBJECT  ||  next()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.END_OBJECT  ||  next()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.END_OBJECT  ||  next()  ==  JsonToken.NAME)  {	  if(next()    ==    JsonToken.NAME    ||    next()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
252	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.FUNCTION)  {  [CE]  cannot  find  symbol  FUNCTION  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.FUNCTION)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.FUNCTION)  {	  if(peekStack()    ==    JsonToken.NAME)    {    if(peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  FUNCTION	37	None	replace
253	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  stackSize  >  1)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  stackSize  >  1)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NULL  ||  stackSize  >  1)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    stackSize    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	93	None	replace
254	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  >  0)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  >  0)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    stackSize    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	93	None	replace
255	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_STRING  ||  stackSize  >  0)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_STRING  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_STRING  ||  stackSize  >  0)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    stackSize    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	93	None	replace
256	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  stackSize  >  0)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  stackSize  >  0)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    stackSize    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	93	None	replace
257	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  &&  stackSize  >  0)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  &&  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NULL  &&  stackSize  >  0)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    stackSize    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	93	None	replace
258	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  stackSize  >  2)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  stackSize  >  2)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NULL  ||  stackSize  >  2)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    stackSize    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	93	None	replace
259	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER  ||  stackSize  ==  JsonToken.VALUE_NUMBER)  {  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER  ||  stackSize  ==  JsonToken.VALUE_NUMBER)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NUMBER  ||  stackSize  ==  JsonToken.VALUE_NUMBER)  {	  if(stackSize    ==    JsonToken.VALUE_NUMBER)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	109	None	replace
260	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER  ||  stackSize  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER  ||  stackSize  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NUMBER  ||  stackSize  ==  JsonToken.START_OBJECT)  {	  if(stackSize    ==    JsonToken.VALUE_NUMBER)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	109	None	replace
261	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NAME  ||  peek()  ==  JsonToken.VALUE_STRING)  {  [CE]  cannot  find  symbol  VALUE_NAME  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NAME  ||  peek()  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NAME  ||  peek()  ==  JsonToken.VALUE_STRING)  {	  if(peek()    ==    JsonToken.VALUE_STRING    ||    peek()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NAME	8	None	replace
262	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.NAME  ||  peek()  ==  JsonToken.VALUE_STRING)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.NAME  ||  peek()  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.NAME  ||  peek()  ==  JsonToken.VALUE_STRING)  {	  if(peek()    ==    JsonToken.VALUE_STRING    ||    peek()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	8	None	replace
263	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  &&  peek()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  &&  peek()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_STRING  &&  peek()  ==  JsonToken.NAME)  {	  if(peek()    ==    JsonToken.VALUE_STRING    ||    peek()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	8	None	replace
264	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.FIELD_NAME  ||  peek()  ==  JsonToken.VALUE_STRING)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.FIELD_NAME  ||  peek()  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.FIELD_NAME  ||  peek()  ==  JsonToken.VALUE_STRING)  {	  if(peek()    ==    JsonToken.VALUE_STRING    ||    peek()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	8	None	replace
265	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  1)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  1)  {	  if(peekStack()!=    JsonToken.NAME    &&    stackSize    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	102	2	replace
266	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  1)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  1)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  1)  {	  if(peekStack()!=    JsonToken.NAME    &&    stackSize    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	102	2	replace
267	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.NAME  &&  stackSize  >  1)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(peekStack()  ==  JsonToken.NAME  &&  stackSize  >  1)  {	  if(peekStack()!=    JsonToken.NAME    &&    stackSize    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	102	2	replace
268	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.NAME  &&  stackSize  >  1)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.NAME  &&  stackSize  >  1)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.NAME  &&  stackSize  >  1)  {	  if(peekStack()!=    JsonToken.NAME    &&    stackSize    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	102	2	replace
269	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.NAME  &&  stackSize  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  &&  stackSize  <  =  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=  JsonToken.NAME  &&  stackSize  <  =  0)  {	  if(peekStack()!=    JsonToken.NAME    &&    stackSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
270	[BUG]  [BUGGY]  if(stackSize!=  JsonToken.NAME  &&  stackSize  >  0)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]          IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize!=  JsonToken.NAME  &&  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize!=  JsonToken.NAME  &&  stackSize  >  0)  {	  if(peekStack()!=    JsonToken.NAME    &&    stackSize    >    0)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	102	None	replace
271	[BUG]  [BUGGY]  if(stackSize  >=  JsonToken.NAME  &&  stackSize  >  0)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  >=  JsonToken.NAME  &&  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  >=  JsonToken.NAME  &&  stackSize  >  0)  {	  if(peekStack()!=    JsonToken.NAME    &&    stackSize    >    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	102	None	replace
272	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()  ==  JsonToken.START_ARRAY)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
273	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.NAME  &&  nextToken()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.NAME  &&  nextToken()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.NAME  &&  nextToken()  ==  JsonToken.START_ARRAY)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
274	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.FIELD_NAME  ||  nextToken()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.FIELD_NAME  ||  nextToken()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.FIELD_NAME  ||  nextToken()  ==  JsonToken.START_ARRAY)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
275	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.STRING  ||  nextToken()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.STRING  ||  nextToken()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.STRING  ||  nextToken()  ==  JsonToken.START_ARRAY)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
276	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.START_ARRAY  ||  nextToken()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.START_ARRAY  ||  nextToken()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.START_ARRAY  ||  nextToken()  ==  JsonToken.START_OBJECT)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
277	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.START_BLOCK)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.START_BLOCK)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.START_BLOCK)  {	  if(stackSize    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	48	None	replace
278	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(this.peekStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(this.peekStack()  ==  JsonToken.NAME)  {	  if(this.peekStack()!=    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	replace
279	[BUG]  [BUGGY]  if(this.peekStack()  ==  JsonToken.NAME)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(this.peekStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(this.peekStack()  ==  JsonToken.NAME)  {	  if(this.peekStack()!=    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	replace
280	[BUG]  [BUGGY]  if(this.nextToken()!=  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(this.nextToken()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(this.nextToken()!=  JsonToken.NAME)  {	  if(this.peekStack()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
281	[BUG]  [BUGGY]  if(!this.peekStack().isEmpty())  {  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(!this.peekStack().isEmpty())  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(!this.peekStack().isEmpty())  {	  if(this.peekStack()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
282	[BUG]  [BUGGY]  if(this.peekStack()!=  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]          IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(this.peekStack()!=  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(this.peekStack()!=  JsonToken.VALUE_NULL)  {	  if(this.peekStack()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	84	None	replace
283	[BUG]  [BUGGY]  if(this.peekStack()!=  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]            IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(this.peekStack()!=  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(this.peekStack()!=  JsonToken.START_OBJECT)  {	  if(this.peekStack()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	84	None	replace
284	[BUG]  [BUGGY]  if(this.peekStack()!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]              IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(this.peekStack()!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(this.peekStack()!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(this.peekStack()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	84	None	replace
285	[BUG]  [BUGGY]  if(stackSize  >  JsonToken.NAME)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]          IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  >  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  >  JsonToken.NAME)  {	  if(peekStack()    >=    JsonToken.NAME)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	85	None	replace
286	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]            IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  JsonToken.VALUE_NULL)  {	  if(peekStack()    >=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	85	None	replace
287	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]              IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  JsonToken.START_OBJECT)  {	  if(peekStack()    >=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	85	None	replace
288	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.NAME  &&  nextToken()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.NAME  &&  nextToken()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.NAME  &&  nextToken()  ==  JsonToken.END_OBJECT)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
289	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.END_OBJECT  ||  nextToken()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.END_OBJECT  ||  nextToken()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.END_OBJECT  ||  nextToken()  ==  JsonToken.NAME)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
290	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.FIELD_NAME  ||  nextToken()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.FIELD_NAME  ||  nextToken()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.FIELD_NAME  ||  nextToken()  ==  JsonToken.END_OBJECT)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
291	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextToken()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextToken()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextToken()  ==  JsonToken.END_OBJECT)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
292	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.STRING  ||  nextToken()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.STRING  ||  nextToken()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.STRING  ||  nextToken()  ==  JsonToken.END_OBJECT)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
293	[BUG]  [BUGGY]  if(this.peekStack()!=  JsonToken.NAME)  {  if(this.peekStack()!=  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(this.peekStack()!=  JsonToken.NAME)  {  if(this.peekStack()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(this.peekStack()!=    JsonToken.NAME)    {    if(this.peekStack()!=  JsonToken.NAME)  {	  	non-compiled	[CE]  ';'  expected	83	None	add
294	[BUG]  [BUGGY]  if(this.peekStack()!=  JsonToken.NAME)  {  if(this.peekStack()  ==  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(this.peekStack()!=  JsonToken.NAME)  {  if(this.peekStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(this.peekStack()!=    JsonToken.NAME)    {    if(this.peekStack()  ==  JsonToken.NAME)  {	  	non-compiled	[CE]  ';'  expected	83	None	add
295	[BUG]  [BUGGY]  if(this.peekStack()!=  JsonToken.NAME)  {  if(this.peekStack()  >=  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(this.peekStack()!=  JsonToken.NAME)  {  if(this.peekStack()  >=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(this.peekStack()!=    JsonToken.NAME)    {    if(this.peekStack()  >=  JsonToken.NAME)  {	  	non-compiled	[CE]  ';'  expected	83	None	add
296	[BUG]  [BUGGY]  if(this.peekStack()!=  JsonToken.NAME)  {  if(this.peekStack()  >>  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(this.peekStack()!=  JsonToken.NAME)  {  if(this.peekStack()  >>  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(this.peekStack()!=    JsonToken.NAME)    {    if(this.peekStack()  >>  JsonToken.NAME)  {	  	non-compiled	[CE]  ';'  expected	83	None	add
297	[BUG]  [BUGGY]  if(this.peekStack()!=  JsonToken.NAME)  {  If(this.peekStack()!=  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(this.peekStack()!=  JsonToken.NAME)  {  If(this.peekStack()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(this.peekStack()!=    JsonToken.NAME)    {    If(this.peekStack()!=  JsonToken.NAME)  {	  	non-compiled	[CE]  ';'  expected	83	None	add
298	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NULL  ||  nextToken()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NULL  ||  nextToken()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.VALUE_NULL  ||  nextToken()  ==  JsonToken.NAME)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
299	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextToken()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextToken()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextToken()  ==  JsonToken.VALUE_NULL)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
300	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()  ==  JsonToken.VALUE_NULL)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
301	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.FIELD_NAME  ||  nextToken()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.FIELD_NAME  ||  nextToken()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.FIELD_NAME  ||  nextToken()  ==  JsonToken.VALUE_NULL)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
302	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.NAME  &&  nextToken()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.NAME  &&  nextToken()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.NAME  &&  nextToken()  ==  JsonToken.VALUE_NULL)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
303	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.STRING  ||  nextToken()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.STRING  ||  nextToken()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.STRING  ||  nextToken()  ==  JsonToken.VALUE_NULL)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
304	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
305	[BUG]  [BUGGY]  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
306	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
307	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  nu  [CE]  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  nu  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  nu	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  	107	None	replace
308	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  	107	None	replace
309	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  illegal  start  of  type  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
310	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.VALUE_STRING)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.VALUE_STRING)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    peekStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	92	None	replace
311	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()!=  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()!=  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()!=  JsonToken.VALUE_NULL)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    peekStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	92	None	replace
312	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    peekStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	92	None	replace
313	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    peekStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	92	None	replace
314	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  stackSize  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  stackSize  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  stackSize  ==  JsonToken.START_OBJECT)  {	  if(stackSize    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	47	None	replace
315	[BUG]  [BUGGY]  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
316	[BUG]  [BUGGY]  if(stack.length()  ==  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack.length()  ==  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack.length()  ==  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  }	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
317	[BUG]  [BUGGY]  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(pathNames,  0,  result,  0,  stack.length);  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(pathNames,  0,  result,  0,  stack.length);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(pathNames,  0,  result,  0,  stack.length);  }	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
318	[BUG]  [BUGGY]  Integer[]  result  =  new  Integer[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  Integer[]  result  =  new  Integer[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	Integer[]  result  =  new  Integer[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
319	[BUG]  [BUGGY]  Object[]  result  =  new  Object[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  Object[]  result  =  new  Object[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	Object[]  result  =  new  Object[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
320	[BUG]  [BUGGY]  String[]  result  =  new  String[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  String[]  result  =  new  String[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	String[]  result  =  new  String[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
321	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.NAME)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
322	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.FIELD_NAME  ||  nextName()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.FIELD_NAME  ||  nextName()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.FIELD_NAME  ||  nextName()  ==  JsonToken.START_OBJECT)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
323	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.STRING  ||  nextName()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.STRING  ||  nextName()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.STRING  ||  nextName()  ==  JsonToken.START_OBJECT)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
324	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.END_OBJECT)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
325	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.NAME  &&  nextName()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.NAME  &&  nextName()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.NAME  &&  nextName()  ==  JsonToken.START_OBJECT)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
326	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.END_OBJECT  ||  nextName()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.END_OBJECT  ||  nextName()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.END_OBJECT  ||  nextName()  ==  JsonToken.START_OBJECT)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
327	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NULL  ||  nextName()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NULL  ||  nextName()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.VALUE_NULL  ||  nextName()  ==  JsonToken.NAME)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
328	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NAME  ||  nextName()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NAME  ||  nextName()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.VALUE_NAME  ||  nextName()  ==  JsonToken.VALUE_NULL)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
329	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NUMBER_INT  ||  nextName()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NUMBER_INT  ||  nextName()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.VALUE_NUMBER_INT  ||  nextName()  ==  JsonToken.VALUE_NULL)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
330	[BUG]  [BUGGY]  if(next()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.VALUE_NULL)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
331	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NULL  ||  nextName()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NULL  ||  nextName()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.VALUE_NULL  ||  nextName()  ==  JsonToken.NAME)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
332	[BUG]  [BUGGY]  if(nextName()  ==  JsonToken.VALUE_NULL  ||  next()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName()  ==  JsonToken.VALUE_NULL  ||  next()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName()  ==  JsonToken.VALUE_NULL  ||  next()  ==  JsonToken.NAME)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	19	None	replace
333	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  <  =  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.NAME  ||  stackSize  <  =  0)  {	  if(peekStack()    ==    JsonToken.NAME    ||    stackSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
334	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  1)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  1)  {	  if(peekStack()    ==    JsonToken.NAME    ||    stackSize    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	72	2	replace
335	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  1)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  1)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  1)  {	  if(peekStack()    ==    JsonToken.NAME    ||    stackSize    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	72	2	replace
336	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  >  0  ||  peekStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(stackSize  >  0  ||  peekStack()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.NAME    ||    stackSize    >    0)    {    	compilable	  [FE]  IllegalStateException  	72	2	replace
337	[BUG]  [BUGGY]  if(stackSize  >  0  ||  peekStack()  ==  JsonToken.NAME)  {  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  >  0  ||  peekStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  >  0  ||  peekStack()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.NAME    ||    stackSize    >    0)    {    	compilable	  [FE]  IllegalStateException  	72	2	replace
338	[BUG]  [BUGGY]  if(stackSize  <  JsonToken.NAME  ||  stackSize  >  0)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]          IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  <  JsonToken.NAME  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  <  JsonToken.NAME  ||  stackSize  >  0)  {	  if(peekStack()    ==    JsonToken.NAME    ||    stackSize    >    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	72	None	replace
339	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize  ==  JsonToken.END_OBJECT)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	64	None	replace
340	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.FIELD_NAME  ||  stackSize  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.FIELD_NAME  ||  stackSize  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.FIELD_NAME  ||  stackSize  ==  JsonToken.START_OBJECT)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	64	None	replace
341	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize!=  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize!=  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize!=  JsonToken.START_OBJECT)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	64	None	replace
342	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_STRING  ||  stackSize  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_STRING  ||  stackSize  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_STRING  ||  stackSize  ==  JsonToken.START_OBJECT)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	64	None	replace
343	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.NAME  ||  peek()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.NAME  ||  peek()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.NAME  ||  peek()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_FLOAT    ||    peek()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	7	None	replace
344	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.FIELD_NAME  ||  peek()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.FIELD_NAME  ||  peek()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.FIELD_NAME  ||  peek()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_FLOAT    ||    peek()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	7	None	replace
345	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peek()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peek()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peek()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_FLOAT    ||    peek()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	7	None	replace
346	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peek()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peek()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_STRING  ||  peek()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	9	None	replace
347	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.END_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	9	None	replace
348	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()!=  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()!=  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()!=  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	9	None	replace
349	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.FIELD_NAME  ||  peek()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.FIELD_NAME  ||  peek()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.FIELD_NAME  ||  peek()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	9	None	replace
350	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peek()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peek()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_STRING  ||  peek()  ==  JsonToken.END_ARRAY)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	36	None	replace
351	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.END_ARRAY)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	36	None	replace
352	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.START_ARRAY)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	36	None	replace
353	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.END_ARRAY  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.END_ARRAY  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.END_ARRAY  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	36	None	replace
354	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_ARRAY  ||  peek()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  START_ARRAY  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_ARRAY  ||  peek()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_ARRAY  ||  peek()  ==  JsonToken.END_ARRAY)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	36	None	replace
355	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.END_ARRAY)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	36	None	replace
356	[BUG]  [BUGGY]  ||!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  ||!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	||!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
357	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peek()  ==  JsonToken.FUNCTION)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peek()  ==  JsonToken.FUNCTION)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_STRING  ||  peek()  ==  JsonToken.FUNCTION)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	12	None	replace
358	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peek()  ==  JsonToken.FUNCTION)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peek()  ==  JsonToken.FUNCTION)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peek()  ==  JsonToken.FUNCTION)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	12	None	replace
359	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.FUNCTION)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.FUNCTION)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.FUNCTION)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	12	None	replace
360	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.FUNCTION)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.FUNCTION)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.FUNCTION)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	12	None	replace
361	[BUG]  [BUGGY]  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  2]  =   "null ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  2]  =   "null ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  2]  =   "null ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  if(stack.length()    >    0)    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
362	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  ==  JsonToken.FIELD_NAME)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  ==  JsonToken.FIELD_NAME)  {	  if(stackSize    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	45	None	replace
363	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_EMBEDDED_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_EMBEDDED_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_EMBEDDED_ARRAY)  {	  if(stackSize    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY	44	None	replace
364	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()    ==    JsonToken.NAME    ||    stackSize    >    0)    {    if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {	  	non-compiled	[CE]  ';'  expected	71	None	add
365	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()    ==    JsonToken.NAME    ||    stackSize    >    0)    {    if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {	  	non-compiled	[CE]  ';'  expected	71	None	add
366	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {  If(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {  If(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()    ==    JsonToken.NAME    ||    stackSize    >    0)    {    If(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {	  	non-compiled	[CE]  ';'  expected	71	None	add
367	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()  >=  JsonToken.NAME  ||  stackSize  >  0)  {  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()  >=  JsonToken.NAME  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()    ==    JsonToken.NAME    ||    stackSize    >    0)    {    if(peekStack()  >=  JsonToken.NAME  ||  stackSize  >  0)  {	  	non-compiled	[CE]  ';'  expected	71	None	add
368	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  1)  {  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  1)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()    ==    JsonToken.NAME    ||    stackSize    >    0)    {    if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  1)  {	  	non-compiled	[CE]  ';'  expected	71	None	add
369	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  2)  {  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  2)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()    ==    JsonToken.NAME    ||    stackSize    >    0)    {    if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  2)  {	  	non-compiled	[CE]  ';'  expected	71	None	add
370	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_ARRAY  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	67	None	replace
371	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.START_ARRAY)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	67	None	replace
372	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_ARRAY  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	67	None	replace
373	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  &&  peekStack()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  &&  peekStack()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  &&  peekStack()  ==  JsonToken.START_ARRAY)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	67	None	replace
374	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_ARRAY)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	67	None	replace
375	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.START_OBJECT)  {	  if(nextToken()    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
376	[BUG]  [BUGGY]  if(jsonToken.nextToken()  ==  JsonToken.FIELD_NAME)  {  [CE]  cannot  find  symbol  jsonToken  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(jsonToken.nextToken()  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(jsonToken.nextToken()  ==  JsonToken.FIELD_NAME)  {	  if(nextToken()    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  cannot  find  symbol  jsonToken	28	None	replace
377	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.VALUE_NULL)  {	  if(nextToken()    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
378	[BUG]  [BUGGY]  if(nextToken()!=  JsonToken.FIELD_NAME)  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()!=  JsonToken.FIELD_NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()!=  JsonToken.FIELD_NAME)  {	  if(nextToken()    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
379	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  0)  {  if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  0)  {  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  0)  {  if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=    JsonToken.NAME    &&    stackSize    >    0)    {    if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  0)  {	  	non-compiled	[CE]  ';'  expected	101	None	add
380	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  0)  {  if(peekStack()  >=  JsonToken.NAME  &&  stackSize  >  0)  {  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  0)  {  if(peekStack()  >=  JsonToken.NAME  &&  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=    JsonToken.NAME    &&    stackSize    >    0)    {    if(peekStack()  >=  JsonToken.NAME  &&  stackSize  >  0)  {	  	non-compiled	[CE]  ';'  expected	101	None	add
381	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  0)  {  if(peekStack()  ==  JsonToken.NAME  &&  stackSize  >  0)  {  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  0)  {  if(peekStack()  ==  JsonToken.NAME  &&  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=    JsonToken.NAME    &&    stackSize    >    0)    {    if(peekStack()  ==  JsonToken.NAME  &&  stackSize  >  0)  {	  	non-compiled	[CE]  ';'  expected	101	None	add
382	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  0)  {  if(peekStack()  >>  JsonToken.NAME  &&  stackSize  >  0)  {  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  0)  {  if(peekStack()  >>  JsonToken.NAME  &&  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=    JsonToken.NAME    &&    stackSize    >    0)    {    if(peekStack()  >>  JsonToken.NAME  &&  stackSize  >  0)  {	  	non-compiled	[CE]  ';'  expected	101	None	add
383	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  0)  {  If(peekStack()!=  JsonToken.NAME  &&  stackSize  >  0)  {  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  0)  {  If(peekStack()!=  JsonToken.NAME  &&  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=    JsonToken.NAME    &&    stackSize    >    0)    {    If(peekStack()!=  JsonToken.NAME  &&  stackSize  >  0)  {	  	non-compiled	[CE]  ';'  expected	101	None	add
384	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  0)  {  if(peekStack()  [Delete]  JsonToken.NAME  &&  stackSize  >  0)  {  [CE]  ')'  expected  [FE]              IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  0)  {  if(peekStack()  [Delete]  JsonToken.NAME  &&  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=    JsonToken.NAME    &&    stackSize    >    0)    {    if(peekStack()  [Delete]  JsonToken.NAME  &&  stackSize  >  0)  {	  	non-compiled	[CE]  ')'  expected	101	None	add
385	[BUG]  [BUGGY]  when(peekStack()  ==  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  when(peekStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	when(peekStack()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.NAME)    {    when(peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  ';'  expected	69	None	replace
386	[BUG]  [BUGGY]  when(peekStack()  ==  JsonToken.START_OBJECT)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  when(peekStack()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	when(peekStack()  ==  JsonToken.START_OBJECT)  {	  if(peekStack()    ==    JsonToken.NAME)    {    when(peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  ';'  expected	69	None	replace
387	[BUG]  [BUGGY]  when(peekStack()  ==  JsonToken.VALUE_NUMBER)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  when(peekStack()  ==  JsonToken.VALUE_NUMBER)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	when(peekStack()  ==  JsonToken.VALUE_NUMBER)  {	  if(peekStack()    ==    JsonToken.NAME)    {    when(peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  ';'  expected	69	None	replace
388	[BUG]  [BUGGY]  when(stackStack()  ==  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  when(stackStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	when(stackStack()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.NAME)    {    when(peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  ';'  expected	69	None	replace
389	[BUG]  [BUGGY]  when(peekStack()!=  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  when(peekStack()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	when(peekStack()!=  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.NAME)    {    when(peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  ';'  expected	69	None	replace
390	[BUG]  [BUGGY]  when(nextToken()  ==  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  when(nextToken()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	when(nextToken()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.NAME)    {    when(peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  ';'  expected	69	None	replace
391	[BUG]  [BUGGY]  when(next()  ==  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  when(next()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	when(next()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.NAME)    {    when(peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  ';'  expected	69	None	replace
392	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextToken()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextToken()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextToken()  ==  JsonToken.START_OBJECT)  {	  if(nextToken()    ==    JsonToken.VALUE_NAME)    {    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
393	[BUG]  [BUGGY]  if(jsonToken.nextToken()  ==  JsonToken.VALUE_NAME)  {  [CE]  cannot  find  symbol  jsonToken  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(jsonToken.nextToken()  ==  JsonToken.VALUE_NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(jsonToken.nextToken()  ==  JsonToken.VALUE_NAME)  {	  if(nextToken()    ==    JsonToken.VALUE_NAME)    {    	non-compiled	[CE]  cannot  find  symbol  jsonToken	26	None	replace
394	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextToken()  ==  JsonToken.FIELD_NAME)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextToken()  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextToken()  ==  JsonToken.FIELD_NAME)  {	  if(nextToken()    ==    JsonToken.VALUE_NAME)    {    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
395	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
396	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
397	[BUG]  [BUGGY]  ||!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  ||!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	||!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
398	[BUG]  [BUGGY]  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
399	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.SINGLE_QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.SINGLE_QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.SINGLE_QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
400	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.STRICT_MODE))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.STRICT_MODE))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.STRICT_MODE))  {  throw  new  IllegalArgumentException( " ");  }	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
401	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_ARRAY  ||  peek()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_ARRAY  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_ARRAY  ||  peek()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_ARRAY  ||  peek()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peek()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	24	None	replace
402	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peek()!=  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peek()!=  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  peek()!=  JsonToken.START_ARRAY)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peek()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	24	None	replace
403	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  &&  peek()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  &&  peek()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  &&  peek()  ==  JsonToken.START_ARRAY)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peek()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	24	None	replace
404	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.START_ARRAY)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peek()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	24	None	replace
405	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.NAME  ||  peek()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.NAME  ||  peek()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.NAME  ||  peek()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peek()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	88	None	replace
406	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NAME  ||  peek()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NAME  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NAME  ||  peek()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NAME  ||  peek()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peek()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NAME	88	None	replace
407	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  &&  peek()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  &&  peek()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  &&  peek()  ==  JsonToken.NAME)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peek()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	88	None	replace
408	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.END_OBJECT  ||  peek()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(peek()  ==  JsonToken.END_OBJECT  ||  peek()  ==  JsonToken.NAME)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peek()    ==    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	2	replace
409	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.END_OBJECT  ||  peek()  ==  JsonToken.NAME)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.END_OBJECT  ||  peek()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.END_OBJECT  ||  peek()  ==  JsonToken.NAME)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peek()    ==    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	2	replace
410	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peek()!=  JsonToken.NAME)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peek()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  peek()!=  JsonToken.NAME)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peek()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	88	None	replace
411	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_STRING  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    skipValue()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	22	None	replace
412	[BUG]  [BUGGY]  if(skipValue()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  'void'  type  not  allowed  here  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(skipValue()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(skipValue()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    skipValue()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  'void'  type  not  allowed  here	22	None	replace
413	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    skipValue()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	22	None	replace
414	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NULL  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    skipValue()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	22	None	replace
415	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    skipValue()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
416	[BUG]  [BUGGY]  if(skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  'void'  type  not  allowed  here  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    skipValue()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  'void'  type  not  allowed  here	22	None	replace
417	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peek()  ==  JsonToken.FIELD_NAME)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peek()  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peek()  ==  JsonToken.FIELD_NAME)  {	  if(peek()    ==    JsonToken.FIELD_NAME    ||    peek()    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	89	None	replace
418	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(popStack()  ==  JsonToken.NAME)  {	  if(popStack()!=    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	87	2	replace
419	[BUG]  [BUGGY]  if(popStack()  ==  JsonToken.NAME)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()  ==  JsonToken.NAME)  {	  if(popStack()!=    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	87	2	replace
420	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(peek()!=  JsonToken.NAME)  {	  if(popStack()!=    JsonToken.NAME)    {    	compilable	  [FE]  IllegalStateException  	87	2	replace
421	[BUG]  [BUGGY]  if(peek()!=  JsonToken.NAME)  {  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()!=  JsonToken.NAME)  {	  if(popStack()!=    JsonToken.NAME)    {    	compilable	  [FE]  IllegalStateException  	87	2	replace
422	[BUG]  [BUGGY]  if(popStack()!=  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]        IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()!=  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()!=  JsonToken.VALUE_NULL)  {	  if(popStack()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	87	None	replace
423	[BUG]  [BUGGY]  if(popStack()!=  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]          IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()!=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()!=  JsonToken.VALUE_NUMBER_INT)  {	  if(popStack()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	87	None	replace
424	[BUG]  [BUGGY]  if(popStack()!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]            IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(popStack()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	87	None	replace
425	[BUG]  [BUGGY]  if(nextName()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.START_OBJECT)  {  [CE]  incomparable  types:  String  and  JsonToken  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.START_OBJECT)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  incomparable  types:  String  and  JsonToken	15	None	replace
426	[BUG]  [BUGGY]  if(next()  ==  JsonToken.STRING  ||  nextName()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.STRING  ||  nextName()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.STRING  ||  nextName()  ==  JsonToken.START_OBJECT)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
427	[BUG]  [BUGGY]  if(skipStack()  ==  JsonToken.VALUE_NULL  ||  skipStack()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(skipStack()  ==  JsonToken.VALUE_NULL  ||  skipStack()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(skipStack()  ==  JsonToken.VALUE_NULL  ||  skipStack()  ==  JsonToken.VALUE_NULL)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    skipStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
428	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_STRING  ||  skipStack()  ==  JsonToken.VALUE_STRING)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_STRING  ||  skipStack()  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_STRING  ||  skipStack()  ==  JsonToken.VALUE_STRING)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    skipStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	95	None	replace
429	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    skipStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	95	None	replace
430	[BUG]  [BUGGY]  if(switchStack()  ==  JsonToken.VALUE_NULL  ||  skipStack()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(switchStack()  ==  JsonToken.VALUE_NULL  ||  skipStack()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(switchStack()  ==  JsonToken.VALUE_NULL  ||  skipStack()  ==  JsonToken.VALUE_NULL)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    skipStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
431	[BUG]  [BUGGY]  if(switchedStack()  ==  JsonToken.VALUE_NULL  ||  skipStack()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(switchedStack()  ==  JsonToken.VALUE_NULL  ||  skipStack()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(switchedStack()  ==  JsonToken.VALUE_NULL  ||  skipStack()  ==  JsonToken.VALUE_NULL)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    skipStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
432	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  skipStack()!=  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  skipStack()!=  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NULL  ||  skipStack()!=  JsonToken.VALUE_NULL)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    skipStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	95	None	replace
433	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peekStack()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peekStack()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peekStack()  ==  JsonToken.END_ARRAY)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	81	None	replace
434	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.END_ARRAY)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	81	None	replace
435	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_ARRAY)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	81	None	replace
436	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.END_ARRAY)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	81	None	replace
437	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peekStack()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peekStack()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peekStack()  ==  JsonToken.START_ARRAY)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	81	None	replace
438	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=    JsonToken.NAME    ||    stackSize    >    0)    {    if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {	  	non-compiled	[CE]  ';'  expected	99	None	add
439	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=    JsonToken.NAME    ||    stackSize    >    0)    {    if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {	  	non-compiled	[CE]  ';'  expected	99	None	add
440	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()  >=  JsonToken.NAME  ||  stackSize  >  0)  {  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()  >=  JsonToken.NAME  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=    JsonToken.NAME    ||    stackSize    >    0)    {    if(peekStack()  >=  JsonToken.NAME  ||  stackSize  >  0)  {	  	non-compiled	[CE]  ';'  expected	99	None	add
441	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()  >>  JsonToken.NAME  ||  stackSize  >  0)  {  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()  >>  JsonToken.NAME  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=    JsonToken.NAME    ||    stackSize    >    0)    {    if(peekStack()  >>  JsonToken.NAME  ||  stackSize  >  0)  {	  	non-compiled	[CE]  ';'  expected	99	None	add
442	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  If(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  If(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=    JsonToken.NAME    ||    stackSize    >    0)    {    If(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {	  	non-compiled	[CE]  ';'  expected	99	None	add
443	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()  [Delete]  JsonToken.NAME  ||  stackSize  >  0)  {  [CE]  ')'  expected  [FE]              IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()  [Delete]  JsonToken.NAME  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=    JsonToken.NAME    ||    stackSize    >    0)    {    if(peekStack()  [Delete]  JsonToken.NAME  ||  stackSize  >  0)  {	  	non-compiled	[CE]  ')'  expected	99	None	add
444	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peekStack()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peekStack()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peekStack()  ==  JsonToken.END_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	82	None	replace
445	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.END_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	82	None	replace
446	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.END_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	82	None	replace
447	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_STRING  ||  peekStack()  ==  JsonToken.END_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	82	None	replace
448	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.END_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.END_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.END_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	82	None	replace
449	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName().equals(JsonToken.NAME))  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(nextName().equals(JsonToken.NAME))  {	  if(nextName()!=    JsonToken.NAME)    {    	compilable	  [FE]  IllegalStateException  	60	2	replace
450	[BUG]  [BUGGY]  if(nextName().equals(JsonToken.NAME))  {  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName().equals(JsonToken.NAME))  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName().equals(JsonToken.NAME))  {	  if(nextName()!=    JsonToken.NAME)    {    	compilable	  [FE]  IllegalStateException  	60	2	replace
451	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(!nextName().equals(JsonToken.NAME))  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(!nextName().equals(JsonToken.NAME))  {	  if(nextName()!=    JsonToken.NAME)    {    	compilable	  [FE]  IllegalStateException  	60	2	replace
452	[BUG]  [BUGGY]  if(!nextName().equals(JsonToken.NAME))  {  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(!nextName().equals(JsonToken.NAME))  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(!nextName().equals(JsonToken.NAME))  {	  if(nextName()!=    JsonToken.NAME)    {    	compilable	  [FE]  IllegalStateException  	60	2	replace
453	[BUG]  [BUGGY]  if(nextName()!=  JsonToken.NAME  ||  nextName().equals(JsonToken.NAME))  {  [CE]  incomparable  types:  String  and  JsonToken  [FE]              IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName()!=  JsonToken.NAME  ||  nextName().equals(JsonToken.NAME))  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName()!=  JsonToken.NAME  ||  nextName().equals(JsonToken.NAME))  {	  if(nextName()!=    JsonToken.NAME)    {    	non-compiled	[CE]  incomparable  types:  String  and  JsonToken	60	None	replace
454	[BUG]  [BUGGY]  if(this.nextName()!=  JsonToken.NAME)  {  [CE]  incomparable  types:  String  and  JsonToken  [FE]                IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(this.nextName()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(this.nextName()!=  JsonToken.NAME)  {	  if(nextName()!=    JsonToken.NAME)    {    	non-compiled	[CE]  incomparable  types:  String  and  JsonToken	60	None	replace
455	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName().equals(JsonToken.NAME)||  nextName().equals(JsonToken.NAME))  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(nextName().equals(JsonToken.NAME)||  nextName().equals(JsonToken.NAME))  {	  if(nextName()!=    JsonToken.NAME)    {    	compilable	  [FE]  IllegalStateException  	60	2	replace
456	[BUG]  [BUGGY]  if(nextName().equals(JsonToken.NAME)||  nextName().equals(JsonToken.NAME))  {  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName().equals(JsonToken.NAME)||  nextName().equals(JsonToken.NAME))  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName().equals(JsonToken.NAME)||  nextName().equals(JsonToken.NAME))  {	  if(nextName()!=    JsonToken.NAME)    {    	compilable	  [FE]  IllegalStateException  	60	2	replace
457	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    for(int    i    =    0;    i    <    count;    ++i)    {    pathNames[i]    =    null;    }    	non-compiled	[CE]  not  a  statement	105	None	replace
458	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }  [CE]  cannot  find  symbol  Feature  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    for(int    i    =    0;    i    <    count;    ++i)    {    pathNames[i]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	105	None	replace
459	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }  [CE]  cannot  find  symbol  Feature  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    for(int    i    =    0;    i    <    count;    ++i)    {    pathNames[i]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	105	None	replace
460	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.STRING  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.STRING  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.STRING  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.STRING)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	11	None	replace
461	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.FIELD_NAME  ||  peek()  ==  JsonToken.STRING)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.FIELD_NAME  ||  peek()  ==  JsonToken.STRING)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.FIELD_NAME  ||  peek()  ==  JsonToken.STRING)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.STRING)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	11	None	replace
462	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  pathNames[stackSize  -  2]  =  null;  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	pathNames[stackSize  -  2]  =  null;	  if(stack.length()    >    0)    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
463	[BUG]  [BUGGY]  if(nextToken()!=  JsonToken.NAME  &&  stackSize  >  0)  {  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()!=  JsonToken.NAME  &&  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()!=  JsonToken.NAME  &&  stackSize  >  0)  {	  if(peekStack()!=    JsonToken.NAME    &&    stackSize    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
464	[BUG]  [BUGGY]  if(peekStack()  >=  JsonToken.NAME  &&  stackSize  >  0)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  >=  JsonToken.NAME  &&  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  >=  JsonToken.NAME  &&  stackSize  >  0)  {	  if(peekStack()!=    JsonToken.NAME    &&    stackSize    >    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	102	None	replace
465	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null  [CE]  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  	107	None	replace
466	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
467	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.STRING  ||  nextToken()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.STRING  ||  nextToken()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.STRING  ||  nextToken()  ==  JsonToken.END_ARRAY)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
468	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekArray()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekArray()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekArray()  ==  JsonToken.START_ARRAY)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	67	None	replace
469	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.START_ARRAY)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	67	None	replace
470	[BUG]  [BUGGY]  if(popStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.START_ARRAY)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	67	None	replace
471	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(peekStack()    ==    JsonToken.NAME)    {    if(peekStack()    >=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  Feature	40	None	replace
472	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NULL_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NULL_NAME))  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NULL_NAME))  {	  if(peekStack()    ==    JsonToken.NAME)    {    if(peekStack()    >=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  Feature	40	None	replace
473	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NAME_NULL_OBJECT))  {  [CE]  cannot  find  symbol  Feature  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NAME_NULL_OBJECT))  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NAME_NULL_OBJECT))  {	  if(peekStack()    ==    JsonToken.NAME)    {    if(peekStack()    >=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  Feature	40	None	replace
474	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  cannot  find  symbol  Feature  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(peekStack()    ==    JsonToken.NAME)    {    if(peekStack()    >=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  Feature	40	None	replace
475	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(peekStack()    ==    JsonToken.NAME)    {    if(peekStack()    >=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  Feature	40	None	replace
476	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NULL_OBJECT))  {  [CE]  cannot  find  symbol  Feature  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NULL_OBJECT))  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NULL_OBJECT))  {	  if(peekStack()    ==    JsonToken.NAME)    {    if(peekStack()    >=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  Feature	40	None	replace
477	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peek()    ==    JsonToken.VALUE_NULL    ||    peekStack()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	114	None	replace
478	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.END_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NULL    ||    peekStack()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	114	None	replace
479	[BUG]  [BUGGY]  if(nextName()  ==  JsonToken.START_OBJECT  ||  next()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName()  ==  JsonToken.START_OBJECT  ||  next()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName()  ==  JsonToken.START_OBJECT  ||  next()  ==  JsonToken.NAME)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	15	None	replace
480	[BUG]  [BUGGY]  if(stack!=  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack!=  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack!=  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  if(stack.length()    >    0)    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
481	[BUG]  [BUGGY]  if(stack!=  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =  nu  [CE]  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack!=  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =  nu  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack!=  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =  nu	  if(stack.length()    >    0)    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  	51	None	replace
482	[BUG]  [BUGGY]  if(stack!=  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null  [CE]  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack!=  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack!=  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null	  if(stack.length()    >    0)    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  	51	None	replace
483	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  null;  }  [CE]  cannot  find  symbol  Feature  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    for(int    i    =    0;    i    <    stackSize;    ++i)    {    pathNames[i]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	106	None	replace
484	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  nu  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  nu  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  nu	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    for(int    i    =    0;    i    <    stackSize;    ++i)    {    pathNames[i]    =    null;    }    	non-compiled	[CE]  ';'  expected	106	None	replace
485	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  null  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  null  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  pathNames[i]  =  null	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    for(int    i    =    0;    i    <    stackSize;    ++i)    {    pathNames[i]    =    null;    }    	non-compiled	[CE]  ';'  expected	106	None	replace
486	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  skipStack()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  skipStack()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  skipStack()  ==  JsonToken.VALUE_NULL)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    skipStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	95	None	replace
487	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  skipStack()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  skipStack()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  skipStack()  ==  JsonToken.END_OBJECT)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    skipStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	95	None	replace
488	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  skipStack()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  skipStack()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  skipStack()  ==  JsonToken.START_OBJECT)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    skipStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	95	None	replace
489	[BUG]  [BUGGY]  if(type  ==  JsonToken.NAME  ||  nextName()!=  JsonToken.NAME)  {  [CE]  cannot  find  symbol  type  [FE]          IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(type  ==  JsonToken.NAME  ||  nextName()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(type  ==  JsonToken.NAME  ||  nextName()!=  JsonToken.NAME)  {	  if(nextName()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  type	60	None	replace
490	[BUG]  [BUGGY]  if(getName()!=  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(getName()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(getName()!=  JsonToken.NAME)  {	  if(nextName()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
491	[BUG]  [BUGGY]  if(isName()  ||  nextName()!=  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isName()  ||  nextName()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isName()  ||  nextName()!=  JsonToken.NAME)  {	  if(nextName()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
492	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()!=  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()!=  JsonToken.NAME)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()!=    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
493	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.STRING  ||  nextToken()!=  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.STRING  ||  nextToken()!=  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.STRING  ||  nextToken()!=  JsonToken.END_OBJECT)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()!=    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
494	[BUG]  [BUGGY]  if(nextToken()!=  JsonToken.NAME  ||  nextToken()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()!=  JsonToken.NAME  ||  nextToken()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()!=  JsonToken.NAME  ||  nextToken()  ==  JsonToken.END_OBJECT)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()!=    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
495	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    count);    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
496	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    count);    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
497	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    count);    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
498	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  [CE]  ')'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    count);    }    	non-compiled	[CE]  ')'  expected	103	None	replace
499	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_FLOAT    ||    peek()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	7	None	replace
500	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  ==  JsonToken.END_OBJECT)  {	  if(stackSize    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	43	None	replace
501	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    skipValue();    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
502	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    skipValue();    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  	73	None	replace
503	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  nu  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  nu  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  nu	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    skipValue();    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  ';'  expected	73	None	replace
504	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.START_ARRAY)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peek()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	24	None	replace
505	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peek()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING  ||  peek()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_STRING  ||  peek()  ==  JsonToken.START_ARRAY)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peek()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	24	None	replace
506	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	111	None	replace
507	[BUG]  [BUGGY]  JsonTreeReader.this.skipKey();  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  JsonTreeReader.this.skipKey();  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	JsonTreeReader.this.skipKey();	  JsonTreeReader.this.skipValue();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
508	[BUG]  [BUGGY]  JsonTreeReader.this.skip(null);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  JsonTreeReader.this.skip(null);  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	JsonTreeReader.this.skip(null);	  JsonTreeReader.this.skipValue();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
509	[BUG]  [BUGGY]  JsonTreeReader.this.skipBound();  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  JsonTreeReader.this.skipBound();  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	JsonTreeReader.this.skipBound();	  JsonTreeReader.this.skipValue();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
510	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_EMPTY)  {  [CE]  cannot  find  symbol  VALUE_EMPTY  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_EMPTY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_EMPTY)  {	  if(stackSize    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMPTY	44	None	replace
511	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.START_OBJECT)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    peekStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	92	None	replace
512	[BUG]  [BUGGY]  if(next()!=  JsonToken.NAME  ||  nextName()!=  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()!=  JsonToken.NAME  ||  nextName()!=  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()!=  JsonToken.NAME  ||  nextName()!=  JsonToken.END_OBJECT)  {	  if(next()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
513	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  If(peekStack()  ==  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  If(peekStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  If(peekStack()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.NAME)    {    If(peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
514	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NULL_NAME))  {  If(peekStack()  ==  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NULL_NAME))  {  If(peekStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NULL_NAME))  {  If(peekStack()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.NAME)    {    If(peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
515	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME))  {  If(peekStack()  ==  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME))  {  If(peekStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME))  {  If(peekStack()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.NAME)    {    If(peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
516	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NULL_OBJECT))  {  If(peekStack()  ==  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NULL_OBJECT))  {  If(peekStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NULL_OBJECT))  {  If(peekStack()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.NAME)    {    If(peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
517	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  If(peekStack()  ==  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  If(peekStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  If(peekStack()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.NAME)    {    If(peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
518	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NAME_NULL_OBJECT))  {  If(peekStack()  ==  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NAME_NULL_OBJECT))  {  If(peekStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NAME_NULL_OBJECT))  {  If(peekStack()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.NAME)    {    If(peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
519	[BUG]  [BUGGY]  if(jsonToken  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  jsonToken  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(jsonToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(jsonToken  ==  JsonToken.VALUE_NULL)  {	  if(next()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  jsonToken	17	None	replace
520	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NULL  ||  nextName()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NULL  ||  nextName()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.VALUE_NULL  ||  nextName()  ==  JsonToken.END_OBJECT)  {	  if(next()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
521	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NULL  ||  nextName()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NULL  ||  nextName()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.VALUE_NULL  ||  nextName()  ==  JsonToken.START_OBJECT)  {	  if(next()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
522	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  START_ARRAY  [FE]          IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  JsonToken.START_ARRAY)  {	  if(peekStack()    >=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	85	None	replace
523	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  JsonToken.END_ARRAY)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]            IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  JsonToken.END_ARRAY)  {	  if(peekStack()    >=    JsonToken.NAME)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	85	None	replace
524	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.NAME)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peek()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	88	None	replace
525	[BUG]  [BUGGY]  if(next()  ==  JsonToken.STRING  ||  nextName()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.STRING  ||  nextName()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.STRING  ||  nextName()  ==  JsonToken.START_ARRAY)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
526	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.START_ARRAY  ||  nextName()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.START_ARRAY  ||  nextName()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.START_ARRAY  ||  nextName()  ==  JsonToken.NAME)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
527	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.NAME.nextToken()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.NAME.nextToken()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.NAME.nextToken()  ==  JsonToken.NAME)  {	  if(jsonToken.nextToken()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
528	[BUG]  [BUGGY]  if(stackNames.nextToken()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  stackNames  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackNames.nextToken()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackNames.nextToken()  ==  JsonToken.NAME)  {	  if(jsonToken.nextToken()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  stackNames	29	None	replace
529	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  >  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  >  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  >  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peekStack()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	35	None	replace
530	[BUG]  [BUGGY]  if(stack!=  null)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[  [CE]  ']'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack!=  null)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack!=  null)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    for(int    i    =    0;    i    <    count;    ++i)    {    result[    	non-compiled	[CE]  ']'  expected	53	None	replace
531	[BUG]  [BUGGY]  if(stack!=  null)  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[  [CE]  ']'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack!=  null)  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack!=  null)  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    for(int    i    =    0;    i    <    count;    ++i)    {    result[    	non-compiled	[CE]  ']'  expected	53	None	replace
532	[BUG]  [BUGGY]  if(stack!=  null)  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack!=  null)  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack!=  null)  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    for(int    i    =    0;    i    <    count;    ++i)    {    result[    	non-compiled	[CE]  ';'  expected	53	None	replace
533	[BUG]  [BUGGY]  if(nextName()  ==  null)  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[  [CE]  ']'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName()  ==  null)  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName()  ==  null)  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    for(int    i    =    0;    i    <    count;    ++i)    {    result[    	non-compiled	[CE]  ']'  expected	53	None	replace
534	[BUG]  [BUGGY]  if(stack  ==  null)  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[  [CE]  ']'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack  ==  null)  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack  ==  null)  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    for(int    i    =    0;    i    <    count;    ++i)    {    result[    	non-compiled	[CE]  ']'  expected	53	None	replace
535	[BUG]  [BUGGY]  if(nextName()!=  null)  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[  [CE]  ']'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName()!=  null)  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName()!=  null)  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    for(int    i    =    0;    i    <    count;    ++i)    {    result[    	non-compiled	[CE]  ']'  expected	53	None	replace
536	[BUG]  [BUGGY]  if(stack!=  null)  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  [CE]  'else'  without  'if'  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack!=  null)  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack!=  null)  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    for(int    i    =    0;    i    <    count;    ++i)    {    result[    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
537	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.END_ARRAY  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.END_ARRAY  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.END_ARRAY  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	81	None	replace
538	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  START_ARRAY  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.END_ARRAY)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	81	None	replace
539	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.FIELD_NAME  ||  peekStack()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.FIELD_NAME  ||  peekStack()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.FIELD_NAME  ||  peekStack()  ==  JsonToken.END_ARRAY)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	81	None	replace
540	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peekStack()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peekStack()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peekStack()  ==  JsonToken.START_ARRAY)  {	  if(peek()    ==    JsonToken.VALUE_NULL    ||    peekStack()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	113	None	replace
541	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.FIELD_NAME  ||  stackSize  >  0)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.FIELD_NAME  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.FIELD_NAME  ||  stackSize  >  0)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    stackSize    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	93	None	replace
542	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.STRING  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(peekStack()  ==  JsonToken.STRING  ||  stackSize  >  0)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    stackSize    >    0)    {    	compilable	  [FE]  IllegalStateException  	93	2	replace
543	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.STRING  ||  stackSize  >  0)  {  [FE]  IllegalStateException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.STRING  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.STRING  ||  stackSize  >  0)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    stackSize    >    0)    {    	compilable	  [FE]  IllegalStateException  	93	2	replace
544	[BUG]  [BUGGY]  if(stack!=  null)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack!=  null)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack!=  null)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  }	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
545	[BUG]  [BUGGY]  if(stack  ==  null)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack  ==  null)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack  ==  null)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  }	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
546	[BUG]  [BUGGY]  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  }	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
547	[BUG]  [BUGGY]  if(stack!=  null)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(pathNames,  0,  result,  0,  stack.length);  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack!=  null)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(pathNames,  0,  result,  0,  stack.length);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack!=  null)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(pathNames,  0,  result,  0,  stack.length);  }	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
548	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.END_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.END_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.END_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	80	None	replace
549	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.START_CLOSED)  {  [CE]  cannot  find  symbol  START_ARRAY  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.START_CLOSED)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.START_CLOSED)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_CLOSED)    {    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	68	None	replace
550	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekArray()  ==  JsonToken.START_CLOSED)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekArray()  ==  JsonToken.START_CLOSED)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekArray()  ==  JsonToken.START_CLOSED)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_CLOSED)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	68	None	replace
551	[BUG]  [BUGGY]  if(popStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.START_CLOSED)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.START_CLOSED)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.START_CLOSED)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_CLOSED)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	68	None	replace
552	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  START_ARRAY  [FE]        IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=  JsonToken.START_ARRAY)  {	  if(peekStack()!=    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	98	None	replace
553	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.STRING)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(peekStack()!=  JsonToken.STRING)  {	  if(peekStack()!=    JsonToken.START_OBJECT)    {    	compilable	  [FE]  IllegalStateException  	98	2	replace
554	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.STRING)  {  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.STRING)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=  JsonToken.STRING)  {	  if(peekStack()!=    JsonToken.START_OBJECT)    {    	compilable	  [FE]  IllegalStateException  	98	2	replace
555	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.START_READER)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.START_READER)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.START_READER)  {	  if(stackSize    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	48	None	replace
556	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.END_ARRAY)  {	  if(stackSize    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	48	None	replace
557	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    skipValue();    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
558	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.START_ARRAY  ||  nextToken()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.START_ARRAY  ||  nextToken()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.START_ARRAY  ||  nextToken()  ==  JsonToken.NAME)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
559	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextToken()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextToken()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextToken()  ==  JsonToken.START_ARRAY)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
560	[BUG]  [BUGGY]  if(next()  ==  JsonToken.STRING  ||  nextName()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.STRING  ||  nextName()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.STRING  ||  nextName()  ==  JsonToken.VALUE_NULL)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
561	[BUG]  [BUGGY]  when(peekStack()  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  when(peekStack()  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	when(peekStack()  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(peekStack()    ==    JsonToken.NAME)    {    when(peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  ';'  expected	69	None	replace
562	[BUG]  [BUGGY]  when(peekStack()  ==  JsonToken.END_ARRAY)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  when(peekStack()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	when(peekStack()  ==  JsonToken.END_ARRAY)  {	  if(peekStack()    ==    JsonToken.NAME)    {    when(peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  ';'  expected	69	None	replace
563	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  >  1)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  >  1)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  >  1)  {	  if(peekStack()    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	34	None	replace
564	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.END_OBJECT  ||  stackSize  ==  JsonToken.VALUE_NULL)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.END_OBJECT  ||  stackSize  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.END_OBJECT  ||  stackSize  ==  JsonToken.VALUE_NULL)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	64	None	replace
565	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.START_BLOCK)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.START_BLOCK)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.START_BLOCK)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_BLOCK)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	96	None	replace
566	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.START_BLOCK)  {  [CE]  cannot  find  symbol  START_ARRAY  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.START_BLOCK)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.START_BLOCK)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_BLOCK)    {    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	96	None	replace
567	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekArray()  ==  JsonToken.START_BLOCK)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekArray()  ==  JsonToken.START_BLOCK)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekArray()  ==  JsonToken.START_BLOCK)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_BLOCK)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	96	None	replace
568	[BUG]  [BUGGY]  if(popStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.START_BLOCK)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.START_BLOCK)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.START_BLOCK)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_BLOCK)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	96	None	replace
569	[BUG]  [BUGGY]  if(this.nextStack()!=  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(this.nextStack()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(this.nextStack()!=  JsonToken.NAME)  {	  if(this.peekStack()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
570	[BUG]  [BUGGY]  if(this.skipStack()!=  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(this.skipStack()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(this.skipStack()!=  JsonToken.NAME)  {	  if(this.peekStack()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
571	[BUG]  [BUGGY]  if(this.peekStack()!=  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]        IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(this.peekStack()!=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(this.peekStack()!=  JsonToken.VALUE_NUMBER_INT)  {	  if(this.peekStack()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	84	None	replace
572	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >=  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >=  0)  {	  if(peekStack()    ==    JsonToken.NAME    ||    stackSize    >    0)    {    	compilable	  [FE]  IllegalStateException  	72	2	replace
573	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >=  0)  {  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >=  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >=  0)  {	  if(peekStack()    ==    JsonToken.NAME    ||    stackSize    >    0)    {    	compilable	  [FE]  IllegalStateException  	72	2	replace
574	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.NAME  ||  stackSize  >  0)  {  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.NAME  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.NAME  ||  stackSize  >  0)  {	  if(peekStack()    ==    JsonToken.NAME    ||    stackSize    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
575	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NUMBER_INT  ||  nextToken()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NUMBER_INT  ||  nextToken()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.VALUE_NUMBER_INT  ||  nextToken()  ==  JsonToken.VALUE_NULL)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
576	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =   "null  [CE]  unclosed  string  literal  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =   "null  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =   "null	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    skipValue();    }    else    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  unclosed  string  literal	74	None	replace
577	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    skipValue();    }    else    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
578	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
579	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
580	[BUG]  [BUGGY]  if(nextToken()!=  JsonToken.NAME  ||  stackSize  >  0)  {  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()!=  JsonToken.NAME  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()!=  JsonToken.NAME  ||  stackSize  >  0)  {	  if(peekStack()!=    JsonToken.NAME    ||    stackSize    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
581	[BUG]  [BUGGY]  if(peekStack()  >=  JsonToken.NAME  ||  stackSize  >  0)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  >=  JsonToken.NAME  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  >=  JsonToken.NAME  ||  stackSize  >  0)  {	  if(peekStack()!=    JsonToken.NAME    ||    stackSize    >    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	100	None	replace
582	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.NAME)  {  If(peekStack()!=  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.NAME)  {  If(peekStack()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.NAME)  {  If(peekStack()!=  JsonToken.NAME)  {	  if(peekStack()!=    JsonToken.NAME)    {    If(peekStack()!=    JsonToken.NAME)    {    	non-compiled	[CE]  ';'  expected	5	None	replace
583	[BUG]  [BUGGY]  if(nextToken()!=  JsonToken.NAME)  {  If(peekStack()!=  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()!=  JsonToken.NAME)  {  If(peekStack()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()!=  JsonToken.NAME)  {  If(peekStack()!=  JsonToken.NAME)  {	  if(peekStack()!=    JsonToken.NAME)    {    If(peekStack()!=    JsonToken.NAME)    {    	non-compiled	[CE]  ';'  expected	5	None	replace
584	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	118	None	replace
585	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NAME  ||  next()  ==  JsonToken.FIELD_NAME)  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NAME  ||  next()  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.VALUE_NAME  ||  next()  ==  JsonToken.FIELD_NAME)  {	  if(next()    ==    JsonToken.VALUE_NAME)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
586	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER  ||  peekStack()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	49	None	replace
587	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER  ||  peekStack()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER  ||  peekStack()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER  ||  peekStack()  ==  JsonToken.END_ARRAY)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	49	None	replace
588	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  popStack()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  popStack()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  popStack()  ==  JsonToken.START_ARRAY)  {	  if(peekStack()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	33	None	replace
589	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peerStack()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peerStack()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peerStack()  ==  JsonToken.START_ARRAY)  {	  if(peekStack()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	33	None	replace
590	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  >=  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  >=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  stackSize  >=  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(stackSize    ==    JsonToken.VALUE_NUMBER_INT    ||    stackSize    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	63	None	replace
591	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stack()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stack()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.NAME  ||  stack()  ==  JsonToken.START_OBJECT)  {	  if(peekStack()    ==    JsonToken.START_OBJECT    ||    stack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
592	[BUG]  [BUGGY]  if(popStack()  ==  JsonToken.START_OBJECT  ||  stack()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()  ==  JsonToken.START_OBJECT  ||  stack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()  ==  JsonToken.START_OBJECT  ||  stack()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.START_OBJECT    ||    stack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	119	None	replace
593	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  stackSize()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  stackSize()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  stackSize()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.START_OBJECT    ||    stack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	119	None	replace
594	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  0)  {  if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  1)  {  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  0)  {  if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  1)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=    JsonToken.NAME    &&    stackSize    >    0)    {    if(peekStack()!=  JsonToken.NAME  &&  stackSize  >  1)  {	  	non-compiled	[CE]  ';'  expected	101	None	add
595	[BUG]  [BUGGY]  if(popStack()  >=  JsonToken.NAME)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()  >=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()  >=  JsonToken.NAME)  {	  if(popStack()!=    JsonToken.NAME)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	87	None	replace
596	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.VALUE_NUMBER)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.VALUE_NUMBER)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.VALUE_NUMBER)  {	  if(stackSize    ==    JsonToken.VALUE_NUMBER)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	109	None	replace
597	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.FIELD_NAME  ||  peekStack()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.FIELD_NAME  ||  peekStack()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.FIELD_NAME  ||  peekStack()  ==  JsonToken.END_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	82	None	replace
598	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.FIELD_NAME)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.FIELD_NAME)  {	  if(peek()    ==    JsonToken.FIELD_NAME    ||    peek()    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	89	None	replace
599	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	20	None	replace
600	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.END_OBJECT  ||  nextName()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.END_OBJECT  ||  nextName()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.END_OBJECT  ||  nextName()  ==  JsonToken.NAME)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
601	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextName()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextName()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.VALUE_NAME  ||  nextName()  ==  JsonToken.START_OBJECT)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
602	[BUG]  [BUGGY]  if(nextToken()!=  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()!=  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()!=  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.NAME)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
603	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =   "null ";  }  [CE]  cannot  find  symbol  Feature  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =   "null ";  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =   "null ";  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    for(int    i    =    0;    i    <    count;    ++i)    {    pathNames[i]    =       "null   ";    }    	non-compiled	[CE]  cannot  find  symbol  Feature	104	None	replace
604	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
605	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalArgumentException( " ");  }	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
606	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    skipValue()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	22	None	replace
607	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  skipValue()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  skipValue()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  skipValue()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    skipValue()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	22	None	replace
608	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.FIELD_NAME)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.FIELD_NAME)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    skipValue()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	22	None	replace
609	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.END_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    skipValue()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	22	None	replace
610	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.END_ARRAY)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    skipValue()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	22	None	replace
611	[BUG]  [BUGGY]  if(jsonToken()!=  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(jsonToken()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(jsonToken()!=  JsonToken.NAME)  {	  if(nextToken()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
612	[BUG]  [BUGGY]  if(firstToken()!=  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(firstToken()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(firstToken()!=  JsonToken.NAME)  {	  if(nextToken()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
613	[BUG]  [BUGGY]  if(popStack()  ==  JsonToken.FIELD_NAME)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()  ==  JsonToken.FIELD_NAME)  {	  if(popStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	94	None	replace
614	[BUG]  [BUGGY]  if(popStack()  ==  JsonToken.VALUE_NULL  ||  popStack()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()  ==  JsonToken.VALUE_NULL  ||  popStack()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()  ==  JsonToken.VALUE_NULL  ||  popStack()  ==  JsonToken.START_OBJECT)  {	  if(popStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	94	None	replace
615	[BUG]  [BUGGY]  if(popStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  popStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  popStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  popStack()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(popStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	94	None	replace
616	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.VALUE_NULL)  {	  if(peek()    ==    JsonToken.VALUE_NULL    ||    peek()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	13	None	replace
617	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.VALUE_NAME)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.VALUE_NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.VALUE_NAME)  {	  if(peek()    ==    JsonToken.VALUE_NULL    ||    peek()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	13	None	replace
618	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  peekStack()  ==  JsonToken.SAME)  {  [CE]  cannot  find  symbol  SAME  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  peekStack()  ==  JsonToken.SAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.NAME  ||  peekStack()  ==  JsonToken.SAME)  {	  if(peekStack()    ==    JsonToken.NAME)    {    if(peekStack()    ==    JsonToken.SAME)    {    	non-compiled	[CE]  cannot  find  symbol  SAME	70	None	replace
619	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(peekStack()    ==    JsonToken.NAME)    {    if(peekStack()    ==    JsonToken.SAME)    {    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
620	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.FIELD_NAME  ||  nextToken()!=  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.FIELD_NAME  ||  nextToken()!=  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.FIELD_NAME  ||  nextToken()!=  JsonToken.END_OBJECT)  {	  if(nextToken()    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
621	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  1)  {  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  1)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=    JsonToken.NAME    ||    stackSize    >    0)    {    if(peekStack()!=  JsonToken.NAME  ||  stackSize  >  1)  {	  	non-compiled	[CE]  ';'  expected	99	None	add
622	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(peekStack()  ==  JsonToken.END_OBJECT)  {	  if(peekStack()    ==    JsonToken.VALUE_NUMBER)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	57	2	replace
623	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.END_OBJECT)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.END_OBJECT)  {	  if(peekStack()    ==    JsonToken.VALUE_NUMBER)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	57	2	replace
624	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
625	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
626	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
627	[BUG]  [BUGGY]  if(next()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.FUNCTION)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.FUNCTION)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.FUNCTION)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
628	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  throw  new  IllegalStateException( " ");  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
629	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(stackSize  >  0)  {	  if(peekStack()!=    JsonToken.NAME)    {    if(peekStack()    >>    JsonToken.NAME)    {    	compilable	  [FE]  IllegalStateException  	4	2	replace
630	[BUG]  [BUGGY]  if(stackSize  >  0)  {  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  >  0)  {	  if(peekStack()!=    JsonToken.NAME)    {    if(peekStack()    >>    JsonToken.NAME)    {    	compilable	  [FE]  IllegalStateException  	4	2	replace
631	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	78	None	replace
632	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  throw  new  IllegalStateException( " ");  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
633	[BUG]  [BUGGY]  if(next()!=  JsonToken.NAME  ||  nextName()!=  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()!=  JsonToken.NAME  ||  nextName()!=  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()!=  JsonToken.NAME  ||  nextName()!=  JsonToken.START_ARRAY)  {	  if(next()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
634	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	9	None	replace
635	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.VALUE_NUMBER)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.VALUE_NUMBER)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  peek()  ==  JsonToken.VALUE_NUMBER)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	9	None	replace
636	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	9	None	replace
637	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.FIELD_NAME  ||  stackSize  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.FIELD_NAME  ||  stackSize  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.FIELD_NAME  ||  stackSize  ==  JsonToken.VALUE_NULL)  {	  if(stackSize    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	45	None	replace
638	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER  ||  peekStack()  ==  JsonToken.VALUE_NUMBER)  {  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER  ||  peekStack()  ==  JsonToken.VALUE_NUMBER)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER  ||  peekStack()  ==  JsonToken.VALUE_NUMBER)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	49	None	replace
639	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_EMBEDDED)  {  [CE]  cannot  find  symbol  VALUE_EMBEDDED  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_EMBEDDED)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_EMBEDDED)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED	49	None	replace
640	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_ARRAY  ||  peek()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_ARRAY  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_ARRAY  ||  peek()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_ARRAY  ||  peek()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peek()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	24	None	replace
641	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_EMBEDDED)  {  [CE]  cannot  find  symbol  VALUE_EMBEDDED  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_EMBEDDED)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_EMBEDDED)  {	  if(stackSize    ==    JsonToken.VALUE_NUMBER)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED	109	None	replace
642	[BUG]  [BUGGY]  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  +  1];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  +  1];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  +  1];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  }	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
643	[BUG]  [BUGGY]  JsonTreeReader.this.skipEnd();  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  JsonTreeReader.this.skipEnd();  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	JsonTreeReader.this.skipEnd();	  JsonTreeReader.this.skipValue();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
644	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.VALUE_NULL  ||  stackSize  >  0)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.VALUE_NULL  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=  JsonToken.VALUE_NULL  ||  stackSize  >  0)  {	  if(peekStack()!=    JsonToken.NAME    ||    stackSize    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	100	None	replace
645	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_EMBEDDED_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_EMBEDDED_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_EMBEDDED_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	21	None	replace
646	[BUG]  [BUGGY]  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[  [CE]  ']'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  i  <  count;  ++i)  {  result[	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    for(int    i    =    0;    i    <    count;    ++i)    {    result[    	non-compiled	[CE]  ']'  expected	53	None	replace
647	[BUG]  [BUGGY]  if(nextName()  ==  null)  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  [CE]  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName()  ==  null)  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName()  ==  null)  {  if(stack.length()  >  0)  {  int[]  result  =  new  int[stack.length()  ];  System.arraycopy(stack,  0,  pathNames,  0,  stack.length);  for(int  i  =  0;	  if(stack.length()    >    0)    {    int[]    result    =    new    int[stack.length()    ];    System.arraycopy(stack,    0,    pathNames,    0,    stack.length);    for(int    i    =    0;    i    <    count;    ++i)    {    result[    	non-compiled	[CE]  	53	None	replace
648	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null  [CE]  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  	107	None	replace
649	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.END_ARRAY)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
650	[BUG]  [BUGGY]  if(jsonToken.nextToken()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  jsonToken  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(jsonToken.nextToken()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(jsonToken.nextToken()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.NAME)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  jsonToken	91	None	replace
651	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.FUNCTION)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.FUNCTION)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.FUNCTION)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	12	None	replace
652	[BUG]  [BUGGY]  if(popStack()  ==  JsonToken.VALUE_NULL  ||  stackSize  >  0)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()  ==  JsonToken.VALUE_NULL  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()  ==  JsonToken.VALUE_NULL  ||  stackSize  >  0)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    stackSize    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	93	None	replace
653	[BUG]  [BUGGY]  if(stackStack()  ==  JsonToken.VALUE_NULL  ||  stackSize  >  0)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackStack()  ==  JsonToken.VALUE_NULL  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackStack()  ==  JsonToken.VALUE_NULL  ||  stackSize  >  0)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    stackSize    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
654	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_BLOCK  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_BLOCK  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_BLOCK  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_BLOCK  ||  peekStack()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_BLOCK)    {    	non-compiled	[CE]  cannot  find  symbol  START_BLOCK	96	None	replace
655	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  +  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  +  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  +  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    count);    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
656	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELDS))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELDS))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELDS))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  count);  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    count);    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
657	[BUG]  [BUGGY]  if(popStack()!=  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()!=  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()!=  JsonToken.START_OBJECT)  {	  if(popStack()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	87	None	replace
658	[BUG]  [BUGGY]  if(popStack()!=  JsonToken.START_OBJECT  ||  popStack()!=  JsonToken.NAME)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()!=  JsonToken.START_OBJECT  ||  popStack()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()!=  JsonToken.START_OBJECT  ||  popStack()!=  JsonToken.NAME)  {	  if(popStack()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	87	None	replace
659	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	add	if(popStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {	  if(popStack()!=    JsonToken.NAME)    {    	compilable	  [FE]  IllegalStateException  	87	2	replace
660	[BUG]  [BUGGY]  if(popStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()!=  JsonToken.NAME  ||  stackSize  >  0)  {	  if(popStack()!=    JsonToken.NAME)    {    	compilable	  [FE]  IllegalStateException  	87	2	replace
661	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize  >=  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize  >=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize  >=  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	111	None	replace
662	[BUG]  [BUGGY]  if(stackSize!=  JsonToken.VALUE_NULL  ||  stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize!=  JsonToken.VALUE_NULL  ||  stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize!=  JsonToken.VALUE_NULL  ||  stackSize  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	111	None	replace
663	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.NAME  &&  stackSize  >  0)  {  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.NAME  &&  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.NAME  &&  stackSize  >  0)  {	  if(peekStack()!=    JsonToken.NAME    &&    stackSize    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
664	[BUG]  [BUGGY]  if(jsonToken  ==  JsonToken.NAME  &&  stackSize  >  0)  {  [CE]  cannot  find  symbol  jsonToken  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(jsonToken  ==  JsonToken.NAME  &&  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(jsonToken  ==  JsonToken.NAME  &&  stackSize  >  0)  {	  if(peekStack()!=    JsonToken.NAME    &&    stackSize    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  jsonToken	102	None	replace
665	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.START_NULL)  {  [CE]  cannot  find  symbol  START_ARRAY  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.START_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.START_NULL)  {	  if(peek()    ==    JsonToken.VALUE_NULL    ||    peekStack()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	113	None	replace
666	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.FIELD_NAME)  {  [CE]  cannot  find  symbol  START_ARRAY  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_ARRAY  ||  peekStack()  ==  JsonToken.FIELD_NAME)  {	  if(peek()    ==    JsonToken.VALUE_NULL    ||    peekStack()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	113	None	replace
667	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.VALUE_NUMBER)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.VALUE_NUMBER)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.VALUE_NUMBER)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    peekStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	92	None	replace
668	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER  ||  peekStack()  ==  JsonToken.VALUE_NUMBER)  {  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER  ||  peekStack()  ==  JsonToken.VALUE_NUMBER)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER  ||  peekStack()  ==  JsonToken.VALUE_NUMBER)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    peekStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	92	None	replace
669	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =   "null ";  }  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =   "null ";  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =   "null ";  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    for(int    i    =    0;    i    <    count;    ++i)    {    pathNames[i]    =       "null   ";    }    	non-compiled	[CE]  not  a  statement	104	None	replace
670	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NULL  ||  nextName()  ==  JsonToken.FUNCTION)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NULL  ||  nextName()  ==  JsonToken.FUNCTION)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.VALUE_NULL  ||  nextName()  ==  JsonToken.FUNCTION)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
671	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()!=  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()!=  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()!=  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.VALUE_NULL    ||    peekStack()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	114	None	replace
672	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_CLOSED  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_CLOSED  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_CLOSED  ||  peekStack()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_CLOSED  ||  peekStack()  ==  JsonToken.START_OBJECT)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.START_CLOSED)    {    	non-compiled	[CE]  cannot  find  symbol  START_CLOSED	68	None	replace
673	[BUG]  [BUGGY]  if(stackSize  >  0)  {  If(peekStack()  ==  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  >  0)  {  If(peekStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  >  0)  {  If(peekStack()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.NAME)    {    If(peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
674	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.SCRIPT)  {  [CE]  cannot  find  symbol  SCRIPT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.SCRIPT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.SCRIPT)  {	  if(peekStack()    ==    JsonToken.NAME)    {    If(peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  SCRIPT	39	None	replace
675	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peekStack()  ==  JsonToken.END_ARRAY)  {	  if(peek()    ==    JsonToken.VALUE_NULL    ||    peekStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	112	None	replace
676	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.STRING)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.STRING)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.STRING)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.STRING)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	11	None	replace
677	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize  ==  JsonToken.VALUE_NUMBER)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize  ==  JsonToken.VALUE_NUMBER)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize  ==  JsonToken.VALUE_NUMBER)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	46	None	replace
678	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    skipValue();    }    else    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  	74	None	replace
679	[BUG]  [BUGGY]  if(peekStack()!=  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]        IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()!=  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()!=  JsonToken.START_OBJECT  ||  peekStack()!=  JsonToken.START_ARRAY)  {	  if(peekStack()!=    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	98	None	replace
680	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  next()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  next()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.START_OBJECT  ||  next()  ==  JsonToken.NAME)  {	  if(next()    ==    JsonToken.NAME    ||    next()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
681	[BUG]  [BUGGY]  if(next()  ==  JsonToken.START_OBJECT  ||  next()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.START_OBJECT  ||  next()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.START_OBJECT  ||  next()  ==  JsonToken.END_ARRAY)  {	  if(next()    ==    JsonToken.NAME    ||    next()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
682	[BUG]  [BUGGY]  if(nextName()  ==  JsonToken.NAME  ||  next()  ==  JsonToken.START_OBJECT)  {  [CE]  incomparable  types:  String  and  JsonToken  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName()  ==  JsonToken.NAME  ||  next()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName()  ==  JsonToken.NAME  ||  next()  ==  JsonToken.START_OBJECT)  {	  if(next()    ==    JsonToken.NAME    ||    next()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  incomparable  types:  String  and  JsonToken	66	None	replace
683	[BUG]  [BUGGY]  if(nextDoc()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextDoc()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextDoc()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.NAME)    {    if(peekStack()    ==    JsonToken.SAME)    {    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
684	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.NAME)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.NAME)    {    if(peekStack()    ==    JsonToken.SAME)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	70	None	replace
685	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.SYNTHETIC)  {  [CE]  cannot  find  symbol  SYNTHETIC  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.SYNTHETIC)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.SYNTHETIC)  {	  if(peekStack()    ==    JsonToken.NAME)    {    if(peekStack()    ==    JsonToken.SAME)    {    	non-compiled	[CE]  cannot  find  symbol  SYNTHETIC	70	None	replace
686	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NULL  ||  nextName()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NULL  ||  nextName()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.VALUE_NULL  ||  nextName()  ==  JsonToken.END_ARRAY)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
687	[BUG]  [BUGGY]  if(jsonToken  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  jsonToken  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(jsonToken  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(jsonToken  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.END_ARRAY)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  jsonToken	65	None	replace
688	[BUG]  [BUGGY]  if(getCurrentToken()  ==  JsonToken.VALUE_NAME)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(getCurrentToken()  ==  JsonToken.VALUE_NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(getCurrentToken()  ==  JsonToken.VALUE_NAME)  {	  if(nextToken()    ==    JsonToken.VALUE_NAME)    {    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
689	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES)||!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES)||!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES)||!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
690	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  throw  new  IllegalStateException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  throw  new  IllegalStateException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  throw  new  IllegalStateException( " ");  }	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
691	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_EMBEDDED)  {  [CE]  cannot  find  symbol  VALUE_EMBEDDED  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_EMBEDDED)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_EMBEDDED)  {	  if(peekStack()    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED	58	None	replace
692	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_EMBEDDED_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_EMBEDDED_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_EMBEDDED_OBJECT)  {	  if(peekStack()    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	58	None	replace
693	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  nu  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  nu  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  nu	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    skipValue();    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  ';'  expected	75	None	replace
694	[BUG]  [BUGGY]  if(stackStack()  ==  JsonToken.VALUE_NULL  ||  skipStack()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackStack()  ==  JsonToken.VALUE_NULL  ||  skipStack()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackStack()  ==  JsonToken.VALUE_NULL  ||  skipStack()  ==  JsonToken.VALUE_NULL)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    skipStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
695	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  skipStack()  ==  JsonToken.VALUE_NUMBER)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  skipStack()  ==  JsonToken.VALUE_NUMBER)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NULL  ||  skipStack()  ==  JsonToken.VALUE_NUMBER)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    skipStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	95	None	replace
696	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NULL  ||  skipStack()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NULL  ||  skipStack()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.VALUE_NULL  ||  skipStack()  ==  JsonToken.VALUE_NULL)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    skipStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
697	[BUG]  [BUGGY]  if(popStack()  ==  JsonToken.VALUE_NULL  ||  skipStack()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()  ==  JsonToken.VALUE_NULL  ||  skipStack()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()  ==  JsonToken.VALUE_NULL  ||  skipStack()  ==  JsonToken.VALUE_NULL)  {	  if(peekStack()    ==    JsonToken.VALUE_NULL    ||    skipStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	95	None	replace
698	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NULL  ||  next()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NULL  ||  next()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.VALUE_NULL  ||  next()  ==  JsonToken.START_ARRAY)  {	  if(next()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
699	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  [CE]  'else'  without  'if'  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  skipValue();  }  else  {  popStack();  pathNames[stackSize  -  1]  =	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    skipValue();    }    else    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  'else'  without  'if'	77	None	replace
700	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.END_ARRAY)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	36	None	replace
701	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peekStack()  ==  JsonToken.VALUE_STRING)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peekStack()  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peekStack()  ==  JsonToken.VALUE_STRING)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	97	None	replace
702	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.START_LAST)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.START_LAST)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.START_OBJECT  ||  stackSize  ==  JsonToken.START_LAST)  {	  if(stackSize    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	48	None	replace
703	[BUG]  [BUGGY]  if(stack.length()  ==  0)  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack.length()  ==  0)  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack.length()  ==  0)  {  popStack();  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  if(stack.length()    >    0)    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
704	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  if(stack.length()    >    0)    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
705	[BUG]  [BUGGY]  if(t.nextToken()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  t  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(t.nextToken()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(t.nextToken()  ==  JsonToken.NAME)  {	  if(jsonToken.nextToken()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  t	29	None	replace
706	[BUG]  [BUGGY]  if(popStack()  ==  JsonToken.VALUE_NULL  ||  popStack()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()  ==  JsonToken.VALUE_NULL  ||  popStack()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()  ==  JsonToken.VALUE_NULL  ||  popStack()  ==  JsonToken.VALUE_NULL)  {	  if(popStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	94	None	replace
707	[BUG]  [BUGGY]  if(popStack()  ==  JsonToken.VALUE_NULL  ||  popStack()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(popStack()  ==  JsonToken.VALUE_NULL  ||  popStack()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(popStack()  ==  JsonToken.VALUE_NULL  ||  popStack()  ==  JsonToken.END_ARRAY)  {	  if(popStack()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	94	None	replace
708	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  +  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  +  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  +  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
709	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  [CE]  ')'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String[]  pathNames  =  new  String[size()  ];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    	non-compiled	[CE]  ')'  expected	108	None	replace
710	[BUG]  [BUGGY]  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =  null   ";  }  [CE]  unclosed  string  literal  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =  null   ";  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =  null   ";  }	  if(stack.length()    >    0)    {    popStack();    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  unclosed  string  literal	56	None	replace
711	[BUG]  [BUGGY]  if(skipStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(skipStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(skipStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    skipValue()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
712	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    skipValue()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	22	None	replace
713	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NUMBER_INT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    skipValue()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	22	None	replace
714	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.START_OBJECT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.START_OBJECT  ||  skipValue()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    skipValue()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	22	None	replace
715	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_EMBEDDED_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_EMBEDDED_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_EMBEDDED_OBJECT)  {	  if(stackSize    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	44	None	replace
716	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peekStack()  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peekStack()  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  peekStack()  ==  JsonToken.END_ARRAY)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	81	None	replace
717	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  stack()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  stack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NULL  ||  stack()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.START_OBJECT    ||    stack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	119	None	replace
718	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.STRING  ||  stack()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.STRING  ||  stack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.STRING  ||  stack()  ==  JsonToken.NAME)  {	  if(peekStack()    ==    JsonToken.START_OBJECT    ||    stack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
719	[BUG]  [BUGGY]  if(nextToken()!=  JsonToken.NAME  ||  nextToken()!=  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()!=  JsonToken.NAME  ||  nextToken()!=  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()!=  JsonToken.NAME  ||  nextToken()!=  JsonToken.START_OBJECT)  {	  if(nextToken()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
720	[BUG]  [BUGGY]  if(nextToken()!=  JsonToken.NAME  ||  nextToken()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()!=  JsonToken.NAME  ||  nextToken()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()!=  JsonToken.NAME  ||  nextToken()  ==  JsonToken.START_OBJECT)  {	  if(nextToken()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
721	[BUG]  [BUGGY]  if(stackToken()!=  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackToken()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackToken()!=  JsonToken.NAME)  {	  if(nextToken()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
722	[BUG]  [BUGGY]  if(nextToken()!=  JsonToken.NAME  ||  nextToken()!=  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()!=  JsonToken.NAME  ||  nextToken()!=  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()!=  JsonToken.NAME  ||  nextToken()!=  JsonToken.END_ARRAY)  {	  if(nextToken()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
723	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.STRING)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.STRING)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.STRING)  {	  if(peekStack()    ==    JsonToken.START_OBJECT    ||    peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	118	None	replace
724	[BUG]  [BUGGY]  if(skipStack()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(skipStack()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(skipStack()  ==  JsonToken.NAME)  {	  if(peekStack()!=    JsonToken.NAME)    {    if(peekStack()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
725	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize  ==  JsonToken.FIELD_NAME)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize  ==  JsonToken.FIELD_NAME)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	64	None	replace
726	[BUG]  [BUGGY]  if(peekStack()  >  JsonToken.NAME)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]          IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  >  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  >  JsonToken.NAME)  {	  if(peekStack()    >=    JsonToken.NAME)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	85	None	replace
727	[BUG]  [BUGGY]  if(peekStack()  >=  JsonToken.NAME  ||  stackSize  >  JsonToken.VALUE_NULL)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  >=  JsonToken.NAME  ||  stackSize  >  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  >=  JsonToken.NAME  ||  stackSize  >  JsonToken.VALUE_NULL)  {	  if(peekStack()    >=    JsonToken.NAME)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	85	None	replace
728	[BUG]  [BUGGY]  if(peekStack()  >=  JsonToken.NAME  ||  stackSize  >  JsonToken.START_ARRAY)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  >=  JsonToken.NAME  ||  stackSize  >  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  >=  JsonToken.NAME  ||  stackSize  >  JsonToken.START_ARRAY)  {	  if(peekStack()    >=    JsonToken.NAME)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	85	None	replace
729	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.NAME)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_FLOAT    ||    peek()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	7	None	replace
730	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize  ==  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize  ==  JsonToken.END_ARRAY)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	110	None	replace
731	[BUG]  [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize!=  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize!=  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize  ==  JsonToken.VALUE_NULL  ||  stackSize!=  JsonToken.START_ARRAY)  {	  if(stackSize    ==    JsonToken.VALUE_NULL    ||    stackSize    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	110	None	replace
732	[BUG]  [BUGGY]  if(isNamedValue()  ||  nextName()!=  JsonToken.NAME)  {  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isNamedValue()  ||  nextName()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isNamedValue()  ||  nextName()!=  JsonToken.NAME)  {	  if(nextName()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
733	[BUG]  [BUGGY]  if(nextName()!=  JsonToken.NAME  &&  nextName().equals(JsonToken.NAME))  {  [CE]  incomparable  types:  String  and  JsonToken  [FE]            IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName()!=  JsonToken.NAME  &&  nextName().equals(JsonToken.NAME))  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName()!=  JsonToken.NAME  &&  nextName().equals(JsonToken.NAME))  {	  if(nextName()!=    JsonToken.NAME)    {    	non-compiled	[CE]  incomparable  types:  String  and  JsonToken	60	None	replace
734	[BUG]  [BUGGY]  if(stackSize!=  JsonToken.NAME)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]              IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stackSize!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stackSize!=  JsonToken.NAME)  {	  if(nextName()!=    JsonToken.NAME)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	60	None	replace
735	[BUG]  [BUGGY]  if(jsonToken.nextName()!=  JsonToken.NAME)  {  [CE]  cannot  find  symbol  jsonToken  [FE]                IllegalStateException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(jsonToken.nextName()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(jsonToken.nextName()!=  JsonToken.NAME)  {	  if(nextName()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  jsonToken	60	None	replace
736	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	79	None	replace
737	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	79	None	replace
738	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES)||!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES)||!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES)||!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
739	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  throw  new  IllegalArgumentException( " ");  }	  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
740	[BUG]  [BUGGY]  if(peekStack()  >  JsonToken.NAME  ||  stackSize  >  0)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  >  JsonToken.NAME  ||  stackSize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  >  JsonToken.NAME  ||  stackSize  >  0)  {	  if(peekStack()    ==    JsonToken.NAME    ||    stackSize    >    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	72	None	replace
741	[BUG]  [BUGGY]  if(stack.length()  ==  0)  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(stack.length()  ==  0)  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(stack.length()  ==  0)  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  if(stack.length()    >    0)    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
742	[BUG]  [BUGGY]  if(pathIndices!=  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(pathIndices!=  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(pathIndices!=  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  if(stack.length()    >    0)    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
743	[BUG]  [BUGGY]  if(pathIndices  ==  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(pathIndices  ==  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(pathIndices  ==  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  if(stack.length()    >    0)    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
744	[BUG]  [BUGGY]  if(pathIndices!=  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  }  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(pathIndices!=  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(pathIndices!=  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  }	  if(stack.length()    >    0)    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
745	[BUG]  [BUGGY]  if(pathIndices  ==  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  }  [CE]  illegal  start  of  type  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(pathIndices  ==  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(pathIndices  ==  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  }	  if(stack.length()    >    0)    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
746	[BUG]  [BUGGY]  if(pathIndices!=  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(pathIndices!=  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(pathIndices!=  null)  {  if(stack.length()  >  0)  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  if(stack.length()    >    0)    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
747	[BUG]  [BUGGY]  if(nextName()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.NAME)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	15	None	replace
748	[BUG]  [BUGGY]  if(jsonToken  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  jsonToken  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(jsonToken  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(jsonToken  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.START_OBJECT)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  jsonToken	15	None	replace
749	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.NAME)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.NAME)  {	  if(peek()    ==    JsonToken.VALUE_NULL    ||    peek()    ==    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	13	None	replace
750	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.VALUE_NUMBER_INT  ||  peek()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	20	None	replace
751	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.VALUE_NULL)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peek()    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	20	None	replace
752	[BUG]  [BUGGY]  if(nextName()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.START_ARRAY)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	117	None	replace
753	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextName()  ==  JsonToken.START_ARRAY)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
754	[BUG]  [BUGGY]  if(next()  ==  JsonToken.START_ARRAY  ||  nextName()  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(next()  ==  JsonToken.START_ARRAY  ||  nextName()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(next()  ==  JsonToken.START_ARRAY  ||  nextName()  ==  JsonToken.START_OBJECT)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
755	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.START_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.START_ARRAY)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
756	[BUG]  [BUGGY]  if(this.peekStack()!=  JsonToken.START_OBJECT  ||  this.peekStack()!=  JsonToken.NAME)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(this.peekStack()!=  JsonToken.START_OBJECT  ||  this.peekStack()!=  JsonToken.NAME)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(this.peekStack()!=  JsonToken.START_OBJECT  ||  this.peekStack()!=  JsonToken.NAME)  {	  if(this.peekStack()!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	84	None	replace
757	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()!=  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()!=  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.START_OBJECT  ||  nextToken()!=  JsonToken.END_ARRAY)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()!=    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
758	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.NAME  ||  nextToken()!=  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.NAME  ||  nextToken()!=  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.NAME  ||  nextToken()!=  JsonToken.END_ARRAY)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()!=    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
759	[BUG]  [BUGGY]  if(nextToken()!=  JsonToken.START_OBJECT  ||  nextToken()!=  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()!=  JsonToken.START_OBJECT  ||  nextToken()!=  JsonToken.END_ARRAY)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()!=  JsonToken.START_OBJECT  ||  nextToken()!=  JsonToken.END_ARRAY)  {	  if(nextToken()    ==    JsonToken.NAME    ||    nextToken()!=    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
760	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELDS))  {  String[]  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }  [CE]  cannot  find  symbol  Feature  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELDS))  {  String[]  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELDS))  {  String[]  pathNames  =  new  String[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    for(int    i    =    0;    i    <    count;    ++i)    {    pathNames[i]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	105	None	replace
761	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  string[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }  [CE]  not  a  statement  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  string[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  string[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[i]  =  null;  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    for(int    i    =    0;    i    <    count;    ++i)    {    pathNames[i]    =    null;    }    	non-compiled	[CE]  not  a  statement	105	None	replace
762	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[  [CE]  not  a  statement  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames[	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    for(int    i    =    0;    i    <    count;    ++i)    {    pathNames[i]    =    null;    }    	non-compiled	[CE]  not  a  statement	105	None	replace
763	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames  [CE]  not  a  statement  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  pathNames[size()  ];  for(int  i  =  0;  i  <  count;  ++i)  {  pathNames	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    String[]    pathNames    =    new    String[size()    ];    for(int    i    =    0;    i    <    count;    ++i)    {    pathNames[i]    =    null;    }    	non-compiled	[CE]  not  a  statement	105	None	replace
764	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()  ==  JsonToken.NAME  ||  stackSsize  >  0)  {  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.NAME  ||  stackSize  >  0)  {  if(peekStack()  ==  JsonToken.NAME  ||  stackSsize  >  0)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()    ==    JsonToken.NAME    ||    stackSize    >    0)    {    if(peekStack()  ==  JsonToken.NAME  ||  stackSsize  >  0)  {	  	non-compiled	[CE]  ';'  expected	71	None	add
765	[BUG]  [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peekStack()  ==  JsonToken.START_OBJECT  ||  peekStack()  ==  JsonToken.VALUE_NUMBER)  {	  if(peek()    ==    JsonToken.VALUE_NUMBER_INT    ||    peekStack()    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	80	None	replace
766	[BUG]  [BUGGY]  if(nextName()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextName()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextName()  ==  JsonToken.VALUE_NULL)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	19	None	replace
767	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(nextToken()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(nextToken()  ==  JsonToken.NAME  ||  nextName()  ==  JsonToken.VALUE_NULL)  {	  if(next()    ==    JsonToken.NAME    ||    nextName()    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
768	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.END_OBJECT)  {  [BUGGY]      nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();  pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	257	257	2	replace	if(peek()  ==  JsonToken.VALUE_NULL  ||  peek()  ==  JsonToken.END_OBJECT)  {	  if(peek()    ==    JsonToken.START_OBJECT    ||    peek()    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	25	None	replace
