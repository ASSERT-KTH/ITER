bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Object  o  =  stackSize();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stackSize();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stackSize();	  Object    o    =    stack();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  stack[stackSize];	  Object    o    =    stack();    	compilable	  [FE]  AssertionError  	26	2	replace
3	[BUG]  [BUGGY]  Object  o  =  stack[stackSize];  [FE]  AssertionError  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize];	  Object    o    =    stack();    	compilable	  [FE]  AssertionError  	26	2	replace
4	[BUG]  [BUGGY]  Object  o  =  stack.get(stackSize);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.get(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.get(stackSize);	  Object    o    =    stack();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
5	[BUG]  [BUGGY]  Object  o  =  stack(stackSize);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack(stackSize);	  Object    o    =    stack();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
6	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  /  2];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  stack[stackSize  /  2];	  Object    o    =    stack[stackSize    -    2];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	2	replace
7	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  /  2];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  /  2];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  /  2];	  Object    o    =    stack[stackSize    -    2];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	2	replace
8	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  3];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  stack[stackSize  -  3];	  Object    o    =    stack[stackSize    -    2];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	2	replace
9	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  3];  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  3];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  3];	  Object    o    =    stack[stackSize    -    2];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	2	replace
10	[BUG]  [BUGGY]  Object  o  =  peek(stack,  stack.length);  [CE]  no  suitable  method  found  for  peek(Object[],int)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  stack.length);	  Object    o    =    peek(stack,    count);    	non-compiled	[CE]  no  suitable  method  found  for  peek(Object[],int)	2	None	replace
11	[BUG]  [BUGGY]  Object  o  =  peek(stack,  buffer);  [CE]  buffer  has  private  access  in  JsonReader  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  buffer);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  buffer);	  Object    o    =    peek(stack,    count);    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	2	None	replace
12	[BUG]  [BUGGY]  Object  o  =  peek(stack,  null);  [CE]  no  suitable  method  found  for  peek(Object[],<null>)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  null);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  null);	  Object    o    =    peek(stack,    count);    	non-compiled	[CE]  no  suitable  method  found  for  peek(Object[],<null>)	2	None	replace
13	[BUG]  [BUGGY]  Object  o  =  iterator.reachableIterator();  [CE]  cannot  find  symbol  iterator  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  iterator.reachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  iterator.reachableIterator();	  Object    o    =    iterator.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  iterator	20	None	replace
14	[BUG]  [BUGGY]  Object  o  =  iterator.getIterator();  [CE]  cannot  find  symbol  iterator  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  iterator.getIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  iterator.getIterator();	  Object    o    =    iterator.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  iterator	20	None	replace
15	[BUG]  [BUGGY]  Object  o  =  reader.unreachableIterator();  [CE]  cannot  find  symbol  reader  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  reader.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  reader.unreachableIterator();	  Object    o    =    iterator.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  reader	20	None	replace
16	[BUG]  [BUGGY]  Object  o  =  iterator.create();  [CE]  cannot  find  symbol  iterator  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  iterator.create();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  iterator.create();	  Object    o    =    iterator.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  iterator	20	None	replace
17	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().jsonToString(stackSize);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().jsonToString(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().jsonToString(stackSize);	  Object    o    =    getCurrentToken().jsonToString();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
18	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().cloneTree().jsonToString();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().cloneTree().jsonToString();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().cloneTree().jsonToString();	  Object    o    =    getCurrentToken().jsonToString();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
19	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().jsonToString(stackSize,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().jsonToString(stackSize,  JsonToken.END_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().jsonToString(stackSize,  JsonToken.END_OBJECT);	  Object    o    =    getCurrentToken().jsonToString();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
20	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().jsonToString(stackSize,  JsonPrimitive.UNREADABLE_READER);  [CE]  cannot  find  symbol  UNREADABLE_READER  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().jsonToString(stackSize,  JsonPrimitive.UNREADABLE_READER);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().jsonToString(stackSize,  JsonPrimitive.UNREADABLE_READER);	  Object    o    =    getCurrentToken().jsonToString();    	non-compiled	[CE]  cannot  find  symbol  UNREADABLE_READER	75	None	replace
21	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stack,  stack.length);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stack,  stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stack,  stack.length);	  Object    o    =    peekAndFix(stack.length);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
22	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stack.length,  stackSize);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stack.length,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stack.length,  stackSize);	  Object    o    =    peekAndFix(stack.length);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
23	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stack,  stackSize.length);  [CE]  int  cannot  be  dereferenced  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stack,  stackSize.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stack,  stackSize.length);	  Object    o    =    peekAndFix(stack.length);    	non-compiled	[CE]  int  cannot  be  dereferenced	58	None	replace
24	[BUG]  [BUGGY]  Object  o  =  peek(stack.length);  [CE]  no  suitable  method  found  for  peek(int)  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack.length);	  Object    o    =    peekAndFix(stack.length);    	non-compiled	[CE]  no  suitable  method  found  for  peek(int)	58	None	replace
25	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stack.length,  stack.length);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stack.length,  stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stack.length,  stack.length);	  Object    o    =    peekAndFix(stack.length);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
26	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stack.length  -  1);  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stack.length  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stack.length  -  1);	  Object    o    =    peekAndFix(stack.length);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
27	[BUG]  [BUGGY]  Object  o  =  stack.get(stackSize).next();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.get(stackSize).next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.get(stackSize).next();	  Object    o    =    stack.next();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
28	[BUG]  [BUGGY]  Object  o  =  stack.get(stackSize  -  1);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.get(stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.get(stackSize  -  1);	  Object    o    =    stack.next();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
29	[BUG]  [BUGGY]  Object  o  =  stack.getValue();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.getValue();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.getValue();	  Object    o    =    stack.next();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
30	[BUG]  [BUGGY]  Object  o  =  stack.get(stackSize  +  1);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.get(stackSize  +  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.get(stackSize  +  1);	  Object    o    =    stack.next();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
31	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  isObject  [FE]        StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Object    o    =    peek();    Object    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol  isObject	31	None	replace
32	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  }  [CE]  cannot  find  symbol  isObject  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  }	  Object    o    =    peek();    Object    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol  isObject	31	None	replace
33	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  }  else  {  return  JsonToken.END_OBJECT;  }  [CE]  cannot  find  symbol  isObject  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  }  else  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  }  else  {  return  JsonToken.END_OBJECT;  }	  Object    o    =    peek();    Object    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol  isObject	31	None	replace
34	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  isObject  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  }  else  {  throw  new  IllegalStateException( " ");  }	  Object    o    =    peek();    Object    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol  isObject	31	None	replace
35	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  }  else  {  throw  new  JsonTokenException( " ");  }  [CE]  cannot  find  symbol  isObject  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  }  else  {  throw  new  JsonTokenException( " ");  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  }  else  {  throw  new  JsonTokenException( " ");  }	  Object    o    =    peek();    Object    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol  isObject	31	None	replace
36	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  <identifier>  expected  [FE]        StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
37	[BUG]  [BUGGY]  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  <identifier>  expected  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
38	[BUG]  [BUGGY]  if(stack.length()  ==  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  <identifier>  expected  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack.length()  ==  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack.length()  ==  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
39	[BUG]  [BUGGY]  if(stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  J  [CE]  <identifier>  expected  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  J  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  J	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
40	[BUG]  [BUGGY]  if(stack.length()  ==  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.N  [CE]  <identifier>  expected  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack.length()  ==  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.N  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack.length()  ==  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.N	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
41	[BUG]  [BUGGY]  null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  ';'  expected  [FE]                  StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  ';'  expected	108	None	replace
42	[BUG]  [BUGGY]  if(stack.length  >  stackSize)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  <identifier>  expected  [FE]                    StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack.length  >  stackSize)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack.length  >  stackSize)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
43	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  <identifier>  expected  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
44	[BUG]  [BUGGY]  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  <identifier>  expected  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
45	[BUG]  [BUGGY]  if(stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  J  [CE]  <identifier>  expected  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  J  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  J	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
46	[BUG]  [BUGGY]  if(stack.length()  ==  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  <identifier>  expected  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack.length()  ==  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack.length()  ==  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
47	[BUG]  [BUGGY]  null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  ';'  expected  [FE]                  StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  ';'  expected	109	None	replace
48	[BUG]  [BUGGY]  if(stack.length  >  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  <identifier>  expected  [FE]                    StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack.length  >  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack.length  >  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
49	[BUG]  [BUGGY]  if(stack.length()  ==  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.N  [CE]  <identifier>  expected  [FE]                      StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack.length()  ==  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.N  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack.length()  ==  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.N	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
50	[BUG]  [BUGGY]  Object  o  =  peekAndFixOutOfBounds(stackSize);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixOutOfBounds(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixOutOfBounds(stackSize);	  Object    o    =    peekAndFixOutOfBounds();    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
51	[BUG]  [BUGGY]  Object  o  =  peekAndFixOutOfBounds(stack);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixOutOfBounds(stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixOutOfBounds(stack);	  Object    o    =    peekAndFixOutOfBounds();    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
52	[BUG]  [BUGGY]  Object  o  =  peekAndFixOutOfBounds(stack,  stackSize);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixOutOfBounds(stack,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixOutOfBounds(stack,  stackSize);	  Object    o    =    peekAndFixOutOfBounds();    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
53	[BUG]  [BUGGY]  Object  o  =  peekAndFixOutOfBounds(stack.length);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixOutOfBounds(stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixOutOfBounds(stack.length);	  Object    o    =    peekAndFixOutOfBounds();    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
54	[BUG]  [BUGGY]  Object  o  =  peekAndFixOutOfBounds(stackSize,  stackSize);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixOutOfBounds(stackSize,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixOutOfBounds(stackSize,  stackSize);	  Object    o    =    peekAndFixOutOfBounds();    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
55	[BUG]  [BUGGY]  Object  o  =  peekToken(this);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(this);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(this);	  Object    o    =    peekToken(null);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
56	[BUG]  [BUGGY]  Object  o  =  peekToken(null,  JsonPrimitive.UNREADABLE_READER);  [CE]  cannot  find  symbol  UNREADABLE_READER  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(null,  JsonPrimitive.UNREADABLE_READER);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(null,  JsonPrimitive.UNREADABLE_READER);	  Object    o    =    peekToken(null);    	non-compiled	[CE]  cannot  find  symbol  UNREADABLE_READER	98	None	replace
57	[BUG]  [BUGGY]  Object  o  =  peekToken(null,  null);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(null,  null);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(null,  null);	  Object    o    =    peekToken(null);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
58	[BUG]  [BUGGY]  Object  o  =  peekToken(null,  JsonPrimitive);  [CE]  cannot  find  symbol  JsonPrimitive  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(null,  JsonPrimitive);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(null,  JsonPrimitive);	  Object    o    =    peekToken(null);    	non-compiled	[CE]  cannot  find  symbol  JsonPrimitive	98	None	replace
59	[BUG]  [BUGGY]  Object  o  =  peekToken(jsonToken);  [CE]  cannot  find  symbol  jsonToken  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(jsonToken);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(jsonToken);	  Object    o    =    peekToken(null);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	98	None	replace
60	[BUG]  [BUGGY]  Object  o  =  null;  Object  o  =  null;  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]    AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  null;  Object  o  =  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    null;    Object  o  =  null;	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	14	None	add
61	[BUG]  [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    null;    Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  	non-compiled	[CE]  ';'  expected	14	None	add
62	[BUG]  [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  return  JsonToken.NAME;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  return  JsonToken.NAME;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    null;    Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  return  JsonToken.NAME;	  	non-compiled	[CE]  ';'  expected	14	None	add
63	[BUG]  [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  return  JsonToken.UNREADABLE_READER;  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  return  JsonToken.UNREADABLE_READER;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    null;    Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  return  JsonToken.UNREADABLE_READER;	  	non-compiled	[CE]  ';'  expected	14	None	add
64	[BUG]  [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    null;    Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER	  	non-compiled	[CE]  ';'  expected	14	None	add
65	[BUG]  [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.FUNCTION;  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.FUNCTION;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    null;    Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.FUNCTION;  }	  	non-compiled	[CE]  ';'  expected	14	None	add
66	[BUG]  [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    null;    Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE	  	non-compiled	[CE]  ';'  expected	14	None	add
67	[BUG]  [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive);  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    null;    Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive);	  	non-compiled	[CE]  ';'  expected	14	None	add
68	[BUG]  [BUGGY]  Object  o  =  peek(stack,  offset,  stack.length);  [CE]  cannot  find  symbol  offset  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  offset,  stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  offset,  stack.length);	  Object    o    =    peek(stackSize,    stack.length);    	non-compiled	[CE]  cannot  find  symbol  offset	5	None	replace
69	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  offset,  stack.length);  [CE]  cannot  find  symbol  offset  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize,  offset,  stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  offset,  stack.length);	  Object    o    =    peek(stackSize,    stack.length);    	non-compiled	[CE]  cannot  find  symbol  offset	5	None	replace
70	[BUG]  [BUGGY]  Object  o  =  peek(stack,  count,  stack.length);  [CE]  cannot  find  symbol  count  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  count,  stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  count,  stack.length);	  Object    o    =    peek(stackSize,    stack.length);    	non-compiled	[CE]  cannot  find  symbol  count	5	None	replace
71	[BUG]  [BUGGY]  Object  o  =  peek(stack,  offset,  stackSize);  [CE]  cannot  find  symbol  offset  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  offset,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  offset,  stackSize);	  Object    o    =    peek(stackSize,    stack.length);    	non-compiled	[CE]  cannot  find  symbol  offset	5	None	replace
72	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  stack.length,  count);  [CE]  cannot  find  symbol  count  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize,  stack.length,  count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  stack.length,  count);	  Object    o    =    peek(stackSize,    stack.length);    	non-compiled	[CE]  cannot  find  symbol  count	5	None	replace
73	[BUG]  [BUGGY]  Object  o  =  peek(stack,  offset  +  stackSize,  stack.length);  [CE]  cannot  find  symbol  offset  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  offset  +  stackSize,  stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  offset  +  stackSize,  stack.length);	  Object    o    =    peek(stackSize,    stack.length);    	non-compiled	[CE]  cannot  find  symbol  offset	5	None	replace
74	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[stackSize  -  2];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  this.stack[stackSize  -  2];	  Object    o    =    this.stack[stackSize    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	2	replace
75	[BUG]  [BUGGY]  Object  o  =  this.stack[stackSize  -  2];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[stackSize  -  2];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.stack[stackSize  -  2];	  Object    o    =    this.stack[stackSize    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	2	replace
76	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[stackSize  -  3];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  this.stack[stackSize  -  3];	  Object    o    =    this.stack[stackSize    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	2	replace
77	[BUG]  [BUGGY]  Object  o  =  this.stack[stackSize  -  3];  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[stackSize  -  3];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.stack[stackSize  -  3];	  Object    o    =    this.stack[stackSize    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	2	replace
78	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[this.stackSize  -  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  this.stack[this.stackSize  -  1];	  Object    o    =    this.stack[stackSize    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	2	replace
79	[BUG]  [BUGGY]  Object  o  =  this.stack[this.stackSize  -  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[this.stackSize  -  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.stack[this.stackSize  -  1];	  Object    o    =    this.stack[stackSize    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	2	replace
80	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[stackSize  -  4];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  this.stack[stackSize  -  4];	  Object    o    =    this.stack[stackSize    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	2	replace
81	[BUG]  [BUGGY]  Object  o  =  this.stack[stackSize  -  4];  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[stackSize  -  4];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.stack[stackSize  -  4];	  Object    o    =    this.stack[stackSize    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	2	replace
82	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?(JsonPrimitive)stack[stackSize  -  1]  :  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?(JsonPrimitive)stack[stackSize  -  1]  :  null;	  Object    o    =    stack[stackSize    -    1];    	compilable	  [FE]  AssertionError  	61	2	replace
83	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?(JsonPrimitive)stack[stackSize  -  1]  :  null;  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?(JsonPrimitive)stack[stackSize  -  1]  :  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?(JsonPrimitive)stack[stackSize  -  1]  :  null;	  Object    o    =    stack[stackSize    -    1];    	compilable	  [FE]  AssertionError  	61	2	replace
84	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[stackSize  -  1]):  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[stackSize  -  1]):  null;	  Object    o    =    stack[stackSize    -    1];    	compilable	  [FE]  AssertionError  	61	2	replace
85	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[stackSize  -  1]):  null;  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[stackSize  -  1]):  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[stackSize  -  1]):  null;	  Object    o    =    stack[stackSize    -    1];    	compilable	  [FE]  AssertionError  	61	2	replace
86	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?(JsonPrimitive)stack[stackSize  -  2]  :  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?(JsonPrimitive)stack[stackSize  -  2]  :  null;	  Object    o    =    stack[stackSize    -    1];    	compilable	  [FE]  AssertionError  	61	2	replace
87	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?(JsonPrimitive)stack[stackSize  -  2]  :  null;  [FE]  AssertionError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?(JsonPrimitive)stack[stackSize  -  2]  :  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?(JsonPrimitive)stack[stackSize  -  2]  :  null;	  Object    o    =    stack[stackSize    -    1];    	compilable	  [FE]  AssertionError  	61	2	replace
88	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[stackSize  -  2]):  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[stackSize  -  2]):  null;	  Object    o    =    stack[stackSize    -    1];    	compilable	  [FE]  AssertionError  	61	2	replace
89	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[stackSize  -  2]):  null;  [FE]  AssertionError  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[stackSize  -  2]):  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[stackSize  -  2]):  null;	  Object    o    =    stack[stackSize    -    1];    	compilable	  [FE]  AssertionError  	61	2	replace
90	[BUG]  [BUGGY]  Object  o  =  peekAndThrow(System.identityHashCode(this,  stackSize));  [CE]  method  identityHashCode  in  class  System  cannot  be  applied  to  given  types;  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndThrow(System.identityHashCode(this,  stackSize));  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndThrow(System.identityHashCode(this,  stackSize));	  Object    o    =    peekAndThrow(System.identityHashCode(this));    	non-compiled	[CE]  method  identityHashCode  in  class  System  cannot  be  applied  to  given  types;	95	None	replace
91	[BUG]  [BUGGY]  Object  o  =  peekAndThrow(System.identityHashCode(stack));  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndThrow(System.identityHashCode(stack));  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndThrow(System.identityHashCode(stack));	  Object    o    =    peekAndThrow(System.identityHashCode(this));    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
92	[BUG]  [BUGGY]  Object  o  =  peekAndThrow(System.identityHashCode(this),  stackSize);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndThrow(System.identityHashCode(this),  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndThrow(System.identityHashCode(this),  stackSize);	  Object    o    =    peekAndThrow(System.identityHashCode(this));    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
93	[BUG]  [BUGGY]  Object  o  =  peekAndThrow(System.identityHashCode(stackSize));  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndThrow(System.identityHashCode(stackSize));  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndThrow(System.identityHashCode(stackSize));	  Object    o    =    peekAndThrow(System.identityHashCode(this));    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
94	[BUG]  [BUGGY]  Object  o  =  peekAndThrow(System.identityHashCode(this,  stack));  [CE]  method  identityHashCode  in  class  System  cannot  be  applied  to  given  types;  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndThrow(System.identityHashCode(this,  stack));  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndThrow(System.identityHashCode(this,  stack));	  Object    o    =    peekAndThrow(System.identityHashCode(this));    	non-compiled	[CE]  method  identityHashCode  in  class  System  cannot  be  applied  to  given  types;	95	None	replace
95	[BUG]  [BUGGY]  Object  o  =  peekAndThrow(System.identityHashCode(null));  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndThrow(System.identityHashCode(null));  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndThrow(System.identityHashCode(null));	  Object    o    =    peekAndThrow(System.identityHashCode(this));    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
96	[BUG]  [BUGGY]  Object  o  =  this.pushStackTree();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.pushStackTree();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.pushStackTree();	  Object    o    =    pushStackTree();    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
97	[BUG]  [BUGGY]  Object  o  =  getStackTree();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getStackTree();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getStackTree();	  Object    o    =    pushStackTree();    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
98	[BUG]  [BUGGY]  Object  o  =  this.stackTree();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stackTree();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.stackTree();	  Object    o    =    pushStackTree();    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
99	[BUG]  [BUGGY]  Object  o  =  pushStackTree(stackSize);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushStackTree(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStackTree(stackSize);	  Object    o    =    pushStackTree();    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
100	[BUG]  [BUGGY]  Object  o  =  stackTree();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stackTree();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stackTree();	  Object    o    =    pushStackTree();    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
101	[BUG]  [BUGGY]  Object  o  =  peekStackTree();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekStackTree();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekStackTree();	  Object    o    =    pushStackTree();    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
102	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.VALUE_EMBEDDED,  stackSize);  [CE]  cannot  find  symbol  VALUE_EMBEDDED  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.VALUE_EMBEDDED,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.VALUE_EMBEDDED,  stackSize);	  Object    o    =    peekToken(JsonToken.VALUE_EMBEDDED);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED	134	None	replace
103	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.VALUE_NULL);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.VALUE_NULL);	  Object    o    =    peekToken(JsonToken.VALUE_EMBEDDED);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	134	None	replace
104	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.VALUE_CLOSED);  [CE]  cannot  find  symbol  VALUE_CLOSED  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.VALUE_CLOSED);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.VALUE_CLOSED);	  Object    o    =    peekToken(JsonToken.VALUE_EMBEDDED);    	non-compiled	[CE]  cannot  find  symbol  VALUE_CLOSED	134	None	replace
105	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.VALUE_STRING);  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.VALUE_STRING);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.VALUE_STRING);	  Object    o    =    peekToken(JsonToken.VALUE_EMBEDDED);    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	134	None	replace
106	[BUG]  [BUGGY]  Object  o  =  stack[this.next()  +  1];  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[this.next()  +  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[this.next()  +  1];	  Object    o    =    stack[this.next();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
107	[BUG]  [BUGGY]  Object  o  =  stack[this.next()  -  1];  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[this.next()  -  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[this.next()  -  1];	  Object    o    =    stack[this.next();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
108	[BUG]  [BUGGY]  Object  o  =  stack[this.next()  ];  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[this.next()  ];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[this.next()  ];	  Object    o    =    stack[this.next();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
109	[BUG]  [BUGGY]  Object  o  =  stack[this.nextToken();  [CE]  ']'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[this.nextToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[this.nextToken();	  Object    o    =    stack[this.next();    	non-compiled	[CE]  ']'  expected	107	None	replace
110	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  +  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  stack[stackSize  +  1];	  Object    o    =    stack[this.next();    	compilable	  [FE]  AssertionError  	107	2	replace
111	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  +  1];  [FE]  AssertionError  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  +  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  +  1];	  Object    o    =    stack[this.next();    	compilable	  [FE]  AssertionError  	107	2	replace
112	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  1);  [CE]  no  suitable  method  found  for  peek(int,int)  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize,  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  1);	  Object    o    =    peek(stackSize,    offset);    	non-compiled	[CE]  no  suitable  method  found  for  peek(int,int)	7	None	replace
113	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  2);  [CE]  no  suitable  method  found  for  peek(int,int)  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize,  2);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  2);	  Object    o    =    peek(stackSize,    offset);    	non-compiled	[CE]  no  suitable  method  found  for  peek(int,int)	7	None	replace
114	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  stackLength);  [CE]  cannot  find  symbol  stackLength  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize,  stackLength);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  stackLength);	  Object    o    =    peek(stackSize,    offset);    	non-compiled	[CE]  cannot  find  symbol  stackLength	7	None	replace
115	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  4);  [CE]  no  suitable  method  found  for  peek(int,int)  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize,  4);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  4);	  Object    o    =    peek(stackSize,    offset);    	non-compiled	[CE]  no  suitable  method  found  for  peek(int,int)	7	None	replace
116	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackTrace(stackSize);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackTrace(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackTrace(stackSize);	  Object    o    =    peekAndClearStackTrace();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
117	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackTrace(stack);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackTrace(stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackTrace(stack);	  Object    o    =    peekAndClearStackTrace();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
118	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackTrace(stack,  stackSize);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackTrace(stack,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackTrace(stack,  stackSize);	  Object    o    =    peekAndClearStackTrace();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
119	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackTrace(stack.length);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackTrace(stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackTrace(stack.length);	  Object    o    =    peekAndClearStackTrace();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
120	[BUG]  [BUGGY]  Object  o  =  peekAndClearStandardTrace();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStandardTrace();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStandardTrace();	  Object    o    =    peekAndClearStackTrace();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
121	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackTrace(false);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackTrace(false);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackTrace(false);	  Object    o    =    peekAndClearStackTrace();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
122	[BUG]  [BUGGY]  Object  o  =  handleNonArray(stackSize,  count);  [CE]  cannot  find  symbol  count  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  handleNonArray(stackSize,  count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  handleNonArray(stackSize,  count);	  Object    o    =    handleNonArray(stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	29	None	replace
123	[BUG]  [BUGGY]  Object  o  =  handleNonArray(stackSize  +  1);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  handleNonArray(stackSize  +  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  handleNonArray(stackSize  +  1);	  Object    o    =    handleNonArray(stackSize);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
124	[BUG]  [BUGGY]  Object  o  =  handleNonArray(stackSize  -  1);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  handleNonArray(stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  handleNonArray(stackSize  -  1);	  Object    o    =    handleNonArray(stackSize);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
125	[BUG]  [BUGGY]  Object  o  =  handleNonArray(stackSize,  stackSize);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  handleNonArray(stackSize,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  handleNonArray(stackSize,  stackSize);	  Object    o    =    handleNonArray(stackSize);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
126	[BUG]  [BUGGY]  Object  o  =  handleNonArray(stackSize,  offset);  [CE]  cannot  find  symbol  offset  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  handleNonArray(stackSize,  offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  handleNonArray(stackSize,  offset);	  Object    o    =    handleNonArray(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	29	None	replace
127	[BUG]  [BUGGY]  Object  o  =  handleNonArray(stack,  stackSize);  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  handleNonArray(stack,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  handleNonArray(stack,  stackSize);	  Object    o    =    handleNonArray(stackSize);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
128	[BUG]  [BUGGY]  Object  o  =  handleNonArray(offset,  stackSize);  [CE]  cannot  find  symbol  offset  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  handleNonArray(offset,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  handleNonArray(offset,  stackSize);	  Object    o    =    handleNonArray(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	29	None	replace
129	[BUG]  [BUGGY]  Object  o  =  currentToken();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  currentToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  currentToken();	  Object    o    =    startCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
130	[BUG]  [BUGGY]  Object  o  =  this.startCurrentToken();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.startCurrentToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.startCurrentToken();	  Object    o    =    startCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
131	[BUG]  [BUGGY]  Object  o  =  startCurrentToken().getValue();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  startCurrentToken().getValue();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  startCurrentToken().getValue();	  Object    o    =    startCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
132	[BUG]  [BUGGY]  Object  o  =  endCurrentToken();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  endCurrentToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  endCurrentToken();	  Object    o    =    startCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
133	[BUG]  [BUGGY]  Object  o  =  startCurrentToken().next();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  startCurrentToken().next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  startCurrentToken().next();	  Object    o    =    startCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
134	[BUG]  [BUGGY]  Object  o  =  peekAndClearStack(stackSize,  stackSize);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStack(stackSize,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStack(stackSize,  stackSize);	  Object    o    =    peekAndClearStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
135	[BUG]  [BUGGY]  Object  o  =  peekAndClearStack(stackSize  +  1);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStack(stackSize  +  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStack(stackSize  +  1);	  Object    o    =    peekAndClearStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
136	[BUG]  [BUGGY]  Object  o  =  peekAndClearStack(stackSize,  count);  [CE]  cannot  find  symbol  count  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStack(stackSize,  count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStack(stackSize,  count);	  Object    o    =    peekAndClearStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	68	None	replace
137	[BUG]  [BUGGY]  Object  o  =  peekAndClearStack(stackSize  -  1);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStack(stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStack(stackSize  -  1);	  Object    o    =    peekAndClearStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
138	[BUG]  [BUGGY]  Object  o  =  peekAndClearStack(stack,  stackSize);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStack(stack,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStack(stack,  stackSize);	  Object    o    =    peekAndClearStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
139	[BUG]  [BUGGY]  Object  o  =  peekAndClearStack(stackSize  +  2);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStack(stackSize  +  2);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStack(stackSize  +  2);	  Object    o    =    peekAndClearStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
140	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.NAME,  JsonPrimitive.class);  [CE]  cannot  find  symbol  NAME  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonPrimitive.NAME,  JsonPrimitive.class);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.NAME,  JsonPrimitive.class);	  Object    o    =    peekToken(JsonPrimitive.class);    	non-compiled	[CE]  cannot  find  symbol  NAME	96	None	replace
141	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.UNREADABLE_READER,  JsonPrimitive.class);  [CE]  cannot  find  symbol  UNREADABLE_READER  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonPrimitive.UNREADABLE_READER,  JsonPrimitive.class);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.UNREADABLE_READER,  JsonPrimitive.class);	  Object    o    =    peekToken(JsonPrimitive.class);    	non-compiled	[CE]  cannot  find  symbol  UNREADABLE_READER	96	None	replace
142	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.class,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonPrimitive.class,  JsonToken.END_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.class,  JsonToken.END_OBJECT);	  Object    o    =    peekToken(JsonPrimitive.class);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
143	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.NULL_OBJECT,  JsonPrimitive.class);  [CE]  cannot  find  symbol  NULL_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonPrimitive.NULL_OBJECT,  JsonPrimitive.class);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.NULL_OBJECT,  JsonPrimitive.class);	  Object    o    =    peekToken(JsonPrimitive.class);    	non-compiled	[CE]  cannot  find  symbol  NULL_OBJECT	96	None	replace
144	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.EMPTY_OBJECT,  JsonPrimitive.class);  [CE]  cannot  find  symbol  EMPTY_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonPrimitive.EMPTY_OBJECT,  JsonPrimitive.class);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.EMPTY_OBJECT,  JsonPrimitive.class);	  Object    o    =    peekToken(JsonPrimitive.class);    	non-compiled	[CE]  cannot  find  symbol  EMPTY_OBJECT	96	None	replace
145	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.None.class);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonPrimitive.None.class);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.None.class);	  Object    o    =    peekToken(JsonPrimitive.class);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
146	[BUG]  [BUGGY]  Object  o  =  peekAndClear(stackSize);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClear(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClear(stackSize);	  Object    o    =    peekAndClear();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
147	[BUG]  [BUGGY]  Object  o  =  peekAndClear(stack);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClear(stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClear(stack);	  Object    o    =    peekAndClear();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
148	[BUG]  [BUGGY]  Object  o  =  peekAndClear(stack,  stackSize);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClear(stack,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClear(stack,  stackSize);	  Object    o    =    peekAndClear();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
149	[BUG]  [BUGGY]  Object  o  =  peekAndClearBound();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearBound();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearBound();	  Object    o    =    peekAndClear();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
150	[BUG]  [BUGGY]  Object  o  =  peekAsObject(stackSize);  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAsObject(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAsObject(stackSize);	  Object    o    =    peekAsObject();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
151	[BUG]  [BUGGY]  Object  o  =  peekAsArray();  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAsArray();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAsArray();	  Object    o    =    peekAsObject();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
152	[BUG]  [BUGGY]  Object  o  =  peek(stack,  bufferSize);  [CE]  cannot  find  symbol  bufferSize  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  bufferSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  bufferSize);	  Object    o    =    peek(stack,    offset);    	non-compiled	[CE]  cannot  find  symbol  bufferSize	1	None	replace
153	[BUG]  [BUGGY]  Object  o  =  peek(stack,  1);  [CE]  no  suitable  method  found  for  peek(Object[],int)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  1);	  Object    o    =    peek(stack,    offset);    	non-compiled	[CE]  no  suitable  method  found  for  peek(Object[],int)	1	None	replace
154	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stackSize,  stackSize);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stackSize,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stackSize,  stackSize);	  Object    o    =    peekAndFix(stackSize);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
155	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stackSize  +  1);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stackSize  +  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stackSize  +  1);	  Object    o    =    peekAndFix(stackSize);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
156	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stackSize,  count);  [CE]  cannot  find  symbol  count  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stackSize,  count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stackSize,  count);	  Object    o    =    peekAndFix(stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	42	None	replace
157	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stack,  offset);  [CE]  cannot  find  symbol  offset  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stack,  offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stack,  offset);	  Object    o    =    peekAndFix(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	42	None	replace
158	[BUG]  [BUGGY]  Object  o  =  peek(null,  stack);  [CE]  no  suitable  method  found  for  peek(<null>,Object[])  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(null,  stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(null,  stack);	  Object    o    =    peek(null);    	non-compiled	[CE]  no  suitable  method  found  for  peek(<null>,Object[])	83	None	replace
159	[BUG]  [BUGGY]  Object  o  =  peek(null,  null);  [CE]  no  suitable  method  found  for  peek(<null>,<null>)  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(null,  null);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(null,  null);	  Object    o    =    peek(null);    	non-compiled	[CE]  no  suitable  method  found  for  peek(<null>,<null>)	83	None	replace
160	[BUG]  [BUGGY]  Object  o  =  peek(null,  pathIndices);  [CE]  no  suitable  method  found  for  peek(<null>,int[])  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(null,  pathIndices);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(null,  pathIndices);	  Object    o    =    peek(null);    	non-compiled	[CE]  no  suitable  method  found  for  peek(<null>,int[])	83	None	replace
161	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  null);  [CE]  no  suitable  method  found  for  peek(int,<null>)  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize,  null);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  null);	  Object    o    =    peek(null);    	non-compiled	[CE]  no  suitable  method  found  for  peek(int,<null>)	83	None	replace
162	[BUG]  [BUGGY]  Object  o  =  peek(null,  STACKSIZE);  [CE]  cannot  find  symbol  STACKSIZE  [FE]                  StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(null,  STACKSIZE);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(null,  STACKSIZE);	  Object    o    =    peek(null);    	non-compiled	[CE]  cannot  find  symbol  STACKSIZE	83	None	replace
163	[BUG]  [BUGGY]  Object  o  =  pushStackToSubtract(stackSize,  stackSize);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushStackToSubtract(stackSize,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStackToSubtract(stackSize,  stackSize);	  Object    o    =    pushStackToSubtract(stackSize);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
164	[BUG]  [BUGGY]  Object  o  =  pushStackToSubtract(stack.length);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushStackToSubtract(stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStackToSubtract(stack.length);	  Object    o    =    pushStackToSubtract(stackSize);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
165	[BUG]  [BUGGY]  Object  o  =  pushStackToSubtract(stackSize  +  1);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushStackToSubtract(stackSize  +  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStackToSubtract(stackSize  +  1);	  Object    o    =    pushStackToSubtract(stackSize);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
166	[BUG]  [BUGGY]  Object  o  =  pushStackToSubtract(stack,  offset);  [CE]  cannot  find  symbol  offset  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushStackToSubtract(stack,  offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStackToSubtract(stack,  offset);	  Object    o    =    pushStackToSubtract(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	116	None	replace
167	[BUG]  [BUGGY]  Object  o  =  pushStackToSubtract(stackSize,  count);  [CE]  cannot  find  symbol  count  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushStackToSubtract(stackSize,  count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStackToSubtract(stackSize,  count);	  Object    o    =    pushStackToSubtract(stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	116	None	replace
168	[BUG]  [BUGGY]  Object  o  =  pushStackToSubtract(stack,  stackSize);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushStackToSubtract(stack,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStackToSubtract(stack,  stackSize);	  Object    o    =    pushStackToSubtract(stackSize);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
169	[BUG]  [BUGGY]  Object  o  =  stackToSubtract(stackSize);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stackToSubtract(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stackToSubtract(stackSize);	  Object    o    =    pushStackToSubtract(stackSize);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
170	[BUG]  [BUGGY]  Object  o  =  peek(stack.length,  offset,  stackSize);  [CE]  cannot  find  symbol  offset  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack.length,  offset,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack.length,  offset,  stackSize);	  Object    o    =    peek(stack.length,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	6	None	replace
171	[BUG]  [BUGGY]  Object  o  =  peek(stack.length,  count,  stackSize);  [CE]  cannot  find  symbol  count  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack.length,  count,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack.length,  count,  stackSize);	  Object    o    =    peek(stack.length,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	6	None	replace
172	[BUG]  [BUGGY]  Object  o  =  peek(stack.length,  stackSize,  count);  [CE]  cannot  find  symbol  count  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack.length,  stackSize,  count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack.length,  stackSize,  count);	  Object    o    =    peek(stack.length,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	6	None	replace
173	[BUG]  [BUGGY]  Object  o  =  peek(stack.length,  stackOffset,  stackSize);  [CE]  cannot  find  symbol  stackOffset  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack.length,  stackOffset,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack.length,  stackOffset,  stackSize);	  Object    o    =    peek(stack.length,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  stackOffset	6	None	replace
174	[BUG]  [BUGGY]  Object  o  =  peek(stack.length,  stackSize,  offset);  [CE]  cannot  find  symbol  offset  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack.length,  stackSize,  offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack.length,  stackSize,  offset);	  Object    o    =    peek(stack.length,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	6	None	replace
175	[BUG]  [BUGGY]  Object  o  =  peek(stack,  0,  stackSize);  [CE]  no  suitable  method  found  for  peek(Object[],int,int)  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  0,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  0,  stackSize);	  Object    o    =    peek(stack.length,    stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(Object[],int,int)	6	None	replace
176	[BUG]  [BUGGY]  Object  o  =  this.buffer();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.buffer();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.buffer();	  Object    o    =    buffer();    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
177	[BUG]  [BUGGY]  Object  o  =  JsonPrimitive.buffer();  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  JsonPrimitive.buffer();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  JsonPrimitive.buffer();	  Object    o    =    buffer();    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
178	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  JsonToken.END_OBJECT;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  JsonToken.END_OBJECT;	  Object    o    =    buffer();    	compilable	  [FE]  AssertionError  	92	2	replace
179	[BUG]  [BUGGY]  Object  o  =  JsonToken.END_OBJECT;  [FE]  AssertionError  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  JsonToken.END_OBJECT;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  JsonToken.END_OBJECT;	  Object    o    =    buffer();    	compilable	  [FE]  AssertionError  	92	2	replace
180	[BUG]  [BUGGY]  Object  o  =  JsonPrimitive.buffer(stackSize);  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  JsonPrimitive.buffer(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  JsonPrimitive.buffer(stackSize);	  Object    o    =    buffer();    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
181	[BUG]  [BUGGY]  Integer  stack  =(Integer)stack.next();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(Integer)stack.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)stack.next();	  Integer    stack    =(Integer)iterator.next();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
182	[BUG]  [BUGGY]  Integer  stack  =(Integer)stackSize.next();  [CE]  int  cannot  be  dereferenced  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(Integer)stackSize.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)stackSize.next();	  Integer    stack    =(Integer)iterator.next();    	non-compiled	[CE]  int  cannot  be  dereferenced	45	None	replace
183	[BUG]  [BUGGY]  Integer  stack  =(Integer)this.pathIndices.next();  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(Integer)this.pathIndices.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)this.pathIndices.next();	  Integer    stack    =(Integer)iterator.next();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
184	[BUG]  [BUGGY]  Integer  stack  =(Integer)getIterator();  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(Integer)getIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)getIterator();	  Integer    stack    =(Integer)iterator.next();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
185	[BUG]  [BUGGY]  Integer  stack  =(Integer)this.pathNames.next();  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(Integer)this.pathNames.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)this.pathNames.next();	  Integer    stack    =(Integer)iterator.next();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
186	[BUG]  [BUGGY]  Integer  stack  =(Integer)this.stackSize;  [CE]  cannot  find  symbol  o  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(Integer)this.stackSize;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)this.stackSize;	  Integer    stack    =(Integer)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  o	45	None	replace
187	[BUG]  [BUGGY]  JsonToken  o  =  peek();  [CE]  inconvertible  types  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonToken  o  =  peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonToken  o  =  peek();	  Object    o    =    peek();    JsonToken    o    =    peek();    	non-compiled	[CE]  inconvertible  types	32	None	replace
188	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  JsonToken  o  =  peek();  }  [CE]  cannot  find  symbol  isObject  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  JsonToken  o  =  peek();  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  JsonToken  o  =  peek();  }	  Object    o    =    peek();    JsonToken    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol  isObject	32	None	replace
189	[BUG]  [BUGGY]  if(stackSize  >  stackSize)  {  Object  o  =  peek();  JsonToken  o  =  peek();  }  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stackSize  >  stackSize)  {  Object  o  =  peek();  JsonToken  o  =  peek();  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stackSize  >  stackSize)  {  Object  o  =  peek();  JsonToken  o  =  peek();  }	  Object    o    =    peek();    JsonToken    o    =    peek();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	32	None	replace
190	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  JsonToken  o  =  peek();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  isObject  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  JsonToken  o  =  peek();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  JsonToken  o  =  peek();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Object    o    =    peek();    JsonToken    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol  isObject	32	None	replace
191	[BUG]  [BUGGY]  if(stackSize  >  stackSize)  {  Object  o  =  peek();  JsonToken  o  =  peek();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                  StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stackSize  >  stackSize)  {  Object  o  =  peek();  JsonToken  o  =  peek();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stackSize  >  stackSize)  {  Object  o  =  peek();  JsonToken  o  =  peek();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Object    o    =    peek();    JsonToken    o    =    peek();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	32	None	replace
192	[BUG]  [BUGGY]  if(isPrimitive)  {  Object  o  =  peek();  JsonToken  o  =  peek();  }  [CE]  cannot  find  symbol  isPrimitive  [FE]                    StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isPrimitive)  {  Object  o  =  peek();  JsonToken  o  =  peek();  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isPrimitive)  {  Object  o  =  peek();  JsonToken  o  =  peek();  }	  Object    o    =    peek();    JsonToken    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol  isPrimitive	32	None	replace
193	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  JsonToken  o  =  peek();  }  else  {  return  JsonToken.END_OBJECT;  }  [CE]  cannot  find  symbol  isObject  [FE]                      StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  JsonToken  o  =  peek();  }  else  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  JsonToken  o  =  peek();  }  else  {  return  JsonToken.END_OBJECT;  }	  Object    o    =    peek();    JsonToken    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol  isObject	32	None	replace
194	[BUG]  [BUGGY]  JsonPrimitive  iterator  =(JsonPrimitive)iterator.next();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  iterator  =(JsonPrimitive)iterator.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  iterator  =(JsonPrimitive)iterator.next();	  JsonPrimitive    primitive    =(JsonPrimitive)iterator.next();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
195	[BUG]  [BUGGY]  JsonPrimitive  curr  =(JsonPrimitive)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  curr  =(JsonPrimitive)iterator.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  curr  =(JsonPrimitive)iterator.next();	  JsonPrimitive    primitive    =(JsonPrimitive)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	44	None	replace
196	[BUG]  [BUGGY]  JsonPrimitive  element  =(JsonPrimitive)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  element  =(JsonPrimitive)iterator.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  element  =(JsonPrimitive)iterator.next();	  JsonPrimitive    primitive    =(JsonPrimitive)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	44	None	replace
197	[BUG]  [BUGGY]  JsonPrimitive  o  =(JsonPrimitive)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  o  =(JsonPrimitive)iterator.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  o  =(JsonPrimitive)iterator.next();	  JsonPrimitive    primitive    =(JsonPrimitive)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	44	None	replace
198	[BUG]  [BUGGY]  JsonPrimitive  initial  =(JsonPrimitive)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  initial  =(JsonPrimitive)iterator.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  initial  =(JsonPrimitive)iterator.next();	  JsonPrimitive    primitive    =(JsonPrimitive)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	44	None	replace
199	[BUG]  [BUGGY]  JsonPrimitive  primitive  =(JsonPrimitive)iterator.getValue();  [CE]  cannot  find  symbol  iterator  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  primitive  =(JsonPrimitive)iterator.getValue();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  primitive  =(JsonPrimitive)iterator.getValue();	  JsonPrimitive    primitive    =(JsonPrimitive)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	44	None	replace
200	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  this;	  Object    o    =    null;    	compilable	  [FE]  AssertionError  	15	2	replace
201	[BUG]  [BUGGY]  Object  o  =  this;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this;	  Object    o    =    null;    	compilable	  [FE]  AssertionError  	15	2	replace
202	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  UNREADABLE_READER;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  UNREADABLE_READER;	  Object    o    =    null;    	compilable	  [FE]  AssertionError  	15	2	replace
203	[BUG]  [BUGGY]  Object  o  =  UNREADABLE_READER;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  UNREADABLE_READER;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  UNREADABLE_READER;	  Object    o    =    null;    	compilable	  [FE]  AssertionError  	15	2	replace
204	[BUG]  [BUGGY]  Object  o  =  JsonPrimitive.UNREADABLE_READER;  [CE]  cannot  find  symbol  UNREADABLE_READER  [FE]        AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  JsonPrimitive.UNREADABLE_READER;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  JsonPrimitive.UNREADABLE_READER;	  Object    o    =    null;    	non-compiled	[CE]  cannot  find  symbol  UNREADABLE_READER	15	None	replace
205	[BUG]  [BUGGY]  Object  o  =  new  JsonPrimitive();  [CE]  no  suitable  constructor  found  for  JsonPrimitive()  [FE]          AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  new  JsonPrimitive();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  new  JsonPrimitive();	  Object    o    =    null;    	non-compiled	[CE]  no  suitable  constructor  found  for  JsonPrimitive()	15	None	replace
206	[BUG]  [BUGGY]  Object  o  =  JsonPrimitive.NULL;  [CE]  cannot  find  symbol  NULL  [FE]            AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  JsonPrimitive.NULL;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  JsonPrimitive.NULL;	  Object    o    =    null;    	non-compiled	[CE]  cannot  find  symbol  NULL	15	None	replace
207	[BUG]  [BUGGY]  Object  o  =  getAndFixClose(stackSize);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndFixClose(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndFixClose(stackSize);	  Object    o    =    getAndFixStack();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
208	[BUG]  [BUGGY]  Object  o  =  getAndFixStack(stackSize);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndFixStack(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndFixStack(stackSize);	  Object    o    =    getAndFixStack();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
209	[BUG]  [BUGGY]  Object  o  =  getAndFixStack().get(stackSize);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndFixStack().get(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndFixStack().get(stackSize);	  Object    o    =    getAndFixStack();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
210	[BUG]  [BUGGY]  Object  o  =  getAndFix(stackSize);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndFix(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndFix(stackSize);	  Object    o    =    getAndFixStack();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
211	[BUG]  [BUGGY]  Object  o  =  getAndFixClose();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndFixClose();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndFixClose();	  Object    o    =    getAndFixStack();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
212	[BUG]  [BUGGY]  Object  o  =  getAndFixArray();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndFixArray();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndFixArray();	  Object    o    =    getAndFixStack();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
213	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  offset,  stackSize);  [CE]  cannot  find  symbol  offset  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize,  offset,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  offset,  stackSize);	  Object    o    =    peek(stackSize,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	136	None	replace
214	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  stackOffset,  stackSize);  [CE]  cannot  find  symbol  stackOffset  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize,  stackOffset,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  stackOffset,  stackSize);	  Object    o    =    peek(stackSize,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  stackOffset	136	None	replace
215	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  count,  stackSize);  [CE]  cannot  find  symbol  count  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize,  count,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  count,  stackSize);	  Object    o    =    peek(stackSize,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	136	None	replace
216	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  stackIndices);  [CE]  cannot  find  symbol  stackIndices  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize,  stackIndices);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  stackIndices);	  Object    o    =    peek(stackSize,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  stackIndices	136	None	replace
217	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  0,  stackSize);  [CE]  no  suitable  method  found  for  peek(int,int,int)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize,  0,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  0,  stackSize);	  Object    o    =    peek(stackSize,    stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(int,int,int)	136	None	replace
218	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }  [CE]  <identifier>  expected  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
219	[BUG]  [BUGGY]  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }  [CE]  <identifier>  expected  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
220	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER  [CE]  <identifier>  expected  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
221	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_REA  [CE]  <identifier>  expected  [FE]                  StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_REA  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_REA	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
222	[BUG]  [BUGGY]  null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }  [CE]  ';'  expected  [FE]                    StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  ';'  expected	110	None	replace
223	[BUG]  [BUGGY]  if(stack.length()  ==  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_REA  [CE]  <identifier>  expected  [FE]                      StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack.length()  ==  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_REA  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack.length()  ==  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_REA	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
224	[BUG]  [BUGGY]  Object  o  =  getIterator().unreachABLEPeek();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getIterator().unreachABLEPeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterator().unreachABLEPeek();	  Object    o    =    getIterator().unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
225	[BUG]  [BUGGY]  Object  o  =  getIterator().reachablePeek();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getIterator().reachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterator().reachablePeek();	  Object    o    =    getIterator().unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
226	[BUG]  [BUGGY]  Object  o  =  getIterator().peek();  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getIterator().peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterator().peek();	  Object    o    =    getIterator().unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
227	[BUG]  [BUGGY]  Object  o  =  getIterator().next();  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getIterator().next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterator().next();	  Object    o    =    getIterator().unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
228	[BUG]  [BUGGY]  Object  o  =  getIterator().unreachablePeek(stackSize);  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getIterator().unreachablePeek(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterator().unreachablePeek(stackSize);	  Object    o    =    getIterator().unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
229	[BUG]  [BUGGY]  Object  o  =  createCurrentToken(JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  createCurrentToken(JsonToken.END_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  createCurrentToken(JsonToken.END_OBJECT);	  Object    o    =    createCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
230	[BUG]  [BUGGY]  Object  o  =  createCurrentToken().getValue();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  createCurrentToken().getValue();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  createCurrentToken().getValue();	  Object    o    =    createCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
231	[BUG]  [BUGGY]  Object  o  =  get(stackSize  -  2);  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  get(stackSize  -  2);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  get(stackSize  -  2);	  Object    o    =    get(stackSize    -    1);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
232	[BUG]  [BUGGY]  Object  o  =  get(offset  -  1);  [CE]  cannot  find  symbol  offset  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  get(offset  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  get(offset  -  1);	  Object    o    =    get(stackSize    -    1);    	non-compiled	[CE]  cannot  find  symbol  offset	37	None	replace
233	[BUG]  [BUGGY]  Object  o  =  get(count  -  1);  [CE]  cannot  find  symbol  count  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  get(count  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  get(count  -  1);	  Object    o    =    get(stackSize    -    1);    	non-compiled	[CE]  cannot  find  symbol  count	37	None	replace
234	[BUG]  [BUGGY]  Object  o  =  find(stackSize  -  1);  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  find(stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  find(stackSize  -  1);	  Object    o    =    get(stackSize    -    1);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
235	[BUG]  [BUGGY]  Object  o  =  lookup(stackSize  -  1);  [CE]  cannot  find  symbol  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  lookup(stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  lookup(stackSize  -  1);	  Object    o    =    get(stackSize    -    1);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
236	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.END_OBJECT,  stackSize);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.END_OBJECT,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.END_OBJECT,  stackSize);	  Object    o    =    peekToken(JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
237	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.END_OBJECT,  stack);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.END_OBJECT,  stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.END_OBJECT,  stack);	  Object    o    =    peekToken(JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
238	[BUG]  [BUGGY]  Object  o  =  peek(JsonToken.END_OBJECT);  [CE]  no  suitable  method  found  for  peek(JsonToken)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(JsonToken.END_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(JsonToken.END_OBJECT);	  Object    o    =    peekToken(JsonToken.END_OBJECT);    	non-compiled	[CE]  no  suitable  method  found  for  peek(JsonToken)	9	None	replace
239	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.START_OBJECT,  stackSize);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.START_OBJECT,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.START_OBJECT,  stackSize);	  Object    o    =    peekToken(JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	9	None	replace
240	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.END_OBJECT,  STACKSize);  [CE]  cannot  find  symbol  STACKSize  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.END_OBJECT,  STACKSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.END_OBJECT,  STACKSize);	  Object    o    =    peekToken(JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  STACKSize	9	None	replace
241	[BUG]  [BUGGY]  Object  o  =  iterator.reachablePeek();  [CE]  cannot  find  symbol  iterator  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  iterator.reachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  iterator.reachablePeek();	  Object    o    =    iterator.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol  iterator	13	None	replace
242	[BUG]  [BUGGY]  Object  o  =  reader.unreachablePeek();  [CE]  cannot  find  symbol  reader  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  reader.unreachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  reader.unreachablePeek();	  Object    o    =    iterator.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol  reader	13	None	replace
243	[BUG]  [BUGGY]  Object  o  =  iterator.getPrimitive();  [CE]  cannot  find  symbol  iterator  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  iterator.getPrimitive();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  iterator.getPrimitive();	  Object    o    =    iterator.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol  iterator	13	None	replace
244	[BUG]  [BUGGY]  Object  o  =  iterator.unreachABLEPeek();  [CE]  cannot  find  symbol  iterator  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  iterator.unreachABLEPeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  iterator.unreachABLEPeek();	  Object    o    =    iterator.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol  iterator	13	None	replace
245	[BUG]  [BUGGY]  Object  o  =  iterator.peek();  [CE]  cannot  find  symbol  iterator  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  iterator.peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  iterator.peek();	  Object    o    =    iterator.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol  iterator	13	None	replace
246	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.NAME);  [CE]  cannot  find  symbol  NAME  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonPrimitive.NAME);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.NAME);	  Object    o    =    peekToken(JsonPrimitive.UNREADABLE_READER);    	non-compiled	[CE]  cannot  find  symbol  NAME	10	None	replace
247	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.SENTINEL_CLOSED);  [CE]  cannot  find  symbol  SENTINEL_CLOSED  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonPrimitive.SENTINEL_CLOSED);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.SENTINEL_CLOSED);	  Object    o    =    peekToken(JsonPrimitive.UNREADABLE_READER);    	non-compiled	[CE]  cannot  find  symbol  SENTINEL_CLOSED	10	None	replace
248	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.UNREADABLE_READER,  stackSize);  [CE]  cannot  find  symbol  UNREADABLE_READER  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonPrimitive.UNREADABLE_READER,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.UNREADABLE_READER,  stackSize);	  Object    o    =    peekToken(JsonPrimitive.UNREADABLE_READER);    	non-compiled	[CE]  cannot  find  symbol  UNREADABLE_READER	10	None	replace
249	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.UNREADABLE_READER,  STACKSize);  [CE]  cannot  find  symbol  UNREADABLE_READER  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonPrimitive.UNREADABLE_READER,  STACKSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.UNREADABLE_READER,  STACKSize);	  Object    o    =    peekToken(JsonPrimitive.UNREADABLE_READER);    	non-compiled	[CE]  cannot  find  symbol  UNREADABLE_READER	10	None	replace
250	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.UNREADABLE_READER,  null);  [CE]  cannot  find  symbol  UNREADABLE_READER  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonPrimitive.UNREADABLE_READER,  null);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.UNREADABLE_READER,  null);	  Object    o    =    peekToken(JsonPrimitive.UNREADABLE_READER);    	non-compiled	[CE]  cannot  find  symbol  UNREADABLE_READER	10	None	replace
251	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.UNREADABLE_READER,  stack);  [CE]  cannot  find  symbol  UNREADABLE_READER  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonPrimitive.UNREADABLE_READER,  stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.UNREADABLE_READER,  stack);	  Object    o    =    peekToken(JsonPrimitive.UNREADABLE_READER);    	non-compiled	[CE]  cannot  find  symbol  UNREADABLE_READER	10	None	replace
252	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.NO_OBJECT);  [CE]  cannot  find  symbol  NO_OBJECT  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonPrimitive.NO_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.NO_OBJECT);	  Object    o    =    peekToken(JsonPrimitive.UNREADABLE_READER);    	non-compiled	[CE]  cannot  find  symbol  NO_OBJECT	10	None	replace
253	[BUG]  [BUGGY]  Object  o  =  peekAndClearStructure();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStructure();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStructure();	  Object    o    =    peekAndClearStackStructure();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
254	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackStructure(stackSize);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackStructure(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackStructure(stackSize);	  Object    o    =    peekAndClearStackStructure();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
255	[BUG]  [BUGGY]  Object  o  =  getAndClearStackStructure();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndClearStackStructure();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndClearStackStructure();	  Object    o    =    peekAndClearStackStructure();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
256	[BUG]  [BUGGY]  Object  o  =  lookAndClearStackStructure();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  lookAndClearStackStructure();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  lookAndClearStackStructure();	  Object    o    =    peekAndClearStackStructure();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
257	[BUG]  [BUGGY]  Object  o  =  peekAndClearBufferStructure();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearBufferStructure();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearBufferStructure();	  Object    o    =    peekAndClearStackStructure();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
258	[BUG]  [BUGGY]  Object  o  =  stack[stackSize.next();  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize.next();	  Object    o    =    stackSize.next();    	non-compiled	[CE]  ']'  expected	114	None	replace
259	[BUG]  [BUGGY]  Object  o  =  stackstackSize.next();  [CE]  cannot  find  symbol  stackstackSize  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stackstackSize.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stackstackSize.next();	  Object    o    =    stackSize.next();    	non-compiled	[CE]  cannot  find  symbol  stackstackSize	114	None	replace
260	[BUG]  [BUGGY]  Object  o  =  getCurrentStack();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentStack();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentStack();	  Object    o    =    getStack();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
261	[BUG]  [BUGGY]  Object  o  =  getDeclaredStack();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getDeclaredStack();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getDeclaredStack();	  Object    o    =    getStack();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
262	[BUG]  [BUGGY]  Object  o  =  getNumber();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getNumber();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getNumber();	  Object    o    =    getStack();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
263	[BUG]  [BUGGY]  Object  o  =  getEmptyIterator();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getEmptyIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getEmptyIterator();	  Object    o    =    getStack();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
264	[BUG]  [BUGGY]  Object  o  =  getImplicitState();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getImplicitState();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getImplicitState();	  Object    o    =    getStack();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
265	[BUG]  [BUGGY]  Object  o  =  peek(stack,  count,  stackSize);  [CE]  cannot  find  symbol  count  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  count,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  count,  stackSize);	  Object    o    =    peek(stack,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	4	None	replace
266	[BUG]  [BUGGY]  Object  o  =  peek(stack,  stackSize,  count);  [CE]  cannot  find  symbol  count  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  stackSize,  count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  stackSize,  count);	  Object    o    =    peek(stack,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	4	None	replace
267	[BUG]  [BUGGY]  Object  o  =  peek(stack,  stackSize,  offset);  [CE]  cannot  find  symbol  offset  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  stackSize,  offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  stackSize,  offset);	  Object    o    =    peek(stack,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	4	None	replace
268	[BUG]  [BUGGY]  Object  o  =  peek(stack,  buffer,  stackSize);  [CE]  buffer  has  private  access  in  JsonReader  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  buffer,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  buffer,  stackSize);	  Object    o    =    peek(stack,    stackSize);    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	4	None	replace
269	[BUG]  [BUGGY]  Object  o  =  primitive.unreachableIterator();  [CE]  cannot  find  symbol  primitive  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  primitive.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  primitive.unreachableIterator();	  Object    o    =    tokens.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  primitive	21	None	replace
270	[BUG]  [BUGGY]  Object  o  =  this.pathNames.unreachableIterator();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.pathNames.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.pathNames.unreachableIterator();	  Object    o    =    tokens.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
271	[BUG]  [BUGGY]  Object  o  =  primitiveIterator();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  primitiveIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  primitiveIterator();	  Object    o    =    tokens.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
272	[BUG]  [BUGGY]  Object  o  =  peekAndClearBuffer(stackSize);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearBuffer(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearBuffer(stackSize);	  Object    o    =    peekAndClearBuffer();    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
273	[BUG]  [BUGGY]  Object  o  =  peekAndClearBuffer(stack);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearBuffer(stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearBuffer(stack);	  Object    o    =    peekAndClearBuffer();    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
274	[BUG]  [BUGGY]  Object  o  =  peekAndClearBuffer(1);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearBuffer(1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearBuffer(1);	  Object    o    =    peekAndClearBuffer();    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
275	[BUG]  [BUGGY]  Object  o  =  peekAndClearStandardBuffer();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStandardBuffer();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStandardBuffer();	  Object    o    =    peekAndClearBuffer();    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
276	[BUG]  [BUGGY]  Object  o  =  stack[stackSize()  -  1];  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize()  -  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize()  -  1];	  Object    o    =    pushStackSize();    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
277	[BUG]  [BUGGY]  Object  o  =  stack.length();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.length();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.length();	  Object    o    =    pushStackSize();    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
278	[BUG]  [BUGGY]  Object  o  =  getStackSize();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getStackSize();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getStackSize();	  Object    o    =    pushStackSize();    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
279	[BUG]  [BUGGY]  Object  o  =  stack[stackSize()  -  2];  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize()  -  2];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize()  -  2];	  Object    o    =    pushStackSize();    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
280	[BUG]  [BUGGY]  Object  o  =  this.stackSize();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stackSize();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.stackSize();	  Object    o    =    pushStackSize();    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
281	[BUG]  [BUGGY]  Object  o  =  stack.size();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.size();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.size();	  Object    o    =    pushStackSize();    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
282	[BUG]  [BUGGY]  Object  o  =  iterator.getValue();  [CE]  cannot  find  symbol  iterator  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  iterator.getValue();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  iterator.getValue();	  Object    o    =    iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	62	None	replace
283	[BUG]  [BUGGY]  Object  o  =  iterator.get();  [CE]  cannot  find  symbol  iterator  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  iterator.get();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  iterator.get();	  Object    o    =    iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	62	None	replace
284	[BUG]  [BUGGY]  Object  o  =  itsIterator.next();  [CE]  cannot  find  symbol  itsIterator  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  itsIterator.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  itsIterator.next();	  Object    o    =    iterator.next();    	non-compiled	[CE]  cannot  find  symbol  itsIterator	62	None	replace
285	[BUG]  [BUGGY]  Object  o  =  this.iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.iterator.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.iterator.next();	  Object    o    =    iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	62	None	replace
286	[BUG]  [BUGGY]  Object  o  =  iterator.previous();  [CE]  cannot  find  symbol  iterator  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  iterator.previous();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  iterator.previous();	  Object    o    =    iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	62	None	replace
287	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1];  Object  o  =  stack[stackSize  -  1];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1];  Object  o  =  stack[stackSize  -  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    1];    Object  o  =  stack[stackSize  -  1];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	60	None	add
288	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1];  JsonToken  o  =  stack[stackSize  -  1];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1];  JsonToken  o  =  stack[stackSize  -  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    1];    JsonToken  o  =  stack[stackSize  -  1];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	60	None	add
289	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1];  Integer  o  =  stack[stackSize  -  1];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1];  Integer  o  =  stack[stackSize  -  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    1];    Integer  o  =  stack[stackSize  -  1];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	60	None	add
290	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1];  Object  o  =  stack[stackSize  -  2];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1];  Object  o  =  stack[stackSize  -  2];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    1];    Object  o  =  stack[stackSize  -  2];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	60	None	add
291	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1];  Object  o  =  stack[stackSize  -  1)];  [CE]  ']'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1];  Object  o  =  stack[stackSize  -  1)];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    1];    Object  o  =  stack[stackSize  -  1)];	  	non-compiled	[CE]  ']'  expected	60	None	add
292	[BUG]  [BUGGY]  Object  o  =  peekStackTrace(stackSize,  stackSize);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekStackTrace(stackSize,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekStackTrace(stackSize,  stackSize);	  Object    o    =    peekStackTrace(stackSize);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
293	[BUG]  [BUGGY]  Object  o  =  peekStackTrace(stackSize  +  1);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekStackTrace(stackSize  +  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekStackTrace(stackSize  +  1);	  Object    o    =    peekStackTrace(stackSize);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
294	[BUG]  [BUGGY]  Object  o  =  peekStackTrace(stack,  stackSize);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekStackTrace(stack,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekStackTrace(stack,  stackSize);	  Object    o    =    peekStackTrace(stackSize);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
295	[BUG]  [BUGGY]  Object  o  =  peekStackTrace(stackSize,  stack.length);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekStackTrace(stackSize,  stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekStackTrace(stackSize,  stack.length);	  Object    o    =    peekStackTrace(stackSize);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
296	[BUG]  [BUGGY]  Object  o  =  peekStackTrace(stack);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekStackTrace(stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekStackTrace(stack);	  Object    o    =    peekStackTrace(stackSize);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
297	[BUG]  [BUGGY]  Object  o  =  peekStackTrace(stackSize,  count);  [CE]  cannot  find  symbol  count  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekStackTrace(stackSize,  count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekStackTrace(stackSize,  count);	  Object    o    =    peekStackTrace(stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	19	None	replace
298	[BUG]  [BUGGY]  Object  o  =  peekStackTrace(stack.length);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekStackTrace(stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekStackTrace(stack.length);	  Object    o    =    peekStackTrace(stackSize);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
299	[BUG]  [BUGGY]  Object  o  =  this.bufferIterator();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.bufferIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.bufferIterator();	  Object    o    =    bufferIterator();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
300	[BUG]  [BUGGY]  Object  o  =  iterator();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  iterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  iterator();	  Object    o    =    bufferIterator();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
301	[BUG]  [BUGGY]  Object  o  =  tokenIterator();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  tokenIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  tokenIterator();	  Object    o    =    bufferIterator();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
302	[BUG]  [BUGGY]  Object  o  =  this.bufferedIterator();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.bufferedIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.bufferedIterator();	  Object    o    =    bufferIterator();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
303	[BUG]  [BUGGY]  Object  o  =  startIterator();  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  startIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  startIterator();	  Object    o    =    bufferIterator();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
304	[BUG]  [BUGGY]  Object  o  =  look();  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  look();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  look();	  Object    o    =    peek();    Object    o    =    look();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
305	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  look();  }  [CE]  cannot  find  symbol  isObject  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  look();  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  look();  }	  Object    o    =    peek();    Object    o    =    look();    	non-compiled	[CE]  cannot  find  symbol  isObject	34	None	replace
306	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  look();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  isObject  [FE]                  StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  look();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  look();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Object    o    =    peek();    Object    o    =    look();    	non-compiled	[CE]  cannot  find  symbol  isObject	34	None	replace
307	[BUG]  [BUGGY]  if(stackSize  >  stackSize)  {  Object  o  =  peek();  Object  o  =  look();  }  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                    StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stackSize  >  stackSize)  {  Object  o  =  peek();  Object  o  =  look();  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stackSize  >  stackSize)  {  Object  o  =  peek();  Object  o  =  look();  }	  Object    o    =    peek();    Object    o    =    look();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	34	None	replace
308	[BUG]  [BUGGY]  if(stackSize  >  stackSize)  {  Object  o  =  peek();  Object  o  =  look();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                      StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stackSize  >  stackSize)  {  Object  o  =  peek();  Object  o  =  look();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stackSize  >  stackSize)  {  Object  o  =  peek();  Object  o  =  look();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Object    o    =    peek();    Object    o    =    look();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	34	None	replace
309	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  look();  }  else  {  return  JsonToken.END_OBJECT;  }  [CE]  cannot  find  symbol  isObject  [FE]                        StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  look();  }  else  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  look();  }  else  {  return  JsonToken.END_OBJECT;  }	  Object    o    =    peek();    Object    o    =    look();    	non-compiled	[CE]  cannot  find  symbol  isObject	34	None	replace
310	[BUG]  [BUGGY]  if(stackSize  >  stackSize)  {  Object  o  =  peek();  Object  o  =  look();  }  else  {  return  JsonToken.END_OBJECT;  }  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stackSize  >  stackSize)  {  Object  o  =  peek();  Object  o  =  look();  }  else  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stackSize  >  stackSize)  {  Object  o  =  peek();  Object  o  =  look();  }  else  {  return  JsonToken.END_OBJECT;  }	  Object    o    =    peek();    Object    o    =    look();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	34	None	replace
311	[BUG]  [BUGGY]  Object  o  =  peek(pathNames,  stackIndices,  stackSize);  [CE]  cannot  find  symbol  stackIndices  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(pathNames,  stackIndices,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(pathNames,  stackIndices,  stackSize);	  Object    o    =    peek(pathNames,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  stackIndices	86	None	replace
312	[BUG]  [BUGGY]  Object  o  =  peek(pathNames,  pathIndices,  stackSize);  [CE]  no  suitable  method  found  for  peek(String[],int[],int)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(pathNames,  pathIndices,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(pathNames,  pathIndices,  stackSize);	  Object    o    =    peek(pathNames,    stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(String[],int[],int)	86	None	replace
313	[BUG]  [BUGGY]  Object  o  =  peek(pathNames,  stackSize,  count);  [CE]  cannot  find  symbol  count  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(pathNames,  stackSize,  count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(pathNames,  stackSize,  count);	  Object    o    =    peek(pathNames,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	86	None	replace
314	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  pathNames);  [CE]  no  suitable  method  found  for  peek(int,String[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize,  pathNames);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  pathNames);	  Object    o    =    peek(pathNames,    stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(int,String[])	86	None	replace
315	[BUG]  [BUGGY]  Object  o  =  peek(pathNames,  stack[0],  stackSize);  [CE]  no  suitable  method  found  for  peek(String[],Object,int)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(pathNames,  stack[0],  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(pathNames,  stack[0],  stackSize);	  Object    o    =    peek(pathNames,    stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(String[],Object,int)	86	None	replace
316	[BUG]  [BUGGY]  Object  o  =  peek(pathNames,  stack.length,  stackSize);  [CE]  no  suitable  method  found  for  peek(String[],int,int)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(pathNames,  stack.length,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(pathNames,  stack.length,  stackSize);	  Object    o    =    peek(pathNames,    stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(String[],int,int)	86	None	replace
317	[BUG]  [BUGGY]  Object  o  =  peek(pathNames,  stackSize,  offset);  [CE]  cannot  find  symbol  offset  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(pathNames,  stackSize,  offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(pathNames,  stackSize,  offset);	  Object    o    =    peek(pathNames,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	86	None	replace
318	[BUG]  [BUGGY]  Object  o  =  this.stackSize.unreachablePeek();  [CE]  int  cannot  be  dereferenced  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stackSize.unreachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.stackSize.unreachablePeek();	  Object    o    =    stackSize.unreachablePeek();    	non-compiled	[CE]  int  cannot  be  dereferenced	121	None	replace
319	[BUG]  [BUGGY]  Object  o  =  stacks.unreachablePeek();  [CE]  cannot  find  symbol  stacks  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stacks.unreachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stacks.unreachablePeek();	  Object    o    =    stackSize.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol  stacks	121	None	replace
320	[BUG]  [BUGGY]  Object  o  =  stack[stackSize].unreachablePeek();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize].unreachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize].unreachablePeek();	  Object    o    =    stackSize.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
321	[BUG]  [BUGGY]  Object  o  =  stack[stackSize.unreachablePeek()];  [CE]  int  cannot  be  dereferenced  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize.unreachablePeek()];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize.unreachablePeek()];	  Object    o    =    stackSize.unreachablePeek();    	non-compiled	[CE]  int  cannot  be  dereferenced	121	None	replace
322	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackStandard(stackSize);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackStandard(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackStandard(stackSize);	  Object    o    =    peekAndClearStackStandard();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
323	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackStandard(stack);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackStandard(stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackStandard(stack);	  Object    o    =    peekAndClearStackStandard();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
324	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackStandard(0);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackStandard(0);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackStandard(0);	  Object    o    =    peekAndClearStackStandard();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
325	[BUG]  [BUGGY]  Object  o  =  getStackTrace();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getStackTrace();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getStackTrace();	  Object    o    =    pushStackTrace();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
326	[BUG]  [BUGGY]  Object  o  =  pushStackTrace(stackSize);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushStackTrace(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStackTrace(stackSize);	  Object    o    =    pushStackTrace();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
327	[BUG]  [BUGGY]  Object  o  =  this.plotStackTrace();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.plotStackTrace();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.plotStackTrace();	  Object    o    =    pushStackTrace();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
328	[BUG]  [BUGGY]  Object  o  =  throwStackTrace();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  throwStackTrace();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  throwStackTrace();	  Object    o    =    pushStackTrace();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
329	[BUG]  [BUGGY]  Object  o  =  peekAndFixClose(stackSize,  stackSize);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixClose(stackSize,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixClose(stackSize,  stackSize);	  Object    o    =    peekAndFixClose(stackSize);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
330	[BUG]  [BUGGY]  Object  o  =  peekAndFixClose(stack);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixClose(stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixClose(stack);	  Object    o    =    peekAndFixClose(stackSize);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
331	[BUG]  [BUGGY]  Object  o  =  peekAndFixClose(stackSize,  count);  [CE]  cannot  find  symbol  count  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixClose(stackSize,  count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixClose(stackSize,  count);	  Object    o    =    peekAndFixClose(stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	43	None	replace
332	[BUG]  [BUGGY]  Object  o  =  peekAndFixClose(stackSize  +  1);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixClose(stackSize  +  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixClose(stackSize  +  1);	  Object    o    =    peekAndFixClose(stackSize);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
333	[BUG]  [BUGGY]  Object  o  =  peekAndFixClose(stack,  stackSize);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixClose(stack,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixClose(stack,  stackSize);	  Object    o    =    peekAndFixClose(stackSize);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
334	[BUG]  [BUGGY]  Object  o  =  peekAndFixClose(stack,  offset);  [CE]  cannot  find  symbol  offset  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixClose(stack,  offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixClose(stack,  offset);	  Object    o    =    peekAndFixClose(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	43	None	replace
335	[BUG]  [BUGGY]  Object  o  =  peekAndFixClose(stackSize,  stack.length);  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixClose(stackSize,  stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixClose(stackSize,  stack.length);	  Object    o    =    peekAndFixClose(stackSize);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
336	[BUG]  [BUGGY]  int  o  =  peek();  [CE]  incompatible  types  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  int  o  =  peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	int  o  =  peek();	  Object    o    =    peek();    int    o    =    peek();    	non-compiled	[CE]  incompatible  types	35	None	replace
337	[BUG]  [BUGGY]  Integer  o  =  peek();  [CE]  incompatible  types  [FE]                  StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  o  =  peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  o  =  peek();	  Object    o    =    peek();    int    o    =    peek();    	non-compiled	[CE]  incompatible  types	35	None	replace
338	[BUG]  [BUGGY]  null  o  =  peek();  [CE]  not  a  statement  [FE]                    StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  null  o  =  peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	null  o  =  peek();	  Object    o    =    peek();    int    o    =    peek();    	non-compiled	[CE]  not  a  statement	35	None	replace
339	[BUG]  [BUGGY]  Object  o  =  peekAndClearCurrentToken();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearCurrentToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearCurrentToken();	  Object    o    =    peekCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
340	[BUG]  [BUGGY]  Object  o  =  this.peekCurrentToken();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.peekCurrentToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.peekCurrentToken();	  Object    o    =    peekCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
341	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(true);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(true);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(true);	  Object    o    =    peekAndFixStack(false);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
342	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(false,  stackSize);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(false,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(false,  stackSize);	  Object    o    =    peekAndFixStack(false);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
343	[BUG]  [BUGGY]  Object  o  =  peek(false);  [CE]  no  suitable  method  found  for  peek(boolean)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(false);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(false);	  Object    o    =    peekAndFixStack(false);    	non-compiled	[CE]  no  suitable  method  found  for  peek(boolean)	80	None	replace
344	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(true,  false);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(true,  false);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(true,  false);	  Object    o    =    peekAndFixStack(false);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
345	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(false,  stack);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(false,  stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(false,  stack);	  Object    o    =    peekAndFixStack(false);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
346	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(true,  true);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(true,  true);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(true,  true);	  Object    o    =    peekAndFixStack(false);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
347	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stack,  count);  [CE]  cannot  find  symbol  count  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stack,  count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stack,  count);	  Object    o    =    peekAndFix(stack,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	57	None	replace
348	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stack,  offset,  stackSize);  [CE]  cannot  find  symbol  offset  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stack,  offset,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stack,  offset,  stackSize);	  Object    o    =    peekAndFix(stack,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	57	None	replace
349	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stack,  offset  +  stackSize);  [CE]  cannot  find  symbol  offset  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stack,  offset  +  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stack,  offset  +  stackSize);	  Object    o    =    peekAndFix(stack,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	57	None	replace
350	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stack,  stackSize  -  1);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stack,  stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stack,  stackSize  -  1);	  Object    o    =    peekAndFix(stack,    stackSize);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
351	[BUG]  [BUGGY]  Object  o  =  peekAndFix(pathNames,  stackSize);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(pathNames,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(pathNames,  stackSize);	  Object    o    =    peekAndFix(pathNames);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
352	[BUG]  [BUGGY]  Object  o  =  peekAndFix(pathIndices);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(pathIndices);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(pathIndices);	  Object    o    =    peekAndFix(pathNames);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
353	[BUG]  [BUGGY]  Object  o  =  peekAndFix(pathNames,  stack);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(pathNames,  stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(pathNames,  stack);	  Object    o    =    peekAndFix(pathNames);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
354	[BUG]  [BUGGY]  Object  o  =  peekAndFix(pathIndices,  pathNames);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(pathIndices,  pathNames);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(pathIndices,  pathNames);	  Object    o    =    peekAndFix(pathNames);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
355	[BUG]  [BUGGY]  Object  o  =  peekAndFix(pathNames,  null);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(pathNames,  null);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(pathNames,  null);	  Object    o    =    peekAndFix(pathNames);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
356	[BUG]  [BUGGY]  Object  o  =  peekAndFix(pathNames,  stack.length);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(pathNames,  stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(pathNames,  stack.length);	  Object    o    =    peekAndFix(pathNames);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
357	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stack,  pathNames);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stack,  pathNames);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stack,  pathNames);	  Object    o    =    peekAndFix(pathNames);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
358	[BUG]  [BUGGY]  Object  o  =  this.stack.unreachableIterator();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.stack.unreachableIterator();	  Object    o    =    stack.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
359	[BUG]  [BUGGY]  Object  o  =  stack.getIterator();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.getIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.getIterator();	  Object    o    =    stack.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
360	[BUG]  [BUGGY]  Object  o  =  stack.get(stackSize).unreachableIterator();  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.get(stackSize).unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.get(stackSize).unreachableIterator();	  Object    o    =    stack.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
361	[BUG]  [BUGGY]  Object  o  =  getStandardIterator();  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getStandardIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getStandardIterator();	  Object    o    =    stack.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
362	[BUG]  [BUGGY]  Object  o  =  getAndFix(stack);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndFix(stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndFix(stack);	  Object    o    =    getAndFix();    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
363	[BUG]  [BUGGY]  Object  o  =  getAndFix().get(stackSize);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndFix().get(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndFix().get(stackSize);	  Object    o    =    getAndFix();    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
364	[BUG]  [BUGGY]  Object  o  =  getAndFix(stackSize,  stackSize);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndFix(stackSize,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndFix(stackSize,  stackSize);	  Object    o    =    getAndFix();    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
365	[BUG]  [BUGGY]  Object  o  =  getAndFix().getImplicitPrototype();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndFix().getImplicitPrototype();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndFix().getImplicitPrototype();	  Object    o    =    getAndFix();    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
366	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().getObject();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().getObject();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().getObject();	  Object    o    =    getCurrentToken().next();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
367	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().first();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().first();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().first();	  Object    o    =    getCurrentToken().next();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
368	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().cloneTree();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().cloneTree();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().cloneTree();	  Object    o    =    getCurrentToken().next();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
369	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.START_OBJECT,  stack);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.START_OBJECT,  stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.START_OBJECT,  stack);	  Object    o    =    peekToken(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	11	None	replace
370	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.START_OBJECT,  STACKSize);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.START_OBJECT,  STACKSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.START_OBJECT,  STACKSize);	  Object    o    =    peekToken(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	11	None	replace
371	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.START_OBJECT,  JsonPrimitive.UNREADABLE_READER);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.START_OBJECT,  JsonPrimitive.UNREADABLE_READER);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.START_OBJECT,  JsonPrimitive.UNREADABLE_READER);	  Object    o    =    peekToken(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	11	None	replace
372	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.START_OBJECT  |  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.START_OBJECT  |  JsonToken.END_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.START_OBJECT  |  JsonToken.END_OBJECT);	  Object    o    =    peekToken(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	11	None	replace
373	[BUG]  [BUGGY]  JsonPrimitive  iterator  =(JsonPrimitive)stack.next();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  iterator  =(JsonPrimitive)stack.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  iterator  =(JsonPrimitive)stack.next();	  JsonPrimitive    stack    =(JsonPrimitive)iterator.next();    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
374	[BUG]  [BUGGY]  JsonPrimitive  chunk  =(JsonPrimitive)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  chunk  =(JsonPrimitive)iterator.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  chunk  =(JsonPrimitive)iterator.next();	  JsonPrimitive    stack    =(JsonPrimitive)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	112	None	replace
375	[BUG]  [BUGGY]  JsonPrimitive  heap  =(JsonPrimitive)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  heap  =(JsonPrimitive)iterator.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  heap  =(JsonPrimitive)iterator.next();	  JsonPrimitive    stack    =(JsonPrimitive)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	112	None	replace
376	[BUG]  [BUGGY]  JsonPrimitive  array  =(JsonPrimitive)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  array  =(JsonPrimitive)iterator.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  array  =(JsonPrimitive)iterator.next();	  JsonPrimitive    stack    =(JsonPrimitive)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	112	None	replace
377	[BUG]  [BUGGY]  Object  o  =  this.null.unreachableIterator();  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.null.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.null.unreachableIterator();	  Object    o    =    null.unreachableIterator();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
378	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackStack(stackSize);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackStack(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackStack(stackSize);	  Object    o    =    peekAndClearStackStack();    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
379	[BUG]  [BUGGY]  Object  o  =  primitiveIterator.unreachableIterator();  [CE]  cannot  find  symbol  primitiveIterator  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  primitiveIterator.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  primitiveIterator.unreachableIterator();	  Object    o    =    tokenIterator.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  primitiveIterator	25	None	replace
380	[BUG]  [BUGGY]  Object  o  =  this.nullIterator.unreachableIterator();  [CE]  cannot  find  symbol  nullIterator  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.nullIterator.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.nullIterator.unreachableIterator();	  Object    o    =    tokenIterator.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  nullIterator	25	None	replace
381	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1].peek();  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1].peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1].peek();	  Object    o    =    stack.peek();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
382	[BUG]  [BUGGY]  Object  o  =  this.stack.peek();  [CE]  cannot  find  symbol  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack.peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.stack.peek();	  Object    o    =    stack.peek();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
383	[BUG]  [BUGGY]  Object  o  =  stackSize.peek();  [CE]  int  cannot  be  dereferenced  [FE]                  StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stackSize.peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stackSize.peek();	  Object    o    =    stack.peek();    	non-compiled	[CE]  int  cannot  be  dereferenced	85	None	replace
384	[BUG]  [BUGGY]  Object  o  =  stack[stackSize].peek();  [CE]  cannot  find  symbol  [FE]                    StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize].peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize].peek();	  Object    o    =    stack.peek();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
385	[BUG]  [BUGGY]  Object  o  =  peekAndFixStackTrace(stackSize);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStackTrace(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStackTrace(stackSize);	  Object    o    =    peekAndFixStackTrace();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
386	[BUG]  [BUGGY]  Object  o  =  peekAndFixStackTrace(stack);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStackTrace(stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStackTrace(stack);	  Object    o    =    peekAndFixStackTrace();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
387	[BUG]  [BUGGY]  Object  o  =  peekAndFixStackTrace(stack,  stackSize);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStackTrace(stack,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStackTrace(stack,  stackSize);	  Object    o    =    peekAndFixStackTrace();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
388	[BUG]  [BUGGY]  Object  o  =  peekAndFixStackTrace(stack.length);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStackTrace(stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStackTrace(stack.length);	  Object    o    =    peekAndFixStackTrace();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
389	[BUG]  [BUGGY]  Object  o  =  peekAndFixStackTrace(false);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStackTrace(false);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStackTrace(false);	  Object    o    =    peekAndFixStackTrace();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
390	[BUG]  [BUGGY]  Object  o  =  peekAndFixStackTrace(stackSize,  stackSize);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStackTrace(stackSize,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStackTrace(stackSize,  stackSize);	  Object    o    =    peekAndFixStackTrace();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
391	[BUG]  [BUGGY]  Object  o  =  peekAndClearStack(stack,  bufferSize);  [CE]  cannot  find  symbol  bufferSize  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStack(stack,  bufferSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStack(stack,  bufferSize);	  Object    o    =    peekAndClearStack(stack);    	non-compiled	[CE]  cannot  find  symbol  bufferSize	73	None	replace
392	[BUG]  [BUGGY]  Object  o  =  peekAndClearStack(stack,  offset);  [CE]  cannot  find  symbol  offset  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStack(stack,  offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStack(stack,  offset);	  Object    o    =    peekAndClearStack(stack);    	non-compiled	[CE]  cannot  find  symbol  offset	73	None	replace
393	[BUG]  [BUGGY]  Object  o  =  peekAndClearStack(stack,  count);  [CE]  cannot  find  symbol  count  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStack(stack,  count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStack(stack,  count);	  Object    o    =    peekAndClearStack(stack);    	non-compiled	[CE]  cannot  find  symbol  count	73	None	replace
394	[BUG]  [BUGGY]  Object  o  =  pushStack(stackSize  +  1);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushStack(stackSize  +  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStack(stackSize  +  1);	  Object    o    =    pushStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
395	[BUG]  [BUGGY]  Object  o  =  pushStack(stackSize,  stackSize);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushStack(stackSize,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStack(stackSize,  stackSize);	  Object    o    =    pushStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
396	[BUG]  [BUGGY]  Object  o  =  pushStack(stackSize  -  1);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushStack(stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStack(stackSize  -  1);	  Object    o    =    pushStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
397	[BUG]  [BUGGY]  Object  o  =  pushStack(stackSize,  count);  [CE]  cannot  find  symbol  count  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushStack(stackSize,  count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStack(stackSize,  count);	  Object    o    =    pushStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	103	None	replace
398	[BUG]  [BUGGY]  Object  o  =  stack.add(stackSize);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.add(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.add(stackSize);	  Object    o    =    pushStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
399	[BUG]  [BUGGY]  Object  o  =  pushStack(stackSize,  offset);  [CE]  cannot  find  symbol  offset  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushStack(stackSize,  offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStack(stackSize,  offset);	  Object    o    =    pushStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	103	None	replace
400	[BUG]  [BUGGY]  Object  o  =  pushStack(stackSize  -  2);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushStack(stackSize  -  2);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStack(stackSize  -  2);	  Object    o    =    pushStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
401	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(stack,  stackSize);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(stack,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(stack,  stackSize);	  Object    o    =    peekAndFixStack(stack);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
402	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(stack,  bufferSize);  [CE]  cannot  find  symbol  bufferSize  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(stack,  bufferSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(stack,  bufferSize);	  Object    o    =    peekAndFixStack(stack);    	non-compiled	[CE]  cannot  find  symbol  bufferSize	41	None	replace
403	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(stack,  offset);  [CE]  cannot  find  symbol  offset  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(stack,  offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(stack,  offset);	  Object    o    =    peekAndFixStack(stack);    	non-compiled	[CE]  cannot  find  symbol  offset	41	None	replace
404	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(stack,  count);  [CE]  cannot  find  symbol  count  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(stack,  count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(stack,  count);	  Object    o    =    peekAndFixStack(stack);    	non-compiled	[CE]  cannot  find  symbol  count	41	None	replace
405	[BUG]  [BUGGY]  Object  o  =  UNREADABLE_READER.unreachableIterator();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  UNREADABLE_READER.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  UNREADABLE_READER.unreachableIterator();	  Object    o    =    pathNames.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
406	[BUG]  [BUGGY]  Object  o  =  pathNames!=  null?  JsonToken.UNREADABLE_READER  :  pathNames.unreachableIterator();  [CE]  cannot  find  symbol  UNREADABLE_READER  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pathNames!=  null?  JsonToken.UNREADABLE_READER  :  pathNames.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pathNames!=  null?  JsonToken.UNREADABLE_READER  :  pathNames.unreachableIterator();	  Object    o    =    pathNames.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  UNREADABLE_READER	139	None	replace
407	[BUG]  [BUGGY]  Object  o  =  pathNames  ==  null?  JsonToken.UNREADABLE_READER  :  pathNames.unreachableIterator();  [CE]  cannot  find  symbol  UNREADABLE_READER  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pathNames  ==  null?  JsonToken.UNREADABLE_READER  :  pathNames.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pathNames  ==  null?  JsonToken.UNREADABLE_READER  :  pathNames.unreachableIterator();	  Object    o    =    pathNames.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  UNREADABLE_READER	139	None	replace
408	[BUG]  [BUGGY]  Object  o  =  pathNames!=  null?  JsonToken.UNRESOLVED  :  pathNames.unreachableIterator();  [CE]  cannot  find  symbol  UNRESOLVED  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pathNames!=  null?  JsonToken.UNRESOLVED  :  pathNames.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pathNames!=  null?  JsonToken.UNRESOLVED  :  pathNames.unreachableIterator();	  Object    o    =    pathNames.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  UNRESOLVED	139	None	replace
409	[BUG]  [BUGGY]  Object  o  =  pathNames!=  null?  JsonToken.NONE  :  pathNames.unreachableIterator();  [CE]  cannot  find  symbol  NONE  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pathNames!=  null?  JsonToken.NONE  :  pathNames.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pathNames!=  null?  JsonToken.NONE  :  pathNames.unreachableIterator();	  Object    o    =    pathNames.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  NONE	139	None	replace
410	[BUG]  [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  +  1;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	int  stackSize  =  stack[stackSize  -  1]  +  1;	  int    stackSize    =    stack[stackSize    -    1];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	46	None	replace
411	[BUG]  [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  &  0xff;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  &  0xff;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	int  stackSize  =  stack[stackSize  -  1]  &  0xff;	  int    stackSize    =    stack[stackSize    -    1];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	46	None	replace
412	[BUG]  [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  &  0xFF;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  &  0xFF;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	int  stackSize  =  stack[stackSize  -  1]  &  0xFF;	  int    stackSize    =    stack[stackSize    -    1];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	46	None	replace
413	[BUG]  [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  |  JsonToken.END_OBJECT;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  |  JsonToken.END_OBJECT;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	int  stackSize  =  stack[stackSize  -  1]  |  JsonToken.END_OBJECT;	  int    stackSize    =    stack[stackSize    -    1];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	46	None	replace
414	[BUG]  [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  &  0x7f;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  &  0x7f;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	int  stackSize  =  stack[stackSize  -  1]  &  0x7f;	  int    stackSize    =    stack[stackSize    -    1];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	46	None	replace
415	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1].get();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1].get();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1].get();	  Object    o    =    stack[stackSize    -    1].next();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
416	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1].getValue();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1].getValue();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1].getValue();	  Object    o    =    stack[stackSize    -    1].next();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
417	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1],  pathNames[stackSize  -  1].next();  [CE]  ']'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1],  pathNames[stackSize  -  1].next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1],  pathNames[stackSize  -  1].next();	  Object    o    =    stack[stackSize    -    1].next();    	non-compiled	[CE]  ']'  expected	65	None	replace
418	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1],  next();  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1],  next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1],  next();	  Object    o    =    stack[stackSize    -    1].next();    	non-compiled	[CE]  ';'  expected	65	None	replace
419	[BUG]  [BUGGY]  Object  o  =  getIterator(stackSize  -  1);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getIterator(stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterator(stackSize  -  1);	  Object    o    =    getIterator(stackSize);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
420	[BUG]  [BUGGY]  Object  o  =  getIterator(stackSize  +  1);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getIterator(stackSize  +  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterator(stackSize  +  1);	  Object    o    =    getIterator(stackSize);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
421	[BUG]  [BUGGY]  Object  o  =  getIterator(stackSize,  count);  [CE]  cannot  find  symbol  count  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getIterator(stackSize,  count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterator(stackSize,  count);	  Object    o    =    getIterator(stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	129	None	replace
422	[BUG]  [BUGGY]  Object  o  =  getIterator(stackSize,  stackSize);  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getIterator(stackSize,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterator(stackSize,  stackSize);	  Object    o    =    getIterator(stackSize);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
423	[BUG]  [BUGGY]  Object  o  =  getIterator(stackSize  -  2);  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getIterator(stackSize  -  2);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterator(stackSize  -  2);	  Object    o    =    getIterator(stackSize);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
424	[BUG]  [BUGGY]  Object  o  =  getIterator(offset);  [CE]  cannot  find  symbol  offset  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getIterator(offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterator(offset);	  Object    o    =    getIterator(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	129	None	replace
425	[BUG]  [BUGGY]  Object  o  =  stack.getCurrentToken();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.getCurrentToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.getCurrentToken();	  Object    o    =    this.getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
426	[BUG]  [BUGGY]  Object  o  =  current.getCurrentToken();  [CE]  cannot  find  symbol  current  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  current.getCurrentToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  current.getCurrentToken();	  Object    o    =    this.getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  current	53	None	replace
427	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.VALUE_EMBEDDED_OBJECT,  stackSize);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.VALUE_EMBEDDED_OBJECT,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.VALUE_EMBEDDED_OBJECT,  stackSize);	  Object    o    =    peekToken(JsonToken.VALUE_EMBEDDED_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	133	None	replace
428	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.VALUE_EMBEDDED_ARRAY);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.VALUE_EMBEDDED_ARRAY);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.VALUE_EMBEDDED_ARRAY);	  Object    o    =    peekToken(JsonToken.VALUE_EMBEDDED_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY	133	None	replace
429	[BUG]  [BUGGY]  JsonObject  o  =  peek();  [CE]  incompatible  types  [FE]        StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonObject  o  =  peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonObject  o  =  peek();	  Object    o    =    peek();    JsonObject    o    =    peek();    	non-compiled	[CE]  incompatible  types	117	None	replace
430	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  [CE]  cannot  find  symbol  isObject  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }	  Object    o    =    peek();    JsonObject    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol  isObject	117	None	replace
431	[BUG]  [BUGGY]  if(stackSize  >  stackSize)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stackSize  >  stackSize)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stackSize  >  stackSize)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }	  Object    o    =    peek();    JsonObject    o    =    peek();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	117	None	replace
432	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  isObject  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Object    o    =    peek();    JsonObject    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol  isObject	117	None	replace
433	[BUG]  [BUGGY]  if(stackSize  >  stackSize)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stackSize  >  stackSize)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stackSize  >  stackSize)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Object    o    =    peek();    JsonObject    o    =    peek();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	117	None	replace
434	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  else  {  return  JsonToken.END_OBJECT;  }  [CE]  cannot  find  symbol  isObject  [FE]                  StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  else  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  else  {  return  JsonToken.END_OBJECT;  }	  Object    o    =    peek();    JsonObject    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol  isObject	117	None	replace
435	[BUG]  [BUGGY]  Object  o  =  stack.pushStack();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.pushStack();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.pushStack();	  Object    o    =    this.pushStack();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
436	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1].pushStack();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1].pushStack();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1].pushStack();	  Object    o    =    this.pushStack();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
437	[BUG]  [BUGGY]  Object  o  =  this.stack.pushStack();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack.pushStack();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.stack.pushStack();	  Object    o    =    this.pushStack();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
438	[BUG]  [BUGGY]  Object  o  =  findCurrentToken().getValue();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  findCurrentToken().getValue();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  findCurrentToken().getValue();	  Object    o    =    findCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
439	[BUG]  [BUGGY]  Object  o  =  findCurrentToken(JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  findCurrentToken(JsonToken.END_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  findCurrentToken(JsonToken.END_OBJECT);	  Object    o    =    findCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
440	[BUG]  [BUGGY]  Object  o  =  findCurrentToken().get(JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  findCurrentToken().get(JsonToken.END_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  findCurrentToken().get(JsonToken.END_OBJECT);	  Object    o    =    findCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
441	[BUG]  [BUGGY]  Object  o  =  this.findCurrentToken();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.findCurrentToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.findCurrentToken();	  Object    o    =    findCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
442	[BUG]  [BUGGY]  Object  o  =  get(stackSize  +  1);  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  get(stackSize  +  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  get(stackSize  +  1);	  Object    o    =    get(stackSize);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
443	[BUG]  [BUGGY]  Object  o  =  get(offset);  [CE]  cannot  find  symbol  offset  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  get(offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  get(offset);	  Object    o    =    get(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	39	None	replace
444	[BUG]  [BUGGY]  Object  o  =  get(stackSize,  count);  [CE]  cannot  find  symbol  count  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  get(stackSize,  count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  get(stackSize,  count);	  Object    o    =    get(stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	39	None	replace
445	[BUG]  [BUGGY]  Object  o  =  get(count);  [CE]  cannot  find  symbol  count  [FE]                  StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  get(count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  get(count);	  Object    o    =    get(stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	39	None	replace
446	[BUG]  [BUGGY]  Object  o  =  get(stackSize,  offset);  [CE]  cannot  find  symbol  offset  [FE]                    StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  get(stackSize,  offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  get(stackSize,  offset);	  Object    o    =    get(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	39	None	replace
447	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().getKey();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().getKey();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().getKey();	  Object    o    =    getCurrentToken().getValue();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
448	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().cloneTree().getValue();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().cloneTree().getValue();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().cloneTree().getValue();	  Object    o    =    getCurrentToken().getValue();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
449	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().getJsonValue();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().getJsonValue();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().getJsonValue();	  Object    o    =    getCurrentToken().getValue();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
450	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().getImplicitReturn().getValue();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().getImplicitReturn().getValue();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().getImplicitReturn().getValue();	  Object    o    =    getCurrentToken().getValue();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
451	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackTree(stackSize);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackTree(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackTree(stackSize);	  Object    o    =    peekAndClearStackTree();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
452	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackTree(stack);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackTree(stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackTree(stack);	  Object    o    =    peekAndClearStackTree();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
453	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackTree(stackSize,  stackSize);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackTree(stackSize,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackTree(stackSize,  stackSize);	  Object    o    =    peekAndClearStackTree();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
454	[BUG]  [BUGGY]  Object  o  =  peekAndClearStandardTree();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStandardTree();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStandardTree();	  Object    o    =    peekAndClearStackTree();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
455	[BUG]  [BUGGY]  Object  o  =  peekAndClearTree();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearTree();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearTree();	  Object    o    =    peekAndClearStackTree();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
456	[BUG]  [BUGGY]  Object  o  =  pathIndices.unreachablePeek();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pathIndices.unreachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pathIndices.unreachablePeek();	  Object    o    =    tokens.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
457	[BUG]  [BUGGY]  Object  o  =  primitive.unreachablePeek();  [CE]  cannot  find  symbol  primitive  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  primitive.unreachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  primitive.unreachablePeek();	  Object    o    =    tokens.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol  primitive	90	None	replace
458	[BUG]  [BUGGY]  Object  o  =  this.pathIndices.unreachablePeek();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.pathIndices.unreachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.pathIndices.unreachablePeek();	  Object    o    =    tokens.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
459	[BUG]  [BUGGY]  Integer  stack  =(Integer)this.stacks.get(stackSize);  [CE]  cannot  find  symbol  stacks  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(Integer)this.stacks.get(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)this.stacks.get(stackSize);	  Integer    stack    =(Integer)stack.get(stackSize);    	non-compiled	[CE]  cannot  find  symbol  stacks	49	None	replace
460	[BUG]  [BUGGY]  Integer  stack  =(Integer)stack.get(offset);  [CE]  cannot  find  symbol  offset  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(Integer)stack.get(offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)stack.get(offset);	  Integer    stack    =(Integer)stack.get(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	49	None	replace
461	[BUG]  [BUGGY]  Integer  stack  =(Integer)stack.get(count);  [CE]  cannot  find  symbol  count  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(Integer)stack.get(count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)stack.get(count);	  Integer    stack    =(Integer)stack.get(stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	49	None	replace
462	[BUG]  [BUGGY]  Integer  stack  =(Integer)stack.get(stackSize  -  1);  [CE]  cannot  find  symbol  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(Integer)stack.get(stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)stack.get(stackSize  -  1);	  Integer    stack    =(Integer)stack.get(stackSize);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
463	[BUG]  [BUGGY]  Integer  stack  =(Integer)this.pathIndices.get(stackSize);  [CE]  cannot  find  symbol  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(Integer)this.pathIndices.get(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)this.pathIndices.get(stackSize);	  Integer    stack    =(Integer)stack.get(stackSize);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
464	[BUG]  [BUGGY]  Integer  stack  =(Integer)this.stack.get(stackSize);  [CE]  cannot  find  symbol  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(Integer)this.stack.get(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)this.stack.get(stackSize);	  Integer    stack    =(Integer)stack.get(stackSize);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
465	[BUG]  [BUGGY]  Object  o  =  getImmediateParent();  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getImmediateParent();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getImmediateParent();	  Object    o    =    getPeek();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
466	[BUG]  [BUGGY]  Object  o  =  getCurrentNode();  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentNode();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentNode();	  Object    o    =    getPeek();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
467	[BUG]  [BUGGY]  Object  o  =  getEmpty();  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getEmpty();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getEmpty();	  Object    o    =    getPeek();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
468	[BUG]  [BUGGY]  Object  o  =  this.stack.unreachablePeek();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack.unreachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.stack.unreachablePeek();	  Object    o    =    stack.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
469	[BUG]  [BUGGY]  Object  o  =  stack.get(stackSize).unreachablePeek();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.get(stackSize).unreachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.get(stackSize).unreachablePeek();	  Object    o    =    stack.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
470	[BUG]  [BUGGY]  Object  o  =  stack.reachablePeek();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.reachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.reachablePeek();	  Object    o    =    stack.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
471	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(pathNames,  stackSize);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(pathNames,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(pathNames,  stackSize);	  Object    o    =    peekAndFixStack(pathNames);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
472	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(pathIndices);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(pathIndices);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(pathIndices);	  Object    o    =    peekAndFixStack(pathNames);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
473	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(pathNames,  stack);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(pathNames,  stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(pathNames,  stack);	  Object    o    =    peekAndFixStack(pathNames);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
474	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(pathNames,  stack.length);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(pathNames,  stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(pathNames,  stack.length);	  Object    o    =    peekAndFixStack(pathNames);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
475	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(pathNames,  stackType);  [CE]  cannot  find  symbol  stackType  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(pathNames,  stackType);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(pathNames,  stackType);	  Object    o    =    peekAndFixStack(pathNames);    	non-compiled	[CE]  cannot  find  symbol  stackType	79	None	replace
476	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(stack,  pathNames);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(stack,  pathNames);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(stack,  pathNames);	  Object    o    =    peekAndFixStack(pathNames);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
477	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(pathIndices,  pathNames);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(pathIndices,  pathNames);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(pathIndices,  pathNames);	  Object    o    =    peekAndFixStack(pathNames);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
478	[BUG]  [BUGGY]  Object  o  =  peekAsJsonToken(stackSize);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAsJsonToken(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAsJsonToken(stackSize);	  Object    o    =    peekAsJsonToken();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
479	[BUG]  [BUGGY]  Object  o  =  peekAsJsonToken(null);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAsJsonToken(null);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAsJsonToken(null);	  Object    o    =    peekAsJsonToken();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
480	[BUG]  [BUGGY]  Object  o  =  peekAsJsonToken(stack);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAsJsonToken(stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAsJsonToken(stack);	  Object    o    =    peekAsJsonToken();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
481	[BUG]  [BUGGY]  Object  o  =  peekAsJsonToken(false);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAsJsonToken(false);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAsJsonToken(false);	  Object    o    =    peekAsJsonToken();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
482	[BUG]  [BUGGY]  Object  o  =  this.buffer.unreachableIterator();  [CE]  buffer  has  private  access  in  JsonReader  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.buffer.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.buffer.unreachableIterator();	  Object    o    =    buffer.unreachableIterator();    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	138	None	replace
483	[BUG]  [BUGGY]  Object  o  =  buffer.getIterator();  [CE]  buffer  has  private  access  in  JsonReader  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  buffer.getIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  buffer.getIterator();	  Object    o    =    buffer.unreachableIterator();    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	138	None	replace
484	[BUG]  [BUGGY]  Object  o  =  buffer.next();  [CE]  buffer  has  private  access  in  JsonReader  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  buffer.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  buffer.next();	  Object    o    =    buffer.unreachableIterator();    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	138	None	replace
485	[BUG]  [BUGGY]  Object  o  =  this.buffer.getIterator();  [CE]  buffer  has  private  access  in  JsonReader  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.buffer.getIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.buffer.getIterator();	  Object    o    =    buffer.unreachableIterator();    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	138	None	replace
486	[BUG]  [BUGGY]  Object  o  =  buffer.getValue();  [CE]  buffer  has  private  access  in  JsonReader  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  buffer.getValue();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  buffer.getValue();	  Object    o    =    buffer.unreachableIterator();    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	138	None	replace
487	[BUG]  [BUGGY]  Object  o  =  buffer.get(stackSize);  [CE]  buffer  has  private  access  in  JsonReader  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  buffer.get(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  buffer.get(stackSize);	  Object    o    =    buffer.unreachableIterator();    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	138	None	replace
488	[BUG]  [BUGGY]  Object  o  =  peekAndClearStandard(stackSize);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStandard(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStandard(stackSize);	  Object    o    =    peekAndClearStandard();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
489	[BUG]  [BUGGY]  Object  o  =  peekAndClearStandard(stack);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStandard(stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStandard(stack);	  Object    o    =    peekAndClearStandard();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
490	[BUG]  [BUGGY]  Object  o  =  getAndClearStandard();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndClearStandard();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndClearStandard();	  Object    o    =    peekAndClearStandard();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
491	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(stackSize  +  1);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(stackSize  +  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(stackSize  +  1);	  Object    o    =    peekAndFixStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
492	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(stackSize,  count);  [CE]  cannot  find  symbol  count  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(stackSize,  count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(stackSize,  count);	  Object    o    =    peekAndFixStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	40	None	replace
493	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(stackSize  -  1);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(stackSize  -  1);	  Object    o    =    peekAndFixStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
494	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(stackSize  +  2);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(stackSize  +  2);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(stackSize  +  2);	  Object    o    =    peekAndFixStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
495	[BUG]  [BUGGY]  Object  o  =  peekAsJsonPrimitive();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAsJsonPrimitive();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAsJsonPrimitive();	  Object    o    =    peekAsJsonStackTrace();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
496	[BUG]  [BUGGY]  Object  o  =  peekAsJsonStackTrace(stackSize);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAsJsonStackTrace(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAsJsonStackTrace(stackSize);	  Object    o    =    peekAsJsonStackTrace();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
497	[BUG]  [BUGGY]  Object  o  =  peekAsJsonStackTrace(stack);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAsJsonStackTrace(stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAsJsonStackTrace(stack);	  Object    o    =    peekAsJsonStackTrace();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
498	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.END_ARRAY,  stackSize);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.END_ARRAY,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.END_ARRAY,  stackSize);	  Object    o    =    peekToken(JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
499	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.END_ARRAY,  stack);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.END_ARRAY,  stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.END_ARRAY,  stack);	  Object    o    =    peekToken(JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
500	[BUG]  [BUGGY]  Object  o  =  peek(JsonToken.END_ARRAY);  [CE]  no  suitable  method  found  for  peek(JsonToken)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(JsonToken.END_ARRAY);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(JsonToken.END_ARRAY);	  Object    o    =    peekToken(JsonToken.END_ARRAY);    	non-compiled	[CE]  no  suitable  method  found  for  peek(JsonToken)	132	None	replace
501	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.END_ARRAY,  stack[stackSize  -  1]);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.END_ARRAY,  stack[stackSize  -  1]);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.END_ARRAY,  stack[stackSize  -  1]);	  Object    o    =    peekToken(JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
502	[BUG]  [BUGGY]  Object  o  =  this.getIterator();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.getIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.getIterator();	  Object    o    =    getIterator();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
503	[BUG]  [BUGGY]  Object  o  =  getIteratorInput();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getIteratorInput();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIteratorInput();	  Object    o    =    getIterator();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
504	[BUG]  [BUGGY]  Object  o  =  findIterator();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  findIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  findIterator();	  Object    o    =    getIterator();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
505	[BUG]  [BUGGY]  Object  o  =  UNREADABLE_READER.unreachablePeek();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  UNREADABLE_READER.unreachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  UNREADABLE_READER.unreachablePeek();	  Object    o    =    pathNames.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
506	[BUG]  [BUGGY]  Object  o  =  pathNames!=  null?  JsonToken.UNRESOLVED  :  pathNames.unreachablePeek();  [CE]  cannot  find  symbol  UNRESOLVED  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pathNames!=  null?  JsonToken.UNRESOLVED  :  pathNames.unreachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pathNames!=  null?  JsonToken.UNRESOLVED  :  pathNames.unreachablePeek();	  Object    o    =    pathNames.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol  UNRESOLVED	89	None	replace
507	[BUG]  [BUGGY]  Object  o  =  pathNames!=  null?  JsonToken.NONE  :  pathNames.unreachablePeek();  [CE]  cannot  find  symbol  NONE  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pathNames!=  null?  JsonToken.NONE  :  pathNames.unreachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pathNames!=  null?  JsonToken.NONE  :  pathNames.unreachablePeek();	  Object    o    =    pathNames.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol  NONE	89	None	replace
508	[BUG]  [BUGGY]  Object  o  =  pathNames  ==  null?  JsonToken.UNRESOLVED  :  pathNames.unreachablePeek();  [CE]  cannot  find  symbol  UNRESOLVED  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pathNames  ==  null?  JsonToken.UNRESOLVED  :  pathNames.unreachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pathNames  ==  null?  JsonToken.UNRESOLVED  :  pathNames.unreachablePeek();	  Object    o    =    pathNames.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol  UNRESOLVED	89	None	replace
509	[BUG]  [BUGGY]  Object  o  =  pathNames  ==  null?  JsonToken.NONE  :  pathNames.unreachablePeek();  [CE]  cannot  find  symbol  NONE  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pathNames  ==  null?  JsonToken.NONE  :  pathNames.unreachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pathNames  ==  null?  JsonToken.NONE  :  pathNames.unreachablePeek();	  Object    o    =    pathNames.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol  NONE	89	None	replace
510	[BUG]  [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getStandardObject();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getStandardObject();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  stack  =(JsonPrimitive)getStandardObject();	  JsonPrimitive    stack    =(JsonPrimitive)getObject();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
511	[BUG]  [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getCurrentObject();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getCurrentObject();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  stack  =(JsonPrimitive)getCurrentObject();	  JsonPrimitive    stack    =(JsonPrimitive)getObject();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
512	[BUG]  [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getEmptyObject();  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getEmptyObject();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  stack  =(JsonPrimitive)getEmptyObject();	  JsonPrimitive    stack    =(JsonPrimitive)getObject();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
513	[BUG]  [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getCurrentStructure();  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getCurrentStructure();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  stack  =(JsonPrimitive)getCurrentStructure();	  JsonPrimitive    stack    =(JsonPrimitive)getObject();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
514	[BUG]  [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getArray();  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getArray();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  stack  =(JsonPrimitive)getArray();	  JsonPrimitive    stack    =(JsonPrimitive)getObject();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
515	[BUG]  [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getStandardValue();  [CE]  cannot  find  symbol  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getStandardValue();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  stack  =(JsonPrimitive)getStandardValue();	  JsonPrimitive    stack    =(JsonPrimitive)getObject();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
516	[BUG]  [BUGGY]  Object  o  =  stack.stack();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.stack();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.stack();	  Object    o    =    this.stack();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
517	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1].stack();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1].stack();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1].stack();	  Object    o    =    this.stack();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
518	[BUG]  [BUGGY]  Object  o  =  this.stack.stack();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack.stack();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.stack.stack();	  Object    o    =    this.stack();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
519	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[stackSize];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  this.stack[stackSize];	  Object    o    =    this.stack();    	compilable	  [FE]  AssertionError  	30	2	replace
520	[BUG]  [BUGGY]  Object  o  =  this.stack[stackSize];  [FE]  AssertionError  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[stackSize];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.stack[stackSize];	  Object    o    =    this.stack();    	compilable	  [FE]  AssertionError  	30	2	replace
521	[BUG]  [BUGGY]  Object  o  =  push(stackSize,  count);  [CE]  cannot  find  symbol  count  [FE]        StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  push(stackSize,  count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  push(stackSize,  count);	  Object    o    =    push(stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	118	None	replace
522	[BUG]  [BUGGY]  Object  o  =  push(stackSize  +  1);  [CE]  incompatible  types  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  push(stackSize  +  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  push(stackSize  +  1);	  Object    o    =    push(stackSize);    	non-compiled	[CE]  incompatible  types	118	None	replace
523	[BUG]  [BUGGY]  Object  o  =  push(stack.length);  [CE]  incompatible  types  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  push(stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  push(stack.length);	  Object    o    =    push(stackSize);    	non-compiled	[CE]  incompatible  types	118	None	replace
524	[BUG]  [BUGGY]  Object  o  =  push(stackSize  -  1);  [CE]  incompatible  types  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  push(stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  push(stackSize  -  1);	  Object    o    =    push(stackSize);    	non-compiled	[CE]  incompatible  types	118	None	replace
525	[BUG]  [BUGGY]  Object  o  =  push(stackSize,  offset);  [CE]  cannot  find  symbol  offset  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  push(stackSize,  offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  push(stackSize,  offset);	  Object    o    =    push(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	118	None	replace
526	[BUG]  [BUGGY]  Object  o  =  push(offset,  stackSize);  [CE]  cannot  find  symbol  offset  [FE]                  StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  push(offset,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  push(offset,  stackSize);	  Object    o    =    push(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	118	None	replace
527	[BUG]  [BUGGY]  Object  o  =  push(stack,  offset);  [CE]  cannot  find  symbol  offset  [FE]                    StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  push(stack,  offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  push(stack,  offset);	  Object    o    =    push(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	118	None	replace
528	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek(null);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  isObject  [FE]                  StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek(null);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek(null);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Object    o    =    peek();    Object    o    =    peek(;    	non-compiled	[CE]  cannot  find  symbol  isObject	36	None	replace
529	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek(null);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  isObject  [FE]                    StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek(null);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek(null);  }  else  {  throw  new  IllegalStateException( " ");  }	  Object    o    =    peek();    Object    o    =    peek(;    	non-compiled	[CE]  cannot  find  symbol  isObject	36	None	replace
530	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek(;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek(;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek(;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Object    o    =    peek();    Object    o    =    peek(;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
531	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek(;  }  [CE]  illegal  start  of  expression  [FE]                        StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek(;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek(;  }	  Object    o    =    peek();    Object    o    =    peek(;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
532	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek(null);  }  [CE]  cannot  find  symbol  isObject  [FE]                          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek(null);  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek(null);  }	  Object    o    =    peek();    Object    o    =    peek(;    	non-compiled	[CE]  cannot  find  symbol  isObject	36	None	replace
533	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(stacks);  [CE]  cannot  find  symbol  stacks  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(stacks);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(stacks);	  Object    o    =    peekAndFixStack(paths);    	non-compiled	[CE]  cannot  find  symbol  stacks	81	None	replace
534	[BUG]  [BUGGY]  Integer  o  =  peek(stackSize);  [CE]  no  suitable  method  found  for  peek(int)  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  o  =  peek(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  o  =  peek(stackSize);	  Object    o    =    peek();    Integer    o    =    peek();    	non-compiled	[CE]  no  suitable  method  found  for  peek(int)	33	None	replace
535	[BUG]  [BUGGY]  Attribute  o  =  peek();  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Attribute  o  =  peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Attribute  o  =  peek();	  Object    o    =    peek();    Integer    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
536	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(stackSize,  offset);  [CE]  cannot  find  symbol  offset  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(stackSize,  offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(stackSize,  offset);	  Object    o    =    peekAndFixStack(stackSize,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	141	None	replace
537	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(stack,  offset,  stackSize);  [CE]  cannot  find  symbol  offset  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(stack,  offset,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(stack,  offset,  stackSize);	  Object    o    =    peekAndFixStack(stackSize,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	141	None	replace
538	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(stackSize,  stackOffset);  [CE]  cannot  find  symbol  stackOffset  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(stackSize,  stackOffset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(stackSize,  stackOffset);	  Object    o    =    peekAndFixStack(stackSize,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  stackOffset	141	None	replace
539	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(offset,  stackSize);  [CE]  cannot  find  symbol  offset  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(offset,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(offset,  stackSize);	  Object    o    =    peekAndFixStack(stackSize,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	141	None	replace
540	[BUG]  [BUGGY]  Object[]  stack  =(Object[])this.stack.clone();  [CE]  cannot  find  symbol  o  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object[]  stack  =(Object[])this.stack.clone();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object[]  stack  =(Object[])this.stack.clone();	  Object[]    stack    =(Object[])stack.clone();    	non-compiled	[CE]  cannot  find  symbol  o	48	None	replace
541	[BUG]  [BUGGY]  Object[]  stack  =(Object[])this.stacks.clone();  [CE]  cannot  find  symbol  stacks  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object[]  stack  =(Object[])this.stacks.clone();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object[]  stack  =(Object[])this.stacks.clone();	  Object[]    stack    =(Object[])stack.clone();    	non-compiled	[CE]  cannot  find  symbol  stacks	48	None	replace
542	[BUG]  [BUGGY]  Object[]  stack  =(Object[])this.pathNames.clone();  [CE]  cannot  find  symbol  o  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object[]  stack  =(Object[])this.pathNames.clone();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object[]  stack  =(Object[])this.pathNames.clone();	  Object[]    stack    =(Object[])stack.clone();    	non-compiled	[CE]  cannot  find  symbol  o	48	None	replace
543	[BUG]  [BUGGY]  Object[]  stack  =(Object[])this.stackList.clone();  [CE]  cannot  find  symbol  stackList  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object[]  stack  =(Object[])this.stackList.clone();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object[]  stack  =(Object[])this.stackList.clone();	  Object[]    stack    =(Object[])stack.clone();    	non-compiled	[CE]  cannot  find  symbol  stackList	48	None	replace
544	[BUG]  [BUGGY]  Object[]  stack  =(Object[])null.clone();  [CE]  <null>  cannot  be  dereferenced  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object[]  stack  =(Object[])null.clone();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object[]  stack  =(Object[])null.clone();	  Object[]    stack    =(Object[])stack.clone();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	48	None	replace
545	[BUG]  [BUGGY]  Object[]  stack  =(Object[])this.stack.next();  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object[]  stack  =(Object[])this.stack.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object[]  stack  =(Object[])this.stack.next();	  Object[]    stack    =(Object[])iterator.next();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
546	[BUG]  [BUGGY]  Object[]  stack  =(Object[])stack.next();  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object[]  stack  =(Object[])stack.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object[]  stack  =(Object[])stack.next();	  Object[]    stack    =(Object[])iterator.next();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
547	[BUG]  [BUGGY]  Object[]  stack  =(Object[])iterator.clone();  [CE]  cannot  find  symbol  iterator  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object[]  stack  =(Object[])iterator.clone();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object[]  stack  =(Object[])iterator.clone();	  Object[]    stack    =(Object[])iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	47	None	replace
548	[BUG]  [BUGGY]  Object[]  stack  =(Object[])iterator.getValue();  [CE]  cannot  find  symbol  iterator  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object[]  stack  =(Object[])iterator.getValue();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object[]  stack  =(Object[])iterator.getValue();	  Object[]    stack    =(Object[])iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	47	None	replace
549	[BUG]  [BUGGY]  Object[]  stack  =(Object[])getIterator();  [CE]  cannot  find  symbol  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object[]  stack  =(Object[])getIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object[]  stack  =(Object[])getIterator();	  Object[]    stack    =(Object[])iterator.next();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
550	[BUG]  [BUGGY]  Object  o  =  lookupCurrentToken(JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  lookupCurrentToken(JsonToken.END_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  lookupCurrentToken(JsonToken.END_OBJECT);	  Object    o    =    lookupCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
551	[BUG]  [BUGGY]  Object  o  =  lookupCurrentToken(JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  lookupCurrentToken(JsonToken.START_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  lookupCurrentToken(JsonToken.START_OBJECT);	  Object    o    =    lookupCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	74	None	replace
552	[BUG]  [BUGGY]  Object  o  =  lookupCurrentToken(JsonPrimitive.UNREADABLE_READER);  [CE]  cannot  find  symbol  UNREADABLE_READER  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  lookupCurrentToken(JsonPrimitive.UNREADABLE_READER);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  lookupCurrentToken(JsonPrimitive.UNREADABLE_READER);	  Object    o    =    lookupCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  UNREADABLE_READER	74	None	replace
553	[BUG]  [BUGGY]  char  stackSize  =  stack[stackSize  -  2];  [CE]  incompatible  types  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  char  stackSize  =  stack[stackSize  -  2];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	char  stackSize  =  stack[stackSize  -  2];	  int    stackSize    =    stack[stackSize    -    2];    	non-compiled	[CE]  incompatible  types	50	None	replace
554	[BUG]  [BUGGY]  Integer  stackSize  =  stack[stackSize  -  2];  [CE]  incompatible  types  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stackSize  =  stack[stackSize  -  2];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stackSize  =  stack[stackSize  -  2];	  int    stackSize    =    stack[stackSize    -    2];    	non-compiled	[CE]  incompatible  types	50	None	replace
555	[BUG]  [BUGGY]  float  stackSize  =  stack[stackSize  -  2];  [CE]  possible  loss  of  precision  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  float  stackSize  =  stack[stackSize  -  2];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	float  stackSize  =  stack[stackSize  -  2];	  int    stackSize    =    stack[stackSize    -    2];    	non-compiled	[CE]  possible  loss  of  precision	50	None	replace
556	[BUG]  [BUGGY]  int  stackSize  =  stack[stackSize  /  2];  [CE]  incompatible  types  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  int  stackSize  =  stack[stackSize  /  2];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	int  stackSize  =  stack[stackSize  /  2];	  int    stackSize    =    stack[stackSize    -    2];    	non-compiled	[CE]  incompatible  types	50	None	replace
557	[BUG]  [BUGGY]  Object  o  =  peek(count,  stackSize);  [CE]  cannot  find  symbol  count  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(count,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(count,  stackSize);	  Object    o    =    peek(stackSize,    stackOffset);    	non-compiled	[CE]  cannot  find  symbol  count	135	None	replace
558	[BUG]  [BUGGY]  Object  o  =  push(null);  [CE]  incompatible  types  [FE]        StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  push(null);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  push(null);	  Object    o    =    push();    	non-compiled	[CE]  incompatible  types	82	None	replace
559	[BUG]  [BUGGY]  Object  o  =  push(stack);  [CE]  incompatible  types  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  push(stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  push(stack);	  Object    o    =    push();    	non-compiled	[CE]  incompatible  types	82	None	replace
560	[BUG]  [BUGGY]  Object  o  =  push(stackSize,  1);  [CE]  method  push  in  class  JsonTreeReader  cannot  be  applied  to  given  types;  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  push(stackSize,  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  push(stackSize,  1);	  Object    o    =    push();    	non-compiled	[CE]  method  push  in  class  JsonTreeReader  cannot  be  applied  to  given  types;	82	None	replace
561	[BUG]  [BUGGY]  Object  o  =  peek(stack);  [CE]  no  suitable  method  found  for  peek(Object[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack);	  Object    o    =    peekAndFix(stack);    	non-compiled	[CE]  no  suitable  method  found  for  peek(Object[])	56	None	replace
562	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stack,  bufferSize);  [CE]  cannot  find  symbol  bufferSize  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stack,  bufferSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stack,  bufferSize);	  Object    o    =    peekAndFix(stack);    	non-compiled	[CE]  cannot  find  symbol  bufferSize	56	None	replace
563	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stack,  pathSize);  [CE]  cannot  find  symbol  pathSize  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stack,  pathSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stack,  pathSize);	  Object    o    =    peekAndFix(stack);    	non-compiled	[CE]  cannot  find  symbol  pathSize	56	None	replace
564	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }  [CE]  <identifier>  expected  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
565	[BUG]  [BUGGY]  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }  [CE]  <identifier>  expected  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
566	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER  [CE]  <identifier>  expected  [FE]                  StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
567	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_REA  [CE]  <identifier>  expected  [FE]                    StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_REA  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_REA	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
568	[BUG]  [BUGGY]  null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }  [CE]  ';'  expected  [FE]                      StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  ';'  expected	111	None	replace
569	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE  [CE]  <identifier>  expected  [FE]                        StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
570	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().cloneTree().getImplicitPrototype();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().cloneTree().getImplicitPrototype();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().cloneTree().getImplicitPrototype();	  Object    o    =    getCurrentToken().getImplicitPrototype();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
571	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().getPrototype();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().getPrototype();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().getPrototype();	  Object    o    =    getCurrentToken().getImplicitPrototype();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
572	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().toImplicitPrototype();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().toImplicitPrototype();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().toImplicitPrototype();	  Object    o    =    getCurrentToken().getImplicitPrototype();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
573	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().getPrimitive();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().getPrimitive();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().getPrimitive();	  Object    o    =    getCurrentToken().getImplicitPrototype();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
574	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().implicitPrototype();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().implicitPrototype();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().implicitPrototype();	  Object    o    =    getCurrentToken().getImplicitPrototype();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
575	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  2];  Object  o  =  stack[stackSize  -  2];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  2];  Object  o  =  stack[stackSize  -  2];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    2];    Object  o  =  stack[stackSize  -  2];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	63	None	add
576	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  2];  JsonToken  o  =  stack[stackSize  -  2];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  2];  JsonToken  o  =  stack[stackSize  -  2];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    2];    JsonToken  o  =  stack[stackSize  -  2];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	63	None	add
577	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  2];  Object  o  =  stack[stackSize  -  1];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  2];  Object  o  =  stack[stackSize  -  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    2];    Object  o  =  stack[stackSize  -  1];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	63	None	add
578	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  2];  Object  o  =  stack[stackSize  -  2)];  [CE]  ']'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  2];  Object  o  =  stack[stackSize  -  2)];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    2];    Object  o  =  stack[stackSize  -  2)];	  	non-compiled	[CE]  ']'  expected	63	None	add
579	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  2];  Object  o  =  stack[stackSize  -  3];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  2];  Object  o  =  stack[stackSize  -  3];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    2];    Object  o  =  stack[stackSize  -  3];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	63	None	add
580	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  2];  Object  o  =  stack[stackSize  *  2];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  2];  Object  o  =  stack[stackSize  *  2];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    2];    Object  o  =  stack[stackSize  *  2];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	63	None	add
581	[BUG]  [BUGGY]  Object  o  =  bufferIterator(this,  iterator.unreachableIterator());  [CE]  cannot  find  symbol  iterator  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  bufferIterator(this,  iterator.unreachableIterator());  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  bufferIterator(this,  iterator.unreachableIterator());	  Object    o    =    bufferIterator(this.unreachableIterator());    	non-compiled	[CE]  cannot  find  symbol  iterator	77	None	replace
582	[BUG]  [BUGGY]  Object  o  =  bufferIterator(null,  this.unreachableIterator());  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  bufferIterator(null,  this.unreachableIterator());  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  bufferIterator(null,  this.unreachableIterator());	  Object    o    =    bufferIterator(this.unreachableIterator());    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
583	[BUG]  [BUGGY]  Object  o  =  bufferIterator(iterator.unreachableIterator());  [CE]  cannot  find  symbol  iterator  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  bufferIterator(iterator.unreachableIterator());  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  bufferIterator(iterator.unreachableIterator());	  Object    o    =    bufferIterator(this.unreachableIterator());    	non-compiled	[CE]  cannot  find  symbol  iterator	77	None	replace
584	[BUG]  [BUGGY]  Object  o  =  bufferIterator(this.null,  this.unreachableIterator());  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  bufferIterator(this.null,  this.unreachableIterator());  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  bufferIterator(this.null,  this.unreachableIterator());	  Object    o    =    bufferIterator(this.unreachableIterator());    	non-compiled	[CE]  <identifier>  expected	77	None	replace
585	[BUG]  [BUGGY]  Object  o  =  peekAndThrow(stackSize  +  1);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndThrow(stackSize  +  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndThrow(stackSize  +  1);	  Object    o    =    peekAndThrow(stackSize);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
586	[BUG]  [BUGGY]  Object  o  =  peekAndThrow(stackSize,  stackSize);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndThrow(stackSize,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndThrow(stackSize,  stackSize);	  Object    o    =    peekAndThrow(stackSize);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
587	[BUG]  [BUGGY]  Object  o  =  peekAndThrow(stackSize,  count);  [CE]  cannot  find  symbol  count  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndThrow(stackSize,  count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndThrow(stackSize,  count);	  Object    o    =    peekAndThrow(stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	18	None	replace
588	[BUG]  [BUGGY]  Object  o  =  peekAndThrow(stack.length);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndThrow(stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndThrow(stack.length);	  Object    o    =    peekAndThrow(stackSize);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
589	[BUG]  [BUGGY]  Object  o  =  peekAndThrow(stackSize  -  1);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndThrow(stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndThrow(stackSize  -  1);	  Object    o    =    peekAndThrow(stackSize);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
590	[BUG]  [BUGGY]  Object  o  =  peekAndThrow(stackSize,  stack.length);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndThrow(stackSize,  stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndThrow(stackSize,  stack.length);	  Object    o    =    peekAndThrow(stackSize);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
591	[BUG]  [BUGGY]  Object  o  =  this.stack[stackSize  -  1];  Object  o  =  this.stack[stackSize  -  1];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[stackSize  -  1];  Object  o  =  this.stack[stackSize  -  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    this.stack[stackSize    -    1];    Object  o  =  this.stack[stackSize  -  1];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	66	None	add
592	[BUG]  [BUGGY]  Object  o  =  this.stack[stackSize  -  1];  Object  o  =  this.stack[this.stack[stackSize  -  1];  [CE]  ']'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[stackSize  -  1];  Object  o  =  this.stack[this.stack[stackSize  -  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    this.stack[stackSize    -    1];    Object  o  =  this.stack[this.stack[stackSize  -  1];	  	non-compiled	[CE]  ']'  expected	66	None	add
593	[BUG]  [BUGGY]  Object  o  =  this.stack[stackSize  -  1];  Object  o  =  this.stack[stackSize  -  2];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[stackSize  -  1];  Object  o  =  this.stack[stackSize  -  2];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    this.stack[stackSize    -    1];    Object  o  =  this.stack[stackSize  -  2];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	66	None	add
594	[BUG]  [BUGGY]  Object  o  =  this.stack[stackSize  -  1];  JsonToken  o  =  this.stack[stackSize  -  1];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[stackSize  -  1];  JsonToken  o  =  this.stack[stackSize  -  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    this.stack[stackSize    -    1];    JsonToken  o  =  this.stack[stackSize  -  1];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	66	None	add
595	[BUG]  [BUGGY]  Object  o  =  this.stack[stackSize  -  1];  Object  o  =  this.stack[(stackSize  -  1)];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[stackSize  -  1];  Object  o  =  this.stack[(stackSize  -  1)];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    this.stack[stackSize    -    1];    Object  o  =  this.stack[(stackSize  -  1)];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	66	None	add
596	[BUG]  [BUGGY]  Object  o  =  this.stack[stackSize  -  1];  Object  o  =  this.stack[stackSize  +  1];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[stackSize  -  1];  Object  o  =  this.stack[stackSize  +  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    this.stack[stackSize    -    1];    Object  o  =  this.stack[stackSize  +  1];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	66	None	add
597	[BUG]  [BUGGY]  Object  o  =  stack.unreachablePeek(stackSize);  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.unreachablePeek(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.unreachablePeek(stackSize);	  Object    o    =    this.unreachablePeek(stackSize);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
598	[BUG]  [BUGGY]  Object  o  =  stackSize.unreachablePeek(stackSize);  [CE]  int  cannot  be  dereferenced  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stackSize.unreachablePeek(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stackSize.unreachablePeek(stackSize);	  Object    o    =    this.unreachablePeek(stackSize);    	non-compiled	[CE]  int  cannot  be  dereferenced	16	None	replace
599	[BUG]  [BUGGY]  Object  o  =  stackSize.unreachablePeek(this);  [CE]  int  cannot  be  dereferenced  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stackSize.unreachablePeek(this);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stackSize.unreachablePeek(this);	  Object    o    =    this.unreachablePeek(stackSize);    	non-compiled	[CE]  int  cannot  be  dereferenced	16	None	replace
600	[BUG]  [BUGGY]  Object  o  =  this.unreachablePeek(stackSize,  stackSize);  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.unreachablePeek(stackSize,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.unreachablePeek(stackSize,  stackSize);	  Object    o    =    this.unreachablePeek(stackSize);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
601	[BUG]  [BUGGY]  Object  o  =  this.unreachablePeek(stackSize,  count);  [CE]  cannot  find  symbol  count  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.unreachablePeek(stackSize,  count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.unreachablePeek(stackSize,  count);	  Object    o    =    this.unreachablePeek(stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	16	None	replace
602	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  pathIndices);  [CE]  no  suitable  method  found  for  peek(int,int[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize,  pathIndices);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  pathIndices);	  Object    o    =    peek(pathIndices,    stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(int,int[])	87	None	replace
603	[BUG]  [BUGGY]  Object  o  =  peek(pathIndices,  stackSize,  count);  [CE]  cannot  find  symbol  count  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(pathIndices,  stackSize,  count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(pathIndices,  stackSize,  count);	  Object    o    =    peek(pathIndices,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	87	None	replace
604	[BUG]  [BUGGY]  Object  o  =  peek(pathIndices,  stackNames,  stackSize);  [CE]  cannot  find  symbol  stackNames  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(pathIndices,  stackNames,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(pathIndices,  stackNames,  stackSize);	  Object    o    =    peek(pathIndices,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  stackNames	87	None	replace
605	[BUG]  [BUGGY]  Object  o  =  peek(pathIndices,  pathNames,  stackSize);  [CE]  no  suitable  method  found  for  peek(int[],String[],int)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(pathIndices,  pathNames,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(pathIndices,  pathNames,  stackSize);	  Object    o    =    peek(pathIndices,    stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(int[],String[],int)	87	None	replace
606	[BUG]  [BUGGY]  Object  o  =  peek(pathIndices,  stackSize,  offset);  [CE]  cannot  find  symbol  offset  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(pathIndices,  stackSize,  offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(pathIndices,  stackSize,  offset);	  Object    o    =    peek(pathIndices,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	87	None	replace
607	[BUG]  [BUGGY]  Object  o  =  peek(stack,  pathIndices);  [CE]  no  suitable  method  found  for  peek(Object[],int[])  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  pathIndices);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  pathIndices);	  Object    o    =    peek(pathIndices,    stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(Object[],int[])	87	None	replace
608	[BUG]  [BUGGY]  JsonToken  o  =  getCurrentToken().first;  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonToken  o  =  getCurrentToken().first;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonToken  o  =  getCurrentToken().first;	  JsonToken    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
609	[BUG]  [BUGGY]  JsonToken  o  =  getCurrentToken().getJsonToken();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonToken  o  =  getCurrentToken().getJsonToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonToken  o  =  getCurrentToken().getJsonToken();	  JsonToken    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
610	[BUG]  [BUGGY]  JsonToken  o  =  getCurrentToken().toString();  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonToken  o  =  getCurrentToken().toString();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonToken  o  =  getCurrentToken().toString();	  JsonToken    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
611	[BUG]  [BUGGY]  JsonToken  o  =  getCurrentToken().next();  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonToken  o  =  getCurrentToken().next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonToken  o  =  getCurrentToken().next();	  JsonToken    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
612	[BUG]  [BUGGY]  JsonToken  o  =  getCurrentToken().jsToken();  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonToken  o  =  getCurrentToken().jsToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonToken  o  =  getCurrentToken().jsToken();	  JsonToken    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
613	[BUG]  [BUGGY]  JsonToken  o  =  getCurrentToken().getImplicitPrototype();  [CE]  cannot  find  symbol  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonToken  o  =  getCurrentToken().getImplicitPrototype();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonToken  o  =  getCurrentToken().getImplicitPrototype();	  JsonToken    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
614	[BUG]  [BUGGY]  Object  o  =  peekIndices(pathNames);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekIndices(pathNames);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekIndices(pathNames);	  Object    o    =    peekIndices();    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
615	[BUG]  [BUGGY]  Object  o  =  peek(pathIndices());  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(pathIndices());  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(pathIndices());	  Object    o    =    peekIndices();    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
616	[BUG]  [BUGGY]  Object  o  =  this.peekIndices();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.peekIndices();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.peekIndices();	  Object    o    =    peekIndices();    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
617	[BUG]  [BUGGY]  Object  o  =  peek(pathNames);  [CE]  no  suitable  method  found  for  peek(String[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(pathNames);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(pathNames);	  Object    o    =    peekIndices();    	non-compiled	[CE]  no  suitable  method  found  for  peek(String[])	131	None	replace
618	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().getImplicitReturn().toString();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().getImplicitReturn().toString();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().getImplicitReturn().toString();	  Object    o    =    getCurrentToken().toString();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
619	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().getMessage();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().getMessage();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().getMessage();	  Object    o    =    getCurrentToken().toString();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
620	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().toJsonString();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().toJsonString();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().toJsonString();	  Object    o    =    getCurrentToken().toString();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
621	[BUG]  [BUGGY]  Object  o  =  this.stacks.next();  [CE]  cannot  find  symbol  stacks  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stacks.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.stacks.next();	  Object    o    =    stacks.next();    	non-compiled	[CE]  cannot  find  symbol  stacks	115	None	replace
622	[BUG]  [BUGGY]  Object  o  =  tokens.next();  [CE]  cannot  find  symbol  tokens  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  tokens.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  tokens.next();	  Object    o    =    stacks.next();    	non-compiled	[CE]  cannot  find  symbol  tokens	115	None	replace
623	[BUG]  [BUGGY]  Object  o  =  pathNames.next();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pathNames.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pathNames.next();	  Object    o    =    stacks.next();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
624	[BUG]  [BUGGY]  Object  o  =  getImmediateParentNode();  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getImmediateParentNode();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getImmediateParentNode();	  Object    o    =    getNode();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
625	[BUG]  [BUGGY]  Object  o  =  getNodeInput();  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getNodeInput();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getNodeInput();	  Object    o    =    getNode();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
626	[BUG]  [BUGGY]  Object  o  =  getNodeType();  [CE]  cannot  find  symbol  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getNodeType();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getNodeType();	  Object    o    =    getNode();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
627	[BUG]  [BUGGY]  Object  o  =  getNode().getObject();  [CE]  cannot  find  symbol  [FE]                  StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getNode().getObject();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getNode().getObject();	  Object    o    =    getNode();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
628	[BUG]  [BUGGY]  Object  o  =  peek(null,  stackSize,  count);  [CE]  cannot  find  symbol  count  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(null,  stackSize,  count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(null,  stackSize,  count);	  Object    o    =    peek(null,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	88	None	replace
629	[BUG]  [BUGGY]  Object  o  =  peek(null,  stackSize,  offset);  [CE]  cannot  find  symbol  offset  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(null,  stackSize,  offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(null,  stackSize,  offset);	  Object    o    =    peek(null,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	88	None	replace
630	[BUG]  [BUGGY]  Object  o  =  getImplicitReachable().getObject();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getImplicitReachable().getObject();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getImplicitReachable().getObject();	  Object    o    =    getImplicitReachable();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
631	[BUG]  [BUGGY]  Object  o  =  findImplicitReachable();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  findImplicitReachable();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  findImplicitReachable();	  Object    o    =    getImplicitReachable();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
632	[BUG]  [BUGGY]  Object  o  =  this.getImplicitReachable();  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.getImplicitReachable();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.getImplicitReachable();	  Object    o    =    getImplicitReachable();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
633	[BUG]  [BUGGY]  Object  o  =  getImplicitReachable().getValue();  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getImplicitReachable().getValue();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getImplicitReachable().getValue();	  Object    o    =    getImplicitReachable();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
634	[BUG]  [BUGGY]  Object  o  =  getImplicitReachable(stackSize);  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getImplicitReachable(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getImplicitReachable(stackSize);	  Object    o    =    getImplicitReachable();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
635	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackSize(stackSize);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackSize(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackSize(stackSize);	  Object    o    =    peekAndClearStackSize();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
636	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackSize(stack);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackSize(stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackSize(stack);	  Object    o    =    peekAndClearStackSize();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
637	[BUG]  [BUGGY]  Object  o  =  getAndClearStackSize();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndClearStackSize();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndClearStackSize();	  Object    o    =    peekAndClearStackSize();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
638	[BUG]  [BUGGY]  Object  o  =  this.peekAndClearStackSize();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.peekAndClearStackSize();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.peekAndClearStackSize();	  Object    o    =    peekAndClearStackSize();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
639	[BUG]  [BUGGY]  Object  o  =  this.buffer.unreachablePeek();  [CE]  buffer  has  private  access  in  JsonReader  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.buffer.unreachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.buffer.unreachablePeek();	  Object    o    =    buffer.unreachablePeek();    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	120	None	replace
640	[BUG]  [BUGGY]  Object  o  =  buffer.peek();  [CE]  buffer  has  private  access  in  JsonReader  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  buffer.peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  buffer.peek();	  Object    o    =    buffer.unreachablePeek();    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	120	None	replace
641	[BUG]  [BUGGY]  Object  o  =  buffer.get(stackSize  -  1);  [CE]  buffer  has  private  access  in  JsonReader  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  buffer.get(stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  buffer.get(stackSize  -  1);	  Object    o    =    buffer.unreachablePeek();    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	120	None	replace
642	[BUG]  [BUGGY]  Object  o  =  peekAndClearStandardStack(stackSize);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStandardStack(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStandardStack(stackSize);	  Object    o    =    peekAndClearStandardStack();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
643	[BUG]  [BUGGY]  Object  o  =  peekAndClearStandardStack(stack);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStandardStack(stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStandardStack(stack);	  Object    o    =    peekAndClearStandardStack();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
644	[BUG]  [BUGGY]  Object  o  =  peekAndThrow(offset);  [CE]  cannot  find  symbol  offset  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndThrow(offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndThrow(offset);	  Object    o    =    peekAndThrow(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	18	None	replace
645	[BUG]  [BUGGY]  Object  o  =  peekAndThrow(stack,  stackSize);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndThrow(stack,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndThrow(stack,  stackSize);	  Object    o    =    peekAndThrow(stackSize);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
646	[BUG]  [BUGGY]  Object  o  =  peekAndThrow(stack);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndThrow(stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndThrow(stack);	  Object    o    =    peekAndThrow(stackSize);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
647	[BUG]  [BUGGY]  Object  o  =  peek(stack,  pathNames);  [CE]  no  suitable  method  found  for  peek(Object[],String[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  pathNames);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  pathNames);	  Object    o    =    peek(stackSize,    stack);    	non-compiled	[CE]  no  suitable  method  found  for  peek(Object[],String[])	137	None	replace
648	[BUG]  [BUGGY]  Object  o  =  peek(stack,  index);  [CE]  cannot  find  symbol  index  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  index);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  index);	  Object    o    =    peek(stackSize,    stack);    	non-compiled	[CE]  cannot  find  symbol  index	137	None	replace
649	[BUG]  [BUGGY]  Object[]  stack  =(Object[])iterator.peek();  [CE]  cannot  find  symbol  iterator  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object[]  stack  =(Object[])iterator.peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object[]  stack  =(Object[])iterator.peek();	  Object[]    stack    =(Object[])iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	47	None	replace
650	[BUG]  [BUGGY]  Object[]  stack  =(Object[])object.next();  [CE]  cannot  find  symbol  object  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object[]  stack  =(Object[])object.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object[]  stack  =(Object[])object.next();	  Object[]    stack    =(Object[])iterator.next();    	non-compiled	[CE]  cannot  find  symbol  object	47	None	replace
651	[BUG]  [BUGGY]  Object  o  =  peekAndClearStack(offset);  [CE]  cannot  find  symbol  offset  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStack(offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStack(offset);	  Object    o    =    peekAndClearStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	68	None	replace
652	[BUG]  [BUGGY]  Object  o  =  peek(stackSize);  Object  o  =  peek();  [CE]  no  suitable  method  found  for  peek(int)  [FE]        StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize);  Object  o  =  peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize);  Object  o  =  peek();	  Object    o    =    peek();    Object    o    =    peek();    	non-compiled	[CE]  no  suitable  method  found  for  peek(int)	31	None	replace
653	[BUG]  [BUGGY]  Object  o  =  peekAt(stackSize);  Object  o  =  peek();  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAt(stackSize);  Object  o  =  peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAt(stackSize);  Object  o  =  peek();	  Object    o    =    peek();    Object    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
654	[BUG]  [BUGGY]  Object  o  =  peek(pathNames,  offset,  stackSize);  [CE]  cannot  find  symbol  offset  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(pathNames,  offset,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(pathNames,  offset,  stackSize);	  Object    o    =    peek(pathNames,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	86	None	replace
655	[BUG]  [BUGGY]  if(isPrimitive)  {  Object  o  =  peek();  Object  o  =  look();  }  [CE]  cannot  find  symbol  isPrimitive  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isPrimitive)  {  Object  o  =  peek();  Object  o  =  look();  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isPrimitive)  {  Object  o  =  peek();  Object  o  =  look();  }	  Object    o    =    peek();    Object    o    =    look();    	non-compiled	[CE]  cannot  find  symbol  isPrimitive	34	None	replace
656	[BUG]  [BUGGY]  Object  o  =  peek(stackSize);  Object  o  =  look();  [CE]  no  suitable  method  found  for  peek(int)  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize);  Object  o  =  look();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize);  Object  o  =  look();	  Object    o    =    peek();    Object    o    =    look();    	non-compiled	[CE]  no  suitable  method  found  for  peek(int)	34	None	replace
657	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonPrimitive.START_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.START_OBJECT);	  Object    o    =    peekToken(JsonPrimitive.UNREADABLE_READER);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	10	None	replace
658	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.END_OBJECT);  [CE]  cannot  find  symbol  END_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonPrimitive.END_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.END_OBJECT);	  Object    o    =    peekToken(JsonPrimitive.UNREADABLE_READER);    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	10	None	replace
659	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(stackSize,  stack);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(stackSize,  stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(stackSize,  stack);	  Object    o    =    peekAndFixStack(stack);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
660	[BUG]  [BUGGY]  Object  o  =  getAndFix(offset);  [CE]  cannot  find  symbol  offset  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndFix(offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndFix(offset);	  Object    o    =    getAndFix();    	non-compiled	[CE]  cannot  find  symbol  offset	128	None	replace
661	[BUG]  [BUGGY]  Object  o  =  findAndFix();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  findAndFix();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  findAndFix();	  Object    o    =    getAndFix();    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
662	[BUG]  [BUGGY]  Object  o  =  lookupAndFix();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  lookupAndFix();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  lookupAndFix();	  Object    o    =    getAndFix();    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
663	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackDelimiter();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackDelimiter();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackDelimiter();	  Object    o    =    peekAndClearStackStack();    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
664	[BUG]  [BUGGY]  JsonPrimitive  primitive  =(JsonPrimitive)emptyIteratorIfNull(iterator.next());  [CE]  cannot  find  symbol  iterator  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  primitive  =(JsonPrimitive)emptyIteratorIfNull(iterator.next());  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  primitive  =(JsonPrimitive)emptyIteratorIfNull(iterator.next());	  JsonPrimitive    primitive    =(JsonPrimitive)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	44	None	replace
665	[BUG]  [BUGGY]  JsonPrimitive  primitive  =(JsonPrimitive)emptyIteratorIfNull(iterator);  [CE]  cannot  find  symbol  iterator  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  primitive  =(JsonPrimitive)emptyIteratorIfNull(iterator);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  primitive  =(JsonPrimitive)emptyIteratorIfNull(iterator);	  JsonPrimitive    primitive    =(JsonPrimitive)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	44	None	replace
666	[BUG]  [BUGGY]  JsonPrimitive  primitive  =(JsonPrimitive)emptyIterator();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  primitive  =(JsonPrimitive)emptyIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  primitive  =(JsonPrimitive)emptyIterator();	  JsonPrimitive    primitive    =(JsonPrimitive)iterator.next();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
667	[BUG]  [BUGGY]  JsonPrimitive  primitive  =(JsonPrimitive)iterator.previous();  [CE]  cannot  find  symbol  iterator  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  primitive  =(JsonPrimitive)iterator.previous();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  primitive  =(JsonPrimitive)iterator.previous();	  JsonPrimitive    primitive    =(JsonPrimitive)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	44	None	replace
668	[BUG]  [BUGGY]  Object  o  =  createCurrentToken(JsonPrimitive.UNREADABLE_READER);  [CE]  cannot  find  symbol  UNREADABLE_READER  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  createCurrentToken(JsonPrimitive.UNREADABLE_READER);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  createCurrentToken(JsonPrimitive.UNREADABLE_READER);	  Object    o    =    createCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  UNREADABLE_READER	126	None	replace
669	[BUG]  [BUGGY]  Object  o  =  createCurrentToken(JsonPrimitive.NULL_OBJECT);  [CE]  cannot  find  symbol  NULL_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  createCurrentToken(JsonPrimitive.NULL_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  createCurrentToken(JsonPrimitive.NULL_OBJECT);	  Object    o    =    createCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  NULL_OBJECT	126	None	replace
670	[BUG]  [BUGGY]  Object  o  =  peekToken(null,  stackSize);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(null,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(null,  stackSize);	  Object    o    =    peekToken(null);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
671	[BUG]  [BUGGY]  Object  o  =  peekToken(null,  stack);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(null,  stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(null,  stack);	  Object    o    =    peekToken(null);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
672	[BUG]  [BUGGY]  Object  o  =  peekToken(null,  JsonPrimitive.class);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(null,  JsonPrimitive.class);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(null,  JsonPrimitive.class);	  Object    o    =    peekToken(null);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
673	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.NULL);  [CE]  cannot  find  symbol  NULL  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonPrimitive.NULL);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.NULL);	  Object    o    =    peekToken(null);    	non-compiled	[CE]  cannot  find  symbol  NULL	98	None	replace
674	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().jsonToString(pathNames);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().jsonToString(pathNames);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().jsonToString(pathNames);	  Object    o    =    getCurrentToken().jsonToString();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
675	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().jsonToString(null);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().jsonToString(null);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().jsonToString(null);	  Object    o    =    getCurrentToken().jsonToString();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
676	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().jsonToString(false);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().jsonToString(false);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().jsonToString(false);	  Object    o    =    getCurrentToken().jsonToString();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
677	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().getJsonToString();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().getJsonToString();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().getJsonToString();	  Object    o    =    getCurrentToken().jsonToString();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
678	[BUG]  [BUGGY]  Object  o  =  pushStackToSubtract(offset);  [CE]  cannot  find  symbol  offset  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushStackToSubtract(offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStackToSubtract(offset);	  Object    o    =    pushStackToSubtract(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	116	None	replace
679	[BUG]  [BUGGY]  Object  o  =  pushStackToSubtract(stack);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushStackToSubtract(stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStackToSubtract(stack);	  Object    o    =    pushStackToSubtract(stackSize);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
680	[BUG]  [BUGGY]  Object  o  =  pushStackToSubtract(stackSize  -  1);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushStackToSubtract(stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStackToSubtract(stackSize  -  1);	  Object    o    =    pushStackToSubtract(stackSize);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
681	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().first.getImplicitPrototype();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().first.getImplicitPrototype();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().first.getImplicitPrototype();	  Object    o    =    getCurrentToken().getImplicitPrototype();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
682	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().findImplicitPrototype();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().findImplicitPrototype();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().findImplicitPrototype();	  Object    o    =    getCurrentToken().getImplicitPrototype();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
683	[BUG]  [BUGGY]  Object  o  =  findCurrentToken().getImplicitPrototype();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  findCurrentToken().getImplicitPrototype();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  findCurrentToken().getImplicitPrototype();	  Object    o    =    getCurrentToken().getImplicitPrototype();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
684	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().getImplicitPROtotype();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().getImplicitPROtotype();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().getImplicitPROtotype();	  Object    o    =    getCurrentToken().getImplicitPrototype();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
685	[BUG]  [BUGGY]  Object  o  =  peek(pathNames());  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(pathNames());  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(pathNames());	  Object    o    =    peekIndices();    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
686	[BUG]  [BUGGY]  Object  o  =  peekAttributes();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAttributes();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAttributes();	  Object    o    =    peekIndices();    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
687	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackSize()  +  stackSize;  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackSize()  +  stackSize;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackSize()  +  stackSize;	  Object    o    =    peekAndClearStackSize();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
688	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackSize(offset);  [CE]  cannot  find  symbol  offset  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackSize(offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackSize(offset);	  Object    o    =    peekAndClearStackSize();    	non-compiled	[CE]  cannot  find  symbol  offset	99	None	replace
689	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackSize(pathNames);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackSize(pathNames);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackSize(pathNames);	  Object    o    =    peekAndClearStackSize();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
690	[BUG]  [BUGGY]  Object  o  =  find(stackSize);  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  find(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  find(stackSize);	  Object    o    =    get(stackSize);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
691	[BUG]  [BUGGY]  Object  o  =  get(stackSize,  stackSize);  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  get(stackSize,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  get(stackSize,  stackSize);	  Object    o    =    get(stackSize);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
692	[BUG]  [BUGGY]  if(isPrimitive)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  [CE]  cannot  find  symbol  isPrimitive  [FE]        StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isPrimitive)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isPrimitive)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }	  Object    o    =    peek();    JsonObject    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol  isPrimitive	117	None	replace
693	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  isObject  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  else  {  throw  new  IllegalStateException( " ");  }	  Object    o    =    peek();    JsonObject    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol  isObject	117	None	replace
694	[BUG]  [BUGGY]  Object  o  =  lookupPrimitive();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  lookupPrimitive();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  lookupPrimitive();	  Object    o    =    lookupCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
695	[BUG]  [BUGGY]  Object  o  =  lookupCurrentToken(JsonPrimitive.class);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  lookupCurrentToken(JsonPrimitive.class);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  lookupCurrentToken(JsonPrimitive.class);	  Object    o    =    lookupCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
696	[BUG]  [BUGGY]  Object  o  =  lookupCurrentToken(JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  lookupCurrentToken(JsonToken.END_ARRAY);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  lookupCurrentToken(JsonToken.END_ARRAY);	  Object    o    =    lookupCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
697	[BUG]  [BUGGY]  Object  o  =  stack[this.next()  -  1;  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[this.next()  -  1;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[this.next()  -  1;	  Object    o    =    stack[this.next();    	non-compiled	[CE]  ']'  expected	107	None	replace
698	[BUG]  [BUGGY]  Object  o  =  peekAsJsonNull();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAsJsonNull();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAsJsonNull();	  Object    o    =    peekAsJsonStackTrace();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
699	[BUG]  [BUGGY]  Object  o  =  peekAndClearJsonStackTrace();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearJsonStackTrace();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearJsonStackTrace();	  Object    o    =    peekAsJsonStackTrace();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
700	[BUG]  [BUGGY]  Object  o  =  pushNull();  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushNull();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushNull();	  Object    o    =    push();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
701	[BUG]  [BUGGY]  Object  o  =  pushPrimitive();  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushPrimitive();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushPrimitive();	  Object    o    =    push();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
702	[BUG]  [BUGGY]  Object  o  =  pushNode();  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushNode();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushNode();	  Object    o    =    push();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
703	[BUG]  [BUGGY]  Object  o  =  handleNonArray(stackSize());  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  handleNonArray(stackSize());  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  handleNonArray(stackSize());	  Object    o    =    pushStackSize();    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
704	[BUG]  [BUGGY]  Object  o  =  getNodeToken();  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getNodeToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getNodeToken();	  Object    o    =    getNode();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
705	[BUG]  [BUGGY]  Object  o  =  getImmediateNode();  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getImmediateNode();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getImmediateNode();	  Object    o    =    getNode();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
706	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME  [CE]  <identifier>  expected  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
707	[BUG]  [BUGGY]  if(stack!=  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  <identifier>  expected  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack!=  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack!=  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
708	[BUG]  [BUGGY]  if(stack  ==  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  <identifier>  expected  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack  ==  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack  ==  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
709	[BUG]  [BUGGY]  if(isPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  <identifier>  expected  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
710	[BUG]  [BUGGY]  if(stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(  [CE]  <identifier>  expected  [FE]                  StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
711	[BUG]  [BUGGY]  Object  o  =  stacks.unreachablePeek(stackSize);  [CE]  cannot  find  symbol  stacks  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stacks.unreachablePeek(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stacks.unreachablePeek(stackSize);	  Object    o    =    this.unreachablePeek(stackSize);    	non-compiled	[CE]  cannot  find  symbol  stacks	16	None	replace
712	[BUG]  [BUGGY]  Object  o  =  stackstackSize.unreachablePeek(this);  [CE]  cannot  find  symbol  stackstackSize  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stackstackSize.unreachablePeek(this);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stackstackSize.unreachablePeek(this);	  Object    o    =    this.unreachablePeek(stackSize);    	non-compiled	[CE]  cannot  find  symbol  stackstackSize	16	None	replace
713	[BUG]  [BUGGY]  Object  o  =  pushStack(offset);  [CE]  cannot  find  symbol  offset  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushStack(offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStack(offset);	  Object    o    =    pushStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	103	None	replace
714	[BUG]  [BUGGY]  Object  o  =  pushStack(stackSize  +  2);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushStack(stackSize  +  2);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStack(stackSize  +  2);	  Object    o    =    pushStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
715	[BUG]  [BUGGY]  Object  o  =  list.unreachableIterator();  [CE]  cannot  find  symbol  list  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  list.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  list.unreachableIterator();	  Object    o    =    pathNames.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  list	139	None	replace
716	[BUG]  [BUGGY]  Object  o  =  root.unreachableIterator();  [CE]  cannot  find  symbol  root  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  root.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  root.unreachableIterator();	  Object    o    =    pathNames.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  root	139	None	replace
717	[BUG]  [BUGGY]  Object  o  =  registry.unreachableIterator();  [CE]  cannot  find  symbol  registry  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  registry.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  registry.unreachableIterator();	  Object    o    =    pathNames.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  registry	139	None	replace
718	[BUG]  [BUGGY]  Object  o  =  stackNames.unreachableIterator();  [CE]  cannot  find  symbol  stackNames  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stackNames.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stackNames.unreachableIterator();	  Object    o    =    pathNames.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  stackNames	139	None	replace
719	[BUG]  [BUGGY]  Object  o  =  peekAsJsonObject();  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAsJsonObject();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAsJsonObject();	  Object    o    =    peekAsObject();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
720	[BUG]  [BUGGY]  Object  o  =  peekAsJsonToken(this);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAsJsonToken(this);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAsJsonToken(this);	  Object    o    =    peekAsJsonToken();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
721	[BUG]  [BUGGY]  Object  o  =  peekAsJsonToken(jsonTokenType);  [CE]  cannot  find  symbol  jsonTokenType  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAsJsonToken(jsonTokenType);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAsJsonToken(jsonTokenType);	  Object    o    =    peekAsJsonToken();    	non-compiled	[CE]  cannot  find  symbol  jsonTokenType	97	None	replace
722	[BUG]  [BUGGY]  Object  o  =  peekAsJsonToken().value;  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAsJsonToken().value;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAsJsonToken().value;	  Object    o    =    peekAsJsonToken();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
723	[BUG]  [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  -  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  -  1;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	int  stackSize  =  stack[stackSize  -  1]  -  1;	  int    stackSize    =    stack[stackSize    -    1];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	46	None	replace
724	[BUG]  [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  +  offset;  [CE]  cannot  find  symbol  offset  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  +  offset;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	int  stackSize  =  stack[stackSize  -  1]  +  offset;	  int    stackSize    =    stack[stackSize    -    1];    	non-compiled	[CE]  cannot  find  symbol  offset	46	None	replace
725	[BUG]  [BUGGY]  Object  o  =  stack.get();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.get();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.get();	  Object    o    =    stack.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
726	[BUG]  [BUGGY]  Object  o  =  stack.values().unreachablePeek();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.values().unreachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.values().unreachablePeek();	  Object    o    =    stack.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
727	[BUG]  [BUGGY]  Object  o  =  JsonPrimitive.createJsonPrimitive(stack);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  JsonPrimitive.createJsonPrimitive(stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  JsonPrimitive.createJsonPrimitive(stack);	  Object    o    =    null;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
728	[BUG]  [BUGGY]  Object  o  =  JsonPrimitive.getInstance();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  JsonPrimitive.getInstance();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  JsonPrimitive.getInstance();	  Object    o    =    null;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
729	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE  [CE]  <identifier>  expected  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
730	[BUG]  [BUGGY]  if(stack!=  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE  [CE]  <identifier>  expected  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack!=  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack!=  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
731	[BUG]  [BUGGY]  if(stack  ==  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE  [CE]  <identifier>  expected  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack  ==  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack  ==  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
732	[BUG]  [BUGGY]  Object  o  =  stack.values().unreachableIterator();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.values().unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.values().unreachableIterator();	  Object    o    =    stack.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
733	[BUG]  [BUGGY]  Object  o  =  getInput();  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getInput();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getInput();	  Object    o    =    getPeek();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
734	[BUG]  [BUGGY]  Object  o  =  getIterator(stack);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getIterator(stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterator(stack);	  Object    o    =    getIterator(stackSize);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
735	[BUG]  [BUGGY]  Object  o  =  peekAndFixCurrentToken();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixCurrentToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixCurrentToken();	  Object    o    =    peekCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
736	[BUG]  [BUGGY]  Object  o  =  peek(currentToken());  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(currentToken());  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(currentToken());	  Object    o    =    peekCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
737	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().next().getValue();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().next().getValue();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().next().getValue();	  Object    o    =    getCurrentToken().getValue();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
738	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[0]):  stack[stackSize  -  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[0]):  stack[stackSize  -  1];	  Object    o    =    stack[stackSize    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	2	replace
739	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[0]):  stack[stackSize  -  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[0]):  stack[stackSize  -  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[0]):  stack[stackSize  -  1];	  Object    o    =    stack[stackSize    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	2	replace
740	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?(JsonPrimitive)stack[0]  :  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?(JsonPrimitive)stack[0]  :  null;	  Object    o    =    stack[stackSize    -    1];    	compilable	  [FE]  AssertionError  	61	2	replace
741	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?(JsonPrimitive)stack[0]  :  null;  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?(JsonPrimitive)stack[0]  :  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?(JsonPrimitive)stack[0]  :  null;	  Object    o    =    stack[stackSize    -    1];    	compilable	  [FE]  AssertionError  	61	2	replace
742	[BUG]  [BUGGY]  Object  o  =  peek(null,  pathNames);  [CE]  no  suitable  method  found  for  peek(<null>,String[])  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(null,  pathNames);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(null,  pathNames);	  Object    o    =    peek(null);    	non-compiled	[CE]  no  suitable  method  found  for  peek(<null>,String[])	83	None	replace
743	[BUG]  [BUGGY]  Object  o  =  peek(null,  stack.length);  [CE]  no  suitable  method  found  for  peek(<null>,int)  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(null,  stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(null,  stack.length);	  Object    o    =    peek(null);    	non-compiled	[CE]  no  suitable  method  found  for  peek(<null>,int)	83	None	replace
744	[BUG]  [BUGGY]  Object  o  =  peek(UNREADABLE_READER);  [CE]  no  suitable  method  found  for  peek(Reader)  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(UNREADABLE_READER);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(UNREADABLE_READER);	  Object    o    =    peek(null);    	non-compiled	[CE]  no  suitable  method  found  for  peek(Reader)	83	None	replace
745	[BUG]  [BUGGY]  Object  o  =  peek(pathNames,  stack.length);  [CE]  no  suitable  method  found  for  peek(String[],int)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(pathNames,  stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(pathNames,  stack.length);	  Object    o    =    peek(stack.length,    stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(String[],int)	6	None	replace
746	[BUG]  [BUGGY]  Object  o  =  findCurrentToken(JsonPrimitive.NULL_OBJECT);  [CE]  cannot  find  symbol  NULL_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  findCurrentToken(JsonPrimitive.NULL_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  findCurrentToken(JsonPrimitive.NULL_OBJECT);	  Object    o    =    findCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  NULL_OBJECT	55	None	replace
747	[BUG]  [BUGGY]  Object  o  =  findCurrentToken(JsonPrimitive.UNREADABLE_READER);  [CE]  cannot  find  symbol  UNREADABLE_READER  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  findCurrentToken(JsonPrimitive.UNREADABLE_READER);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  findCurrentToken(JsonPrimitive.UNREADABLE_READER);	  Object    o    =    findCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  UNREADABLE_READER	55	None	replace
748	[BUG]  [BUGGY]  Object  o  =  findCurrentToken(JsonPrimitive.class);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  findCurrentToken(JsonPrimitive.class);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  findCurrentToken(JsonPrimitive.class);	  Object    o    =    findCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
749	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(true,  stackSize);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(true,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(true,  stackSize);	  Object    o    =    peekAndFixStack(false);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
750	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(false,  pathNames);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(false,  pathNames);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(false,  pathNames);	  Object    o    =    peekAndFixStack(false);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
751	[BUG]  [BUGGY]  Object  o  =  peekAndThrow(System.identityHashCode(paths));  [CE]  cannot  find  symbol  paths  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndThrow(System.identityHashCode(paths));  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndThrow(System.identityHashCode(paths));	  Object    o    =    peekAndThrow(System.identityHashCode(this));    	non-compiled	[CE]  cannot  find  symbol  paths	95	None	replace
752	[BUG]  [BUGGY]  Object  o  =  push(offset);  [CE]  cannot  find  symbol  offset  [FE]        StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  push(offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  push(offset);	  Object    o    =    push(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	118	None	replace
753	[BUG]  [BUGGY]  Object  o  =  push(stack,  stackSize);  [CE]  method  push  in  class  JsonTreeReader  cannot  be  applied  to  given  types;  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  push(stack,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  push(stack,  stackSize);	  Object    o    =    push(stackSize);    	non-compiled	[CE]  method  push  in  class  JsonTreeReader  cannot  be  applied  to  given  types;	118	None	replace
754	[BUG]  [BUGGY]  Object  o  =  push(stackSize,  stackSize);  [CE]  method  push  in  class  JsonTreeReader  cannot  be  applied  to  given  types;  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  push(stackSize,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  push(stackSize,  stackSize);	  Object    o    =    push(stackSize);    	non-compiled	[CE]  method  push  in  class  JsonTreeReader  cannot  be  applied  to  given  types;	118	None	replace
755	[BUG]  [BUGGY]  Object  o  =  stacks.peek();  [CE]  cannot  find  symbol  stacks  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stacks.peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stacks.peek();	  Object    o    =    stack.peek();    	non-compiled	[CE]  cannot  find  symbol  stacks	85	None	replace
756	[BUG]  [BUGGY]  Object  o  =  startCurrentToken(JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  startCurrentToken(JsonToken.END_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  startCurrentToken(JsonToken.END_OBJECT);	  Object    o    =    startCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
757	[BUG]  [BUGGY]  Object  o  =  startCurrentToken(JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  startCurrentToken(JsonToken.START_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  startCurrentToken(JsonToken.START_OBJECT);	  Object    o    =    startCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	125	None	replace
758	[BUG]  [BUGGY]  Object  o  =  this.needIterator();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.needIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.needIterator();	  Object    o    =    null.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
759	[BUG]  [BUGGY]  Object  o  =  lookupIterator();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  lookupIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  lookupIterator();	  Object    o    =    getIterator();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
760	[BUG]  [BUGGY]  Object  o  =  getIterator(null);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getIterator(null);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterator(null);	  Object    o    =    getIterator();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
761	[BUG]  [BUGGY]  Object  o  =  peekAndClearBuffer(0);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearBuffer(0);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearBuffer(0);	  Object    o    =    peekAndClearBuffer();    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
762	[BUG]  [BUGGY]  Object  o  =  iterators.next();  [CE]  cannot  find  symbol  iterators  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  iterators.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  iterators.next();	  Object    o    =    stacks.next();    	non-compiled	[CE]  cannot  find  symbol  iterators	115	None	replace
763	[BUG]  [BUGGY]  Object  o  =  peekAndClearBounds();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearBounds();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearBounds();	  Object    o    =    peekAndClear();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
764	[BUG]  [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)emptyIteratorIfNull(iterator.next());  [CE]  cannot  find  symbol  iterator  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)emptyIteratorIfNull(iterator.next());  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  stack  =(JsonPrimitive)emptyIteratorIfNull(iterator.next());	  JsonPrimitive    stack    =(JsonPrimitive)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	112	None	replace
765	[BUG]  [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)iterator.getValue();  [CE]  cannot  find  symbol  iterator  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)iterator.getValue();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  stack  =(JsonPrimitive)iterator.getValue();	  JsonPrimitive    stack    =(JsonPrimitive)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	112	None	replace
766	[BUG]  [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)emptyIterator();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)emptyIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  stack  =(JsonPrimitive)emptyIterator();	  JsonPrimitive    stack    =(JsonPrimitive)iterator.next();    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
767	[BUG]  [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)emptyIteratorIfNull(iterator);  [CE]  cannot  find  symbol  iterator  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)emptyIteratorIfNull(iterator);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  stack  =(JsonPrimitive)emptyIteratorIfNull(iterator);	  JsonPrimitive    stack    =(JsonPrimitive)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	112	None	replace
768	[BUG]  [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)stack.next();  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)stack.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  stack  =(JsonPrimitive)stack.next();	  JsonPrimitive    stack    =(JsonPrimitive)iterator.next();    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
769	[BUG]  [BUGGY]  Object  o  =  getIterator().uneachablePeek();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getIterator().uneachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterator().uneachablePeek();	  Object    o    =    getIterator().unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
770	[BUG]  [BUGGY]  Object  o  =  getIterator().unreachableClosed();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getIterator().unreachableClosed();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterator().unreachableClosed();	  Object    o    =    getIterator().unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
771	[BUG]  [BUGGY]  Object  o  =  getIterator().unreachableTree();  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getIterator().unreachableTree();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterator().unreachableTree();	  Object    o    =    getIterator().unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
772	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stack.get(stack.length));  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stack.get(stack.length));  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stack.get(stack.length));	  Object    o    =    peekAndFix(stack.length);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
773	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stack.length  +  1);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stack.length  +  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stack.length  +  1);	  Object    o    =    peekAndFix(stack.length);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
774	[BUG]  [BUGGY]  Object  o  =  peek(-1);  [CE]  no  suitable  method  found  for  peek(int)  [FE]                  StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(-1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(-1);	  Object    o    =    peek();    Object    o    =    peek(;    	non-compiled	[CE]  no  suitable  method  found  for  peek(int)	36	None	replace
775	[BUG]  [BUGGY]  Object  o  =  peek(0);  [CE]  no  suitable  method  found  for  peek(int)  [FE]                    StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(0);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(0);	  Object    o    =    peek();    Object    o    =    peek(;    	non-compiled	[CE]  no  suitable  method  found  for  peek(int)	36	None	replace
776	[BUG]  [BUGGY]  Object  o  =  peek(-1;  [CE]  ')'  expected  [FE]                      StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(-1;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(-1;	  Object    o    =    peek();    Object    o    =    peek(;    	non-compiled	[CE]  ')'  expected	36	None	replace
777	[BUG]  [BUGGY]  Object  o  =  peek(0,  stackSize);  [CE]  no  suitable  method  found  for  peek(int,int)  [FE]                        StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(0,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(0,  stackSize);	  Object    o    =    peek();    Object    o    =    peek(;    	non-compiled	[CE]  no  suitable  method  found  for  peek(int,int)	36	None	replace
778	[BUG]  [BUGGY]  Object  o  =  getIterable();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getIterable();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterable();	  Object    o    =    getImplicitReachable();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
779	[BUG]  [BUGGY]  Object  o  =  getImplicitReachable().object;  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getImplicitReachable().object;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getImplicitReachable().object;	  Object    o    =    getImplicitReachable();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
780	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackTree(0);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackTree(0);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackTree(0);	  Object    o    =    peekAndClearStackTree();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
781	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackTree(null);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackTree(null);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackTree(null);	  Object    o    =    peekAndClearStackTree();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
782	[BUG]  [BUGGY]  Object  o  =  stacks.pushStack();  [CE]  cannot  find  symbol  stacks  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stacks.pushStack();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stacks.pushStack();	  Object    o    =    this.pushStack();    	non-compiled	[CE]  cannot  find  symbol  stacks	27	None	replace
783	[BUG]  [BUGGY]  Object  o  =  stack[this.pushStack();  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[this.pushStack();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[this.pushStack();	  Object    o    =    this.pushStack();    	non-compiled	[CE]  ']'  expected	27	None	replace
784	[BUG]  [BUGGY]  Object  o  =  stack.push(this);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.push(this);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.push(this);	  Object    o    =    this.pushStack();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
785	[BUG]  [BUGGY]  Object  o  =  stack.pushArray();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.pushArray();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.pushArray();	  Object    o    =    this.pushStack();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
786	[BUG]  [BUGGY]  Object  o  =  getDeepest();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getDeepest();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getDeepest();	  Object    o    =    getStack();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
787	[BUG]  [BUGGY]  Object  o  =  getStackOfStandard();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getStackOfStandard();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getStackOfStandard();	  Object    o    =    getStack();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
788	[BUG]  [BUGGY]  Object  o  =  getStackOfElement();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getStackOfElement();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getStackOfElement();	  Object    o    =    getStack();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
789	[BUG]  [BUGGY]  Object  o  =  getStackToken();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getStackToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getStackToken();	  Object    o    =    getStack();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
790	[BUG]  [BUGGY]  Object  o  =  pushAndClearStackTrace();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushAndClearStackTrace();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushAndClearStackTrace();	  Object    o    =    pushStackTrace();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
791	[BUG]  [BUGGY]  Object  o  =  stackTrace();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stackTrace();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stackTrace();	  Object    o    =    pushStackTrace();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
792	[BUG]  [BUGGY]  Object  o  =  findStackTrace();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  findStackTrace();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  findStackTrace();	  Object    o    =    pushStackTrace();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
793	[BUG]  [BUGGY]  Integer  stack  =(Integer)iterator.getValue();  [CE]  cannot  find  symbol  iterator  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(Integer)iterator.getValue();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)iterator.getValue();	  Integer    stack    =(Integer)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	45	None	replace
794	[BUG]  [BUGGY]  Integer  stack  =(Integer)type.next();  [CE]  cannot  find  symbol  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(Integer)type.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)type.next();	  Integer    stack    =(Integer)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  type	45	None	replace
795	[BUG]  [BUGGY]  Integer  stack  =(Integer)getIteratorSize();  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(Integer)getIteratorSize();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)getIteratorSize();	  Integer    stack    =(Integer)iterator.next();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
796	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.START_OBJECT  |  JsonToken.START_ARRAY);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.START_OBJECT  |  JsonToken.START_ARRAY);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.START_OBJECT  |  JsonToken.START_ARRAY);	  Object    o    =    peekToken(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	11	None	replace
797	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.START_OBJECT  |  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.START_OBJECT  |  JsonToken.END_ARRAY);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.START_OBJECT  |  JsonToken.END_ARRAY);	  Object    o    =    peekToken(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	11	None	replace
798	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.START_OBJECT  |  JsonToken.START_NAME);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.START_OBJECT  |  JsonToken.START_NAME);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.START_OBJECT  |  JsonToken.START_NAME);	  Object    o    =    peekToken(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	11	None	replace
799	[BUG]  [BUGGY]  Object  o  =  handleNonArray(JsonPrimitive.NULL_OBJECT,  stackSize);  [CE]  cannot  find  symbol  NULL_OBJECT  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  handleNonArray(JsonPrimitive.NULL_OBJECT,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  handleNonArray(JsonPrimitive.NULL_OBJECT,  stackSize);	  Object    o    =    buffer();    	non-compiled	[CE]  cannot  find  symbol  NULL_OBJECT	92	None	replace
800	[BUG]  [BUGGY]  Object  o  =  handleNonArray(JsonPrimitive.NULL_OBJECT);  [CE]  cannot  find  symbol  NULL_OBJECT  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  handleNonArray(JsonPrimitive.NULL_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  handleNonArray(JsonPrimitive.NULL_OBJECT);	  Object    o    =    buffer();    	non-compiled	[CE]  cannot  find  symbol  NULL_OBJECT	92	None	replace
801	[BUG]  [BUGGY]  Object  o  =  handleNonArray(JsonPrimitive.UNREADABLE_READER);  [CE]  cannot  find  symbol  UNREADABLE_READER  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  handleNonArray(JsonPrimitive.UNREADABLE_READER);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  handleNonArray(JsonPrimitive.UNREADABLE_READER);	  Object    o    =    buffer();    	non-compiled	[CE]  cannot  find  symbol  UNREADABLE_READER	92	None	replace
802	[BUG]  [BUGGY]  Object  o  =  handleNonPrimitive(JsonPrimitive.class);  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  handleNonPrimitive(JsonPrimitive.class);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  handleNonPrimitive(JsonPrimitive.class);	  Object    o    =    buffer();    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
803	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(offset);  [CE]  cannot  find  symbol  offset  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(offset);	  Object    o    =    peekAndFixStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	40	None	replace
804	[BUG]  [BUGGY]  Object  o  =  peekAndFixClose(pathNames);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixClose(pathNames);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixClose(pathNames);	  Object    o    =    peekAndFixClose(stackSize);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
805	[BUG]  [BUGGY]  Object  o  =  peekAndFixClose(stackSize  -  1);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixClose(stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixClose(stackSize  -  1);	  Object    o    =    peekAndFixClose(stackSize);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
806	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1].getCurrentToken();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1].getCurrentToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1].getCurrentToken();	  Object    o    =    this.getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
807	[BUG]  [BUGGY]  Object  o  =  stack[this.getCurrentToken();  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[this.getCurrentToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[this.getCurrentToken();	  Object    o    =    this.getCurrentToken();    	non-compiled	[CE]  ']'  expected	53	None	replace
808	[BUG]  [BUGGY]  Object  o  =  peekStackTrace(offset);  [CE]  cannot  find  symbol  offset  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekStackTrace(offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekStackTrace(offset);	  Object    o    =    peekStackTrace(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	19	None	replace
809	[BUG]  [BUGGY]  Object  o  =  peekStackTrace(stackSize  -  1);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekStackTrace(stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekStackTrace(stackSize  -  1);	  Object    o    =    peekStackTrace(stackSize);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
810	[BUG]  [BUGGY]  Object  o  =  peek(value,  stackSize);  [CE]  cannot  find  symbol  value  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(value,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(value,  stackSize);	  Object    o    =    peek(stack,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  value	4	None	replace
811	[BUG]  [BUGGY]  Object  o  =  peek(last,  stackSize);  [CE]  cannot  find  symbol  last  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(last,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(last,  stackSize);	  Object    o    =    peek(stack,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  last	4	None	replace
812	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(stackNames);  [CE]  cannot  find  symbol  stackNames  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(stackNames);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(stackNames);	  Object    o    =    peekAndFixStack(paths);    	non-compiled	[CE]  cannot  find  symbol  stackNames	81	None	replace
813	[BUG]  [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getUpperBound();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getUpperBound();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  stack  =(JsonPrimitive)getUpperBound();	  JsonPrimitive    stack    =(JsonPrimitive)getObject();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
814	[BUG]  [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getNode();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getNode();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  stack  =(JsonPrimitive)getNode();	  JsonPrimitive    stack    =(JsonPrimitive)getObject();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
815	[BUG]  [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getStackTrace();  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getStackTrace();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  stack  =(JsonPrimitive)getStackTrace();	  JsonPrimitive    stack    =(JsonPrimitive)getObject();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
816	[BUG]  [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getSource();  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getSource();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  stack  =(JsonPrimitive)getSource();	  JsonPrimitive    stack    =(JsonPrimitive)getObject();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
817	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackStandard(pathNames);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackStandard(pathNames);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackStandard(pathNames);	  Object    o    =    peekAndClearStackStandard();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
818	[BUG]  [BUGGY]  Object  o  =  this.stack[stackSize  -  1];  Integer  o  =  this.stack[stackSize  -  1];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[stackSize  -  1];  Integer  o  =  this.stack[stackSize  -  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    this.stack[stackSize    -    1];    Integer  o  =  this.stack[stackSize  -  1];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	66	None	add
819	[BUG]  [BUGGY]  int  stackSize  =  stack[stackSize  -  2]  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  int  stackSize  =  stack[stackSize  -  2]  +  1;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	int  stackSize  =  stack[stackSize  -  2]  +  1;	  int    stackSize    =    stack[stackSize    -    2];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	50	None	replace
820	[BUG]  [BUGGY]  Object  o  =  buffer(iterator.next());  [CE]  cannot  find  symbol  iterator  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  buffer(iterator.next());  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  buffer(iterator.next());	  Object    o    =    iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	62	None	replace
821	[BUG]  [BUGGY]  Object  o  =  stack.get(iterator.next());  [CE]  cannot  find  symbol  iterator  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.get(iterator.next());  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.get(iterator.next());	  Object    o    =    iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	62	None	replace
822	[BUG]  [BUGGY]  Object  o  =  pushStackTree(0);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushStackTree(0);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStackTree(0);	  Object    o    =    pushStackTree();    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
823	[BUG]  [BUGGY]  Object  o  =  findStackTree();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  findStackTree();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  findStackTree();	  Object    o    =    pushStackTree();    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
824	[BUG]  [BUGGY]  Object  o  =  peek(stack,  handleUnknownType());  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  handleUnknownType());  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  handleUnknownType());	  Object    o    =    peek(stack,    count);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
825	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1];  Object  o  =  stack[stackSize  +  1];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1];  Object  o  =  stack[stackSize  +  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    1];    Object  o  =  stack[stackSize  +  1];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	60	None	add
826	[BUG]  [BUGGY]  Object  o  =  peek(pathIndices,  offset,  stackSize);  [CE]  cannot  find  symbol  offset  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(pathIndices,  offset,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(pathIndices,  offset,  stackSize);	  Object    o    =    peek(pathIndices,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	87	None	replace
827	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackTrace().clone();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackTrace().clone();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackTrace().clone();	  Object    o    =    peekAndClearStackTrace();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
828	[BUG]  [BUGGY]  Object  o  =  lookupAndClearStackTrace();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  lookupAndClearStackTrace();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  lookupAndClearStackTrace();	  Object    o    =    peekAndClearStackTrace();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
829	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.class,  stackSize);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonPrimitive.class,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.class,  stackSize);	  Object    o    =    peekToken(JsonPrimitive.class);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
830	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.NULL_OBJECT);  [CE]  cannot  find  symbol  NULL_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonPrimitive.NULL_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.NULL_OBJECT);	  Object    o    =    peekToken(JsonPrimitive.class);    	non-compiled	[CE]  cannot  find  symbol  NULL_OBJECT	96	None	replace
831	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.class,  stack);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonPrimitive.class,  stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.class,  stack);	  Object    o    =    peekToken(JsonPrimitive.class);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
832	[BUG]  [BUGGY]  Object  o  =  peekAndFix(pathNames,  JsonPrimitive.class);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(pathNames,  JsonPrimitive.class);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(pathNames,  JsonPrimitive.class);	  Object    o    =    peekAndFix(pathNames);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
833	[BUG]  [BUGGY]  Object  o  =  peekAndFix(pathNames,  false);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(pathNames,  false);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(pathNames,  false);	  Object    o    =    peekAndFix(pathNames);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
834	[BUG]  [BUGGY]  Object  o  =  peekAndFix(pathNames,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(pathNames,  JsonToken.START_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(pathNames,  JsonToken.START_OBJECT);	  Object    o    =    peekAndFix(pathNames);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	76	None	replace
835	[BUG]  [BUGGY]  Object  o  =  peekAndFix(pathNames,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(pathNames,  JsonToken.END_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(pathNames,  JsonToken.END_OBJECT);	  Object    o    =    peekAndFix(pathNames);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
836	[BUG]  [BUGGY]  Object  o  =  peekAndFixOutOfBounds(pathNames);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixOutOfBounds(pathNames);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixOutOfBounds(pathNames);	  Object    o    =    peekAndFixOutOfBounds();    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
837	[BUG]  [BUGGY]  Object  o  =  peekAndIndexOutOfBounds();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndIndexOutOfBounds();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndIndexOutOfBounds();	  Object    o    =    peekAndFixOutOfBounds();    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
838	[BUG]  [BUGGY]  Object  o  =  peekAndFixOutOfBounds(1);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixOutOfBounds(1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixOutOfBounds(1);	  Object    o    =    peekAndFixOutOfBounds();    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
839	[BUG]  [BUGGY]  Object  o  =  stacks.stack();  [CE]  cannot  find  symbol  stacks  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stacks.stack();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stacks.stack();	  Object    o    =    this.stack();    	non-compiled	[CE]  cannot  find  symbol  stacks	30	None	replace
840	[BUG]  [BUGGY]  if(stack!=  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  <identifier>  expected  [FE]        StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack!=  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack!=  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
841	[BUG]  [BUGGY]  if(stack  ==  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  <identifier>  expected  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack  ==  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack  ==  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
842	[BUG]  [BUGGY]  if(isPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  <identifier>  expected  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
843	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME  [CE]  <identifier>  expected  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
844	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.N  [CE]  <identifier>  expected  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.N  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.N	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
845	[BUG]  [BUGGY]  Object  o  =  handleNonArray(offset);  [CE]  cannot  find  symbol  offset  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  handleNonArray(offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  handleNonArray(offset);	  Object    o    =    handleNonArray(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	29	None	replace
846	[BUG]  [BUGGY]  Object  o  =  handleNonArray(pathNames);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  handleNonArray(pathNames);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  handleNonArray(pathNames);	  Object    o    =    handleNonArray(stackSize);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
847	[BUG]  [BUGGY]  Object  o  =  handleNonArray(null);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  handleNonArray(null);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  handleNonArray(null);	  Object    o    =    handleNonArray(stackSize);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
848	[BUG]  [BUGGY]  Object  o  =  handleNonArray(stack);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  handleNonArray(stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  handleNonArray(stack);	  Object    o    =    handleNonArray(stackSize);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
849	[BUG]  [BUGGY]  Object  o  =  peekAndClearStandard(pathNames);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStandard(pathNames);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStandard(pathNames);	  Object    o    =    peekAndClearStandard();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
850	[BUG]  [BUGGY]  Object  o  =  peekAndClearStandard(0);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStandard(0);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStandard(0);	  Object    o    =    peekAndClearStandard();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
851	[BUG]  [BUGGY]  Object  o  =  peekAndClearStandard(paths);  [CE]  cannot  find  symbol  paths  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStandard(paths);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStandard(paths);	  Object    o    =    peekAndClearStandard();    	non-compiled	[CE]  cannot  find  symbol  paths	72	None	replace
852	[BUG]  [BUGGY]  Object  o  =  peekAndClearStandard(false);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStandard(false);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStandard(false);	  Object    o    =    peekAndClearStandard();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
853	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stack,  pathIndices);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stack,  pathIndices);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stack,  pathIndices);	  Object    o    =    peekAndFix(stack);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
854	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stack,  JsonPrimitive.class);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stack,  JsonPrimitive.class);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stack,  JsonPrimitive.class);	  Object    o    =    peekAndFix(stack);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
855	[BUG]  [BUGGY]  Object  o  =  peek(stackSize);  int  o  =  peek();  [CE]  no  suitable  method  found  for  peek(int)  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize);  int  o  =  peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize);  int  o  =  peek();	  Object    o    =    peek();    int    o    =    peek();    	non-compiled	[CE]  no  suitable  method  found  for  peek(int)	35	None	replace
856	[BUG]  [BUGGY]  Integer  stack  =(Integer)stack.get(0,  stackSize);  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(Integer)stack.get(0,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)stack.get(0,  stackSize);	  Integer    stack    =(Integer)stack.get(stackSize);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
857	[BUG]  [BUGGY]  Integer  stack  =(Integer)stacks.get(offset);  [CE]  cannot  find  symbol  offset  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(Integer)stacks.get(offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)stacks.get(offset);	  Integer    stack    =(Integer)stack.get(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	49	None	replace
858	[BUG]  [BUGGY]  Integer  stack  =(Integer)stackList.get(stackSize);  [CE]  cannot  find  symbol  stackList  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(Integer)stackList.get(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)stackList.get(stackSize);	  Integer    stack    =(Integer)stack.get(stackSize);    	non-compiled	[CE]  cannot  find  symbol  stackList	49	None	replace
859	[BUG]  [BUGGY]  Integer  stack  =(Integer)stack.get(offset,  stackSize);  [CE]  cannot  find  symbol  offset  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(Integer)stack.get(offset,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)stack.get(offset,  stackSize);	  Integer    stack    =(Integer)stack.get(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	49	None	replace
860	[BUG]  [BUGGY]  Object  o  =  stack.values().next();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.values().next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.values().next();	  Object    o    =    stack.next();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
861	[BUG]  [BUGGY]  Object  o  =  peekAndFixStackTrace(null);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStackTrace(null);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStackTrace(null);	  Object    o    =    peekAndFixStackTrace();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
862	[BUG]  [BUGGY]  Object  o  =  peekAndFixStackTrace(pathNames);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStackTrace(pathNames);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStackTrace(pathNames);	  Object    o    =    peekAndFixStackTrace();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
863	[BUG]  [BUGGY]  Object  o  =  bufferIterator(this,  stack.unreachableIterator());  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  bufferIterator(this,  stack.unreachableIterator());  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  bufferIterator(this,  stack.unreachableIterator());	  Object    o    =    bufferIterator(this.unreachableIterator());    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
864	[BUG]  [BUGGY]  Object  o  =  bufferIterator(this,  this.unreachableIterator());  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  bufferIterator(this,  this.unreachableIterator());  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  bufferIterator(this,  this.unreachableIterator());	  Object    o    =    bufferIterator(this.unreachableIterator());    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
865	[BUG]  [BUGGY]  Object  o  =  bufferIterator(this,  pathNames.unreachableIterator());  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  bufferIterator(this,  pathNames.unreachableIterator());  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  bufferIterator(this,  pathNames.unreachableIterator());	  Object    o    =    bufferIterator(this.unreachableIterator());    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
866	[BUG]  [BUGGY]  Object  o  =  bufferIterator(this,  unreachableIterator());  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  bufferIterator(this,  unreachableIterator());  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  bufferIterator(this,  unreachableIterator());	  Object    o    =    bufferIterator(this.unreachableIterator());    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
867	[BUG]  [BUGGY]  Object  o  =  bufferIterator(this,  new  UnreachableIterator());  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  bufferIterator(this,  new  UnreachableIterator());  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  bufferIterator(this,  new  UnreachableIterator());	  Object    o    =    bufferIterator(this.unreachableIterator());    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
868	[BUG]  [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  1];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]    AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    null;    Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  1];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	14	None	add
869	[BUG]  [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]      AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    null;    Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  2];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	14	None	add
870	[BUG]  [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathNames  =  stack[stackSize  -  2];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]        AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathNames  =  stack[stackSize  -  2];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    null;    Object  o  =  null;  this.pathNames  =  stack[stackSize  -  2];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	14	None	add
871	[BUG]  [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathNames  =  stack[stackSize  -  1];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]          AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathNames  =  stack[stackSize  -  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    null;    Object  o  =  null;  this.pathNames  =  stack[stackSize  -  1];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	14	None	add
872	[BUG]  [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathNames  =  new  String[stackSize  -  1];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]            AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathNames  =  new  String[stackSize  -  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    null;    Object  o  =  null;  this.pathNames  =  new  String[stackSize  -  1];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	14	None	add
873	[BUG]  [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  3];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]              AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  3];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    null;    Object  o  =  null;  this.pathIndices  =  stack[stackSize  -  3];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	14	None	add
874	[BUG]  [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.path  =  stack[stackSize  -  2];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.path  =  stack[stackSize  -  2];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    null;    Object  o  =  null;  this.path  =  stack[stackSize  -  2];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	14	None	add
875	[BUG]  [BUGGY]  Object[]  stack  =(Object[])this.pathIndices.clone();  [CE]  inconvertible  types  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object[]  stack  =(Object[])this.pathIndices.clone();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object[]  stack  =(Object[])this.pathIndices.clone();	  Object[]    stack    =(Object[])stack.clone();    	non-compiled	[CE]  inconvertible  types	48	None	replace
876	[BUG]  [BUGGY]  Object[]  stack  =(Object[])pathNames.clone();  [CE]  cannot  find  symbol  o  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object[]  stack  =(Object[])pathNames.clone();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object[]  stack  =(Object[])pathNames.clone();	  Object[]    stack    =(Object[])stack.clone();    	non-compiled	[CE]  cannot  find  symbol  o	48	None	replace
877	[BUG]  [BUGGY]  Object[]  stack  =(Object[])objects.clone();  [CE]  cannot  find  symbol  objects  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object[]  stack  =(Object[])objects.clone();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object[]  stack  =(Object[])objects.clone();	  Object[]    stack    =(Object[])stack.clone();    	non-compiled	[CE]  cannot  find  symbol  objects	48	None	replace
878	[BUG]  [BUGGY]  Object  o  =  this.pathNames.unreachablePeek();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.pathNames.unreachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.pathNames.unreachablePeek();	  Object    o    =    tokens.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
879	[BUG]  [BUGGY]  Object  o  =  filterIterator();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  filterIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  filterIterator();	  Object    o    =    bufferIterator();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
880	[BUG]  [BUGGY]  Object  o  =  peek(stackSize);  Integer  o  =  peek();  [CE]  no  suitable  method  found  for  peek(int)  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize);  Integer  o  =  peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize);  Integer  o  =  peek();	  Object    o    =    peek();    Integer    o    =    peek();    	non-compiled	[CE]  no  suitable  method  found  for  peek(int)	33	None	replace
881	[BUG]  [BUGGY]  Object  o  =  peek(null);  Integer  o  =  peek();  [CE]  no  suitable  method  found  for  peek(<null>)  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(null);  Integer  o  =  peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(null);  Integer  o  =  peek();	  Object    o    =    peek();    Integer    o    =    peek();    	non-compiled	[CE]  no  suitable  method  found  for  peek(<null>)	33	None	replace
882	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  stackSize);  Integer  o  =  peek();  [CE]  no  suitable  method  found  for  peek(int,int)  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize,  stackSize);  Integer  o  =  peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  stackSize);  Integer  o  =  peek();	  Object    o    =    peek();    Integer    o    =    peek();    	non-compiled	[CE]  no  suitable  method  found  for  peek(int,int)	33	None	replace
883	[BUG]  [BUGGY]  JsonPrimitive  o  =  peek();  Integer  o  =  peek();  [CE]  incompatible  types  [FE]                  StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  o  =  peek();  Integer  o  =  peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  o  =  peek();  Integer  o  =  peek();	  Object    o    =    peek();    Integer    o    =    peek();    	non-compiled	[CE]  incompatible  types	33	None	replace
884	[BUG]  [BUGGY]  AnnotatedObject  o  =  peek();  Integer  o  =  peek(o);  [CE]  cannot  find  symbol  [FE]                    StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  AnnotatedObject  o  =  peek();  Integer  o  =  peek(o);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	AnnotatedObject  o  =  peek();  Integer  o  =  peek(o);	  Object    o    =    peek();    Integer    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
885	[BUG]  [BUGGY]  Object  o  =  peek(stack,  0,  stack.length);  [CE]  no  suitable  method  found  for  peek(Object[],int,int)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  0,  stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  0,  stack.length);	  Object    o    =    peek(stackSize,    stack.length);    	non-compiled	[CE]  no  suitable  method  found  for  peek(Object[],int,int)	5	None	replace
886	[BUG]  [BUGGY]  Object  o  =  peek(stack,  stack.length  -  1);  [CE]  no  suitable  method  found  for  peek(Object[],int)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  stack.length  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  stack.length  -  1);	  Object    o    =    peek(stackSize,    stack.length);    	non-compiled	[CE]  no  suitable  method  found  for  peek(Object[],int)	5	None	replace
887	[BUG]  [BUGGY]  Object  o  =  peek(stackSize);  JsonToken  o  =  peek();  [CE]  no  suitable  method  found  for  peek(int)  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize);  JsonToken  o  =  peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize);  JsonToken  o  =  peek();	  Object    o    =    peek();    JsonToken    o    =    peek();    	non-compiled	[CE]  no  suitable  method  found  for  peek(int)	32	None	replace
888	[BUG]  [BUGGY]  Object  o  =  getAndFixStack(offset);  [CE]  cannot  find  symbol  offset  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndFixStack(offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndFixStack(offset);	  Object    o    =    getAndFixStack();    	non-compiled	[CE]  cannot  find  symbol  offset	142	None	replace
889	[BUG]  [BUGGY]  Object  o  =  getAndFixContext();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndFixContext();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndFixContext();	  Object    o    =    getAndFixStack();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
890	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  2];  Object  o  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  2];  Object  o  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    2];    Object  o  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  	non-compiled	[CE]  ';'  expected	63	None	add
891	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  2];  Object  o  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  2];  Object  o  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    2];    Object  o  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }	  	non-compiled	[CE]  ';'  expected	63	None	add
892	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  2];  Object  o  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.END_OBJECT;  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  2];  Object  o  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    2];    Object  o  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.END_OBJECT;  }	  	non-compiled	[CE]  ';'  expected	63	None	add
893	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  2];  Object  o  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive;  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  2];  Object  o  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    2];    Object  o  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive;	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	63	None	add
894	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  2];  Object  o  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonPrimitive.NAME;  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  2];  Object  o  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonPrimitive.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    2];    Object  o  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonPrimitive.NAME;  }	  	non-compiled	[CE]  ';'  expected	63	None	add
895	[BUG]  [BUGGY]  if(stack!=  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE  [CE]  <identifier>  expected  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack!=  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack!=  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
896	[BUG]  [BUGGY]  if(stack  ==  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE  [CE]  <identifier>  expected  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack  ==  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack  ==  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
897	[BUG]  [BUGGY]  Object  o  =  peekAndClearStack(stack.cloneTree());  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStack(stack.cloneTree());  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStack(stack.cloneTree());	  Object    o    =    peekAndClearStack(stack);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
898	[BUG]  [BUGGY]  Object  o  =  peekAndClearStack(stackSize,  stack);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStack(stackSize,  stack);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStack(stackSize,  stack);	  Object    o    =    peekAndClearStack(stack);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
899	[BUG]  [BUGGY]  Object  o  =  peekAndClearStack(stack,  buffer);  [CE]  buffer  has  private  access  in  JsonReader  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStack(stack,  buffer);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStack(stack,  buffer);	  Object    o    =    peekAndClearStack(stack);    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	73	None	replace
900	[BUG]  [BUGGY]  Object  o  =  peekAndFix(jsonToken,  stackSize);  [CE]  cannot  find  symbol  jsonToken  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(jsonToken,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(jsonToken,  stackSize);	  Object    o    =    peekAndFix(stack,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	57	None	replace
901	[BUG]  [BUGGY]  Object  o  =  stackNames.unreachablePeek();  [CE]  cannot  find  symbol  stackNames  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stackNames.unreachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stackNames.unreachablePeek();	  Object    o    =    pathNames.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol  stackNames	89	None	replace
902	[BUG]  [BUGGY]  Object  o  =  pathNames.get(pathNames.length);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pathNames.get(pathNames.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pathNames.get(pathNames.length);	  Object    o    =    pathNames.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
903	[BUG]  [BUGGY]  Object  o  =  list.unreachablePeek();  [CE]  cannot  find  symbol  list  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  list.unreachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  list.unreachablePeek();	  Object    o    =    pathNames.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol  list	89	None	replace
904	[BUG]  [BUGGY]  Object  o  =  paths.unreachablePeek();  [CE]  cannot  find  symbol  paths  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  paths.unreachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  paths.unreachablePeek();	  Object    o    =    pathNames.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol  paths	89	None	replace
905	[BUG]  [BUGGY]  Object  o  =  consume(stackSize  -  1);  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  consume(stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  consume(stackSize  -  1);	  Object    o    =    get(stackSize    -    1);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
906	[BUG]  [BUGGY]  Object  o  =  peek(stackSize  -  1);  [CE]  no  suitable  method  found  for  peek(int)  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize  -  1);	  Object    o    =    get(stackSize    -    1);    	non-compiled	[CE]  no  suitable  method  found  for  peek(int)	37	None	replace
907	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1],  pathNames.next();  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1],  pathNames.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1],  pathNames.next();	  Object    o    =    stack[stackSize    -    1].next();    	non-compiled	[CE]  ';'  expected	65	None	replace
908	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1],  pathNames.length).next();  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1],  pathNames.length).next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1],  pathNames.length).next();	  Object    o    =    stack[stackSize    -    1].next();    	non-compiled	[CE]  ';'  expected	65	None	replace
909	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stackSize  -  1);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stackSize  -  1);	  Object    o    =    peekAndFix(stackSize);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
910	[BUG]  [BUGGY]  Object  o  =  buffer.getIterator(JsonPrimitive.class);  [CE]  buffer  has  private  access  in  JsonReader  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  buffer.getIterator(JsonPrimitive.class);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  buffer.getIterator(JsonPrimitive.class);	  Object    o    =    buffer.unreachableIterator();    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	138	None	replace
911	[BUG]  [BUGGY]  Object  o  =  buffer.getPrimitive();  [CE]  buffer  has  private  access  in  JsonReader  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  buffer.getPrimitive();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  buffer.getPrimitive();	  Object    o    =    buffer.unreachableIterator();    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	138	None	replace
912	[BUG]  [BUGGY]  JsonToken  o  =  findCurrentToken();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonToken  o  =  findCurrentToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonToken  o  =  findCurrentToken();	  JsonToken    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
913	[BUG]  [BUGGY]  JsonToken  o  =  lookupCurrentToken();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonToken  o  =  lookupCurrentToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonToken  o  =  lookupCurrentToken();	  JsonToken    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
914	[BUG]  [BUGGY]  JsonToken  o  =  getCurrentToken().jsonToString();  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonToken  o  =  getCurrentToken().jsonToString();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonToken  o  =  getCurrentToken().jsonToString();	  JsonToken    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
915	[BUG]  [BUGGY]  JsonToken  o  =  this.getCurrentToken();  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonToken  o  =  this.getCurrentToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonToken  o  =  this.getCurrentToken();	  JsonToken    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
916	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(pathNames,  null);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(pathNames,  null);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(pathNames,  null);	  Object    o    =    peekAndFixStack(pathNames);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
917	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(pathNames,  bufferSize);  [CE]  cannot  find  symbol  bufferSize  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(pathNames,  bufferSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(pathNames,  bufferSize);	  Object    o    =    peekAndFixStack(pathNames);    	non-compiled	[CE]  cannot  find  symbol  bufferSize	79	None	replace
918	[BUG]  [BUGGY]  Object  o  =  peek(null,  stackSize,  1);  [CE]  no  suitable  method  found  for  peek(<null>,int,int)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(null,  stackSize,  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(null,  stackSize,  1);	  Object    o    =    peek(null,    stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(<null>,int,int)	88	None	replace
919	[BUG]  [BUGGY]  Object  o  =  peek(null,  stackSize,  0);  [CE]  no  suitable  method  found  for  peek(<null>,int,int)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(null,  stackSize,  0);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(null,  stackSize,  0);	  Object    o    =    peek(null,    stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(<null>,int,int)	88	None	replace
920	[BUG]  [BUGGY]  Object  o  =  peek(null,  pathNames,  stackSize);  [CE]  no  suitable  method  found  for  peek(<null>,String[],int)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(null,  pathNames,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(null,  pathNames,  stackSize);	  Object    o    =    peek(null,    stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(<null>,String[],int)	88	None	replace
921	[BUG]  [BUGGY]  Object  o  =  stackSize.trim();  [CE]  int  cannot  be  dereferenced  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stackSize.trim();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stackSize.trim();	  Object    o    =    stackSize.next();    	non-compiled	[CE]  int  cannot  be  dereferenced	114	None	replace
922	[BUG]  [BUGGY]  Object  o  =  peek(stack,  indices);  [CE]  cannot  find  symbol  indices  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  indices);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  indices);	  Object    o    =    peek(stack,    offset);    	non-compiled	[CE]  cannot  find  symbol  indices	1	None	replace
923	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.START_OBJECT,  stack[stackSize  -  1]);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.START_OBJECT,  stack[stackSize  -  1]);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.START_OBJECT,  stack[stackSize  -  1]);	  Object    o    =    peekToken(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	11	None	replace
924	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.START_OBJECT,  stack[stackSize  -  1);  [CE]  ']'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.START_OBJECT,  stack[stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.START_OBJECT,  stack[stackSize  -  1);	  Object    o    =    peekToken(JsonToken.START_OBJECT);    	non-compiled	[CE]  ']'  expected	11	None	replace
925	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =(this.stack[stackSize  -  1]!=  null)?  this.stack[stackSize  -  1]  :  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =(this.stack[stackSize  -  1]!=  null)?  this.stack[stackSize  -  1]  :  null;	  Object    o    =    this.stack[stackSize    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	2	replace
926	[BUG]  [BUGGY]  Object  o  =(this.stack[stackSize  -  1]!=  null)?  this.stack[stackSize  -  1]  :  null;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =(this.stack[stackSize  -  1]!=  null)?  this.stack[stackSize  -  1]  :  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =(this.stack[stackSize  -  1]!=  null)?  this.stack[stackSize  -  1]  :  null;	  Object    o    =    this.stack[stackSize    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	2	replace
927	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =(this.stack[stackSize  -  1]  ==  null)?  this.stack[stackSize  -  1]  :  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =(this.stack[stackSize  -  1]  ==  null)?  this.stack[stackSize  -  1]  :  null;	  Object    o    =    this.stack[stackSize    -    1];    	compilable	  [FE]  AssertionError  	67	2	replace
928	[BUG]  [BUGGY]  Object  o  =(this.stack[stackSize  -  1]  ==  null)?  this.stack[stackSize  -  1]  :  null;  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =(this.stack[stackSize  -  1]  ==  null)?  this.stack[stackSize  -  1]  :  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =(this.stack[stackSize  -  1]  ==  null)?  this.stack[stackSize  -  1]  :  null;	  Object    o    =    this.stack[stackSize    -    1];    	compilable	  [FE]  AssertionError  	67	2	replace
929	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[stackSize  -  1]  instanceof  JsonPrimitive?(JsonPrimitive)stack[stackSize  -  1]  :  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  this.stack[stackSize  -  1]  instanceof  JsonPrimitive?(JsonPrimitive)stack[stackSize  -  1]  :  null;	  Object    o    =    this.stack[stackSize    -    1];    	compilable	  [FE]  AssertionError  	67	2	replace
930	[BUG]  [BUGGY]  Object  o  =  this.stack[stackSize  -  1]  instanceof  JsonPrimitive?(JsonPrimitive)stack[stackSize  -  1]  :  null;  [FE]  AssertionError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[stackSize  -  1]  instanceof  JsonPrimitive?(JsonPrimitive)stack[stackSize  -  1]  :  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.stack[stackSize  -  1]  instanceof  JsonPrimitive?(JsonPrimitive)stack[stackSize  -  1]  :  null;	  Object    o    =    this.stack[stackSize    -    1];    	compilable	  [FE]  AssertionError  	67	2	replace
931	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[stackSize  -  1]):  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  this.stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[stackSize  -  1]):  null;	  Object    o    =    this.stack[stackSize    -    1];    	compilable	  [FE]  AssertionError  	67	2	replace
932	[BUG]  [BUGGY]  Object  o  =  this.stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[stackSize  -  1]):  null;  [FE]  AssertionError  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[stackSize  -  1]):  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[stackSize  -  1]):  null;	  Object    o    =    this.stack[stackSize    -    1];    	compilable	  [FE]  AssertionError  	67	2	replace
933	[BUG]  [BUGGY]  Object  o  =  this.stackIterator();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stackIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.stackIterator();	  Object    o    =    bufferIterator();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
934	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.length;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  stack.length;	  Object    o    =    pushStackSize();    	compilable	  [FE]  AssertionError  	105	2	replace
935	[BUG]  [BUGGY]  Object  o  =  stack.length;  [FE]  AssertionError  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.length;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.length;	  Object    o    =    pushStackSize();    	compilable	  [FE]  AssertionError  	105	2	replace
936	[BUG]  [BUGGY]  Object  o  =  offset();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  offset();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  offset();	  Object    o    =    pushStackSize();    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
937	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(stackSize  +  1,  stackSize);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(stackSize  +  1,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(stackSize  +  1,  stackSize);	  Object    o    =    peekAndFixStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
938	[BUG]  [BUGGY]  Object  o  =  peekStackToSubtract(stackSize);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekStackToSubtract(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekStackToSubtract(stackSize);	  Object    o    =    pushStackToSubtract(stackSize);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
939	[BUG]  [BUGGY]  Object  o  =  pushStackToSubtract(stackSize,  offset);  [CE]  cannot  find  symbol  offset  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pushStackToSubtract(stackSize,  offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStackToSubtract(stackSize,  offset);	  Object    o    =    pushStackToSubtract(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	116	None	replace
940	[BUG]  [BUGGY]  Object  o  =  getNullValue();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getNullValue();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getNullValue();	  Object    o    =    null;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
941	[BUG]  [BUGGY]  Object  o  =  peekAndFix(pathNames,  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(pathNames,  JsonToken.VALUE_NULL);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(pathNames,  JsonToken.VALUE_NULL);	  Object    o    =    peekAndFix(pathNames);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	76	None	replace
942	[BUG]  [BUGGY]  Object  o  =  peekAndFix(pathNames,  JsonToken.VALUE_EMBEDDED_OBJECT);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(pathNames,  JsonToken.VALUE_EMBEDDED_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(pathNames,  JsonToken.VALUE_EMBEDDED_OBJECT);	  Object    o    =    peekAndFix(pathNames);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	76	None	replace
943	[BUG]  [BUGGY]  Object  o  =  peekAndFix(pathNames,  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(pathNames,  JsonToken.END_ARRAY);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(pathNames,  JsonToken.END_ARRAY);	  Object    o    =    peekAndFix(pathNames);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
944	[BUG]  [BUGGY]  double  stackSize  =  stack[stackSize  -  2];  [CE]  possible  loss  of  precision  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  double  stackSize  =  stack[stackSize  -  2];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	double  stackSize  =  stack[stackSize  -  2];	  int    stackSize    =    stack[stackSize    -    2];    	non-compiled	[CE]  possible  loss  of  precision	50	None	replace
945	[BUG]  [BUGGY]  Object  o  =  peekStack(stackSize);  [CE]  method  peekStack  in  class  JsonTreeReader  cannot  be  applied  to  given  types;  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekStack(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekStack(stackSize);	  Object    o    =    pushStack(stackSize);    	non-compiled	[CE]  method  peekStack  in  class  JsonTreeReader  cannot  be  applied  to  given  types;	103	None	replace
946	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  stackIndices.length);  [CE]  cannot  find  symbol  stackIndices  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize,  stackIndices.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  stackIndices.length);	  Object    o    =    peek(stackSize,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  stackIndices	136	None	replace
947	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  stack.length  -  1);  [CE]  no  suitable  method  found  for  peek(int,int)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize,  stack.length  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  stack.length  -  1);	  Object    o    =    peek(stackSize,    stack.length);    	non-compiled	[CE]  no  suitable  method  found  for  peek(int,int)	5	None	replace
948	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  stack.length  -  1,  stack.length);  [CE]  no  suitable  method  found  for  peek(int,int,int)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize,  stack.length  -  1,  stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  stack.length  -  1,  stack.length);	  Object    o    =    peek(stackSize,    stack.length);    	non-compiled	[CE]  no  suitable  method  found  for  peek(int,int,int)	5	None	replace
949	[BUG]  [BUGGY]  Object  o  =  getIterator2();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getIterator2();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterator2();	  Object    o    =    getIterator();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
950	[BUG]  [BUGGY]  Object  o  =  getIteratorForPeek();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getIteratorForPeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIteratorForPeek();	  Object    o    =    getIterator();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
951	[BUG]  [BUGGY]  Object  o  =  getImmediateParentPointer();  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getImmediateParentPointer();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getImmediateParentPointer();	  Object    o    =    getPeek();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
952	[BUG]  [BUGGY]  Object  o  =  getImplicitReturn();  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getImplicitReturn();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getImplicitReturn();	  Object    o    =    getPeek();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
953	[BUG]  [BUGGY]  Object  o  =  getIterator().push(JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getIterator().push(JsonToken.START_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterator().push(JsonToken.START_OBJECT);	  Object    o    =    getIterator().unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	91	None	replace
954	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  2];  Object  o  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject  ||  isObject)  {  return  JsonToken.NAME;  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  2];  Object  o  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject  ||  isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    2];    Object  o  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject  ||  isObject)  {  return  JsonToken.NAME;  }	  	non-compiled	[CE]  ';'  expected	63	None	add
955	[BUG]  [BUGGY]  Object  o  =  this.stack[stackSize  -  1];  Object  o  =  this.stack[this.stackSize  -  1];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[stackSize  -  1];  Object  o  =  this.stack[this.stackSize  -  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    this.stack[stackSize    -    1];    Object  o  =  this.stack[this.stackSize  -  1];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	66	None	add
956	[BUG]  [BUGGY]  Object  o  =  this.stack[stackSize  -  1];  Object  o  =  this.stack[stackSize  *  1];  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.stack[stackSize  -  1];  Object  o  =  this.stack[stackSize  *  1];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    this.stack[stackSize    -    1];    Object  o  =  this.stack[stackSize  *  1];	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	66	None	add
957	[BUG]  [BUGGY]  Object  o  =  peekAsJsonToken(JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAsJsonToken(JsonToken.START_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAsJsonToken(JsonToken.START_OBJECT);	  Object    o    =    peekAsJsonToken();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	97	None	replace
958	[BUG]  [BUGGY]  Object  o  =  peekAsJsonToken(JsonToken.VALUE_EMBEDDED_OBJECT);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAsJsonToken(JsonToken.VALUE_EMBEDDED_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAsJsonToken(JsonToken.VALUE_EMBEDDED_OBJECT);	  Object    o    =    peekAsJsonToken();    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	97	None	replace
959	[BUG]  [BUGGY]  Object  o  =  peekAsJsonToken(JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAsJsonToken(JsonToken.END_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAsJsonToken(JsonToken.END_OBJECT);	  Object    o    =    peekAsJsonToken();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
960	[BUG]  [BUGGY]  Object  o  =  peekAsJsonToken(JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAsJsonToken(JsonToken.END_ARRAY);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAsJsonToken(JsonToken.END_ARRAY);	  Object    o    =    peekAsJsonToken();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
961	[BUG]  [BUGGY]  Object  o  =  peekAsJsonToken(JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAsJsonToken(JsonToken.VALUE_NULL);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAsJsonToken(JsonToken.VALUE_NULL);	  Object    o    =    peekAsJsonToken();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	97	None	replace
962	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  stackTop);  [CE]  cannot  find  symbol  stackTop  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize,  stackTop);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  stackTop);	  Object    o    =    peek(stackSize,    count);    	non-compiled	[CE]  cannot  find  symbol  stackTop	3	None	replace
963	[BUG]  [BUGGY]  Object  o  =  peek(stackSize  +  1);  [CE]  no  suitable  method  found  for  peek(int)  [FE]                  StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize  +  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize  +  1);	  Object    o    =    peek();    Object    o    =    peek(;    	non-compiled	[CE]  no  suitable  method  found  for  peek(int)	36	None	replace
964	[BUG]  [BUGGY]  Object  o  =  peek(stackSize  -  2);  [CE]  no  suitable  method  found  for  peek(int)  [FE]                    StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize  -  2);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize  -  2);	  Object    o    =    peek();    Object    o    =    peek(;    	non-compiled	[CE]  no  suitable  method  found  for  peek(int)	36	None	replace
965	[BUG]  [BUGGY]  Object  o  =  peek(0,  0);  [CE]  no  suitable  method  found  for  peek(int,int)  [FE]                      StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(0,  0);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(0,  0);	  Object    o    =    peek();    Object    o    =    peek(;    	non-compiled	[CE]  no  suitable  method  found  for  peek(int,int)	36	None	replace
966	[BUG]  [BUGGY]  Object  o  =  stack.reachableIterator();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.reachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.reachableIterator();	  Object    o    =    stack.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
967	[BUG]  [BUGGY]  Object  o  =  stack.unreachableIterator(stackSize);  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.unreachableIterator(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.unreachableIterator(stackSize);	  Object    o    =    stack.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
968	[BUG]  [BUGGY]  Object  o  =  createCurrentToken(JsonToken.VALUE_EMBEDDED_OBJECT);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  createCurrentToken(JsonToken.VALUE_EMBEDDED_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  createCurrentToken(JsonToken.VALUE_EMBEDDED_OBJECT);	  Object    o    =    createCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	126	None	replace
969	[BUG]  [BUGGY]  Object  o  =  createCurrentToken(JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  createCurrentToken(JsonToken.END_ARRAY);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  createCurrentToken(JsonToken.END_ARRAY);	  Object    o    =    createCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
970	[BUG]  [BUGGY]  Object  o  =  createCurrentToken(JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  createCurrentToken(JsonToken.START_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  createCurrentToken(JsonToken.START_OBJECT);	  Object    o    =    createCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	126	None	replace
971	[BUG]  [BUGGY]  Object  o  =  peekAndClearStandard(stackSize,  stackSize);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStandard(stackSize,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStandard(stackSize,  stackSize);	  Object    o    =    peekAndClearStandard();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
972	[BUG]  [BUGGY]  Object  o  =  peekAndClearStandardStackStack();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStandardStackStack();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStandardStackStack();	  Object    o    =    peekAndClearStackStack();    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
973	[BUG]  [BUGGY]  Object  o  =  getAndClearStackStack();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndClearStackStack();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndClearStackStack();	  Object    o    =    peekAndClearStackStack();    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
974	[BUG]  [BUGGY]  Object  o  =  peekAndClearBlockStack();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearBlockStack();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearBlockStack();	  Object    o    =    peekAndClearStackStack();    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
975	[BUG]  [BUGGY]  if(stackSize  >  stackSize)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  else  {  return  JsonToken.END_OBJECT;  }  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]        StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stackSize  >  stackSize)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  else  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stackSize  >  stackSize)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  else  {  return  JsonToken.END_OBJECT;  }	  Object    o    =    peek();    JsonObject    o    =    peek();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	117	None	replace
976	[BUG]  [BUGGY]  if(stackSize  >  stackSize)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  else  {  return  JsonToken.START_OBJECT;  }  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stackSize  >  stackSize)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  else  {  return  JsonToken.START_OBJECT;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stackSize  >  stackSize)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  else  {  return  JsonToken.START_OBJECT;  }	  Object    o    =    peek();    JsonObject    o    =    peek();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	117	None	replace
977	[BUG]  [BUGGY]  if(stackSize  >  stackSize)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  else  {  return  JsonToken.END_ARRAY;  }  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stackSize  >  stackSize)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  else  {  return  JsonToken.END_ARRAY;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stackSize  >  stackSize)  {  Object  o  =  peek();  JsonObject  o  =  peek();  }  else  {  return  JsonToken.END_ARRAY;  }	  Object    o    =    peek();    JsonObject    o    =    peek();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	117	None	replace
978	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  look();  }  else  {  return  JsonToken.END_ARRAY;  }  [CE]  cannot  find  symbol  isObject  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  look();  }  else  {  return  JsonToken.END_ARRAY;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  look();  }  else  {  return  JsonToken.END_ARRAY;  }	  Object    o    =    peek();    Object    o    =    look();    	non-compiled	[CE]  cannot  find  symbol  isObject	34	None	replace
979	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  look();  }  else  {  return  JsonToken.START_OBJECT;  }  [CE]  cannot  find  symbol  isObject  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  look();  }  else  {  return  JsonToken.START_OBJECT;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  look();  }  else  {  return  JsonToken.START_OBJECT;  }	  Object    o    =    peek();    Object    o    =    look();    	non-compiled	[CE]  cannot  find  symbol  isObject	34	None	replace
980	[BUG]  [BUGGY]  Object  o  =  getAndClearStandardStack();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndClearStandardStack();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndClearStandardStack();	  Object    o    =    peekAndClearStandardStack();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
981	[BUG]  [BUGGY]  Object  o  =  stackSize,  stack.next();  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stackSize,  stack.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stackSize,  stack.next();	  Object    o    =    stackSize.next();    	non-compiled	[CE]  ';'  expected	114	None	replace
982	[BUG]  [BUGGY]  Object  o  =  stacksize.next();  [CE]  cannot  find  symbol  stacksize  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stacksize.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stacksize.next();	  Object    o    =    stackSize.next();    	non-compiled	[CE]  cannot  find  symbol  stacksize	114	None	replace
983	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.EMBEDDED_OBJECT);  [CE]  cannot  find  symbol  EMBEDDED_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.EMBEDDED_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.EMBEDDED_OBJECT);	  Object    o    =    peekToken(JsonToken.VALUE_EMBEDDED);    	non-compiled	[CE]  cannot  find  symbol  EMBEDDED_OBJECT	134	None	replace
984	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.NAME);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.NAME);	  Object    o    =    peekToken(JsonToken.VALUE_EMBEDDED);    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
985	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1];  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1];  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    1];    Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  	non-compiled	[CE]  ';'  expected	60	None	add
986	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1];  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1];  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    1];    Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }	  	non-compiled	[CE]  ';'  expected	60	None	add
987	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1];  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject  ||  isObject)  {  return  JsonToken.NAME;  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1];  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject  ||  isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    1];    Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject  ||  isObject)  {  return  JsonToken.NAME;  }	  	non-compiled	[CE]  ';'  expected	60	None	add
988	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1];  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive);  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1];  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    1];    Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive);	  	non-compiled	[CE]  ';'  expected	60	None	add
989	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1];  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.END_OBJECT;  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1];  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    stack[stackSize    -    1];    Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.END_OBJECT;  }	  	non-compiled	[CE]  ';'  expected	60	None	add
990	[BUG]  [BUGGY]  Object  o  =  peekStackTrace(stackSize  +  stackSize);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekStackTrace(stackSize  +  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekStackTrace(stackSize  +  stackSize);	  Object    o    =    peekStackTrace(stackSize);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
991	[BUG]  [BUGGY]  if(isNumber)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_REA  [CE]  <identifier>  expected  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isNumber)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_REA  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isNumber)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_REA	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
992	[BUG]  [BUGGY]  if(stack.length  >  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UN  [CE]  <identifier>  expected  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack.length  >  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UN  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack.length  >  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UN	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
993	[BUG]  [BUGGY]  if(stack.length  ==  1)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE  [CE]  <identifier>  expected  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack.length  ==  1)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack.length  ==  1)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
994	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stack,  index);  [CE]  cannot  find  symbol  index  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stack,  index);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stack,  index);	  Object    o    =    peekAndFix(stack);    	non-compiled	[CE]  cannot  find  symbol  index	56	None	replace
995	[BUG]  [BUGGY]  Object  o  =  peek(stack.length,  stackSize  -  1);  [CE]  no  suitable  method  found  for  peek(int,int)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack.length,  stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack.length,  stackSize  -  1);	  Object    o    =    peek(stack.length,    stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(int,int)	6	None	replace
996	[BUG]  [BUGGY]  Object  o  =  peek(stack.length,  stackSize  +  1);  [CE]  no  suitable  method  found  for  peek(int,int)  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack.length,  stackSize  +  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack.length,  stackSize  +  1);	  Object    o    =    peek(stack.length,    stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(int,int)	6	None	replace
997	[BUG]  [BUGGY]  Object  o  =  stackStack.peek();  [CE]  cannot  find  symbol  stackStack  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stackStack.peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stackStack.peek();	  Object    o    =    stack.peek();    	non-compiled	[CE]  cannot  find  symbol  stackStack	85	None	replace
998	[BUG]  [BUGGY]  Object  o  =  stack.pop();  [CE]  cannot  find  symbol  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.pop();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.pop();	  Object    o    =    stack.peek();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
999	[BUG]  [BUGGY]  Object  o  =  peek(stackOffset,  stackSize);  [CE]  cannot  find  symbol  stackOffset  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackOffset,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackOffset,  stackSize);	  Object    o    =    peek(stackSize,    stackOffset);    	non-compiled	[CE]  cannot  find  symbol  stackOffset	135	None	replace
1000	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  *  2];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  stack[stackSize  *  2];	  Object    o    =    stack[stackSize    -    2];    	compilable	  [FE]  AssertionError  	64	2	replace
1001	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  *  2];  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  *  2];  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  *  2];	  Object    o    =    stack[stackSize    -    2];    	compilable	  [FE]  AssertionError  	64	2	replace
1002	[BUG]  [BUGGY]  if(stack.length  ==  1)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  <identifier>  expected  [FE]        StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack.length  ==  1)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack.length  ==  1)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
1003	[BUG]  [BUGGY]  if(stack.length  >  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  <identifier>  expected  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack.length  >  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack.length  >  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
1004	[BUG]  [BUGGY]  if(isArray)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  <identifier>  expected  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isArray)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isArray)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
1005	[BUG]  [BUGGY]  if(stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  J  [CE]  <identifier>  expected  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  J  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  J	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
1006	[BUG]  [BUGGY]  if(stack[stackSize  -  1]  ==  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.  [CE]  <identifier>  expected  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack[stackSize  -  1]  ==  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack[stackSize  -  1]  ==  null)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
1007	[BUG]  [BUGGY]  Object  o  =  peekAndThrow(count);  [CE]  cannot  find  symbol  count  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndThrow(count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndThrow(count);	  Object    o    =    peekAndThrow(stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	18	None	replace
1008	[BUG]  [BUGGY]  Object  o  =  peekAndThrow(stackSize  -  2);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndThrow(stackSize  -  2);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndThrow(stackSize  -  2);	  Object    o    =    peekAndThrow(stackSize);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
1009	[BUG]  [BUGGY]  Int  o  =  peek();  [CE]  cannot  find  symbol  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Int  o  =  peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Int  o  =  peek();	  Object    o    =    peek();    int    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
1010	[BUG]  [BUGGY]  Object  o  =  peek(stack,  pathIndices,  stackSize);  [CE]  no  suitable  method  found  for  peek(Object[],int[],int)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  pathIndices,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  pathIndices,  stackSize);	  Object    o    =    peek(pathIndices,    stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(Object[],int[],int)	87	None	replace
1011	[BUG]  [BUGGY]  Object  o  =  getBuffer();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getBuffer();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getBuffer();	  Object    o    =    buffer();    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
1012	[BUG]  [BUGGY]  Object  o  =  getPosition();  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getPosition();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getPosition();	  Object    o    =    buffer();    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
1013	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[stackSize  -  1):  null;  [CE]  ']'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[stackSize  -  1):  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[stackSize  -  1):  null;	  Object    o    =    stack[stackSize    -    1];    	non-compiled	[CE]  ']'  expected	61	None	replace
1014	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[stackSize  -  2):  null;  [CE]  ']'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[stackSize  -  2):  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1]  instanceof  JsonPrimitive?((  JsonPrimitive)stack[stackSize  -  2):  null;	  Object    o    =    stack[stackSize    -    1];    	non-compiled	[CE]  ']'  expected	61	None	replace
1015	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  stackPosition);  [CE]  cannot  find  symbol  stackPosition  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stackSize,  stackPosition);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  stackPosition);	  Object    o    =    peek(stackSize,    offset);    	non-compiled	[CE]  cannot  find  symbol  stackPosition	7	None	replace
1016	[BUG]  [BUGGY]  if(stackSize  <  stackSize)  {  Object  o  =  peek();  JsonToken  o  =  peek();  }  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stackSize  <  stackSize)  {  Object  o  =  peek();  JsonToken  o  =  peek();  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stackSize  <  stackSize)  {  Object  o  =  peek();  JsonToken  o  =  peek();  }	  Object    o    =    peek();    JsonToken    o    =    peek();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	32	None	replace
1017	[BUG]  [BUGGY]  Object  o  =  getAndClearStackTree();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndClearStackTree();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndClearStackTree();	  Object    o    =    peekAndClearStackTree();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
1018	[BUG]  [BUGGY]  Object  o  =  peekAndClearBlockTree();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearBlockTree();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearBlockTree();	  Object    o    =    peekAndClearStackTree();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
1019	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stackSize,  stack.length);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stackSize,  stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stackSize,  stack.length);	  Object    o    =    peekAndFix(stackSize);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
1020	[BUG]  [BUGGY]  Object  o  =  peekAndFix(offset);  [CE]  cannot  find  symbol  offset  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(offset);	  Object    o    =    peekAndFix(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	42	None	replace
1021	[BUG]  [BUGGY]  JsonPrimitive  primitive  =(JsonPrimitive)iterator.getObject();  [CE]  cannot  find  symbol  iterator  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  primitive  =(JsonPrimitive)iterator.getObject();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  primitive  =(JsonPrimitive)iterator.getObject();	  JsonPrimitive    primitive    =(JsonPrimitive)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	44	None	replace
1022	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().clone();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().clone();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().clone();	  Object    o    =    getCurrentToken().getValue();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
1023	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().valueToString(stackSize);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().valueToString(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().valueToString(stackSize);	  Object    o    =    getCurrentToken().getValue();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
1024	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().peek();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().peek();	  Object    o    =    getCurrentToken().getValue();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
1025	[BUG]  [BUGGY]  Object  o  =  peekToken(stackSize  -  1);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(stackSize  -  1);	  Object    o    =    peekToken(stackSize);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
1026	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1);  [CE]  ']'  expected  [FE]        StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1);	  Object    o    =    push(stackSize);    	non-compiled	[CE]  ']'  expected	118	None	replace
1027	[BUG]  [BUGGY]  Object  o  =  push(stackSize  -  2);  [CE]  incompatible  types  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  push(stackSize  -  2);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  push(stackSize  -  2);	  Object    o    =    push(stackSize);    	non-compiled	[CE]  incompatible  types	118	None	replace
1028	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(stackSize,  stack.length);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(stackSize,  stack.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(stackSize,  stack.length);	  Object    o    =    peekAndFixStack(stackSize,    stackSize);    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
1029	[BUG]  [BUGGY]  Object  o  =  peek(stack,  offset  +  1,  stackSize);  [CE]  cannot  find  symbol  offset  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  offset  +  1,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  offset  +  1,  stackSize);	  Object    o    =    peek(stackSize,    stack);    	non-compiled	[CE]  cannot  find  symbol  offset	137	None	replace
1030	[BUG]  [BUGGY]  JsonToken  o  =  peekCurrentToken();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonToken  o  =  peekCurrentToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonToken  o  =  peekCurrentToken();	  JsonToken    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
1031	[BUG]  [BUGGY]  JsonToken  o  =  createCurrentToken();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonToken  o  =  createCurrentToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonToken  o  =  createCurrentToken();	  JsonToken    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
1032	[BUG]  [BUGGY]  Object  o  =  pathNames.remove(pathNames.length);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pathNames.remove(pathNames.length);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pathNames.remove(pathNames.length);	  Object    o    =    pathNames.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
1033	[BUG]  [BUGGY]  Object  o  =  pathNames!=  null?  pathNames.unreachablePeek()  :  null;  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pathNames!=  null?  pathNames.unreachablePeek()  :  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pathNames!=  null?  pathNames.unreachablePeek()  :  null;	  Object    o    =    pathNames.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
1034	[BUG]  [BUGGY]  Object  o  =  pathNames.reachablePeek();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pathNames.reachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pathNames.reachablePeek();	  Object    o    =    pathNames.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
1035	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(pathNames,  buffer);  [CE]  buffer  has  private  access  in  JsonReader  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(pathNames,  buffer);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(pathNames,  buffer);	  Object    o    =    peekAndFixStack(pathNames);    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	79	None	replace
1036	[BUG]  [BUGGY]  Object  o  =  this.iterator.unreachableIterator();  [CE]  cannot  find  symbol  iterator  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.iterator.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.iterator.unreachableIterator();	  Object    o    =    iterator.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  iterator	20	None	replace
1037	[BUG]  [BUGGY]  Object  o  =  iterator.unreachableIterator(stackSize);  [CE]  cannot  find  symbol  iterator  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  iterator.unreachableIterator(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  iterator.unreachableIterator(stackSize);	  Object    o    =    iterator.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  iterator	20	None	replace
1038	[BUG]  [BUGGY]  Object  o  =  getAndFixOutOfBounds();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndFixOutOfBounds();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndFixOutOfBounds();	  Object    o    =    getAndFixStack();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
1039	[BUG]  [BUGGY]  Object  o  =  getAndFixPoint();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndFixPoint();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndFixPoint();	  Object    o    =    getAndFixStack();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
1040	[BUG]  [BUGGY]  Object  o  =  getAndFixes();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndFixes();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndFixes();	  Object    o    =    getAndFixStack();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
1041	[BUG]  [BUGGY]  Object  o  =  getAsObject();  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAsObject();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAsObject();	  Object    o    =    peekAsObject();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
1042	[BUG]  [BUGGY]  Object  o  =  lookAsObject();  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  lookAsObject();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  lookAsObject();	  Object    o    =    peekAsObject();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
1043	[BUG]  [BUGGY]  Object  o  =  peek(null,  offset,  stackSize);  [CE]  cannot  find  symbol  offset  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(null,  offset,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(null,  offset,  stackSize);	  Object    o    =    peek(null,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	88	None	replace
1044	[BUG]  [BUGGY]  if(stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  return  JsonToken.  [CE]  <identifier>  expected  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  return  JsonToken.  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  return  JsonToken.	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
1045	[BUG]  [BUGGY]  if(stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  return  JsonToken.N  [CE]  <identifier>  expected  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  return  JsonToken.N  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  return  JsonToken.N	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
1046	[BUG]  [BUGGY]  if(isNumber)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  <identifier>  expected  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isNumber)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isNumber)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
1047	[BUG]  [BUGGY]  if(stack.length  >  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.N  [CE]  <identifier>  expected  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack.length  >  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.N  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack.length  >  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.N	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
1048	[BUG]  [BUGGY]  Object  o  =  this.paths.unreachablePeek();  [CE]  cannot  find  symbol  paths  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.paths.unreachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.paths.unreachablePeek();	  Object    o    =    tokens.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol  paths	90	None	replace
1049	[BUG]  [BUGGY]  Object  o  =  getAndFixStackTrace();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndFixStackTrace();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndFixStackTrace();	  Object    o    =    peekAndFixStackTrace();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
1050	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().trim();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().trim();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().trim();	  Object    o    =    getCurrentToken().next();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
1051	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().getImplicitReturn();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().getImplicitReturn();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().getImplicitReturn();	  Object    o    =    getCurrentToken().next();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
1052	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.START_ARRAY);  [CE]  cannot  find  symbol  START_ARRAY  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonToken.START_ARRAY);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.START_ARRAY);	  Object    o    =    peekToken(JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	132	None	replace
1053	[BUG]  [BUGGY]  Object  o  =  getAndReturn();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndReturn();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndReturn();	  Object    o    =    getAndFix();    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
1054	[BUG]  [BUGGY]  Object  o  =  getAndClearBuffer();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndClearBuffer();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndClearBuffer();	  Object    o    =    getAndFix();    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
1055	[BUG]  [BUGGY]  Object  o  =  peekAndFixClose(offset);  [CE]  cannot  find  symbol  offset  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixClose(offset);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixClose(offset);	  Object    o    =    peekAndFixClose(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	43	None	replace
1056	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().peek().getImplicitPrototype();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().peek().getImplicitPrototype();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().peek().getImplicitPrototype();	  Object    o    =    getCurrentToken().getImplicitPrototype();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
1057	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().next().getImplicitPrototype();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().next().getImplicitPrototype();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().next().getImplicitPrototype();	  Object    o    =    getCurrentToken().getImplicitPrototype();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
1058	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().jsonToString(stackSize,  stackSize);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().jsonToString(stackSize,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().jsonToString(stackSize,  stackSize);	  Object    o    =    getCurrentToken().jsonToString();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
1059	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().jsonToString(0);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().jsonToString(0);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().jsonToString(0);	  Object    o    =    getCurrentToken().jsonToString();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
1060	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().jsonToString(JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().jsonToString(JsonToken.START_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().jsonToString(JsonToken.START_OBJECT);	  Object    o    =    getCurrentToken().jsonToString();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	75	None	replace
1061	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().jsonToString(JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().jsonToString(JsonToken.END_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().jsonToString(JsonToken.END_OBJECT);	  Object    o    =    getCurrentToken().jsonToString();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
1062	[BUG]  [BUGGY]  Object  o  =  buffer.reachableIterator();  [CE]  buffer  has  private  access  in  JsonReader  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  buffer.reachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  buffer.reachableIterator();	  Object    o    =    buffer.unreachableIterator();    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	138	None	replace
1063	[BUG]  [BUGGY]  Object  o  =  buffer.getIterator(JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  buffer.getIterator(JsonToken.START_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  buffer.getIterator(JsonToken.START_OBJECT);	  Object    o    =    buffer.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	138	None	replace
1064	[BUG]  [BUGGY]  Object  o  =  buffer.remove(stackSize  -  1);  [CE]  buffer  has  private  access  in  JsonReader  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  buffer.remove(stackSize  -  1);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  buffer.remove(stackSize  -  1);	  Object    o    =    buffer.unreachableIterator();    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	138	None	replace
1065	[BUG]  [BUGGY]  Object  o  =  buffer.getIterator(JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  buffer.getIterator(JsonToken.VALUE_NULL);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  buffer.getIterator(JsonToken.VALUE_NULL);	  Object    o    =    buffer.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	138	None	replace
1066	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1].getKey();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1].getKey();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1].getKey();	  Object    o    =    stack[stackSize    -    1].next();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1067	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1].getData();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[stackSize  -  1].getData();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1].getData();	  Object    o    =    stack[stackSize    -    1].next();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1068	[BUG]  [BUGGY]  Object  o  =  getTrace();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getTrace();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getTrace();	  Object    o    =    pushStackTrace();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
1069	[BUG]  [BUGGY]  Object  o  =  peek(stack,  offset  +  stackSize);  [CE]  cannot  find  symbol  offset  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(stack,  offset  +  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  offset  +  stackSize);	  Object    o    =    peek(stack,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	4	None	replace
1070	[BUG]  [BUGGY]  Object  o  =  buffer.reachablePeek();  [CE]  buffer  has  private  access  in  JsonReader  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  buffer.reachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  buffer.reachablePeek();	  Object    o    =    buffer.unreachablePeek();    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	120	None	replace
1071	[BUG]  [BUGGY]  Object  o  =  buffer.remove();  [CE]  buffer  has  private  access  in  JsonReader  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  buffer.remove();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  buffer.remove();	  Object    o    =    buffer.unreachablePeek();    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	120	None	replace
1072	[BUG]  [BUGGY]  Object  o  =  getIterator(count);  [CE]  cannot  find  symbol  count  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getIterator(count);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterator(count);	  Object    o    =    getIterator(stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	129	None	replace
1073	[BUG]  [BUGGY]  Object  o  =  this.paths.unreachableIterator();  [CE]  cannot  find  symbol  paths  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.paths.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.paths.unreachableIterator();	  Object    o    =    tokens.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  paths	21	None	replace
1074	[BUG]  [BUGGY]  Object  o  =  peekAndClearStack(stackSize  -  2);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStack(stackSize  -  2);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStack(stackSize  -  2);	  Object    o    =    peekAndClearStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
1075	[BUG]  [BUGGY]  Object  o  =  peekAndClearStack(stackSize  +  1,  stackSize);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStack(stackSize  +  1,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStack(stackSize  +  1,  stackSize);	  Object    o    =    peekAndClearStack(stackSize);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
1076	[BUG]  [BUGGY]  Object  o  =  peekToken(null,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(null,  JsonToken.START_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(null,  JsonToken.START_OBJECT);	  Object    o    =    peekToken(null);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	98	None	replace
1077	[BUG]  [BUGGY]  Object  o  =  peekIndices(stackSize,  stackSize);  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekIndices(stackSize,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekIndices(stackSize,  stackSize);	  Object    o    =    peek();    Object    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
1078	[BUG]  [BUGGY]  Object  o  =  peekIndices(stackSize);  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekIndices(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekIndices(stackSize);	  Object    o    =    peek();    Object    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
1079	[BUG]  [BUGGY]  Object  o  =  getImplicitPrototype();  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getImplicitPrototype();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getImplicitPrototype();	  Object    o    =    getNode();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
1080	[BUG]  [BUGGY]  Object  o  =  insertNewKey(stack,  stackSize);  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  insertNewKey(stack,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  insertNewKey(stack,  stackSize);	  Object    o    =    push();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
1081	[BUG]  [BUGGY]  Integer  stack  =(Integer)this.pathNames.get(stackSize);  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(Integer)this.pathNames.get(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)this.pathNames.get(stackSize);	  Integer    stack    =(Integer)stack.get(stackSize);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
1082	[BUG]  [BUGGY]  Object  o  =  stackStack();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stackStack();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stackStack();	  Object    o    =    stack();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
1083	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.class,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonPrimitive.class,  JsonToken.START_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.class,  JsonToken.START_OBJECT);	  Object    o    =    peekToken(JsonPrimitive.class);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	96	None	replace
1084	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.class,  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekToken(JsonPrimitive.class,  JsonToken.END_ARRAY);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.class,  JsonToken.END_ARRAY);	  Object    o    =    peekToken(JsonPrimitive.class);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
1085	[BUG]  [BUGGY]  Object  o  =  stacks.getCurrentToken();  [CE]  cannot  find  symbol  stacks  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stacks.getCurrentToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stacks.getCurrentToken();	  Object    o    =    this.getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  stacks	53	None	replace
1086	[BUG]  [BUGGY]  Object  o  =  objectIterator();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  objectIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  objectIterator();	  Object    o    =    null.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
1087	[BUG]  [BUGGY]  Object  o  =  peekAndClearBlock();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearBlock();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearBlock();	  Object    o    =    peekAndClear();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
1088	[BUG]  [BUGGY]  Object  o  =  peekAndReturn();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndReturn();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndReturn();	  Object    o    =    peekAndClear();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
1089	[BUG]  [BUGGY]  Object  o  =  getDeepestCase();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getDeepestCase();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getDeepestCase();	  Object    o    =    getStack();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
1090	[BUG]  [BUGGY]  Object  o  =  this.needViewProcesing?  tokenIterator.unreachableIterator()  :  null;  [CE]  cannot  find  symbol  needViewProcesing  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.needViewProcesing?  tokenIterator.unreachableIterator()  :  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.needViewProcesing?  tokenIterator.unreachableIterator()  :  null;	  Object    o    =    tokenIterator.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  needViewProcesing	25	None	replace
1091	[BUG]  [BUGGY]  Object  o  =  tokenIterator.unreachableIterator(stackSize);  [CE]  cannot  find  symbol  tokenIterator  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  tokenIterator.unreachableIterator(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  tokenIterator.unreachableIterator(stackSize);	  Object    o    =    tokenIterator.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  tokenIterator	25	None	replace
1092	[BUG]  [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)iterator.previous();  [CE]  cannot  find  symbol  iterator  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)iterator.previous();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  stack  =(JsonPrimitive)iterator.previous();	  JsonPrimitive    stack    =(JsonPrimitive)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	112	None	replace
1093	[BUG]  [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)iterator.peek();  [CE]  cannot  find  symbol  iterator  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)iterator.peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  stack  =(JsonPrimitive)iterator.peek();	  JsonPrimitive    stack    =(JsonPrimitive)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	112	None	replace
1094	[BUG]  [BUGGY]  Object  o  =  getAndClearStackStandard();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndClearStackStandard();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndClearStackStandard();	  Object    o    =    peekAndClearStackStandard();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
1095	[BUG]  [BUGGY]  Object  o  =  peekAndReturnBuffer();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndReturnBuffer();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndReturnBuffer();	  Object    o    =    peekAndClearBuffer();    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
1096	[BUG]  [BUGGY]  Object  o  =  pathNames!=  null?  pathNames.unreachableIterator()  :  null;  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pathNames!=  null?  pathNames.unreachableIterator()  :  null;  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pathNames!=  null?  pathNames.unreachableIterator()  :  null;	  Object    o    =    pathNames.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
1097	[BUG]  [BUGGY]  Object  o  =  pathNames  ==  null?  JsonToken.UNRESOLVED  :  pathNames.unreachableIterator();  [CE]  cannot  find  symbol  UNRESOLVED  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pathNames  ==  null?  JsonToken.UNRESOLVED  :  pathNames.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pathNames  ==  null?  JsonToken.UNRESOLVED  :  pathNames.unreachableIterator();	  Object    o    =    pathNames.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  UNRESOLVED	139	None	replace
1098	[BUG]  [BUGGY]  Object  o  =  pathNames  ==  null?  JsonToken.NAME  :  pathNames.unreachableIterator();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pathNames  ==  null?  JsonToken.NAME  :  pathNames.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pathNames  ==  null?  JsonToken.NAME  :  pathNames.unreachableIterator();	  Object    o    =    pathNames.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
1099	[BUG]  [BUGGY]  Object  o  =  pathNames  ==  null?  JsonToken.NONE  :  pathNames.unreachableIterator();  [CE]  cannot  find  symbol  NONE  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pathNames  ==  null?  JsonToken.NONE  :  pathNames.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pathNames  ==  null?  JsonToken.NONE  :  pathNames.unreachableIterator();	  Object    o    =    pathNames.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  NONE	139	None	replace
1100	[BUG]  [BUGGY]  Object  o  =  pathNames  ==  null?  JsonToken.NULL  :  pathNames.unreachableIterator();  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  pathNames  ==  null?  JsonToken.NULL  :  pathNames.unreachableIterator();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pathNames  ==  null?  JsonToken.NULL  :  pathNames.unreachableIterator();	  Object    o    =    pathNames.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
1101	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().toUpperCase();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getCurrentToken().toUpperCase();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().toUpperCase();	  Object    o    =    getCurrentToken().toString();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
1102	[BUG]  [BUGGY]  Object  o  =  stack[this.getKey();  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack[this.getKey();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[this.getKey();	  Object    o    =    stack[this.next();    	non-compiled	[CE]  ']'  expected	107	None	replace
1103	[BUG]  [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.path  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.path  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    null;    Object  o  =  null;  this.path  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  	non-compiled	[CE]  ';'  expected	14	None	add
1104	[BUG]  [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.path  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.path  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    null;    Object  o  =  null;  this.path  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive);	  	non-compiled	[CE]  ';'  expected	14	None	add
1105	[BUG]  [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.path  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.path  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    null;    Object  o  =  null;  this.path  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)	  	non-compiled	[CE]  ';'  expected	14	None	add
1106	[BUG]  [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.path  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.path  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    null;    Object  o  =  null;  this.path  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive	  	non-compiled	[CE]  ';'  expected	14	None	add
1107	[BUG]  [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.path  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  3]  instanceof  JsonPrimitive);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.path  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  3]  instanceof  JsonPrimitive);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    null;    Object  o  =  null;  this.path  =  stack[stackSize  -  2]  instanceof  JsonPrimitive  ||  stack[stackSize  -  3]  instanceof  JsonPrimitive);	  	non-compiled	[CE]  ';'  expected	14	None	add
1108	[BUG]  [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathNames  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  null;  Object  o  =  null;  this.pathNames  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    null;    Object  o  =  null;  this.pathNames  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  	non-compiled	[CE]  ';'  expected	14	None	add
1109	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(stack,  buffer);  [CE]  buffer  has  private  access  in  JsonReader  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(stack,  buffer);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(stack,  buffer);	  Object    o    =    peekAndFixStack(stack);    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	41	None	replace
1110	[BUG]  [BUGGY]  Object  o  =  this.peekAndFixOutOfBounds();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  this.peekAndFixOutOfBounds();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.peekAndFixOutOfBounds();	  Object    o    =    peekAndFixOutOfBounds();    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
1111	[BUG]  [BUGGY]  Object  o  =  getAndClearStackTrace();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getAndClearStackTrace();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndClearStackTrace();	  Object    o    =    peekAndClearStackTrace();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
1112	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackTrace(stackSize,  stackSize);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndClearStackTrace(stackSize,  stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackTrace(stackSize,  stackSize);	  Object    o    =    peekAndClearStackTrace();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
1113	[BUG]  [BUGGY]  Object  o  =  lookupPrimitiveToken();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  lookupPrimitiveToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  lookupPrimitiveToken();	  Object    o    =    lookupCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
1114	[BUG]  [BUGGY]  Object  o  =  lookupImpl(stackSize);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  lookupImpl(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  lookupImpl(stackSize);	  Object    o    =    lookupCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
1115	[BUG]  [BUGGY]  Object  o  =  lookupPrimitive(stackSize);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  lookupPrimitive(stackSize);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  lookupPrimitive(stackSize);	  Object    o    =    lookupCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
1116	[BUG]  [BUGGY]  Object  o  =  lookupAndClearCurrentToken();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  lookupAndClearCurrentToken();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  lookupAndClearCurrentToken();	  Object    o    =    lookupCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
1117	[BUG]  [BUGGY]  Object  o  =  stack.push();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stack.push();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.push();	  Object    o    =    this.pushStack();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
1118	[BUG]  [BUGGY]  Object  o  =  peek(System.identityHashCode(this));  [CE]  no  suitable  method  found  for  peek(int)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peek(System.identityHashCode(this));  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(System.identityHashCode(this));	  Object    o    =    peekAndThrow(System.identityHashCode(this));    	non-compiled	[CE]  no  suitable  method  found  for  peek(int)	95	None	replace
1119	[BUG]  [BUGGY]  Object  o  =  stacksize.unreachablePeek();  [CE]  cannot  find  symbol  stacksize  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  stacksize.unreachablePeek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stacksize.unreachablePeek();	  Object    o    =    stackSize.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol  stacksize	121	None	replace
1120	[BUG]  [BUGGY]  Object  o  =  handleNonArray(stackSize  -  2);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  handleNonArray(stackSize  -  2);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  handleNonArray(stackSize  -  2);	  Object    o    =    handleNonArray(stackSize);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
1121	[BUG]  [BUGGY]  Integer  stack  =(int)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(int)iterator.next();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(int)iterator.next();	  Integer    stack    =(Integer)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	45	None	replace
1122	[BUG]  [BUGGY]  Integer  stack  =(Integer)iterator.clone();  [CE]  cannot  find  symbol  iterator  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(Integer)iterator.clone();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)iterator.clone();	  Integer    stack    =(Integer)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	45	None	replace
1123	[BUG]  [BUGGY]  Integer  stack  =(Integer)iterator.peek();  [CE]  cannot  find  symbol  iterator  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Integer  stack  =(Integer)iterator.peek();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)iterator.peek();	  Integer    stack    =(Integer)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	45	None	replace
1124	[BUG]  [BUGGY]  Object  o  =  findCurrentToken(JsonToken.VALUE_EMBEDDED_OBJECT);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  findCurrentToken(JsonToken.VALUE_EMBEDDED_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  findCurrentToken(JsonToken.VALUE_EMBEDDED_OBJECT);	  Object    o    =    findCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	55	None	replace
1125	[BUG]  [BUGGY]  Object  o  =  findCurrentToken(JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  findCurrentToken(JsonToken.START_OBJECT);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  findCurrentToken(JsonToken.START_OBJECT);	  Object    o    =    findCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	55	None	replace
1126	[BUG]  [BUGGY]  Object  o  =  findCurrentToken(JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  findCurrentToken(JsonToken.END_ARRAY);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  findCurrentToken(JsonToken.END_ARRAY);	  Object    o    =    findCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
1127	[BUG]  [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getCurrentNode();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getCurrentNode();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  stack  =(JsonPrimitive)getCurrentNode();	  JsonPrimitive    stack    =(JsonPrimitive)getObject();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
1128	[BUG]  [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getImplicitReturn();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getImplicitReturn();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  stack  =(JsonPrimitive)getImplicitReturn();	  JsonPrimitive    stack    =(JsonPrimitive)getObject();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
1129	[BUG]  [BUGGY]  if(stack.length  >  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UN  [CE]  <identifier>  expected  [FE]              StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(stack.length  >  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UN  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(stack.length  >  0)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UN	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
1130	[BUG]  [BUGGY]  if(isNumber)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_REA  [CE]  <identifier>  expected  [FE]                StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isNumber)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_REA  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isNumber)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_REA	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
1131	[BUG]  [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  return  JsonToken.UNREADABLE_READER;  }  [CE]  <identifier>  expected  [FE]                  StackOverflowError      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  return  JsonToken.UNREADABLE_READER;  }  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	if(isObject)  {  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  return  JsonToken.UNREADABLE_READER;  }	  Object    o    =    peek();    Object    o    =    peek();    this.null    =    stack[stackSize    -    1]    instanceof    JsonPrimitive)    {    if(isObject)    {    return    JsonToken.UNREADABLE_READER;    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
1132	[BUG]  [BUGGY]  Object[]  stack  =(Object[])iterator.previous();  [CE]  cannot  find  symbol  iterator  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object[]  stack  =(Object[])iterator.previous();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object[]  stack  =(Object[])iterator.previous();	  Object[]    stack    =(Object[])iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	47	None	replace
1133	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stack.get(stackSize));  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFix(stack.get(stackSize));  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stack.get(stackSize));	  Object    o    =    peekAndFix(stack.length);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
1134	[BUG]  [BUGGY]  Object  o  =  getImplementedInterface();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  getImplementedInterface();  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getImplementedInterface();	  Object    o    =    getImplicitReachable();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1135	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(stackList);  [CE]  cannot  find  symbol  stackList  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }      [BUGGY]  Object  o  =  peekAndFixStack(stackList);  [BUGGY]      if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(stackList);	  Object    o    =    peekAndFixStack(paths);    	non-compiled	[CE]  cannot  find  symbol  stackList	81	None	replace
