bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Object  o  =  peek(stack,  offset);  [CE]  cannot  find  symbol  offset  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek(stack,  offset);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  offset);	  Object    o    =    peek(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	2	None	replace
2	[BUG]  [BUGGY]  Object  o  =  peek(stack,  count);  [CE]  cannot  find  symbol  count  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek(stack,  count);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  count);	  Object    o    =    peek(stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	2	None	replace
3	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  count);  [CE]  cannot  find  symbol  count  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek(stackSize,  count);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  count);	  Object    o    =    peek(stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	2	None	replace
4	[BUG]  [BUGGY]  Object  o  =  peek(stack,  stackSize);  [CE]  no  suitable  method  found  for  peek(Object[],int)  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek(stack,  stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack,  stackSize);	  Object    o    =    peek(stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(Object[],int)	2	None	replace
5	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  stack.length);  [CE]  no  suitable  method  found  for  peek(int,int)  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek(stackSize,  stack.length);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  stack.length);	  Object    o    =    peek(stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(int,int)	2	None	replace
6	[BUG]  [BUGGY]  Object  o  =  peek(stack.length,  stackSize);  [CE]  no  suitable  method  found  for  peek(int,int)  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek(stack.length,  stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stack.length,  stackSize);	  Object    o    =    peek(stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(int,int)	2	None	replace
7	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  offset);  [CE]  cannot  find  symbol  offset  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek(stackSize,  offset);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  offset);	  Object    o    =    peek(stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	2	None	replace
8	[BUG]  [BUGGY]  Object  o  =  peekToken(stackSize);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekToken(stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(stackSize);	  Object    o    =    peekToken();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
9	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekToken(JsonToken.END_OBJECT);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.END_OBJECT);	  Object    o    =    peekToken();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
10	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.UNREADABLE_READER);  [CE]  cannot  find  symbol  UNREADABLE_READER  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekToken(JsonPrimitive.UNREADABLE_READER);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.UNREADABLE_READER);	  Object    o    =    peekToken();    	non-compiled	[CE]  cannot  find  symbol  UNREADABLE_READER	3	None	replace
11	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekToken(JsonToken.START_OBJECT);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.START_OBJECT);	  Object    o    =    peekToken();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	3	None	replace
12	[BUG]  [BUGGY]  Object  o  =  stack.unreachablePeek();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  stack.unreachablePeek();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.unreachablePeek();	  Object    o    =    this.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
13	[BUG]  [BUGGY]  Object  o  =  iterator.unreachablePeek();  [CE]  cannot  find  symbol  iterator  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  iterator.unreachablePeek();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  iterator.unreachablePeek();	  Object    o    =    this.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol  iterator	8	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  null;  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  null;	  Object    o    =    this.unreachablePeek();    	compilable	  [FE]  AssertionError  	8	2	replace
15	[BUG]  [BUGGY]  Object  o  =  null;  [FE]  AssertionError  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  null;  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  null;	  Object    o    =    this.unreachablePeek();    	compilable	  [FE]  AssertionError  	8	2	replace
16	[BUG]  [BUGGY]  Object  o  =  this.unreachablePeek(stackSize);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  this.unreachablePeek(stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.unreachablePeek(stackSize);	  Object    o    =    this.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
17	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackTrace();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndClearStackTrace();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackTrace();	  Object    o    =    peekStackTrace();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
18	[BUG]  [BUGGY]  Object  o  =  peekAndThrow(stackSize);  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndThrow(stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndThrow(stackSize);	  Object    o    =    peekStackTrace();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
19	[BUG]  [BUGGY]  Object  o  =  peekStackTrace(stackSize);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekStackTrace(stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekStackTrace(stackSize);	  Object    o    =    peekStackTrace();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
20	[BUG]  [BUGGY]  Object  o  =  iterator.unreachableIterator();  [CE]  cannot  find  symbol  iterator  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  iterator.unreachableIterator();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  iterator.unreachableIterator();	  Object    o    =    this.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  iterator	7	None	replace
21	[BUG]  [BUGGY]  Object  o  =  tokens.unreachableIterator();  [CE]  cannot  find  symbol  tokens  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  tokens.unreachableIterator();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  tokens.unreachableIterator();	  Object    o    =    this.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  tokens	7	None	replace
22	[BUG]  [BUGGY]  Object  o  =  getIterator();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  getIterator();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterator();	  Object    o    =    this.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
23	[BUG]  [BUGGY]  Object  o  =  stack.unreachableIterator();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  stack.unreachableIterator();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.unreachableIterator();	  Object    o    =    this.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
24	[BUG]  [BUGGY]  Object  o  =  null.unreachableIterator();  [CE]  <null>  cannot  be  dereferenced  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  null.unreachableIterator();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  null.unreachableIterator();	  Object    o    =    this.unreachableIterator();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	7	None	replace
25	[BUG]  [BUGGY]  Object  o  =  tokenIterator.unreachableIterator();  [CE]  cannot  find  symbol  tokenIterator  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  tokenIterator.unreachableIterator();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  tokenIterator.unreachableIterator();	  Object    o    =    this.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol  tokenIterator	7	None	replace
26	[BUG]  [BUGGY]  Object  o  =  stack();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  stack();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack();	  Object    o    =    pushStack();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
27	[BUG]  [BUGGY]  Object  o  =  this.pushStack();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  this.pushStack();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.pushStack();	  Object    o    =    pushStack();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
28	[BUG]  [BUGGY]  Object  o  =  getStack();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  getStack();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getStack();	  Object    o    =    pushStack();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
29	[BUG]  [BUGGY]  Object  o  =  handleNonArray(stackSize);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  handleNonArray(stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  handleNonArray(stackSize);	  Object    o    =    pushStack();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
30	[BUG]  [BUGGY]  Object  o  =  this.stack();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  this.stack();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.stack();	  Object    o    =    pushStack();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
31	[BUG]  [BUGGY]  Object  o  =  peek();  Object  o  =  peek();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]    StackOverflowError    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek();  Object  o  =  peek();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    peek();    Object  o  =  peek();	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	4	None	add
32	[BUG]  [BUGGY]  Object  o  =  peek();  JsonToken  o  =  peek();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]      StackOverflowError    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek();  JsonToken  o  =  peek();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    peek();    JsonToken  o  =  peek();	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	4	None	add
33	[BUG]  [BUGGY]  Object  o  =  peek();  Integer  o  =  peek();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]        StackOverflowError    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek();  Integer  o  =  peek();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    peek();    Integer  o  =  peek();	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	4	None	add
34	[BUG]  [BUGGY]  Object  o  =  peek();  Object  o  =  look();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]          StackOverflowError    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek();  Object  o  =  look();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    peek();    Object  o  =  look();	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	4	None	add
35	[BUG]  [BUGGY]  Object  o  =  peek();  int  o  =  peek();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]            StackOverflowError    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek();  int  o  =  peek();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    peek();    int  o  =  peek();	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	4	None	add
36	[BUG]  [BUGGY]  Object  o  =  peek();  Object  o  =  peek(;  [CE]  illegal  start  of  expression  [FE]              StackOverflowError    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek();  Object  o  =  peek(;  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    peek();    Object  o  =  peek(;	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
37	[BUG]  [BUGGY]  Object  o  =  get(stackSize  -  1);  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  get(stackSize  -  1);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  get(stackSize  -  1);	  Object    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
38	[BUG]  [BUGGY]  Object  o  =  getPeek();  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  getPeek();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getPeek();	  Object    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
39	[BUG]  [BUGGY]  Object  o  =  get(stackSize);  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  get(stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  get(stackSize);	  Object    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
40	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(stackSize);  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndFixStack(stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(stackSize);	  Object    o    =    peekAndFixStack();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
41	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(stack);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndFixStack(stack);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(stack);	  Object    o    =    peekAndFixStack();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
42	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stackSize);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndFix(stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stackSize);	  Object    o    =    peekAndFixStack();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
43	[BUG]  [BUGGY]  Object  o  =  peekAndFixClose(stackSize);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndFixClose(stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixClose(stackSize);	  Object    o    =    peekAndFixStack();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
44	[BUG]  [BUGGY]  JsonPrimitive  primitive  =(JsonPrimitive)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  JsonPrimitive  primitive  =(JsonPrimitive)iterator.next();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  primitive  =(JsonPrimitive)iterator.next();	      	non-compiled	[CE]  cannot  find  symbol  iterator	9	None	replace
45	[BUG]  [BUGGY]  Integer  stack  =(Integer)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Integer  stack  =(Integer)iterator.next();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)iterator.next();	      	non-compiled	[CE]  cannot  find  symbol  iterator	9	None	replace
46	[BUG]  [BUGGY]  int  stackSize  =  stack[stackSize  -  1];  [CE]  incompatible  types  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  int  stackSize  =  stack[stackSize  -  1];  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	int  stackSize  =  stack[stackSize  -  1];	      	non-compiled	[CE]  incompatible  types	9	None	replace
47	[BUG]  [BUGGY]  Object[]  stack  =(Object[])iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object[]  stack  =(Object[])iterator.next();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object[]  stack  =(Object[])iterator.next();	      	non-compiled	[CE]  cannot  find  symbol  iterator	9	None	replace
48	[BUG]  [BUGGY]  Object[]  stack  =(Object[])stack.clone();  [CE]  cannot  find  symbol  o  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object[]  stack  =(Object[])stack.clone();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object[]  stack  =(Object[])stack.clone();	      	non-compiled	[CE]  cannot  find  symbol  o	9	None	replace
49	[BUG]  [BUGGY]  Integer  stack  =(Integer)stack.get(stackSize);  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Integer  stack  =(Integer)stack.get(stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Integer  stack  =(Integer)stack.get(stackSize);	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
50	[BUG]  [BUGGY]  int  stackSize  =  stack[stackSize  -  2];  [CE]  incompatible  types  [FE]                                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  int  stackSize  =  stack[stackSize  -  2];  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	int  stackSize  =  stack[stackSize  -  2];	      	non-compiled	[CE]  incompatible  types	9	None	replace
51	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().getValue();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  getCurrentToken().getValue();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().getValue();	  Object    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
52	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().getImplicitPrototype();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  getCurrentToken().getImplicitPrototype();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().getImplicitPrototype();	  Object    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
53	[BUG]  [BUGGY]  Object  o  =  this.getCurrentToken();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  this.getCurrentToken();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.getCurrentToken();	  Object    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
54	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().next();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  getCurrentToken().next();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().next();	  Object    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
55	[BUG]  [BUGGY]  Object  o  =  findCurrentToken();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  findCurrentToken();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  findCurrentToken();	  Object    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
56	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stack);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndFix(stack);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stack);	  Object    o    =    peekAndFix();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
57	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stack,  stackSize);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndFix(stack,  stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stack,  stackSize);	  Object    o    =    peekAndFix();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
58	[BUG]  [BUGGY]  Object  o  =  peekAndFix(stack.length);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndFix(stack.length);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(stack.length);	  Object    o    =    peekAndFix();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
59	[BUG]  [BUGGY]  Object  o  =  stack.next();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  stack.next();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.next();	  Object    o    =    this.next();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
60	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  stack[stackSize  -  1];  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  stack[stackSize  -  1];	  Object    o    =    this.next();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
61	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  stack[stackSize  -  1];  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1];	  Object    o    =    this.next();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
62	[BUG]  [BUGGY]  Object  o  =  iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  iterator.next();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  iterator.next();	  Object    o    =    this.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	6	None	replace
63	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  stack[stackSize  -  2];  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  stack[stackSize  -  2];	  Object    o    =    this.next();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
64	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  2];  [FE]  ArrayIndexOutOfBoundsException  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  stack[stackSize  -  2];  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  2];	  Object    o    =    this.next();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
65	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1].next();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  stack[stackSize  -  1].next();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[stackSize  -  1].next();	  Object    o    =    this.next();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
66	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  this.stack[stackSize  -  1];  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	add	Object  o  =  this.stack[stackSize  -  1];	  Object    o    =    this.next();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
67	[BUG]  [BUGGY]  Object  o  =  this.stack[stackSize  -  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  this.stack[stackSize  -  1];  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  this.stack[stackSize  -  1];	  Object    o    =    this.next();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
68	[BUG]  [BUGGY]  Object  o  =  peekAndClearStack(stackSize);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndClearStack(stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStack(stackSize);	  Object    o    =    peekAndClearStack();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
69	[BUG]  [BUGGY]  Object  o  =  peekAndClear();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndClear();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClear();	  Object    o    =    peekAndClearStack();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
70	[BUG]  [BUGGY]  Object  o  =  peekAndClearBuffer();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndClearBuffer();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearBuffer();	  Object    o    =    peekAndClearStack();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
71	[BUG]  [BUGGY]  Object  o  =  peekAndClearStandardStack();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndClearStandardStack();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStandardStack();	  Object    o    =    peekAndClearStack();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
72	[BUG]  [BUGGY]  Object  o  =  peekAndClearStandard();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndClearStandard();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStandard();	  Object    o    =    peekAndClearStack();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
73	[BUG]  [BUGGY]  Object  o  =  peekAndClearStack(stack);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndClearStack(stack);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStack(stack);	  Object    o    =    peekAndClearStack();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
74	[BUG]  [BUGGY]  Object  o  =  lookupCurrentToken();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  lookupCurrentToken();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  lookupCurrentToken();	  Object    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
75	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().jsonToString();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  getCurrentToken().jsonToString();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().jsonToString();	  Object    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
76	[BUG]  [BUGGY]  Object  o  =  peekAndFix(pathNames);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndFix(pathNames);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFix(pathNames);	  Object    o    =    peekAndFix();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
77	[BUG]  [BUGGY]  Object  o  =  bufferIterator(this.unreachableIterator());  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  bufferIterator(this.unreachableIterator());  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  bufferIterator(this.unreachableIterator());	  Object    o    =    this.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
78	[BUG]  [BUGGY]  Object  o  =  bufferIterator();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  bufferIterator();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  bufferIterator();	  Object    o    =    this.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
79	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(pathNames);  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndFixStack(pathNames);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(pathNames);	  Object    o    =    peekAndFixStack();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
80	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(false);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndFixStack(false);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(false);	  Object    o    =    peekAndFixStack();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
81	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(paths);  [CE]  cannot  find  symbol  paths  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndFixStack(paths);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(paths);	  Object    o    =    peekAndFixStack();    	non-compiled	[CE]  cannot  find  symbol  paths	11	None	replace
82	[BUG]  [BUGGY]  Object  o  =  push();  [CE]  method  push  in  class  JsonTreeReader  cannot  be  applied  to  given  types;  [FE]    StackOverflowError    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  push();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  push();	  Object    o    =    peek();    	non-compiled	[CE]  method  push  in  class  JsonTreeReader  cannot  be  applied  to  given  types;	5	None	replace
83	[BUG]  [BUGGY]  Object  o  =  peek(null);  [CE]  no  suitable  method  found  for  peek(<null>)  [FE]      StackOverflowError    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek(null);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(null);	  Object    o    =    peek();    	non-compiled	[CE]  no  suitable  method  found  for  peek(<null>)	5	None	replace
84	[BUG]  [BUGGY]  Object  o  =  getNode();  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  getNode();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getNode();	  Object    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
85	[BUG]  [BUGGY]  Object  o  =  stack.peek();  [CE]  cannot  find  symbol  [FE]          StackOverflowError    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  stack.peek();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack.peek();	  Object    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
86	[BUG]  [BUGGY]  Object  o  =  peek(pathNames,  stackSize);  [CE]  no  suitable  method  found  for  peek(String[],int)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek(pathNames,  stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(pathNames,  stackSize);	  Object    o    =    peek(stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(String[],int)	2	None	replace
87	[BUG]  [BUGGY]  Object  o  =  peek(pathIndices,  stackSize);  [CE]  no  suitable  method  found  for  peek(int[],int)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek(pathIndices,  stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(pathIndices,  stackSize);	  Object    o    =    peek(stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(int[],int)	2	None	replace
88	[BUG]  [BUGGY]  Object  o  =  peek(null,  stackSize);  [CE]  no  suitable  method  found  for  peek(<null>,int)  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek(null,  stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(null,  stackSize);	  Object    o    =    peek(stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(<null>,int)	2	None	replace
89	[BUG]  [BUGGY]  Object  o  =  pathNames.unreachablePeek();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  pathNames.unreachablePeek();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pathNames.unreachablePeek();	  Object    o    =    this.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
90	[BUG]  [BUGGY]  Object  o  =  tokens.unreachablePeek();  [CE]  cannot  find  symbol  tokens  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  tokens.unreachablePeek();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  tokens.unreachablePeek();	  Object    o    =    this.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol  tokens	8	None	replace
91	[BUG]  [BUGGY]  Object  o  =  getIterator().unreachablePeek();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  getIterator().unreachablePeek();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterator().unreachablePeek();	  Object    o    =    this.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
92	[BUG]  [BUGGY]  Object  o  =  buffer();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  buffer();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  buffer();	  Object    o    =    this.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
93	[BUG]  [BUGGY]  Object  o  =  peekAndFixStackTrace();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndFixStackTrace();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStackTrace();	  Object    o    =    peekStackTrace();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
94	[BUG]  [BUGGY]  Object  o  =  peekAsJsonStackTrace();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAsJsonStackTrace();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAsJsonStackTrace();	  Object    o    =    peekStackTrace();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
95	[BUG]  [BUGGY]  Object  o  =  peekAndThrow(System.identityHashCode(this));  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndThrow(System.identityHashCode(this));  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndThrow(System.identityHashCode(this));	  Object    o    =    peekStackTrace();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
96	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonPrimitive.class);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekToken(JsonPrimitive.class);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonPrimitive.class);	  Object    o    =    peekToken();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
97	[BUG]  [BUGGY]  Object  o  =  peekAsJsonToken();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAsJsonToken();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAsJsonToken();	  Object    o    =    peekToken();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
98	[BUG]  [BUGGY]  Object  o  =  peekToken(null);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekToken(null);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(null);	  Object    o    =    peekToken();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
99	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackSize();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndClearStackSize();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackSize();	  Object    o    =    peekAndClearStack();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
100	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackTree();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndClearStackTree();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackTree();	  Object    o    =    peekAndClearStack();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
101	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackStandard();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndClearStackStandard();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackStandard();	  Object    o    =    peekAndClearStack();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
102	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackStructure();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndClearStackStructure();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackStructure();	  Object    o    =    peekAndClearStack();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
103	[BUG]  [BUGGY]  Object  o  =  pushStack(stackSize);  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  pushStack(stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStack(stackSize);	  Object    o    =    pushStack();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
104	[BUG]  [BUGGY]  Object  o  =  pushStackTrace();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  pushStackTrace();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStackTrace();	  Object    o    =    pushStack();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
105	[BUG]  [BUGGY]  Object  o  =  pushStackSize();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  pushStackSize();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStackSize();	  Object    o    =    pushStack();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
106	[BUG]  [BUGGY]  Object  o  =  pushStackTree();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  pushStackTree();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStackTree();	  Object    o    =    pushStack();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
107	[BUG]  [BUGGY]  Object  o  =  stack[this.next();  [CE]  ']'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  stack[this.next();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stack[this.next();	  Object    o    =    this.next();    	non-compiled	[CE]  ']'  expected	6	None	replace
108	[BUG]  [BUGGY]  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  <identifier>  expected  [FE]    StackOverflowError    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    peek();    Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  	non-compiled	[CE]  <identifier>  expected	4	None	add
109	[BUG]  [BUGGY]  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  <identifier>  expected  [FE]      StackOverflowError    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    peek();    Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  	non-compiled	[CE]  <identifier>  expected	4	None	add
110	[BUG]  [BUGGY]  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }  [CE]  <identifier>  expected  [FE]        StackOverflowError    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    peek();    Object  o  =  peek();  this.null  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }	  	non-compiled	[CE]  <identifier>  expected	4	None	add
111	[BUG]  [BUGGY]  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }  [CE]  <identifier>  expected  [FE]          StackOverflowError    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek();  Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    peek();    Object  o  =  peek();  this.null  =  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.UNREADABLE_READER;  }	  	non-compiled	[CE]  <identifier>  expected	4	None	add
112	[BUG]  [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)iterator.next();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  stack  =(JsonPrimitive)iterator.next();	      	non-compiled	[CE]  cannot  find  symbol  iterator	9	None	replace
113	[BUG]  [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getObject();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  JsonPrimitive  stack  =(JsonPrimitive)getObject();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonPrimitive  stack  =(JsonPrimitive)getObject();	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
114	[BUG]  [BUGGY]  Object  o  =  stackSize.next();  [CE]  int  cannot  be  dereferenced  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  stackSize.next();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stackSize.next();	  Object    o    =    this.next();    	non-compiled	[CE]  int  cannot  be  dereferenced	6	None	replace
115	[BUG]  [BUGGY]  Object  o  =  stacks.next();  [CE]  cannot  find  symbol  stacks  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  stacks.next();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stacks.next();	  Object    o    =    this.next();    	non-compiled	[CE]  cannot  find  symbol  stacks	6	None	replace
116	[BUG]  [BUGGY]  Object  o  =  pushStackToSubtract(stackSize);  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  pushStackToSubtract(stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pushStackToSubtract(stackSize);	  Object    o    =    pushStack();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
117	[BUG]  [BUGGY]  Object  o  =  peek();  JsonObject  o  =  peek();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]    StackOverflowError    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek();  JsonObject  o  =  peek();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object    o    =    peek();    JsonObject  o  =  peek();	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	4	None	add
118	[BUG]  [BUGGY]  Object  o  =  push(stackSize);  [CE]  incompatible  types  [FE]    StackOverflowError    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  push(stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  push(stackSize);	  Object    o    =    peek();    	non-compiled	[CE]  incompatible  types	5	None	replace
119	[BUG]  [BUGGY]  Object  o  =  peekAsObject();  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAsObject();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAsObject();	  Object    o    =    peek();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
120	[BUG]  [BUGGY]  Object  o  =  buffer.unreachablePeek();  [CE]  buffer  has  private  access  in  JsonReader  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  buffer.unreachablePeek();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  buffer.unreachablePeek();	  Object    o    =    this.unreachablePeek();    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	8	None	replace
121	[BUG]  [BUGGY]  Object  o  =  stackSize.unreachablePeek();  [CE]  int  cannot  be  dereferenced  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  stackSize.unreachablePeek();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  stackSize.unreachablePeek();	  Object    o    =    this.unreachablePeek();    	non-compiled	[CE]  int  cannot  be  dereferenced	8	None	replace
122	[BUG]  [BUGGY]  Object  o  =  getImplicitReachable();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  getImplicitReachable();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getImplicitReachable();	  Object    o    =    this.unreachablePeek();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
123	[BUG]  [BUGGY]  Object  o  =  peekCurrentToken();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekCurrentToken();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekCurrentToken();	  Object    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
124	[BUG]  [BUGGY]  Object  o  =  getCurrentToken().toString();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  getCurrentToken().toString();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getCurrentToken().toString();	  Object    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
125	[BUG]  [BUGGY]  Object  o  =  startCurrentToken();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  startCurrentToken();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  startCurrentToken();	  Object    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
126	[BUG]  [BUGGY]  Object  o  =  createCurrentToken();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  createCurrentToken();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  createCurrentToken();	  Object    o    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
127	[BUG]  [BUGGY]  Object  o  =  peekAndClearStackStack();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndClearStackStack();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndClearStackStack();	  Object    o    =    peekAndClearStack();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
128	[BUG]  [BUGGY]  Object  o  =  getAndFix();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  getAndFix();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndFix();	  Object    o    =    peekAndFix();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
129	[BUG]  [BUGGY]  Object  o  =  getIterator(stackSize);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  getIterator(stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getIterator(stackSize);	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
130	[BUG]  [BUGGY]  JsonToken  o  =  getCurrentToken();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  JsonToken  o  =  getCurrentToken();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	JsonToken  o  =  getCurrentToken();	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
131	[BUG]  [BUGGY]  Object  o  =  peekIndices();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekIndices();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekIndices();	  Object    o    =    peekStackTrace();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
132	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekToken(JsonToken.END_ARRAY);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.END_ARRAY);	  Object    o    =    peekToken();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
133	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.VALUE_EMBEDDED_OBJECT);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekToken(JsonToken.VALUE_EMBEDDED_OBJECT);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.VALUE_EMBEDDED_OBJECT);	  Object    o    =    peekToken();    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	3	None	replace
134	[BUG]  [BUGGY]  Object  o  =  peekToken(JsonToken.VALUE_EMBEDDED);  [CE]  cannot  find  symbol  VALUE_EMBEDDED  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekToken(JsonToken.VALUE_EMBEDDED);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekToken(JsonToken.VALUE_EMBEDDED);	  Object    o    =    peekToken();    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED	3	None	replace
135	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  stackOffset);  [CE]  cannot  find  symbol  stackOffset  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek(stackSize,  stackOffset);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  stackOffset);	  Object    o    =    peek(stackSize);    	non-compiled	[CE]  cannot  find  symbol  stackOffset	2	None	replace
136	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  stackSize);  [CE]  no  suitable  method  found  for  peek(int,int)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek(stackSize,  stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  stackSize);	  Object    o    =    peek(stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(int,int)	2	None	replace
137	[BUG]  [BUGGY]  Object  o  =  peek(stackSize,  stack);  [CE]  no  suitable  method  found  for  peek(int,Object[])  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peek(stackSize,  stack);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peek(stackSize,  stack);	  Object    o    =    peek(stackSize);    	non-compiled	[CE]  no  suitable  method  found  for  peek(int,Object[])	2	None	replace
138	[BUG]  [BUGGY]  Object  o  =  buffer.unreachableIterator();  [CE]  buffer  has  private  access  in  JsonReader  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  buffer.unreachableIterator();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  buffer.unreachableIterator();	  Object    o    =    this.unreachableIterator();    	non-compiled	[CE]  buffer  has  private  access  in  JsonReader	7	None	replace
139	[BUG]  [BUGGY]  Object  o  =  pathNames.unreachableIterator();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  pathNames.unreachableIterator();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  pathNames.unreachableIterator();	  Object    o    =    this.unreachableIterator();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
140	[BUG]  [BUGGY]  Object  o  =  peekAndFixOutOfBounds();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndFixOutOfBounds();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixOutOfBounds();	  Object    o    =    peekAndFixStack();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
141	[BUG]  [BUGGY]  Object  o  =  peekAndFixStack(stackSize,  stackSize);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  peekAndFixStack(stackSize,  stackSize);  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  peekAndFixStack(stackSize,  stackSize);	  Object    o    =    peekAndFixStack();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
142	[BUG]  [BUGGY]  Object  o  =  getAndFixStack();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }    [BUGGY]  Object  o  =  getAndFixStack();  [BUGGY]    if  (o  instanceof  Iterator)  {  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	111	111	2	replace	Object  o  =  getAndFixStack();	  Object    o    =    peekAndFixStack();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
