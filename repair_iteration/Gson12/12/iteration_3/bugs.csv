bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalArgumentIterator  <?>  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    instanceof    IllegalArgumentIterator    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	190	None	replace
2	[BUG]  [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>,  stack[stackSize  -  2])  {  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>,  stack[stackSize  -  2])  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalArgumentIterator  <?>,  stack[stackSize  -  2])  {	  if(o    instanceof    IllegalArgumentIterator    <?>)    {    	non-compiled	[CE]  ')'  expected	190	None	replace
3	[BUG]  [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>,  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>,  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalArgumentIterator  <?>,  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    instanceof    IllegalArgumentIterator    <?>)    {    	non-compiled	[CE]  ')'  expected	190	None	replace
4	[BUG]  [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>  ||  o  instanceof  JsonPrimitive)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalArgumentIterator  <?>  ||  o  instanceof  JsonPrimitive)  {	  if(o    instanceof    IllegalArgumentIterator    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	190	None	replace
5	[BUG]  [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>,  stack[stackSize  -  1])  {  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>,  stack[stackSize  -  1])  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalArgumentIterator  <?>,  stack[stackSize  -  1])  {	  if(o    instanceof    IllegalArgumentIterator    <?>)    {    	non-compiled	[CE]  ')'  expected	190	None	replace
6	[BUG]  [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>  ||  o  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalArgumentIterator  <?>  ||  o  instanceof  JsonObject)  {	  if(o    instanceof    IllegalArgumentIterator    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	190	None	replace
7	[BUG]  [BUGGY]  if(o  ==  UNREADABLE_READER  ||  o.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  UNREADABLE_READER  ||  o.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  UNREADABLE_READER  ||  o.isPrimitive())  {	  if(o    ==    null    ||    o.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
8	[BUG]  [BUGGY]  if(o  ==  null  ||!o.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!o.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||!o.isPrimitive())  {	  if(o    ==    null    ||    o.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
9	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length.isPrimitive())  {  [CE]  int  cannot  be  dereferenced  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length.isPrimitive())  {	  if(o    ==    null    ||    o.isPrimitive())    {    	non-compiled	[CE]  int  cannot  be  dereferenced	21	None	replace
10	[BUG]  [BUGGY]  if(o  ==  null  ||  isObject.isPrimitive())  {  [CE]  cannot  find  symbol  isObject  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  isObject.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  isObject.isPrimitive())  {	  if(o    ==    null    ||    o.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  isObject	21	None	replace
11	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.isPrimitive())  {	  if(o    ==    null    ||    o.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
12	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject)  {  if(o  ==  null  ||  o  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject)  {  if(o  ==  null  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonObject)    {    if(o  ==  null  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
13	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject)  {  if(o!=  null  ||  o  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject)  {  if(o!=  null  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonObject)    {    if(o!=  null  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
14	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject)  {  If(o  ==  null  ||  o  instanceof  JsonObject)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject)  {  If(o  ==  null  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonObject)    {    If(o  ==  null  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
15	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject)  {  if(o  >=  null  ||  o  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject)  {  if(o  >=  null  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonObject)    {    if(o  >=  null  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
16	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject)  {  if(o  >>  null  ||  o  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject)  {  if(o  >>  null  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonObject)    {    if(o  >>  null  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
17	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject)  {  if(o  [BUGGY]  null  ||  o  instanceof  JsonObject)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject)  {  if(o  [BUGGY]  null  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonObject)    {    if(o  [BUGGY]  null  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  ')'  expected	13	None	add
18	[BUG]  [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_OBJECT;  }	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	172	None	replace
19	[BUG]  [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_OBJECT;  }	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	172	None	replace
20	[BUG]  [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.START_OBJECT  ||  o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_OBJECT;  }	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	172	None	replace
21	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_OBJECT;  }	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	172	None	replace
22	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonTo  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonTo  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonTo	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  ';'  expected	172	None	replace
23	[BUG]  [BUGGY]  if(o  ==  JsonToken.START_OBJECT)  {  If(o  ==  null)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.START_OBJECT)  {  If(o  ==  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.START_OBJECT)  {  If(o  ==  null)  {	  if(o    ==    null)    {    If(o    ==    null)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
24	[BUG]  [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o!=  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o!=  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.START_OBJECT  ||  o!=  JsonToken.END_OBJECT)  {	  if(o    ==    null)    {    If(o    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	9	None	replace
25	[BUG]  [BUGGY]  if(o  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.START_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.START_OBJECT)  {	  if(o    ==    null)    {    If(o    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	9	None	replace
26	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    if(o    instancesof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
27	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    if(o    instancesof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
28	[BUG]  [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.isPrimitive())  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    if(o    instancesof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
29	[BUG]  [BUGGY]  if(o  instanceof  Class  <?>)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Class  <?>)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Class  <?>)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    if(o    instancesof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
30	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  Iterator  ||  o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    if(o    instancesof    JsonObject    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
31	[BUG]  [BUGGY]  if(o  instanceof  Iterator  ||  o  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator  ||  o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    if(o    instancesof    JsonObject    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
32	[BUG]  [BUGGY]  if(o!=  null  &&  stackSize  >  0)  {  if(o!=  null  &&  stackSize  >  0)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stackSize  >  0)  {  if(o!=  null  &&  stackSize  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stackSize    >    0)    {    if(o!=  null  &&  stackSize  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	177	None	add
33	[BUG]  [BUGGY]  if(o!=  null  &&  stackSize  >  0)  {  if(o  ==  null  &&  stackSize  >  0)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stackSize  >  0)  {  if(o  ==  null  &&  stackSize  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stackSize    >    0)    {    if(o  ==  null  &&  stackSize  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	177	None	add
34	[BUG]  [BUGGY]  if(o!=  null  &&  stackSize  >  0)  {  if(o  >=  null  &&  stackSize  >  0)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stackSize  >  0)  {  if(o  >=  null  &&  stackSize  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stackSize    >    0)    {    if(o  >=  null  &&  stackSize  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	177	None	add
35	[BUG]  [BUGGY]  if(o!=  null  &&  stackSize  >  0)  {  If(o!=  null  &&  stackSize  >  0)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stackSize  >  0)  {  If(o!=  null  &&  stackSize  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stackSize    >    0)    {    If(o!=  null  &&  stackSize  >  0)  {	  	non-compiled	[CE]  ';'  expected	177	None	add
36	[BUG]  [BUGGY]  if(o!=  null  &&  stackSize  >  0)  {  if(o  >>  null  &&  stackSize  >  0)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stackSize  >  0)  {  if(o  >>  null  &&  stackSize  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stackSize    >    0)    {    if(o  >>  null  &&  stackSize  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	177	None	add
37	[BUG]  [BUGGY]  if(o!=  null  &&  stackSize  >  0)  {  if(o  [BUGGY]  null  &&  stackSize  >  0)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stackSize  >  0)  {  if(o  [BUGGY]  null  &&  stackSize  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stackSize    >    0)    {    if(o  [BUGGY]  null  &&  stackSize  >  0)  {	  	non-compiled	[CE]  ')'  expected	177	None	add
38	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  >=  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack.length  >=  0)  {	  if(o    ==    null    ||    stack.length!=    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	96	2	replace
39	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  >=  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  >=  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  >=  0)  {	  if(o    ==    null    ||    stack.length!=    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	96	2	replace
40	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length!=  1)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack.length!=  1)  {	  if(o    ==    null    ||    stack.length!=    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	96	2	replace
41	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length!=  1)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length!=  1)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length!=  1)  {	  if(o    ==    null    ||    stack.length!=    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	96	2	replace
42	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack.length!=  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  stack.length!=  0)  {	  if(o    ==    null    ||    stack.length!=    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	96	2	replace
43	[BUG]  [BUGGY]  if(o!=  null  ||  stack.length!=  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack.length!=  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  stack.length!=  0)  {	  if(o    ==    null    ||    stack.length!=    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	96	2	replace
44	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
45	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  If(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  If(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    If(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
46	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JSONObject  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JSONObject  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    if(o  instanceof  JSONObject  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
47	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  if(O  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  if(O  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    if(O  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
48	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  if(o  instancesof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  if(o  instancesof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    if(o  instancesof  JsonObject  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  ')'  expected	30	None	add
49	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  <  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  <  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  <	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
50	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  JsonNull.createJsonNull();  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  JsonNull.createJsonNull();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  JsonNull.createJsonNull();	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o;    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
51	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonPrimitive()  :  o;  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonPrimitive()  :  o;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.createJsonPrimitive()  :  o;	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o;    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
52	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  JsonNull.createJSObject();  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  JsonNull.createJSObject();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  JsonNull.createJSObject();	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o;    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
53	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJSObject()  :  o;  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJSObject()  :  o;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.createJSObject()  :  o;	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o;    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
54	[BUG]  [BUGGY]  Object  stack  =(o!=  null)?  JsonNull.createJsonNull()  :  o;  [CE]  illegal  start  of  type  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o!=  null)?  JsonNull.createJsonNull()  :  o;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o!=  null)?  JsonNull.createJsonNull()  :  o;	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o;    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
55	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  JsonNull.createJsonPrimitive();  [CE]  illegal  start  of  type  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  JsonNull.createJsonPrimitive();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  JsonNull.createJsonPrimitive();	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o;    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
56	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stackSize  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  stackSize  >  0)  {	  if(o!=    null    &&    stackSize    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	178	2	replace
57	[BUG]  [BUGGY]  if(o!=  null  ||  stackSize  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stackSize  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  stackSize  >  0)  {	  if(o!=    null    &&    stackSize    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	178	2	replace
58	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  &&  stackSize  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  &&  stackSize  >  0)  {	  if(o!=    null    &&    stackSize    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	178	2	replace
59	[BUG]  [BUGGY]  if(o  ==  null  &&  stackSize  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  &&  stackSize  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  &&  stackSize  >  0)  {	  if(o!=    null    &&    stackSize    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	178	2	replace
60	[BUG]  [BUGGY]  if(o!=  null  &&  stackSize  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stackSize  <  =  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  stackSize  <  =  0)  {	  if(o!=    null    &&    stackSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
61	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stackSize  >  1)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  &&  stackSize  >  1)  {	  if(o!=    null    &&    stackSize    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	178	2	replace
62	[BUG]  [BUGGY]  if(o!=  null  &&  stackSize  >  1)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stackSize  >  1)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  stackSize  >  1)  {	  if(o!=    null    &&    stackSize    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	178	2	replace
63	[BUG]  [BUGGY]  if(o  ==  null  &&  stackSize  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  &&  stackSize  <  =  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  &&  stackSize  <  =  0)  {	  if(o!=    null    &&    stackSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
64	[BUG]  [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  if(o  ==  null  ||  o.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  if(o  ==  null  ||  o.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.isPrimitive())  {  if(o  ==  null  ||  o.isPrimitive())  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
65	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o!=  null  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o!=  null  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o!=  null  ||  o  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
66	[BUG]  [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  if(o  ==  null  ||  o.isIterator())  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  if(o  ==  null  ||  o.isIterator())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.isPrimitive())  {  if(o  ==  null  ||  o.isIterator())  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
67	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonPrimitive)  {  [CE]  cannot  find  symbol  JsonPrimitive  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  JsonPrimitive)  {	  if(o    ==    null    ||    o.getClass()    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol  JsonPrimitive	17	None	replace
68	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonPrimitive.class)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  o.getClass()!=  JsonPrimitive.class)  {	  if(o    ==    null    ||    o.getClass()    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
69	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonPrimitive.class)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonPrimitive.class)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  JsonPrimitive.class)  {	  if(o    ==    null    ||    o.getClass()    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
70	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  inconvertible  types  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    ==    null    ||    o.getClass()    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  inconvertible  types	17	None	replace
71	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()  instanceof  JsonPrimitive  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  inconvertible  types  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()  instanceof  JsonPrimitive  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()  instanceof  JsonPrimitive  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    ==    null    ||    o.getClass()    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  inconvertible  types	17	None	replace
72	[BUG]  [BUGGY]  if(o  ==  UNREADABLE_READER  ||  o.getClass()  instanceof  JsonPrimitive)  {  [CE]  inconvertible  types  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  UNREADABLE_READER  ||  o.getClass()  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  UNREADABLE_READER  ||  o.getClass()  instanceof  JsonPrimitive)  {	  if(o    ==    null    ||    o.getClass()    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  inconvertible  types	17	None	replace
73	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonToken.END_OBJECT)  {  [CE]  incomparable  types:  Class<CAP#1>  and  JsonToken  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  JsonToken.END_OBJECT)  {	  if(o    ==    null    ||    o.getClass()    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  incomparable  types:  Class<CAP#1>  and  JsonToken	17	None	replace
74	[BUG]  [BUGGY]  if(o!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
75	[BUG]  [BUGGY]  ||(o  ==  null  &&  o.isPrimitive()))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  ||(o  ==  null  &&  o.isPrimitive()))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	||(o  ==  null  &&  o.isPrimitive()))  {  throw  new  IllegalStateException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
76	[BUG]  [BUGGY]  ||(o  ==  null  &&  o.getClass()!=  JsonToken.END_OBJECT))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  ||(o  ==  null  &&  o.getClass()!=  JsonToken.END_OBJECT))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	||(o  ==  null  &&  o.getClass()!=  JsonToken.END_OBJECT))  {  throw  new  IllegalStateException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
77	[BUG]  [BUGGY]  ||(o  ==  null  &&  o.getClass()!=  JsonToken.VALUE_NULL))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  ||(o  ==  null  &&  o.getClass()!=  JsonToken.VALUE_NULL))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	||(o  ==  null  &&  o.getClass()!=  JsonToken.VALUE_NULL))  {  throw  new  IllegalStateException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
78	[BUG]  [BUGGY]  parent  ==  null  ||  o  ==  parent.next())  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  parent  ==  null  ||  o  ==  parent.next())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	parent  ==  null  ||  o  ==  parent.next())  {  throw  new  IllegalStateException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	68	None	replace
79	[BUG]  [BUGGY]  ||(o  ==  null  &&  o.getClass()!=  JsonToken.END_OBJECT))  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  ||(o  ==  null  &&  o.getClass()!=  JsonToken.END_OBJECT))  {  throw  new  IllegalStateException( " ");  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	||(o  ==  null  &&  o.getClass()!=  JsonToken.END_OBJECT))  {  throw  new  IllegalStateException( " ");	  if(o    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
80	[BUG]  [BUGGY]  Object[]  stack  =(o!=  null)?  null  :  o.toString();  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object[]  stack  =(o!=  null)?  null  :  o.toString();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object[]  stack  =(o!=  null)?  null  :  o.toString();	  Object[]    stack    =(o    ==    null)?    null    :    o.toString();    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
81	[BUG]  [BUGGY]  Object[]  stack  =(o  ==  null)?  JsonNull.NULL  :  o.toString();  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object[]  stack  =(o  ==  null)?  JsonNull.NULL  :  o.toString();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object[]  stack  =(o  ==  null)?  JsonNull.NULL  :  o.toString();	  Object[]    stack    =(o    ==    null)?    null    :    o.toString();    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
82	[BUG]  [BUGGY]  Object[]  stack  =(o  ==  null)?  JsonNull.EMPTY  :  o.toString();  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object[]  stack  =(o  ==  null)?  JsonNull.EMPTY  :  o.toString();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object[]  stack  =(o  ==  null)?  JsonNull.EMPTY  :  o.toString();	  Object[]    stack    =(o    ==    null)?    null    :    o.toString();    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
83	[BUG]  [BUGGY]  Object[]  stack  =(o  ==  JsonPrimitive)?  null  :  o.toString();  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object[]  stack  =(o  ==  JsonPrimitive)?  null  :  o.toString();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object[]  stack  =(o  ==  JsonPrimitive)?  null  :  o.toString();	  Object[]    stack    =(o    ==    null)?    null    :    o.toString();    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
84	[BUG]  [BUGGY]  Object[]  stack  =(o  ==  JsonToken.END_OBJECT)?  null  :  o.toString();  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object[]  stack  =(o  ==  JsonToken.END_OBJECT)?  null  :  o.toString();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object[]  stack  =(o  ==  JsonToken.END_OBJECT)?  null  :  o.toString();	  Object[]    stack    =(o    ==    null)?    null    :    o.toString();    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
85	[BUG]  [BUGGY]  Object[]  stack  =(o  ==  null)?  JsonNull.UNKNOWN  :  o.toString();  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object[]  stack  =(o  ==  null)?  JsonNull.UNKNOWN  :  o.toString();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object[]  stack  =(o  ==  null)?  JsonNull.UNKNOWN  :  o.toString();	  Object[]    stack    =(o    ==    null)?    null    :    o.toString();    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
86	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	136	None	add
87	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o!=  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o!=  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o!=  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	136	None	add
88	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  If(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  If(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    If(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ';'  expected	136	None	add
89	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  iterator)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	136	None	add
90	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o  >=  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o  >=  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o  >=  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	136	None	add
91	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o  >>  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o  >>  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o  >>  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	136	None	add
92	[BUG]  [BUGGY]  if(o  instanceof  IllegalIterator  <?>  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalIterator  <?>  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalIterator  <?>  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    instanceof    IllegalIterator    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	191	None	replace
93	[BUG]  [BUGGY]  if(o  instanceof  IllegalIterator  <?>,  stack[stackSize  -  2])  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalIterator  <?>,  stack[stackSize  -  2])  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalIterator  <?>,  stack[stackSize  -  2])  {	  if(o    instanceof    IllegalIterator    <?>)    {    	non-compiled	[CE]  ')'  expected	191	None	replace
94	[BUG]  [BUGGY]  if(o  instanceof  IllegalIterator  <?>  ||  o  instanceof  JsonPrimitive)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalIterator  <?>  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalIterator  <?>  ||  o  instanceof  JsonPrimitive)  {	  if(o    instanceof    IllegalIterator    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	191	None	replace
95	[BUG]  [BUGGY]  if(o  instanceof  IllegalIterator  <?>  ||!(o  instanceof  JsonPrimitive))  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalIterator  <?>  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalIterator  <?>  ||!(o  instanceof  JsonPrimitive))  {	  if(o    instanceof    IllegalIterator    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	191	None	replace
96	[BUG]  [BUGGY]  if(o  instanceof  IllegalIterator  <?>  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalIterator  <?>  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalIterator  <?>  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o    instanceof    IllegalIterator    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	191	None	replace
97	[BUG]  [BUGGY]  if(o  instanceof  IllegalIterator  <?>,  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalIterator  <?>,  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalIterator  <?>,  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    instanceof    IllegalIterator    <?>)    {    	non-compiled	[CE]  ')'  expected	191	None	replace
98	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  <?>  stack[stackSize  -  2])  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  <?>  stack[stackSize  -  2])  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonObject)  <?>  stack[stackSize  -  2])  {  return  JsonToken.NAME;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.PREFIX;    }    	non-compiled	[CE]  illegal  start  of  type	202	None	replace
99	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonObject)  <?>  stack[stackSize  -  2])  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonObject)  <?>  stack[stackSize  -  2])  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  if(o  instanceof  JsonObject)  <?>  stack[stackSize  -  2])  {  return  JsonToken.NAME;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.PREFIX;    }    	non-compiled	[CE]  illegal  start  of  type	202	None	replace
100	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  1]!=  JsonToken.NAME)  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  1]!=  JsonToken.NAME)  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  1]!=  JsonToken.NAME)  {  return  JsonToken.NAME;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.PREFIX;    }    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
101	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  1]!=  JsonToken.NAME)  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  1]!=  JsonToken.NAME)  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  1]!=  JsonToken.NAME)  {  return  JsonToken.NAME;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.PREFIX;    }    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
102	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  2]!=  JsonToken.NAME)  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  2]!=  JsonToken.NAME)  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  2]!=  JsonToken.NAME)  {  return  JsonToken.NAME;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.PREFIX;    }    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
103	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  2]!=  JsonToken.NAME)  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  2]!=  JsonToken.NAME)  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  2]!=  JsonToken.NAME)  {  return  JsonToken.NAME;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.PREFIX;    }    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
104	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  2]!=  JsonToken.NAME)  {  return  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  2]!=  JsonToken.NAME)  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  2]!=  JsonToken.NAME)  {  return  JsonToken.END_OBJECT;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.PREFIX;    }    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
105	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    Iterator    <?>)    {    if(o!=  null  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
106	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    Iterator    <?>)    {    if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
107	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  if(o  >=  null  ||  o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  if(o  >=  null  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    Iterator    <?>)    {    if(o  >=  null  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
108	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  If(o!=  null  ||  o  instanceof  Iterator  <?>)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  If(o!=  null  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    Iterator    <?>)    {    If(o!=  null  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  ';'  expected	149	None	add
109	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  if(o  >>  null  ||  o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  if(o  >>  null  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    Iterator    <?>)    {    if(o  >>  null  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
110	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  if(o  [Delete]  null  ||  o  instanceof  Iterator  <?>)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  if(o  [Delete]  null  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    Iterator    <?>)    {    if(o  [Delete]  null  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  ')'  expected	149	None	add
111	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  if(o  [BUGGY]  null  ||  o  instanceof  Iterator  <?>)  {  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  if(o  [BUGGY]  null  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    Iterator    <?>)    {    if(o  [BUGGY]  null  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  ')'  expected	149	None	add
112	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    &&    o    instanceof    Iterator)    {    if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
113	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  If(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  If(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    &&    o    instanceof    Iterator)    {    If(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ';'  expected	80	None	add
114	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  &&  o  instanceof  iterator)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  &&  o  instanceof  iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    &&    o    instanceof    Iterator)    {    if(o  instanceof  JsonPrimitive  &&  o  instanceof  iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
115	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  |&  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  |&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    &&    o    instanceof    Iterator)    {    if(o  instanceof  JsonPrimitive  |&  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
116	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  if(o  instanceof  IsonPrimitive  &&  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  if(o  instanceof  IsonPrimitive  &&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    &&    o    instanceof    Iterator)    {    if(o  instanceof  IsonPrimitive  &&  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
117	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  if(o  instancesof  JsonPrimitive  &&  o  instanceof  Iterator)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  if(o  instancesof  JsonPrimitive  &&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    &&    o    instanceof    Iterator)    {    if(o  instancesof  JsonPrimitive  &&  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ')'  expected	80	None	add
118	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack.length  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  stack.length  >  0)  {	  if(o!=    null    &&    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	184	2	replace
119	[BUG]  [BUGGY]  if(o!=  null  ||  stack.length  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack.length  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  stack.length  >  0)  {	  if(o!=    null    &&    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	184	2	replace
120	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack.length  >  0)  {	  if(o!=    null    &&    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	184	2	replace
121	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  >  0)  {	  if(o!=    null    &&    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	184	2	replace
122	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  &&  stack.length  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  &&  stack.length  >  0)  {	  if(o!=    null    &&    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	184	2	replace
123	[BUG]  [BUGGY]  if(o  ==  null  &&  stack.length  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  &&  stack.length  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  &&  stack.length  >  0)  {	  if(o!=    null    &&    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	184	2	replace
124	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack.length  <  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  stack.length  <  0)  {	  if(o!=    null    &&    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	184	2	replace
125	[BUG]  [BUGGY]  if(o!=  null  ||  stack.length  <  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack.length  <  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  stack.length  <  0)  {	  if(o!=    null    &&    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	184	2	replace
126	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack.length  >  1)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  &&  stack.length  >  1)  {	  if(o!=    null    &&    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	184	2	replace
127	[BUG]  [BUGGY]  if(o!=  null  &&  stack.length  >  1)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack.length  >  1)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  stack.length  >  1)  {	  if(o!=    null    &&    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	184	2	replace
128	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonNull)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  o  instanceof  JsonNull)  {	  if(o    ==    null    ||    o    instanceof    JsonNull)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	194	2	replace
129	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonNull)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonNull)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o  instanceof  JsonNull)  {	  if(o    ==    null    ||    o    instanceof    JsonNull)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	194	2	replace
130	[BUG]  [BUGGY]  int  stackSize  =  stack.length  -  2;  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack.length  -  2;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack.length  -  2;	  int    stackSize    =    stack.length;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
131	[BUG]  [BUGGY]  int  stackSize  =  o.length;  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  o.length;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  o.length;	  int    stackSize    =    stack.length;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
132	[BUG]  [BUGGY]  int  stackSize  =  stack.length  +  1;  [CE]  illegal  start  of  type  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack.length  +  1;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack.length  +  1;	  int    stackSize    =    stack.length;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
133	[BUG]  [BUGGY]  int  stackSize  =  stack.length  -  4;  [CE]  illegal  start  of  type  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack.length  -  4;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack.length  -  4;	  int    stackSize    =    stack.length;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
134	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  IllegalArgumentIterator)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  IllegalArgumentIterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  &&  o  instanceof  IllegalArgumentIterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    IllegalArgumentIterator)    {    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
135	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator  <?>)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator  <?>)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    IllegalArgumentIterator)    {    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
136	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    IllegalArgumentIterator)    {    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
137	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||!(o  instanceof  IllegalArgumentIterator))  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||!(o  instanceof  IllegalArgumentIterator))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||!(o  instanceof  IllegalArgumentIterator))  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    IllegalArgumentIterator)    {    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
138	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator  ||!(o  instanceof  JsonObject))  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator  ||!(o  instanceof  JsonObject))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator  ||!(o  instanceof  JsonObject))  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    IllegalArgumentIterator)    {    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
139	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    IllegalArgumentIterator)    {    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
140	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  JsonToken.END_OBJECT)  {	  if(o!=    null)    {    if(o    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	113	2	replace
141	[BUG]  [BUGGY]  if(o  ==  JsonToken.END_OBJECT)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.END_OBJECT)  {	  if(o!=    null)    {    if(o    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	113	2	replace
142	[BUG]  [BUGGY]  if(o!=  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  JsonToken.VALUE_NULL)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  JsonToken.VALUE_NULL)  {	  if(o!=    null)    {    if(o    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	113	None	replace
143	[BUG]  [BUGGY]  if(o  ==  JsonToken.FUNCTION)  {  [CE]  cannot  find  symbol  FUNCTION  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.FUNCTION)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.FUNCTION)  {	  if(o!=    null)    {    if(o    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  FUNCTION	113	None	replace
144	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  =  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  <  =  0)  {	  if(o    ==    null    ||    stack.length    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
145	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  1)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack.length  <  1)  {	  if(o    ==    null    ||    stack.length    <    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	169	2	replace
146	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  1)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  1)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  <  1)  {	  if(o    ==    null    ||    stack.length    <    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	169	2	replace
147	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack.length  <  2  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {	  if(o    ==    null    ||    stack.length    <    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	169	2	replace
148	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  2  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  <  2  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {	  if(o    ==    null    ||    stack.length    <    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	169	2	replace
149	[BUG]  [BUGGY]  Object  o  =  peekStack();  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  peekStack();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  peekStack();	  if(o    ==    null)    {    Object    o    =    peekStack();    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
150	[BUG]  [BUGGY]  Object  o  =  peekToken();  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  peekToken();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  peekToken();	  if(o    ==    null)    {    Object    o    =    peekStack();    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
151	[BUG]  [BUGGY]  Object  o  =  peekCurrentToken();  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  peekCurrentToken();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  peekCurrentToken();	  if(o    ==    null)    {    Object    o    =    peekStack();    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
152	[BUG]  [BUGGY]  Object  o  =  peek();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  peek();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  peek();	  if(o    ==    null)    {    Object    o    =    peekStack();    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
153	[BUG]  [BUGGY]  Object  o  =  peekStack(1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  peekStack(1);  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  peekStack(1);	  if(o    ==    null)    {    Object    o    =    peekStack();    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
154	[BUG]  [BUGGY]  Object  o  =  peekArray();  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  peekArray();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  peekArray();	  if(o    ==    null)    {    Object    o    =    peekStack();    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
155	[BUG]  [BUGGY]  Object  o  =  peekList();  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  peekList();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  peekList();	  if(o    ==    null)    {    Object    o    =    peekStack();    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
156	[BUG]  [BUGGY]  if(o  ==  null  &&  o.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  &&  o.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  &&  o.isPrimitive())  {	  if(o!=    null    &&    o.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
157	[BUG]  [BUGGY]  if(o!=  UNREADABLE_READER  &&  o.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  UNREADABLE_READER  &&  o.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  UNREADABLE_READER  &&  o.isPrimitive())  {	  if(o!=    null    &&    o.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
158	[BUG]  [BUGGY]  if(o  ==  UNREADABLE_READER  &&  o.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  UNREADABLE_READER  &&  o.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  UNREADABLE_READER  &&  o.isPrimitive())  {	  if(o!=    null    &&    o.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
159	[BUG]  [BUGGY]  if(o!=  null  &&  o.isPrimitive()  ||  stack.length  >  0)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o.isPrimitive()  ||  stack.length  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  o.isPrimitive()  ||  stack.length  >  0)  {	  if(o!=    null    &&    o.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
160	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    If(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
161	[BUG]  [BUGGY]  if(o  ==  null)  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    If(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
162	[BUG]  [BUGGY]  if(o!=  null)  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    If(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
163	[BUG]  [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.isPrimitive())  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    If(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
164	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    If(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
165	[BUG]  [BUGGY]  if(o  instanceof  String)  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  String)  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  String)  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    If(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
166	[BUG]  [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o  ==  JsonToken.START_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.START_OBJECT  ||  o  ==  JsonToken.START_OBJECT)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	133	None	replace
167	[BUG]  [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o!=  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o!=  JsonToken.START_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.START_OBJECT  ||  o!=  JsonToken.START_OBJECT)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	133	None	replace
168	[BUG]  [BUGGY]  if(o!=  JsonToken.NAME  ||  o  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  JsonToken.NAME  ||  o  ==  JsonToken.START_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  JsonToken.NAME  ||  o  ==  JsonToken.START_OBJECT)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	133	None	replace
169	[BUG]  [BUGGY]  if(o  ==  JsonToken.NAME  ||  o  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.NAME  ||  o  ==  JsonToken.START_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.NAME  ||  o  ==  JsonToken.START_OBJECT)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	133	None	replace
170	[BUG]  [BUGGY]  if(o!=  null  &&  o  instanceof  Iterator)  {  if(o!=  null  &&  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o  instanceof  Iterator)  {  if(o!=  null  &&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    o    instanceof    Iterator)    {    if(o!=  null  &&  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
171	[BUG]  [BUGGY]  if(o!=  null  &&  o  instanceof  Iterator)  {  if(o  ==  null  &&  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o  instanceof  Iterator)  {  if(o  ==  null  &&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    o    instanceof    Iterator)    {    if(o  ==  null  &&  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
172	[BUG]  [BUGGY]  if(o!=  null  &&  o  instanceof  Iterator)  {  if(o  >=  null  &&  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o  instanceof  Iterator)  {  if(o  >=  null  &&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    o    instanceof    Iterator)    {    if(o  >=  null  &&  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
173	[BUG]  [BUGGY]  if(o!=  null  &&  o  instanceof  Iterator)  {  If(o!=  null  &&  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o  instanceof  Iterator)  {  If(o!=  null  &&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    o    instanceof    Iterator)    {    If(o!=  null  &&  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
174	[BUG]  [BUGGY]  if(o!=  null  &&  o  instanceof  Iterator)  {  if(o  >>  null  &&  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o  instanceof  Iterator)  {  if(o  >>  null  &&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    o    instanceof    Iterator)    {    if(o  >>  null  &&  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
175	[BUG]  [BUGGY]  if(o!=  null  &&  o  instanceof  Iterator)  {  if(o  [BUGGY]  null  &&  o  instanceof  Iterator)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o  instanceof  Iterator)  {  if(o  [BUGGY]  null  &&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    o    instanceof    Iterator)    {    if(o  [BUGGY]  null  &&  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ')'  expected	19	None	add
176	[BUG]  [BUGGY]  if(o!=  null  &&  o  instanceof  Iterator)  {  if(o  [Delete]  null  &&  o  instanceof  Iterator)  {  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o  instanceof  Iterator)  {  if(o  [Delete]  null  &&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    o    instanceof    Iterator)    {    if(o  [Delete]  null  &&  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ')'  expected	19	None	add
177	[BUG]  [BUGGY]  if(o!=  JsonToken.END_OBJECT  ||  o  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  JsonToken.END_OBJECT  ||  o  ==  JsonToken.START_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  JsonToken.END_OBJECT  ||  o  ==  JsonToken.START_OBJECT)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	132	None	replace
178	[BUG]  [BUGGY]  if(o  ==  JsonToken.END_OBJECT  ||  o  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.END_OBJECT  ||  o  ==  JsonToken.START_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.END_OBJECT  ||  o  ==  JsonToken.START_OBJECT)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	132	None	replace
179	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o.getClass()  ==  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  o.getClass()  ==  getClass())  {	  if(o!=    null    ||    o.getClass()!=    getClass())    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	146	2	replace
180	[BUG]  [BUGGY]  if(o!=  null  ||  o.getClass()  ==  getClass())  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o.getClass()  ==  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o.getClass()  ==  getClass())  {	  if(o!=    null    ||    o.getClass()!=    getClass())    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	146	2	replace
181	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  &&  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  &&  o.getClass()!=  getClass())  {	  if(o!=    null    ||    o.getClass()!=    getClass())    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	146	2	replace
182	[BUG]  [BUGGY]  if(o  ==  null  &&  o.getClass()!=  getClass())  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  &&  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  &&  o.getClass()!=  getClass())  {	  if(o!=    null    ||    o.getClass()!=    getClass())    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	146	2	replace
183	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()  ==  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  o.getClass()  ==  getClass())  {	  if(o!=    null    ||    o.getClass()!=    getClass())    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	146	2	replace
184	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()  ==  getClass())  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()  ==  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()  ==  getClass())  {	  if(o!=    null    ||    o.getClass()!=    getClass())    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	146	2	replace
185	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()  >=  getClass())  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()  >=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()  >=  getClass())  {	  if(o!=    null    ||    o.getClass()!=    getClass())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	146	None	replace
186	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonObject))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||!(o  instanceof  JsonObject))  {	  if(o!=    null    ||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	2	replace
187	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonObject))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonObject))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||!(o  instanceof  JsonObject))  {	  if(o!=    null    ||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	2	replace
188	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||!(o  instanceof  JsonObject))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||!(o  instanceof  JsonObject))  {	  if(o!=    null    ||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	2	replace
189	[BUG]  [BUGGY]  if(o!=  null  ||!(o  instanceof  JsonObject))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||!(o  instanceof  JsonObject))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||!(o  instanceof  JsonObject))  {	  if(o!=    null    ||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	2	replace
190	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  &&!(o  instanceof  JsonPrimitive))  {	  if(o!=    null    ||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	2	replace
191	[BUG]  [BUGGY]  if(o!=  null  &&!(o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&!(o  instanceof  JsonPrimitive))  {	  if(o!=    null    ||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	2	replace
192	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!o.getClass().isArray())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||!o.getClass().isArray())  {	  if(o!=    null    ||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	2	replace
193	[BUG]  [BUGGY]  if(o  ==  null  ||!o.getClass().isArray())  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!o.getClass().isArray())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||!o.getClass().isArray())  {	  if(o!=    null    ||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	2	replace
194	[BUG]  [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  if(o  instanceof  JsonObject  ||  o  instanceof  iterator)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  if(o  instanceof  JsonObject  ||  o  instanceof  iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.isPrimitive())  {  if(o  instanceof  JsonObject  ||  o  instanceof  iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonObject    ||    o    instanceof    iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
195	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  instanceof  JsonObject  ||  o  instanceof  iterator)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  instanceof  JsonObject  ||  o  instanceof  iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  instanceof  JsonObject  ||  o  instanceof  iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonObject    ||    o    instanceof    iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
196	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  &&  o  instanceof  JsonPrimitive)  {	  if(o!=    null    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	39	2	replace
197	[BUG]  [BUGGY]  if(o!=  null  &&  o  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  o  instanceof  JsonPrimitive)  {	  if(o!=    null    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	39	2	replace
198	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonPrimitive)    {    if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
199	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonPrimitive)    {    If(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  ';'  expected	74	None	add
200	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  if(O  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  if(O  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonPrimitive)    {    if(O  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
201	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  <  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  <  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonPrimitive)    {    if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  <	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
202	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  if(o  instancesof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  if(o  instancesof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonPrimitive)    {    if(o  instancesof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  ')'  expected	74	None	add
203	[BUG]  [BUGGY]  if(o!=  null  ||  o.getClass()!=  getClass())  {  if(o!=  null  ||  o.getClass()!=  getClass())  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o.getClass()!=  getClass())  {  if(o!=  null  ||  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o.getClass()!=    getClass())    {    if(o!=  null  ||  o.getClass()!=  getClass())  {	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
204	[BUG]  [BUGGY]  if(o!=  null  ||  o.getClass()!=  getClass())  {  if(o  ==  null  ||  o.getClass()!=  getClass())  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o.getClass()!=  getClass())  {  if(o  ==  null  ||  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o.getClass()!=    getClass())    {    if(o  ==  null  ||  o.getClass()!=  getClass())  {	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
205	[BUG]  [BUGGY]  if(o!=  null  ||  o.getClass()!=  getClass())  {  if(o!=  null  ||  o.getClass()  ==  getClass())  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o.getClass()!=  getClass())  {  if(o!=  null  ||  o.getClass()  ==  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o.getClass()!=    getClass())    {    if(o!=  null  ||  o.getClass()  ==  getClass())  {	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
206	[BUG]  [BUGGY]  if(o!=  null  ||  o.getClass()!=  getClass())  {  if(o!=  null  ||  o.getClass()  >=  getClass())  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o.getClass()!=  getClass())  {  if(o!=  null  ||  o.getClass()  >=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o.getClass()!=    getClass())    {    if(o!=  null  ||  o.getClass()  >=  getClass())  {	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
207	[BUG]  [BUGGY]  if(o!=  null  ||  o.getClass()!=  getClass())  {  if(o  >=  null  ||  o.getClass()!=  getClass())  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o.getClass()!=  getClass())  {  if(o  >=  null  ||  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o.getClass()!=    getClass())    {    if(o  >=  null  ||  o.getClass()!=  getClass())  {	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
208	[BUG]  [BUGGY]  if(o!=  null  ||  o.getClass()!=  getClass())  {  If(o!=  null  ||  o.getClass()!=  getClass())  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o.getClass()!=  getClass())  {  If(o!=  null  ||  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o.getClass()!=    getClass())    {    If(o!=  null  ||  o.getClass()!=  getClass())  {	  	non-compiled	[CE]  ';'  expected	145	None	add
209	[BUG]  [BUGGY]  if(o!=  null  ||  o.getClass()!=  getClass())  {  if(o!=  null  ||  o.getClass()  >>  getClass())  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o.getClass()!=  getClass())  {  if(o!=  null  ||  o.getClass()  >>  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o.getClass()!=    getClass())    {    if(o!=  null  ||  o.getClass()  >>  getClass())  {	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
210	[BUG]  [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  +  1;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  +  1;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack[stackSize  -  1]  +  1;	  int    stackSize    =    stack[stackSize    -    1];    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
211	[BUG]  [BUGGY]  float  stackSize  =  stack[stackSize  -  1];  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  float  stackSize  =  stack[stackSize  -  1];  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	float  stackSize  =  stack[stackSize  -  1];	  int    stackSize    =    stack[stackSize    -    1];    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
212	[BUG]  [BUGGY]  char  stackSize  =  stack[stackSize  -  1];  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  char  stackSize  =  stack[stackSize  -  1];  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	char  stackSize  =  stack[stackSize  -  1];	  int    stackSize    =    stack[stackSize    -    1];    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
213	[BUG]  [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  *  2;  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  *  2;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack[stackSize  -  1]  *  2;	  int    stackSize    =    stack[stackSize    -    1];    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
214	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  ==  null  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  ==  null  ||  o  instanceof  Iterator)  {  [BUGGY]    null  ||  o  instanceof  Iterator)  {  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  ==  null  ||  o  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
215	[BUG]  [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  if(o!=  null  ||  o.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  if(o!=  null  ||  o.isPrimitive())  {  [BUGGY]    null  ||  o  instanceof  Iterator)  {  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.isPrimitive())  {  if(o!=  null  ||  o.isPrimitive())  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
216	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  ==  null  ||  o.getClass()!=  getClass())  {  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  ==  null  ||  o.getClass()!=  getClass())  {  [BUGGY]    null  ||  o  instanceof  Iterator)  {  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  ==  null  ||  o.getClass()!=  getClass())  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
217	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {	  if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	104	2	replace
218	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {	  if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	104	2	replace
219	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	104	2	replace
220	[BUG]  [BUGGY]  if(o!=  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	104	2	replace
221	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(stack  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	104	2	replace
222	[BUG]  [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(stack  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	104	2	replace
223	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {	  if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	104	2	replace
224	[BUG]  [BUGGY]  if(o!=  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {	  if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	104	2	replace
225	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  iterator)  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    iterator)    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
226	[BUG]  [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  iterator)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.isPrimitive())  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
227	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  iterator)  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
228	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
229	[BUG]  [BUGGY]  for(o  instanceof  JsonPrimitive)  {  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  for(o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	for(o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonPrimitive)    {    for(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  not  a  statement	138	None	replace
230	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  for(int  i  =  0;  i  <  stack.length;  ++i)  {  [CE]  'else'  without  'if'  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject)  {  for(int  i  =  0;  i  <  stack.length;  ++i)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject)  {  for(int  i  =  0;  i  <  stack.length;  ++i)  {	  if(o    instanceof    JsonPrimitive)    {    for(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  'else'  without  'if'	138	None	replace
231	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  <  UNREADABLE_READER)  {  for(int  i  =  0;  i  <  stack.length;  ++i)  {  [CE]  >  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  <  UNREADABLE_READER)  {  for(int  i  =  0;  i  <  stack.length;  ++i)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  <  UNREADABLE_READER)  {  for(int  i  =  0;  i  <  stack.length;  ++i)  {	  if(o    instanceof    JsonPrimitive)    {    for(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  >  expected	138	None	replace
232	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(int  i  =  0;  i  <  stack.length;  ++i)  {  [CE]  'else'  without  'if'  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(int  i  =  0;  i  <  stack.length;  ++i)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  for(int  i  =  0;  i  <  stack.length;  ++i)  {	  if(o    instanceof    JsonPrimitive)    {    for(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  'else'  without  'if'	138	None	replace
233	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  for(JsonPrimitive  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  ']'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject)  {  for(JsonPrimitive  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject)  {  for(JsonPrimitive  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    instanceof    JsonPrimitive)    {    for(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  ']'  expected	138	None	replace
234	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  <  UNREADABLE_READER)  {  for(int  i  =  0;  i  <  stack.length;  i++)  {  [CE]  >  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  <  UNREADABLE_READER)  {  for(int  i  =  0;  i  <  stack.length;  i++)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  <  UNREADABLE_READER)  {  for(int  i  =  0;  i  <  stack.length;  i++)  {	  if(o    instanceof    JsonPrimitive)    {    for(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  >  expected	138	None	replace
235	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  for(JsonPrimitive  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject)  {  for(JsonPrimitive  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject)  {  for(JsonPrimitive  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonPrimitive)    {    for(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  ']'  expected	138	None	replace
236	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonNull))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||!(o  instanceof  JsonNull))  {	  if(o    instanceof    JsonPrimitive)    {    if(o    instancesof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	125	2	replace
237	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonNull))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonNull))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||!(o  instanceof  JsonNull))  {	  if(o    instanceof    JsonPrimitive)    {    if(o    instancesof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	125	2	replace
238	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  Iterator  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    instanceof    JsonObject    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	159	2	replace
239	[BUG]  [BUGGY]  if(o  instanceof  Iterator  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    instanceof    JsonObject    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	159	2	replace
240	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonObject    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	159	2	replace
241	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonObject    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	159	2	replace
242	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  Iterator  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {	  if(o    instanceof    JsonObject    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	159	2	replace
243	[BUG]  [BUGGY]  if(o  instanceof  Iterator  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {	  if(o    instanceof    JsonObject    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	159	2	replace
244	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  <?>)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  <?>)  {	  if(o    instanceof    JsonObject    <?>)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	162	None	replace
245	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject  <?>)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonObject  <?>)  {	  if(o    instanceof    JsonObject    <?>)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	162	None	replace
246	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject  <?>)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o  instanceof  JsonObject  <?>)  {	  if(o    instanceof    JsonObject    <?>)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	162	None	replace
247	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.NAME)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	106	2	replace
248	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.NAME)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.NAME)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	106	2	replace
249	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(stack  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	106	2	replace
250	[BUG]  [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(stack  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	106	2	replace
251	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	106	2	replace
252	[BUG]  [BUGGY]  if(o!=  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	106	2	replace
253	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(stack  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.NAME)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	106	2	replace
254	[BUG]  [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.NAME)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(stack  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.NAME)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	106	2	replace
255	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack[stackSize  -  1]!=  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  stack[stackSize  -  1]!=  JsonToken.NAME)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	106	2	replace
256	[BUG]  [BUGGY]  if(o!=  null  ||  stack[stackSize  -  1]!=  JsonToken.NAME)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack[stackSize  -  1]!=  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  stack[stackSize  -  1]!=  JsonToken.NAME)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	106	2	replace
257	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(stack!=  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(stack!=  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	106	2	replace
258	[BUG]  [BUGGY]  if(stack!=  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(stack!=  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(stack!=  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	106	2	replace
259	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  UNREADABLE_READER  ||  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  UNREADABLE_READER  ||  o.getClass()!=  getClass())  {	  if(o    ==    null    ||    o.getClass()!=    getClass())    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	87	2	replace
260	[BUG]  [BUGGY]  if(o  ==  UNREADABLE_READER  ||  o.getClass()!=  getClass())  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  UNREADABLE_READER  ||  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  UNREADABLE_READER  ||  o.getClass()!=  getClass())  {	  if(o    ==    null    ||    o.getClass()!=    getClass())    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	87	2	replace
261	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.STRING  ||  o  ==  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  JsonToken.STRING  ||  o  ==  JsonToken.END_OBJECT)  {	  if(o    ==    JsonToken.START_OBJECT    ||    o    ==    JsonToken.END_OBJECT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	134	2	replace
262	[BUG]  [BUGGY]  if(o  ==  JsonToken.STRING  ||  o  ==  JsonToken.END_OBJECT)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.STRING  ||  o  ==  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.STRING  ||  o  ==  JsonToken.END_OBJECT)  {	  if(o    ==    JsonToken.START_OBJECT    ||    o    ==    JsonToken.END_OBJECT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	134	2	replace
263	[BUG]  [BUGGY]  if(o  ==  JsonToken.FIELD_NAME  ||  o  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.FIELD_NAME  ||  o  ==  JsonToken.START_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.FIELD_NAME  ||  o  ==  JsonToken.START_OBJECT)  {	  if(o    ==    JsonToken.START_OBJECT    ||    o    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	134	None	replace
264	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack.length  <  2  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o    ==    null    ||    stack.length    <    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
265	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  2  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  <  2  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o    ==    null    ||    stack.length    <    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
266	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack.length  <  2  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {	  if(o    ==    null    ||    stack.length    <    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
267	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  2  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  <  2  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {	  if(o    ==    null    ||    stack.length    <    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
268	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack.length  <  2  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    ==    null    ||    stack.length    <    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
269	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  2  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  <  2  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    ==    null    ||    stack.length    <    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
270	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  1  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack.length  <  1  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o    ==    null    ||    stack.length    <    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
271	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  1  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  1  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  <  1  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o    ==    null    ||    stack.length    <    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
272	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  ==  null  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  if(o  ==  null  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  if(o  ==  null  ||  o  instanceof  Iterator)  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    if(o    [Delete]    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
273	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  ==  null  ||  o.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  if(o  ==  null  ||  o.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  if(o  ==  null  ||  o.isPrimitive())  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    if(o    [Delete]    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
274	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  >  0)  {  if(o  ==  null  ||  stackSize  >  0)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  >  0)  {  if(o  ==  null  ||  stackSize  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stackSize    >    0)    {    if(o  ==  null  ||  stackSize  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	163	None	add
275	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  >  0)  {  if(o!=  null  ||  stackSize  >  0)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  >  0)  {  if(o!=  null  ||  stackSize  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stackSize    >    0)    {    if(o!=  null  ||  stackSize  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	163	None	add
276	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  >  0)  {  If(o  ==  null  ||  stackSize  >  0)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  >  0)  {  If(o  ==  null  ||  stackSize  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stackSize    >    0)    {    If(o  ==  null  ||  stackSize  >  0)  {	  	non-compiled	[CE]  ';'  expected	163	None	add
277	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  >  0)  {  if(o  >=  null  ||  stackSize  >  0)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  >  0)  {  if(o  >=  null  ||  stackSize  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stackSize    >    0)    {    if(o  >=  null  ||  stackSize  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	163	None	add
278	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  >  0)  {  if(o  >>  null  ||  stackSize  >  0)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  >  0)  {  if(o  >>  null  ||  stackSize  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stackSize    >    0)    {    if(o  >>  null  ||  stackSize  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	163	None	add
279	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  >  0)  {  if(o  [BUGGY]  null  ||  stackSize  >  0)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  >  0)  {  if(o  [BUGGY]  null  ||  stackSize  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stackSize    >    0)    {    if(o  [BUGGY]  null  ||  stackSize  >  0)  {	  	non-compiled	[CE]  ')'  expected	163	None	add
280	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  &&  o  instanceof  JsonObject)  {	  if(o!=    null    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	2	replace
281	[BUG]  [BUGGY]  if(o!=  null  &&  o  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  o  instanceof  JsonObject)  {	  if(o!=    null    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	2	replace
282	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  &&  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  &&  o  instanceof  JsonObject)  {	  if(o!=    null    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	2	replace
283	[BUG]  [BUGGY]  if(o  ==  null  &&  o  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  &&  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  &&  o  instanceof  JsonObject)  {	  if(o!=    null    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	2	replace
284	[BUG]  [BUGGY]  if(o!=  null  ||  o.getClass()  instanceof  Iterator)  {  [CE]  inconvertible  types  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o.getClass()  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o.getClass()  instanceof  Iterator)  {	  if(o!=    null    &&    o    instanceof    Iterator)    {    	non-compiled	[CE]  inconvertible  types	20	None	replace
285	[BUG]  [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.END_OBJECT;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.END_OBJECT;	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	174	None	replace
286	[BUG]  [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.END_OBJECT;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.END_OBJECT;	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	174	None	replace
287	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.END_OBJECT;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.END_OBJECT;	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	174	None	replace
288	[BUG]  [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o!=  null)return  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o!=  null)return  JsonToken.END_OBJECT;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.START_OBJECT  ||  o!=  null)return  JsonToken.END_OBJECT;	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	174	None	replace
289	[BUG]  [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o!=  JsonToken.END_OBJECT)return  JsonToken.START_OBJECT;  [CE]  illegal  start  of  type  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o!=  JsonToken.END_OBJECT)return  JsonToken.START_OBJECT;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.START_OBJECT  ||  o!=  JsonToken.END_OBJECT)return  JsonToken.START_OBJECT;	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	174	None	replace
290	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.NAME;  }	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o    ==    null)return    JsonToken.END_ARRAY;    if(o.getClass()!=    getClass())    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  illegal  start  of  type	176	None	replace
291	[BUG]  [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.NAME;  }	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o    ==    null)return    JsonToken.END_ARRAY;    if(o.getClass()!=    getClass())    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  illegal  start  of  type	176	None	replace
292	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.N  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.N  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.N	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o    ==    null)return    JsonToken.END_ARRAY;    if(o.getClass()!=    getClass())    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  ';'  expected	176	None	replace
293	[BUG]  [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.N  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.N  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.N	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o    ==    null)return    JsonToken.END_ARRAY;    if(o.getClass()!=    getClass())    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  ';'  expected	176	None	replace
294	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.N  [CE]  ';'  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.N  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.N	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o    ==    null)return    JsonToken.END_ARRAY;    if(o.getClass()!=    getClass())    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  ';'  expected	176	None	replace
295	[BUG]  [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  type  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.NAME;  }	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o    ==    null)return    JsonToken.END_ARRAY;    if(o.getClass()!=    getClass())    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  illegal  start  of  type	176	None	replace
296	[BUG]  [BUGGY]  if(o!=  UNREADABLE_READER  ||  o.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  UNREADABLE_READER  ||  o.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  UNREADABLE_READER  ||  o.isPrimitive())  {	  if(o!=    null    ||    o.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
297	[BUG]  [BUGGY]  if(o!=  null  ||!o.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||!o.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||!o.isPrimitive())  {	  if(o!=    null    ||    o.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
298	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  Iterator  <?>)  {	  if(o    instanceof    Iterator    <?>)    {    if(o    instanceof    Ilerator    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
299	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  Ilerator  <?>)  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  Ilerator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  Ilerator  <?>)  {	  if(o    instanceof    Iterator    <?>)    {    if(o    instanceof    Ilerator    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
300	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  if(o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  if(o  instanceof  Iterator  <?>)  {	  if(o    instanceof    Iterator    <?>)    {    if(o    instanceof    Ilerator    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
301	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  <?>||  o  instanceof  Iterator  <?>)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  <?>||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  <?>||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonObject    <?>    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	161	None	replace
302	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  <?>||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  Iterator  <?>||  o  instanceof  JsonObject)  {	  if(o    instanceof    JsonObject    <?>    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	161	2	replace
303	[BUG]  [BUGGY]  if(o  instanceof  Iterator  <?>||  o  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  <?>||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator  <?>||  o  instanceof  JsonObject)  {	  if(o    instanceof    JsonObject    <?>    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	161	2	replace
304	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  <?>||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  Iterator  <?>||  o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonObject    <?>    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	161	2	replace
305	[BUG]  [BUGGY]  if(o  instanceof  Iterator  <?>||  o  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  <?>||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator  <?>||  o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonObject    <?>    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	161	2	replace
306	[BUG]  [BUGGY]  if(o!=  null  ||  stack.length  ==  0)  {  if(o!=  null  ||  stack.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack.length  ==  0)  {  if(o!=  null  ||  stack.length  ==  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    stack.length    ==    0)    {    if(o!=  null  ||  stack.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	88	None	add
307	[BUG]  [BUGGY]  if(o!=  null  ||  stack.length  ==  0)  {  if(o  ==  null  ||  stack.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack.length  ==  0)  {  if(o  ==  null  ||  stack.length  ==  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    stack.length    ==    0)    {    if(o  ==  null  ||  stack.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	88	None	add
308	[BUG]  [BUGGY]  if(o!=  null  ||  stack.length  ==  0)  {  if(o  >=  null  ||  stack.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack.length  ==  0)  {  if(o  >=  null  ||  stack.length  ==  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    stack.length    ==    0)    {    if(o  >=  null  ||  stack.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	88	None	add
309	[BUG]  [BUGGY]  if(o!=  null  ||  stack.length  ==  0)  {  if(o!=  null  ||  stack.length  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack.length  ==  0)  {  if(o!=  null  ||  stack.length  >=  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    stack.length    ==    0)    {    if(o!=  null  ||  stack.length  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	88	None	add
310	[BUG]  [BUGGY]  if(o!=  null  ||  stack.length  ==  0)  {  If(o!=  null  ||  stack.length  ==  0)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack.length  ==  0)  {  If(o!=  null  ||  stack.length  ==  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    stack.length    ==    0)    {    If(o!=  null  ||  stack.length  ==  0)  {	  	non-compiled	[CE]  ';'  expected	88	None	add
311	[BUG]  [BUGGY]  if(o!=  null  ||  stack.length  ==  0)  {  if(o  >>  null  ||  stack.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack.length  ==  0)  {  if(o  >>  null  ||  stack.length  ==  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    stack.length    ==    0)    {    if(o  >>  null  ||  stack.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	88	None	add
312	[BUG]  [BUGGY]  if(o!=  null  ||  stack.length  ==  0)  {  if(o  ==  null  ||  stack.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack.length  ==  0)  {  if(o  ==  null  ||  stack.length!=  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    stack.length    ==    0)    {    if(o  ==  null  ||  stack.length!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	88	None	add
313	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass().isArray())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  o.getClass().isArray())  {	  if(o    ==    null    ||    o    instanceof    Iterator    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	148	2	replace
314	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass().isArray())  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass().isArray())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass().isArray())  {	  if(o    ==    null    ||    o    instanceof    Iterator    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	148	2	replace
315	[BUG]  [BUGGY]  Object  o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    Object    o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	140	None	replace
316	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  Object  o  =  o.getValue();  if(o!=  null)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  Object  o  =  o.getValue();  if(o!=  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  Object  o  =  o.getValue();  if(o!=  null)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    Object    o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
317	[BUG]  [BUGGY]  Object  o  =  o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    Object    o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	140	None	replace
318	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  Object  o  =  o.getClass();  if(o!=  null)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  Object  o  =  o.getClass();  if(o!=  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  Object  o  =  o.getClass();  if(o!=  null)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    Object    o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
319	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  Object  o  =  o.getValue();  if(o  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  Object  o  =  o.getValue();  if(o  ==  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  Object  o  =  o.getValue();  if(o  ==  null)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    Object    o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
320	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  Object  o  =  o.getClass();  if(o  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  Object  o  =  o.getClass();  if(o  ==  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  Object  o  =  o.getClass();  if(o  ==  null)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    Object    o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
321	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive)  {  if(o!=  null  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive)  {  if(o!=  null  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    JsonPrimitive)    {    if(o!=  null  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
322	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive)  {  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive)  {  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    JsonPrimitive)    {    if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
323	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive)  {  if(o  >=  null  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive)  {  if(o  >=  null  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    JsonPrimitive)    {    if(o  >=  null  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
324	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive)  {  If(o!=  null  ||  o  instanceof  JsonPrimitive)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive)  {  If(o!=  null  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    JsonPrimitive)    {    If(o!=  null  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  ';'  expected	38	None	add
325	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive)  {  if(o  >>  null  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive)  {  if(o  >>  null  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    JsonPrimitive)    {    if(o  >>  null  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
326	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive)  {  if(o  [Delete]  null  ||  o  instanceof  JsonPrimitive)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive)  {  if(o  [Delete]  null  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    JsonPrimitive)    {    if(o  [Delete]  null  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  ')'  expected	38	None	add
327	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive)  {  if(o  [BUGGY]  null  ||  o  instanceof  JsonPrimitive)  {  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive)  {  if(o  [BUGGY]  null  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    JsonPrimitive)    {    if(o  [BUGGY]  null  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  ')'  expected	38	None	add
328	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||    o    instanceof    Iterator    <?>)    {    if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
329	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonObject  ||  o  instanceof  iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonObject  ||  o  instanceof  iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||    o    instanceof    Iterator    <?>)    {    if(o  instanceof  JsonObject  ||  o  instanceof  iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
330	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||    o    instanceof    Iterator    <?>)    {    If(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  ';'  expected	59	None	add
331	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JSONObject  ||  o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JSONObject  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||    o    instanceof    Iterator    <?>)    {    if(o  instanceof  JSONObject  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
332	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  if(O  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  if(O  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||    o    instanceof    Iterator    <?>)    {    if(O  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
333	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  &&  o  instanceof  Iterator  <?>)  {	  if(o!=    null    ||    o    instanceof    Iterator    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	150	2	replace
334	[BUG]  [BUGGY]  if(o!=  null  &&  o  instanceof  Iterator  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  o  instanceof  Iterator  <?>)  {	  if(o!=    null    ||    o    instanceof    Iterator    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	150	2	replace
335	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator    <?>)    {    if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
336	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator    <?>)    {    if(o  instanceof  JsonPrimitive  ||  o  instanceof  iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
337	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator    <?>)    {    If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  ';'  expected	78	None	add
338	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  if(O  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  if(O  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator    <?>)    {    if(O  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
339	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  if(o  instancesof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  if(o  instancesof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator    <?>)    {    if(o  instancesof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  ')'  expected	78	None	add
340	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?)  {  [CE]  >  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator    <?>)    {    if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?)  {	  	non-compiled	[CE]  >  expected	78	None	add
341	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.END_OBJECT)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.END_OBJECT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	111	2	replace
342	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.END_OBJECT)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.END_OBJECT)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.END_OBJECT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	111	2	replace
343	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(stack  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.END_OBJECT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	111	2	replace
344	[BUG]  [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(stack  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.END_OBJECT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	111	2	replace
345	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.END_OBJECT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	111	2	replace
346	[BUG]  [BUGGY]  if(o!=  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.END_OBJECT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	111	2	replace
347	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.START_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.START_OBJECT)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	111	None	replace
348	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(stack  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.END_OBJECT)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.END_OBJECT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	111	2	replace
349	[BUG]  [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.END_OBJECT)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(stack  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.END_OBJECT)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.END_OBJECT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	111	2	replace
350	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack[stackSize  -  1]!=  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  stack[stackSize  -  1]!=  JsonToken.END_OBJECT)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.END_OBJECT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	111	2	replace
351	[BUG]  [BUGGY]  if(o!=  null  ||  stack[stackSize  -  1]!=  JsonToken.END_OBJECT)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack[stackSize  -  1]!=  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  stack[stackSize  -  1]!=  JsonToken.END_OBJECT)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.END_OBJECT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	111	2	replace
352	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  2]!=  JsonToken.NAME)  {  return  JsonToken.START_OBJECT;  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  2]!=  JsonToken.NAME)  {  return  JsonToken.START_OBJECT;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  2]!=  JsonToken.NAME)  {  return  JsonToken.START_OBJECT;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
353	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  1]!=  JsonToken.NAME)  {  return  JsonToken.START_OBJECT;  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  1]!=  JsonToken.NAME)  {  return  JsonToken.START_OBJECT;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  1]!=  JsonToken.NAME)  {  return  JsonToken.START_OBJECT;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
354	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  1]!=  JsonToken.NAME)  {  return  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  1]!=  JsonToken.NAME)  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  1]!=  JsonToken.NAME)  {  return  JsonToken.END_OBJECT;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
355	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  2]!=  JsonToken.NAME)  {  return  JsonToken.START_OBJECT;  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  2]!=  JsonToken.NAME)  {  return  JsonToken.START_OBJECT;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  2]!=  JsonToken.NAME)  {  return  JsonToken.START_OBJECT;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
356	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()  instanceof  Iterator  <?>)  {  [CE]  inconvertible  types  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()  instanceof  Iterator  <?>)  {	  if(o    ==    null    ||    o.getClass()    instanceof    Iterator)    {    	non-compiled	[CE]  inconvertible  types	85	None	replace
357	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonToken.VALUE_NULL)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  JsonToken.VALUE_NULL)  {	  if(o    ==    null    ||    o.getClass()    instanceof    Iterator)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	85	None	replace
358	[BUG]  [BUGGY]  if(o!=  null  ||  o.getClass()  instanceof  Iterator  <?>)  {  [CE]  inconvertible  types  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o.getClass()  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o.getClass()  instanceof  Iterator  <?>)  {	  if(o    ==    null    ||    o.getClass()    instanceof    Iterator)    {    	non-compiled	[CE]  inconvertible  types	85	None	replace
359	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonNull.class)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  o.getClass()!=  JsonNull.class)  {	  if(o    ==    null    ||    o.getClass()    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	85	2	replace
360	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonNull.class)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonNull.class)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  JsonNull.class)  {	  if(o    ==    null    ||    o.getClass()    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	85	2	replace
361	[BUG]  [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o  ==  null)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o  ==  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.START_OBJECT  ||  o  ==  null)  {	  if(o    ==    JsonToken.START_OBJECT    ||    o!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	131	None	replace
362	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.END_OBJECT  ||  o!=  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  JsonToken.END_OBJECT  ||  o!=  null)  {	  if(o    ==    JsonToken.START_OBJECT    ||    o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	131	2	replace
363	[BUG]  [BUGGY]  if(o  ==  JsonToken.END_OBJECT  ||  o!=  null)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.END_OBJECT  ||  o!=  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.END_OBJECT  ||  o!=  null)  {	  if(o    ==    JsonToken.START_OBJECT    ||    o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	131	2	replace
364	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.END_OBJECT  ||  o  ==  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  JsonToken.END_OBJECT  ||  o  ==  null)  {	  if(o    ==    JsonToken.START_OBJECT    ||    o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	131	2	replace
365	[BUG]  [BUGGY]  if(o  ==  JsonToken.END_OBJECT  ||  o  ==  null)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.END_OBJECT  ||  o  ==  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.END_OBJECT  ||  o  ==  null)  {	  if(o    ==    JsonToken.START_OBJECT    ||    o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	131	2	replace
366	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.NAME  ||  o!=  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  JsonToken.NAME  ||  o!=  null)  {	  if(o    ==    JsonToken.START_OBJECT    ||    o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	131	2	replace
367	[BUG]  [BUGGY]  if(o  ==  JsonToken.NAME  ||  o!=  null)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.NAME  ||  o!=  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.NAME  ||  o!=  null)  {	  if(o    ==    JsonToken.START_OBJECT    ||    o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	131	2	replace
368	[BUG]  [BUGGY]  if(o  ==  JsonToken.FIELD_NAME  ||  o  ==  null)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.FIELD_NAME  ||  o  ==  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.FIELD_NAME  ||  o  ==  null)  {	  if(o    ==    JsonToken.START_OBJECT    ||    o!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	131	None	replace
369	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.STRING  ||  o  ==  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  JsonToken.STRING  ||  o  ==  null)  {	  if(o    ==    JsonToken.START_OBJECT    ||    o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	131	2	replace
370	[BUG]  [BUGGY]  if(o  ==  JsonToken.STRING  ||  o  ==  null)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.STRING  ||  o  ==  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.STRING  ||  o  ==  null)  {	  if(o    ==    JsonToken.START_OBJECT    ||    o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	131	2	replace
371	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator  <  Object>)  {  [CE]  illegal  generic  type  for  instanceof  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator  <  Object>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator  <  Object>)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator    <    Object>)    {    	non-compiled	[CE]  illegal  generic  type  for  instanceof	82	None	replace
372	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <  Object>)  {  [CE]  illegal  generic  type  for  instanceof  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <  Object>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <  Object>)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator    <    Object>)    {    	non-compiled	[CE]  illegal  generic  type  for  instanceof	82	None	replace
373	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalIterator  <  Object>)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalIterator  <  Object>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalIterator  <  Object>)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator    <    Object>)    {    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
374	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Class  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonPrimitive  ||  o  instanceof  Class  <?>)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator    <    Object>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	82	2	replace
375	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Class  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Class  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  Class  <?>)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator    <    Object>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	82	2	replace
376	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  >=  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stackSize  >=  0)  {	  if(o    ==    null    ||    stackSize    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	164	2	replace
377	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  >=  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  >=  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stackSize  >=  0)  {	  if(o    ==    null    ||    stackSize    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	164	2	replace
378	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  >  1)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stackSize  >  1)  {	  if(o    ==    null    ||    stackSize    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	164	2	replace
379	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  >  1)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  >  1)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stackSize  >  1)  {	  if(o    ==    null    ||    stackSize    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	164	2	replace
380	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize!=  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stackSize!=  0)  {	  if(o    ==    null    ||    stackSize    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	164	2	replace
381	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize!=  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize!=  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stackSize!=  0)  {	  if(o    ==    null    ||    stackSize    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	164	2	replace
382	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    Iterator    <?>)    {    if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
383	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    Iterator    <?>)    {    if(o!=  null  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
384	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  If(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  If(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    Iterator    <?>)    {    If(o  ==  null  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  ';'  expected	147	None	add
385	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  if(o  >=  null  ||  o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  if(o  >=  null  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    Iterator    <?>)    {    if(o  >=  null  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
386	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  if(o  >>  null  ||  o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  if(o  >>  null  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    Iterator    <?>)    {    if(o  >>  null  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
387	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  if(o  ==  null  ||  o  instanceof  iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  if(o  ==  null  ||  o  instanceof  iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    Iterator    <?>)    {    if(o  ==  null  ||  o  instanceof  iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
388	[BUG]  [BUGGY]  if(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {  if(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {  if(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    Iterator    ||    o    instanceof    JsonObject)    {    if(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
389	[BUG]  [BUGGY]  if(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {  If(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {  If(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    Iterator    ||    o    instanceof    JsonObject)    {    If(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  ';'  expected	61	None	add
390	[BUG]  [BUGGY]  if(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {  if(o  instanceof  Iterator  ||  o  instanceof  JSONObject)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {  if(o  instanceof  Iterator  ||  o  instanceof  JSONObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    Iterator    ||    o    instanceof    JsonObject)    {    if(o  instanceof  Iterator  ||  o  instanceof  JSONObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
391	[BUG]  [BUGGY]  if(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {  if(o  instanceof  iterator  ||  o  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {  if(o  instanceof  iterator  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    Iterator    ||    o    instanceof    JsonObject)    {    if(o  instanceof  iterator  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
392	[BUG]  [BUGGY]  if(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {  if(o  instanceof  Ilerator  ||  o  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {  if(o  instanceof  Ilerator  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    Iterator    ||    o    instanceof    JsonObject)    {    if(o  instanceof  Ilerator  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
393	[BUG]  [BUGGY]  if(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {  if(O  instanceof  Iterator  ||  o  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {  if(O  instanceof  Iterator  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    Iterator    ||    o    instanceof    JsonObject)    {    if(O  instanceof  Iterator  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
394	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o!=  null  ||  o.getClass()!=  getClass())  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o!=  null  ||  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o.getClass()!=    getClass())    {    if(o!=  null  ||  o.getClass()!=  getClass())  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
395	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  ==  null  ||  o.getClass()  >=  getClass())  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  ==  null  ||  o.getClass()  >=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o.getClass()!=    getClass())    {    if(o  ==  null  ||  o.getClass()  >=  getClass())  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
396	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  If(o  ==  null  ||  o.getClass()!=  getClass())  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  If(o  ==  null  ||  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o.getClass()!=    getClass())    {    If(o  ==  null  ||  o.getClass()!=  getClass())  {	  	non-compiled	[CE]  ';'  expected	86	None	add
397	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  ==  null  ||  o.getClass()  >>  getClass())  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  ==  null  ||  o.getClass()  >>  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o.getClass()!=    getClass())    {    if(o  ==  null  ||  o.getClass()  >>  getClass())  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
398	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  ==  null  ||  o.getClass()  [Delete]  getClass())  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  ==  null  ||  o.getClass()  [Delete]  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o.getClass()!=    getClass())    {    if(o  ==  null  ||  o.getClass()  [Delete]  getClass())  {	  	non-compiled	[CE]  ')'  expected	86	None	add
399	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  >=  null  ||  o.getClass()!=  getClass())  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  >=  null  ||  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o.getClass()!=    getClass())    {    if(o  >=  null  ||  o.getClass()!=  getClass())  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
400	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    <    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
401	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    <    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
402	[BUG]  [BUGGY]  if(o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    <    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
403	[BUG]  [BUGGY]  if(o  instanceof  String)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  String)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  String)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    <    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
404	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    <    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
405	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonPrimitive  &&  o  instanceof  JsonObject)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	2	replace
406	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  &&  o  instanceof  JsonObject)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	2	replace
407	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	2	replace
408	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	2	replace
409	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	2	replace
410	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	2	replace
411	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  isObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  isObject)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonObject)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	77	None	replace
412	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	2	replace
413	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	2	replace
414	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||!(o    instanceof    Iterator    <?>))    {    if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
415	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||!(o    instanceof    Iterator    <?>))    {    if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
416	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  If(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  If(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||!(o    instanceof    Iterator    <?>))    {    If(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {	  	non-compiled	[CE]  ';'  expected	118	None	add
417	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  if(o  >=  null  ||!(o  instanceof  Iterator  <?>))  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  if(o  >=  null  ||!(o  instanceof  Iterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||!(o    instanceof    Iterator    <?>))    {    if(o  >=  null  ||!(o  instanceof  Iterator  <?>))  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
418	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  if(o  ==  null  ||?!(o  instanceof  Iterator  <?>))  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  if(o  ==  null  ||?!(o  instanceof  Iterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||!(o    instanceof    Iterator    <?>))    {    if(o  ==  null  ||?!(o  instanceof  Iterator  <?>))  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
419	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  if(o  >>  null  ||!(o  instanceof  Iterator  <?>))  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  if(o  >>  null  ||!(o  instanceof  Iterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||!(o    instanceof    Iterator    <?>))    {    if(o  >>  null  ||!(o  instanceof  Iterator  <?>))  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
420	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  if(o  ==  null  ||  stack.length  <  2)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  if(o  ==  null  ||  stack.length  <  2)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    <    2)    {    if(o  ==  null  ||  stack.length  <  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	90	None	add
421	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  if(o!=  null  ||  stack.length  <  2)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  if(o!=  null  ||  stack.length  <  2)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    <    2)    {    if(o!=  null  ||  stack.length  <  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	90	None	add
422	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  If(o  ==  null  ||  stack.length  <  2)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  If(o  ==  null  ||  stack.length  <  2)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    <    2)    {    If(o  ==  null  ||  stack.length  <  2)  {	  	non-compiled	[CE]  ';'  expected	90	None	add
423	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  if(o  >=  null  ||  stack.length  <  2)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  if(o  >=  null  ||  stack.length  <  2)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    <    2)    {    if(o  >=  null  ||  stack.length  <  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	90	None	add
424	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  if(o  ==  null  ||  stack.length  >=  2)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  if(o  ==  null  ||  stack.length  >=  2)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    <    2)    {    if(o  ==  null  ||  stack.length  >=  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	90	None	add
425	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  if(o  >>  null  ||  stack.length  <  2)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  if(o  >>  null  ||  stack.length  <  2)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    <    2)    {    if(o  >>  null  ||  stack.length  <  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	90	None	add
426	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  ==  1)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack.length  ==  1)  {	  if(o    ==    null    ||    stack.length    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	93	2	replace
427	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  ==  1)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  ==  1)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  ==  1)  {	  if(o    ==    null    ||    stack.length    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	93	2	replace
428	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  ==  2)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack.length  ==  2)  {	  if(o    ==    null    ||    stack.length    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	93	2	replace
429	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  ==  2)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  ==  2)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  ==  2)  {	  if(o    ==    null    ||    stack.length    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	93	2	replace
430	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instancesof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
431	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonObject)    {    if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
432	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o!=  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o!=  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonObject)    {    if(o!=  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
433	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  If(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  If(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonObject)    {    If(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {	  	non-compiled	[CE]  ';'  expected	103	None	add
434	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o  ==  null  ||  stack[stackSize  -  2]  instancesof  JsonObject)  {  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o  ==  null  ||  stack[stackSize  -  2]  instancesof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonObject)    {    if(o  ==  null  ||  stack[stackSize  -  2]  instancesof  JsonObject)  {	  	non-compiled	[CE]  ')'  expected	103	None	add
435	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonObject)    {    if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
436	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o  >=  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o  >=  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonObject)    {    if(o  >=  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
437	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {	  if(o    ==    null    ||    stack[stackSize    -    1]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	142	2	replace
438	[BUG]  [BUGGY]  if(o!=  null  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {	  if(o    ==    null    ||    stack[stackSize    -    1]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	142	2	replace
439	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(stack  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {	  if(o    ==    null    ||    stack[stackSize    -    1]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	142	2	replace
440	[BUG]  [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(stack  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {	  if(o    ==    null    ||    stack[stackSize    -    1]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	142	2	replace
441	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(stack  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {	  if(o    ==    null    ||    stack[stackSize    -    1]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	142	2	replace
442	[BUG]  [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(stack  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {	  if(o    ==    null    ||    stack[stackSize    -    1]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	142	2	replace
443	[BUG]  [BUGGY]  if(o  instanceof  Iterator  <  Object>||  o  instanceof  JsonObject)  {  [CE]  illegal  generic  type  for  instanceof  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  <  Object>||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator  <  Object>||  o  instanceof  JsonObject)  {	  if(o    instanceof    Iterator    ||    o    instanceof    JsonObject)    {    	non-compiled	[CE]  illegal  generic  type  for  instanceof	62	None	replace
444	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  String  ||  o  instanceof  JsonObject)  {	  if(o    instanceof    Iterator    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	2	replace
445	[BUG]  [BUGGY]  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  String  ||  o  instanceof  JsonObject)  {	  if(o    instanceof    Iterator    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	2	replace
446	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  <?>  stack[stackSize  -  1])  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  <?>  stack[stackSize  -  1])  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonObject)  <?>  stack[stackSize  -  1])  {  return  JsonToken.NAME;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	197	None	replace
447	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  <?>  stack[stackSize  -  2])  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  <?>  stack[stackSize  -  2])  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.END_OBJECT;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonObject)  <?>  stack[stackSize  -  2])  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.END_OBJECT;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	197	None	replace
448	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonObject)  <?>  stack[stackSize  -  2])  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonObject)  <?>  stack[stackSize  -  2])  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.END_OBJECT;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  if(o  instanceof  JsonObject)  <?>  stack[stackSize  -  2])  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.END_OBJECT;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	197	None	replace
449	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {	  if(o!=    null    &&    stack[stackSize    -    1]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	187	2	replace
450	[BUG]  [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {	  if(o!=    null    &&    stack[stackSize    -    1]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	187	2	replace
451	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  &&  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  &&  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {	  if(o!=    null    &&    stack[stackSize    -    1]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	187	2	replace
452	[BUG]  [BUGGY]  if(o  ==  null  &&  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  &&  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  &&  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {	  if(o!=    null    &&    stack[stackSize    -    1]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	187	2	replace
453	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {	  if(o!=    null    &&    stack[stackSize    -    1]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	187	2	replace
454	[BUG]  [BUGGY]  if(o  ==  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {	  if(o!=    null    &&    stack[stackSize    -    1]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	187	2	replace
455	[BUG]  [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_ARRAY;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_ARRAY;  }	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.END_ARRAY;    }    	non-compiled	[CE]  illegal  start  of  type	173	None	replace
456	[BUG]  [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_ARRAY;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_ARRAY;  }	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.END_ARRAY;    }    	non-compiled	[CE]  illegal  start  of  type	173	None	replace
457	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_ARRAY;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_ARRAY;  }	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.END_ARRAY;    }    	non-compiled	[CE]  illegal  start  of  type	173	None	replace
458	[BUG]  [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_ARRAY;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.START_OBJECT  ||  o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_ARRAY;  }	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.END_ARRAY;    }    	non-compiled	[CE]  illegal  start  of  type	173	None	replace
459	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  2]!=  JsonToken.NAME)  {  return  JsonToken.UNREADABLE_READER;  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  2]!=  JsonToken.NAME)  {  return  JsonToken.UNREADABLE_READER;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  2]!=  JsonToken.NAME)  {  return  JsonToken.UNREADABLE_READER;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.UNREADABLE_READER;    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
460	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  2]!=  JsonToken.NAME)  {  return  JsonToken.UNREADABLE_READER;  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  2]!=  JsonToken.NAME)  {  return  JsonToken.UNREADABLE_READER;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  2]!=  JsonToken.NAME)  {  return  JsonToken.UNREADABLE_READER;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.UNREADABLE_READER;    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
461	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  2]!=  JsonPrimitive.UNREADABLE_READER)  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  2]!=  JsonPrimitive.UNREADABLE_READER)  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  2]!=  JsonPrimitive.UNREADABLE_READER)  {  return  JsonToken.NAME;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.UNREADABLE_READER;    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
462	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  2]  ==  JsonToken.NAME)  {  return  JsonToken.UNREADABLE_READER;  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  2]  ==  JsonToken.NAME)  {  return  JsonToken.UNREADABLE_READER;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  2]  ==  JsonToken.NAME)  {  return  JsonToken.UNREADABLE_READER;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.UNREADABLE_READER;    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
463	[BUG]  [BUGGY]  if(o  ==  null)  {  if(!(o  instanceof  Iterator  <?>))  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(!(o  instanceof  Iterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(!(o  instanceof  Iterator  <?>))  {	  if(o    instanceof    Iterator    <?>)    {    if(o    instanceof    Iterator    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
464	[BUG]  [BUGGY]  if(o!=  null)  {  if(!(o  instanceof  Iterator  <?>))  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  if(!(o  instanceof  Iterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  if(!(o  instanceof  Iterator  <?>))  {	  if(o    instanceof    Iterator    <?>)    {    if(o    instanceof    Iterator    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
465	[BUG]  [BUGGY]  int  stackSize  =  stack.length  -  1  +  1;  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack.length  -  1  +  1;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack.length  -  1  +  1;	  int    stackSize    =    stack.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
466	[BUG]  [BUGGY]  int  stackSize  =  o.length  -  1;  [CE]  illegal  start  of  type  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  o.length  -  1;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  o.length  -  1;	  int    stackSize    =    stack.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
467	[BUG]  [BUGGY]  int  stackSize  =  stack.length  -  1L;  [CE]  illegal  start  of  type  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack.length  -  1L;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack.length  -  1L;	  int    stackSize    =    stack.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
468	[BUG]  [BUGGY]  int  stackSize  =  stack.length  /  1;  [CE]  illegal  start  of  type  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack.length  /  1;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack.length  /  1;	  int    stackSize    =    stack.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
469	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  <?>||  o  instanceof  JsonPrimitive)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  <?>||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  <?>||  o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	31	None	replace
470	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive)))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||!(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive)))  {	  if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	31	2	replace
471	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive)))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive)))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||!(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive)))  {	  if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	31	2	replace
472	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  JsonSequence)  {  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  JsonSequence)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  ||  o  instanceof  JsonSequence)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
473	[BUG]  [BUGGY]  if(o  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(o    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	94	None	replace
474	[BUG]  [BUGGY]  if(o  ==  JsonToken.FIELD_NAME)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.FIELD_NAME)  {	  if(o    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	94	None	replace
475	[BUG]  [BUGGY]  if(o  ==  JsonToken.VALUE_EMBEDDED_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.VALUE_EMBEDDED_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.VALUE_EMBEDDED_OBJECT)  {	  if(o    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	94	None	replace
476	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  JsonToken.NAME)  {	  if(o    ==    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	94	2	replace
477	[BUG]  [BUGGY]  if(o  ==  JsonToken.NAME)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.NAME)  {	  if(o    ==    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	94	2	replace
478	[BUG]  [BUGGY]  int  stackSize  =  stack.length()  -  1;  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack.length()  -  1;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack.length()  -  1;	  int    stackSize    =    stack.length();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
479	[BUG]  [BUGGY]  int  stackSize  =  stack.length()  -  2;  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack.length()  -  2;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack.length()  -  2;	  int    stackSize    =    stack.length();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
480	[BUG]  [BUGGY]  int  stackSize  =  stack.length()  +  1;  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack.length()  +  1;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack.length()  +  1;	  int    stackSize    =    stack.length();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
481	[BUG]  [BUGGY]  int  stackSize  =  o.length();  [CE]  illegal  start  of  type  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  o.length();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  o.length();	  int    stackSize    =    stack.length();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
482	[BUG]  [BUGGY]  int  stackSize  =  stack.length()  *  2;  [CE]  illegal  start  of  type  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack.length()  *  2;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack.length()  *  2;	  int    stackSize    =    stack.length();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
483	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o  ==  null  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o  ==  null  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o  ==  null  ||  o  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o    ==    null    ||    o    instanceof    iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
484	[BUG]  [BUGGY]  int  stackSize  =  stack.size()  -  1;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack.size()  -  1;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack.size()  -  1;	  int    stackSize    =    stack.size();    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
485	[BUG]  [BUGGY]  int  stackSize  =  stack.size()  -  2;  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack.size()  -  2;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack.size()  -  2;	  int    stackSize    =    stack.size();    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
486	[BUG]  [BUGGY]  int  stackSize  =  stack.size()  +  1;  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack.size()  +  1;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack.size()  +  1;	  int    stackSize    =    stack.size();    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
487	[BUG]  [BUGGY]  int  stackSize  =  o.size();  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  o.size();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  o.size();	  int    stackSize    =    stack.size();    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
488	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {	  if(o    ==    null    ||    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	137	2	replace
489	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {	  if(o    ==    null    ||    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	137	2	replace
490	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	137	2	replace
491	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	137	2	replace
492	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()  instanceof  JsonPrimitive  ||  o.getClass()  instanceof  Iterator)  {  [CE]  inconvertible  types  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()  instanceof  JsonPrimitive  ||  o.getClass()  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()  instanceof  JsonPrimitive  ||  o.getClass()  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  inconvertible  types	137	None	replace
493	[BUG]  [BUGGY]  if(o  ==  null  ||  o.isPrimitive()  ||  o.isIterator())  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.isPrimitive()  ||  o.isIterator())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.isPrimitive()  ||  o.isIterator())  {	  if(o    ==    null    ||    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
494	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	137	2	replace
495	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	137	2	replace
496	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	137	2	replace
497	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	137	2	replace
498	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  1]!=  JsonPrimitive.None.class)  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  1]!=  JsonPrimitive.None.class)  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  1]!=  JsonPrimitive.None.class)  {  return  JsonToken.NAME;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
499	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||!(o    instanceof    JsonPrimitive))    {    if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
500	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||!(o    instanceof    JsonPrimitive))    {    if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
501	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  If(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  If(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||!(o    instanceof    JsonPrimitive))    {    If(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  ';'  expected	32	None	add
502	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  if(o  >=  null  ||!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  if(o  >=  null  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||!(o    instanceof    JsonPrimitive))    {    if(o  >=  null  ||!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
503	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  if(o  >>  null  ||!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  if(o  >>  null  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||!(o    instanceof    JsonPrimitive))    {    if(o  >>  null  ||!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
504	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  if(o  ==  null  ||?!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  if(o  ==  null  ||?!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||!(o    instanceof    JsonPrimitive))    {    if(o  ==  null  ||?!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
505	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&!(o  instanceof  Iterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  &&!(o  instanceof  Iterator  <?>))  {	  if(o!=    null    ||!(o    instanceof    Iterator    <?>))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	121	2	replace
506	[BUG]  [BUGGY]  if(o!=  null  &&!(o  instanceof  Iterator  <?>))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&!(o  instanceof  Iterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&!(o  instanceof  Iterator  <?>))  {	  if(o!=    null    ||!(o    instanceof    Iterator    <?>))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	121	2	replace
507	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <  Object>)  {  [CE]  illegal  generic  type  for  instanceof  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <  Object>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <  Object>)  {	  if(o    instanceof    JsonArray    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  generic  type  for  instanceof	66	None	replace
508	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  <  Object>||  o  instanceof  Iterator)  {  [CE]  type  JsonArray  does  not  take  parameters  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  <  Object>||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonArray  <  Object>||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonArray    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  type  JsonArray  does  not  take  parameters	66	None	replace
509	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  &&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonArray  &&  o  instanceof  Iterator)  {	  if(o    instanceof    JsonArray    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	2	replace
510	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  &&  o  instanceof  Iterator)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  &&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonArray  &&  o  instanceof  Iterator)  {	  if(o    instanceof    JsonArray    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	2	replace
511	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {	  if(o    instanceof    JsonArray    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	2	replace
512	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {	  if(o    instanceof    JsonArray    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	2	replace
513	[BUG]  [BUGGY]  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||!(o    instanceof    JsonPrimitive))    {    if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
514	[BUG]  [BUGGY]  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||!(o    instanceof    JsonPrimitive))    {    if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
515	[BUG]  [BUGGY]  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  if(o  >=  null  ||!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  if(o  >=  null  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||!(o    instanceof    JsonPrimitive))    {    if(o  >=  null  ||!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
516	[BUG]  [BUGGY]  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  If(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  If(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||!(o    instanceof    JsonPrimitive))    {    If(o!=  null  ||!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  ';'  expected	34	None	add
517	[BUG]  [BUGGY]  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  if(o  >>  null  ||!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  if(o  >>  null  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||!(o    instanceof    JsonPrimitive))    {    if(o  >>  null  ||!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
518	[BUG]  [BUGGY]  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  if(o  [Delete]  null  ||!(o  instanceof  JsonPrimitive))  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  if(o  [Delete]  null  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||!(o    instanceof    JsonPrimitive))    {    if(o  [Delete]  null  ||!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  ')'  expected	34	None	add
519	[BUG]  [BUGGY]  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  if(o  [BUGGY]  null  ||!(o  instanceof  JsonPrimitive))  {  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  if(o  [BUGGY]  null  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||!(o    instanceof    JsonPrimitive))    {    if(o  [BUGGY]  null  ||!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  ')'  expected	34	None	add
520	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	108	2	replace
521	[BUG]  [BUGGY]  if(o!=  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	108	2	replace
522	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(stack  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	108	2	replace
523	[BUG]  [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(stack  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	108	2	replace
524	[BUG]  [BUGGY]  Object  o  =  null  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  null  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  null  ||  o  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    Object    o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	130	None	replace
525	[BUG]  [BUGGY]  Object  o  =  null;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  null;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  null;	  if(o    ==    null    ||    o    instanceof    Iterator)    {    Object    o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
526	[BUG]  [BUGGY]  Object  o  ==  null  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  ==  null  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  ==  null  ||  o  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    Object    o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	130	None	replace
527	[BUG]  [BUGGY]  Object  o  =  null  ||  o.getClass()  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  null  ||  o.getClass()  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  null  ||  o.getClass()  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    Object    o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	130	None	replace
528	[BUG]  [BUGGY]  Object  o  =  null  ||  o.getClass()  instanceof  JsonPrimitive)  {  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  null  ||  o.getClass()  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  null  ||  o.getClass()  instanceof  JsonPrimitive)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    Object    o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	130	None	replace
529	[BUG]  [BUGGY]  Object  o  =  null  ||  o.isPrimitive())  {  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  null  ||  o.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  null  ||  o.isPrimitive())  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    Object    o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	130	None	replace
530	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  <  =  1)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stackSize  <  =  1)  {	  if(o    ==    null    ||    stackSize    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
531	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  <  =  1  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  <  =  1  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stackSize  <  =  1  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {	  if(o    ==    null    ||    stackSize    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
532	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  <  =  2)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  <  =  2)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stackSize  <  =  2)  {	  if(o    ==    null    ||    stackSize    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
533	[BUG]  [BUGGY]  if(o  ==  null)  {  If(o!=  null  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  If(o!=  null  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  If(o!=  null  ||  o  instanceof  Iterator)  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    If(o!=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
534	[BUG]  [BUGGY]  if(o!=  null)  {  If(o  ==  null  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  If(o  ==  null  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  If(o  ==  null  ||  o  instanceof  Iterator)  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    If(o!=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
535	[BUG]  [BUGGY]  if(o  ==  null)  {  If(o  ==  null  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  If(o  ==  null  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  If(o  ==  null  ||  o  instanceof  Iterator)  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    If(o!=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
536	[BUG]  [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  If(o!=  null  ||  o.isIterator())  {  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  If(o!=  null  ||  o.isIterator())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.isPrimitive())  {  If(o!=  null  ||  o.isIterator())  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    If(o!=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
537	[BUG]  [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  If(o  ==  null  ||  o.isIterator())  {  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  If(o  ==  null  ||  o.isIterator())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.isPrimitive())  {  If(o  ==  null  ||  o.isIterator())  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    If(o!=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
538	[BUG]  [BUGGY]  if(o  ==  null)  {  If(o  instanceof  JsonPrimitive)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  If(o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  If(o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonPrimitive)    {    If(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  ';'  expected	124	None	replace
539	[BUG]  [BUGGY]  if(o!=  null)  {  If(o  instanceof  JsonPrimitive)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  If(o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  If(o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonPrimitive)    {    If(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  ';'  expected	124	None	replace
540	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonPrimitive)    {    If(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
541	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  if(o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonPrimitive)    {    If(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
542	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    &&    o    instanceof    Iterator)    {    if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	158	None	add
543	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  If(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  If(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    &&    o    instanceof    Iterator)    {    If(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ';'  expected	158	None	add
544	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  if(o  instanceof  JsonObject  &&  o  instanceof  iterator)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  if(o  instanceof  JsonObject  &&  o  instanceof  iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    &&    o    instanceof    Iterator)    {    if(o  instanceof  JsonObject  &&  o  instanceof  iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	158	None	add
545	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  if(o  instancesof  JsonObject  &&  o  instanceof  Iterator)  {  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  if(o  instancesof  JsonObject  &&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    &&    o    instanceof    Iterator)    {    if(o  instancesof  JsonObject  &&  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ')'  expected	158	None	add
546	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  if(o  instanceof  JsonObject  |&  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  if(o  instanceof  JsonObject  |&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    &&    o    instanceof    Iterator)    {    if(o  instanceof  JsonObject  |&  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	158	None	add
547	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  if(o  instanceof  JsonObject  &&  o  instanceof  Ilerator)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  if(o  instanceof  JsonObject  &&  o  instanceof  Ilerator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    &&    o    instanceof    Iterator)    {    if(o  instanceof  JsonObject  &&  o  instanceof  Ilerator)  {	  	non-compiled	[CE]  illegal  start  of  expression	158	None	add
548	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonNull)  {  if(o  ==  null  ||  o  instanceof  JsonNull)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonNull)  {  if(o  ==  null  ||  o  instanceof  JsonNull)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonNull)    {    if(o  ==  null  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  illegal  start  of  expression	193	None	add
549	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonNull)  {  if(o!=  null  ||  o  instanceof  JsonNull)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonNull)  {  if(o!=  null  ||  o  instanceof  JsonNull)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonNull)    {    if(o!=  null  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  illegal  start  of  expression	193	None	add
550	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonNull)  {  If(o  ==  null  ||  o  instanceof  JsonNull)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonNull)  {  If(o  ==  null  ||  o  instanceof  JsonNull)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonNull)    {    If(o  ==  null  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  ';'  expected	193	None	add
551	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonNull)  {  if(o  >=  null  ||  o  instanceof  JsonNull)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonNull)  {  if(o  >=  null  ||  o  instanceof  JsonNull)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonNull)    {    if(o  >=  null  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  illegal  start  of  expression	193	None	add
552	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonNull)  {  if(o  >>  null  ||  o  instanceof  JsonNull)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonNull)  {  if(o  >>  null  ||  o  instanceof  JsonNull)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonNull)    {    if(o  >>  null  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  illegal  start  of  expression	193	None	add
553	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonNull)  {  if(o  [Delete]  null  ||  o  instanceof  JsonNull)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonNull)  {  if(o  [Delete]  null  ||  o  instanceof  JsonNull)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonNull)    {    if(o  [Delete]  null  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  ')'  expected	193	None	add
554	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  If(o  ==  null  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  If(o  ==  null  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  getClass())  {  If(o  ==  null  ||  o  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    If(o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
555	[BUG]  [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  If(o  ==  null  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  If(o  ==  null  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.isPrimitive())  {  If(o  ==  null  ||  o  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    If(o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
556	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  If(o  ==  null  ||  o.getClass()  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  If(o  ==  null  ||  o.getClass()  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  getClass())  {  If(o  ==  null  ||  o.getClass()  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    If(o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
557	[BUG]  [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  If(o  ==  null  ||  o.isIterableFrom(iterator))  {  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  If(o  ==  null  ||  o.isIterableFrom(iterator))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.isPrimitive())  {  If(o  ==  null  ||  o.isIterableFrom(iterator))  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    If(o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
558	[BUG]  [BUGGY]  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    Object    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
559	[BUG]  [BUGGY]  if(o  ==  null)  {  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    Object    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
560	[BUG]  [BUGGY]  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    Object    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
561	[BUG]  [BUGGY]  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    Object    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
562	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o.getClass()  ==  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  &&  o.getClass()  ==  getClass())  {	  if(o!=    null    &&    o.getClass()!=    getClass())    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	182	2	replace
563	[BUG]  [BUGGY]  if(o!=  null  &&  o.getClass()  ==  getClass())  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o.getClass()  ==  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  o.getClass()  ==  getClass())  {	  if(o!=    null    &&    o.getClass()!=    getClass())    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	182	2	replace
564	[BUG]  [BUGGY]  if(o!=  null  &&  o.getClass()  >=  getClass())  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o.getClass()  >=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  o.getClass()  >=  getClass())  {	  if(o!=    null    &&    o.getClass()!=    getClass())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	182	None	replace
565	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  ==  0)  {  if(o  ==  null  ||  stack.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  ==  0)  {  if(o  ==  null  ||  stack.length  ==  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    ==    0)    {    if(o  ==  null  ||  stack.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
566	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  ==  0)  {  if(o!=  null  ||  stack.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  ==  0)  {  if(o!=  null  ||  stack.length  ==  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    ==    0)    {    if(o!=  null  ||  stack.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
567	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  ==  0)  {  if(o  ==  null  ||  stack.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  ==  0)  {  if(o  ==  null  ||  stack.length!=  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    ==    0)    {    if(o  ==  null  ||  stack.length!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
568	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  ==  0)  {  if(o  ==  null  ||  stack.length  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  ==  0)  {  if(o  ==  null  ||  stack.length  >=  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    ==    0)    {    if(o  ==  null  ||  stack.length  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
569	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  ==  0)  {  If(o  ==  null  ||  stack.length  ==  0)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  ==  0)  {  If(o  ==  null  ||  stack.length  ==  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    ==    0)    {    If(o  ==  null  ||  stack.length  ==  0)  {	  	non-compiled	[CE]  ';'  expected	92	None	add
570	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  ==  0)  {  if(o  >=  null  ||  stack.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  ==  0)  {  if(o  >=  null  ||  stack.length  ==  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    ==    0)    {    if(o  >=  null  ||  stack.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
571	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive)  {  [CE]  cannot  find  symbol  JsonPrimitive  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonNull)    {    	non-compiled	[CE]  cannot  find  symbol  JsonPrimitive	144	None	replace
572	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.VALUE_NULL)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.VALUE_NULL)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonNull)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	144	None	replace
573	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.FIELD_NAME)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.FIELD_NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.FIELD_NAME)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonNull)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	144	None	replace
574	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  <?>||!(o  instanceof  JsonPrimitive))  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  <?>||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  <?>||!(o  instanceof  JsonPrimitive))  {	  if(o    instanceof    JsonObject    ||!(o    instanceof    JsonPrimitive))    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	41	None	replace
575	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive)&&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive)&&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    instanceof    JsonObject    ||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	41	2	replace
576	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive)&&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive)&&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive)&&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    instanceof    JsonObject    ||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	41	2	replace
577	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||!(o  instanceof  JsonObject))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonPrimitive  ||!(o  instanceof  JsonObject))  {	  if(o    instanceof    JsonObject    ||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	41	2	replace
578	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||!(o  instanceof  JsonObject))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||!(o  instanceof  JsonObject))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||!(o  instanceof  JsonObject))  {	  if(o    instanceof    JsonObject    ||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	41	2	replace
579	[BUG]  [BUGGY]  if(o  instanceof  Iterator  <?>,  stack[stackSize  -  1]  instanceof  JsonObject)  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  <?>,  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator  <?>,  stack[stackSize  -  1]  instanceof  JsonObject)  {	  if(o    instanceof    Iterator    <?>,    stack[stackSize    -    2]    instanceof    JsonObject)    {    	non-compiled	[CE]  ')'  expected	122	None	replace
580	[BUG]  [BUGGY]  if(o  instanceof  Iterator  <?>,  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  <?>,  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator  <?>,  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o    instanceof    Iterator    <?>,    stack[stackSize    -    2]    instanceof    JsonObject)    {    	non-compiled	[CE]  ')'  expected	122	None	replace
581	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>,  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>,  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>,  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    instanceof    Iterator    <?>,    stack[stackSize    -    2]    instanceof    JsonObject)    {    	non-compiled	[CE]  ')'  expected	122	None	replace
582	[BUG]  [BUGGY]  if(o  instanceof  Iterator  <?>,  stack[stackSize  -  2]  instanceof  JsonObject  ||!(stack[stackSize  -  2]  instanceof  JsonPrimitive))  {  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  <?>,  stack[stackSize  -  2]  instanceof  JsonObject  ||!(stack[stackSize  -  2]  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator  <?>,  stack[stackSize  -  2]  instanceof  JsonObject  ||!(stack[stackSize  -  2]  instanceof  JsonPrimitive))  {	  if(o    instanceof    Iterator    <?>,    stack[stackSize    -    2]    instanceof    JsonObject)    {    	non-compiled	[CE]  ')'  expected	122	None	replace
583	[BUG]  [BUGGY]  if(o!=  null  ||  o.isPrimitive())  {  if(o  ==  null  ||  o.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o.isPrimitive())  {  if(o  ==  null  ||  o.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o.isPrimitive())  {  if(o  ==  null  ||  o.isPrimitive())  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    if(o    >=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
584	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o!=  null  ||  o.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o!=  null  ||  o.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o!=  null  ||  o.isPrimitive())  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    if(o    >=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
585	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject)  {  if(o!=  null  ||  o  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject)  {  if(o!=  null  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    JsonObject)    {    if(o!=  null  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
586	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject)  {  if(o  ==  null  ||  o  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject)  {  if(o  ==  null  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    JsonObject)    {    if(o  ==  null  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
587	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject)  {  if(o  >=  null  ||  o  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject)  {  if(o  >=  null  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    JsonObject)    {    if(o  >=  null  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
588	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject)  {  If(o!=  null  ||  o  instanceof  JsonObject)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject)  {  If(o!=  null  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    JsonObject)    {    If(o!=  null  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
589	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject)  {  if(o  >>  null  ||  o  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject)  {  if(o  >>  null  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    JsonObject)    {    if(o  >>  null  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
590	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject)  {  if(o  [Delete]  null  ||  o  instanceof  JsonObject)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject)  {  if(o  [Delete]  null  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    JsonObject)    {    if(o  [Delete]  null  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  ')'  expected	15	None	add
591	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject)  {  if(o  [BUGGY]  null  ||  o  instanceof  JsonObject)  {  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject)  {  if(o  [BUGGY]  null  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    JsonObject)    {    if(o  [BUGGY]  null  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  ')'  expected	15	None	add
592	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.SENTINEL_CLOSED)  {  [CE]  cannot  find  symbol  SENTINEL_CLOSED  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.SENTINEL_CLOSED)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.SENTINEL_CLOSED)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonPrimitive.UNREADABLE_READER)    {    	non-compiled	[CE]  cannot  find  symbol  SENTINEL_CLOSED	109	None	replace
593	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.NAME)  {  [CE]  cannot  find  symbol  NAME  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.NAME)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonPrimitive.UNREADABLE_READER)    {    	non-compiled	[CE]  cannot  find  symbol  NAME	109	None	replace
594	[BUG]  [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.UNREADABLE_READER)  {  [CE]  cannot  find  symbol  UNREADABLE_READER  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.UNREADABLE_READER)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(stack  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.UNREADABLE_READER)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonPrimitive.UNREADABLE_READER)    {    	non-compiled	[CE]  cannot  find  symbol  UNREADABLE_READER	109	None	replace
595	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonPrimitive.UNREADABLE_READER)  {  [CE]  cannot  find  symbol  UNREADABLE_READER  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonPrimitive.UNREADABLE_READER)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonPrimitive.UNREADABLE_READER)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonPrimitive.UNREADABLE_READER)    {    	non-compiled	[CE]  cannot  find  symbol  UNREADABLE_READER	109	None	replace
596	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.NONE)  {  [CE]  cannot  find  symbol  NONE  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.NONE)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.NONE)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonPrimitive.UNREADABLE_READER)    {    	non-compiled	[CE]  cannot  find  symbol  NONE	109	None	replace
597	[BUG]  [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.SENTINEL_CLOSED)  {  [CE]  cannot  find  symbol  SENTINEL_CLOSED  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.SENTINEL_CLOSED)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(stack  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.SENTINEL_CLOSED)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonPrimitive.UNREADABLE_READER)    {    	non-compiled	[CE]  cannot  find  symbol  SENTINEL_CLOSED	109	None	replace
598	[BUG]  [BUGGY]  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stack[stackSize    -    2]    instanceof    JsonObject)    {    if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	179	None	add
599	[BUG]  [BUGGY]  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o  ==  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o  ==  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stack[stackSize    -    2]    instanceof    JsonObject)    {    if(o  ==  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	179	None	add
600	[BUG]  [BUGGY]  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o  >=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o  >=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stack[stackSize    -    2]    instanceof    JsonObject)    {    if(o  >=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	179	None	add
601	[BUG]  [BUGGY]  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  If(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  If(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stack[stackSize    -    2]    instanceof    JsonObject)    {    If(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  	non-compiled	[CE]  ';'  expected	179	None	add
602	[BUG]  [BUGGY]  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o  >>  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o  >>  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stack[stackSize    -    2]    instanceof    JsonObject)    {    if(o  >>  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	179	None	add
603	[BUG]  [BUGGY]  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o!=  null  &&  stack[stackSize  -  2]  instancesof  JsonObject)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o!=  null  &&  stack[stackSize  -  2]  instancesof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stack[stackSize    -    2]    instanceof    JsonObject)    {    if(o!=  null  &&  stack[stackSize  -  2]  instancesof  JsonObject)  {	  	non-compiled	[CE]  ')'  expected	179	None	add
604	[BUG]  [BUGGY]  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stack[stackSize    -    2]    instanceof    JsonObject)    {    if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	179	None	add
605	[BUG]  [BUGGY]  if(o!=  null  &&  stack.length  >  0)  {  if(o!=  null  &&  stack.length  >  0)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack.length  >  0)  {  if(o!=  null  &&  stack.length  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stack.length    >    0)    {    if(o!=  null  &&  stack.length  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	183	None	add
606	[BUG]  [BUGGY]  if(o!=  null  &&  stack.length  >  0)  {  if(o  ==  null  &&  stack.length  >  0)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack.length  >  0)  {  if(o  ==  null  &&  stack.length  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stack.length    >    0)    {    if(o  ==  null  &&  stack.length  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	183	None	add
607	[BUG]  [BUGGY]  if(o!=  null  &&  stack.length  >  0)  {  if(o  >=  null  &&  stack.length  >  0)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack.length  >  0)  {  if(o  >=  null  &&  stack.length  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stack.length    >    0)    {    if(o  >=  null  &&  stack.length  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	183	None	add
608	[BUG]  [BUGGY]  if(o!=  null  &&  stack.length  >  0)  {  If(o!=  null  &&  stack.length  >  0)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack.length  >  0)  {  If(o!=  null  &&  stack.length  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stack.length    >    0)    {    If(o!=  null  &&  stack.length  >  0)  {	  	non-compiled	[CE]  ';'  expected	183	None	add
609	[BUG]  [BUGGY]  if(o!=  null  &&  stack.length  >  0)  {  if(o  >>  null  &&  stack.length  >  0)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack.length  >  0)  {  if(o  >>  null  &&  stack.length  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stack.length    >    0)    {    if(o  >>  null  &&  stack.length  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	183	None	add
610	[BUG]  [BUGGY]  if(o!=  null  &&  stack.length  >  0)  {  if(o  [BUGGY]  null  &&  stack.length  >  0)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack.length  >  0)  {  if(o  [BUGGY]  null  &&  stack.length  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stack.length    >    0)    {    if(o  [BUGGY]  null  &&  stack.length  >  0)  {	  	non-compiled	[CE]  ')'  expected	183	None	add
611	[BUG]  [BUGGY]  if(o  ==  null)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    If(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
612	[BUG]  [BUGGY]  if(o!=  null)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    If(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
613	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    If(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
614	[BUG]  [BUGGY]  if(o  instanceof  Iterator)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    If(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
615	[BUG]  [BUGGY]  char  stackSize  =  stack[stackSize  -  2];  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  char  stackSize  =  stack[stackSize  -  2];  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	char  stackSize  =  stack[stackSize  -  2];	  int    stackSize    =    stack[stackSize    -    2];    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
616	[BUG]  [BUGGY]  float  stackSize  =  stack[stackSize  -  2];  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  float  stackSize  =  stack[stackSize  -  2];  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	float  stackSize  =  stack[stackSize  -  2];	  int    stackSize    =    stack[stackSize    -    2];    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
617	[BUG]  [BUGGY]  int  stackSize  =  stack[stackSize  /  2];  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack[stackSize  /  2];  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack[stackSize  /  2];	  int    stackSize    =    stack[stackSize    -    2];    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
618	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  <  1)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stackSize  <  1)  {	  if(o    ==    null    ||    stackSize    <    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	167	2	replace
619	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  <  1)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  <  1)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stackSize  <  1)  {	  if(o    ==    null    ||    stackSize    <    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	167	2	replace
620	[BUG]  [BUGGY]  if(o!=  null  ||  stackSize  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stackSize  <  =  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  stackSize  <  =  0)  {	  if(o    ==    null    ||    stackSize    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
621	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonObject)    {    if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
622	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonObject)    {    If(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  ';'  expected	76	None	add
623	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JSONObject)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JSONObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonObject)    {    if(o  instanceof  JsonPrimitive  ||  o  instanceof  JSONObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
624	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  if(O  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  if(O  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonObject)    {    if(O  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
625	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  if(o  instancesof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  if(o  instancesof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonObject)    {    if(o  instancesof  JsonPrimitive  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  ')'  expected	76	None	add
626	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  <  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  <  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonObject)    {    if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  <	  	non-compiled	[CE]  illegal  start  of  type	76	None	add
627	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive)&&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||!(o  instanceof  JsonPrimitive)&&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    ==    null    ||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	33	2	replace
628	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive)&&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive)&&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||!(o  instanceof  JsonPrimitive)&&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    ==    null    ||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	33	2	replace
629	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length!=  0)  {  if(o  ==  null  ||  stack.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length!=  0)  {  if(o  ==  null  ||  stack.length!=  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length!=    0)    {    if(o  ==  null  ||  stack.length!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
630	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length!=  0)  {  if(o!=  null  ||  stack.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length!=  0)  {  if(o!=  null  ||  stack.length!=  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length!=    0)    {    if(o!=  null  ||  stack.length!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
631	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length!=  0)  {  if(o  ==  null  ||  stack.length  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length!=  0)  {  if(o  ==  null  ||  stack.length  >=  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length!=    0)    {    if(o  ==  null  ||  stack.length  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
632	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length!=  0)  {  if(o  ==  null  ||  stack.length  >>  0)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length!=  0)  {  if(o  ==  null  ||  stack.length  >>  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length!=    0)    {    if(o  ==  null  ||  stack.length  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
633	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length!=  0)  {  If(o  ==  null  ||  stack.length!=  0)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length!=  0)  {  If(o  ==  null  ||  stack.length!=  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length!=    0)    {    If(o  ==  null  ||  stack.length!=  0)  {	  	non-compiled	[CE]  ';'  expected	95	None	add
634	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length!=  0)  {  if(o  >=  null  ||  stack.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length!=  0)  {  if(o  >=  null  ||  stack.length!=  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length!=    0)    {    if(o  >=  null  ||  stack.length!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
635	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length!=  0)  {  if(o  ==  null  ||  stack.length  [BUGGY]  0)  {  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length!=  0)  {  if(o  ==  null  ||  stack.length  [BUGGY]  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length!=    0)    {    if(o  ==  null  ||  stack.length  [BUGGY]  0)  {	  	non-compiled	[CE]  ')'  expected	95	None	add
636	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    IllegalArgument)    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
637	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  IllegalArgument)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  IllegalArgument)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  &&  o  instanceof  IllegalArgument)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    IllegalArgument)    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
638	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument  ||  isObject)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument  ||  isObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument  ||  isObject)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    IllegalArgument)    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
639	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    IllegalArgument)    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
640	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument  ||  stack.length  >  0)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument  ||  stack.length  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument  ||  stack.length  >  0)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    IllegalArgument)    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
641	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument  ||!(o  instanceof  JsonObject))  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument  ||!(o  instanceof  JsonObject))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument  ||!(o  instanceof  JsonObject))  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    IllegalArgument)    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
642	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonArray    ||    o    instanceof    Iterator    <?>)    {    if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
643	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonArray  ||  o  instanceof  iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonArray  ||  o  instanceof  iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonArray    ||    o    instanceof    Iterator    <?>)    {    if(o  instanceof  JsonArray  ||  o  instanceof  iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
644	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  If(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  If(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonArray    ||    o    instanceof    Iterator    <?>)    {    If(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  ';'  expected	63	None	add
645	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JSONArray  ||  o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JSONArray  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonArray    ||    o    instanceof    Iterator    <?>)    {    if(o  instanceof  JSONArray  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
646	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  if(o  instancesof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  if(o  instancesof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonArray    ||    o    instanceof    Iterator    <?>)    {    if(o  instancesof  JsonArray  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  ')'  expected	63	None	add
647	[BUG]  [BUGGY]  if(o!=  null  ||  o.getClass()  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  inconvertible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o.getClass()  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o.getClass()  instanceof  JsonPrimitive  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o!=    null    ||    o.getClass()    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  inconvertible  types	18	None	replace
648	[BUG]  [BUGGY]  Object  stack  =(o!=  null)?  JsonNull.UNREADABLE_READER  :  o.getClass();  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o!=  null)?  JsonNull.UNREADABLE_READER  :  o.getClass();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o!=  null)?  JsonNull.UNREADABLE_READER  :  o.getClass();	  Object    stack    =(o    ==    null)?    JsonNull.UNREADABLE_READER    :    o.getClass();    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
649	[BUG]  [BUGGY]  Object  stack  =(o  ==  JsonNull.UNREADABLE_READER)?  JsonNull.UNREADABLE_READER  :  o.getClass();  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  JsonNull.UNREADABLE_READER)?  JsonNull.UNREADABLE_READER  :  o.getClass();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  JsonNull.UNREADABLE_READER)?  JsonNull.UNREADABLE_READER  :  o.getClass();	  Object    stack    =(o    ==    null)?    JsonNull.UNREADABLE_READER    :    o.getClass();    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
650	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  o.toString();  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  o.toString();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  o.toString();	  Object    stack    =(o    ==    null)?    JsonNull.UNREADABLE_READER    :    o.getClass();    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
651	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  object.getClass();  [CE]  illegal  start  of  type  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  object.getClass();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  object.getClass();	  Object    stack    =(o    ==    null)?    JsonNull.UNREADABLE_READER    :    o.getClass();    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
652	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    1]    instanceof    JsonObject)    {    if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
653	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o!=  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o!=  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    1]    instanceof    JsonObject)    {    if(o!=  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
654	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  If(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  If(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    1]    instanceof    JsonObject)    {    If(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {	  	non-compiled	[CE]  ';'  expected	141	None	add
655	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o  >=  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o  >=  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    1]    instanceof    JsonObject)    {    if(o  >=  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
656	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o  ==  null  ||  stack[stackSize  -  1]  instancesof  JsonObject)  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o  ==  null  ||  stack[stackSize  -  1]  instancesof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    1]    instanceof    JsonObject)    {    if(o  ==  null  ||  stack[stackSize  -  1]  instancesof  JsonObject)  {	  	non-compiled	[CE]  ')'  expected	141	None	add
657	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    1]    instanceof    JsonObject)    {    if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
658	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive  <  UNREADABLE_READER  ||  o  instanceof  JsonPrimitive  >  stackSize)  {  [CE]  >  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive  <  UNREADABLE_READER  ||  o  instanceof  JsonPrimitive  >  stackSize)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonPrimitive  <  UNREADABLE_READER  ||  o  instanceof  JsonPrimitive  >  stackSize)  {	  if(o    instanceof    JsonPrimitive)    {    if(o    instanceof    JsonPrimitive)    <    	non-compiled	[CE]  >  expected	126	None	replace
659	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonPrimitive  <  UNREADABLE_READER  ||  o  instanceof  JsonPrimitive  >  stackSize)  {  [CE]  >  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonPrimitive  <  UNREADABLE_READER  ||  o  instanceof  JsonPrimitive  >  stackSize)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  if(o  instanceof  JsonPrimitive  <  UNREADABLE_READER  ||  o  instanceof  JsonPrimitive  >  stackSize)  {	  if(o    instanceof    JsonPrimitive)    {    if(o    instanceof    JsonPrimitive)    <    	non-compiled	[CE]  >  expected	126	None	replace
660	[BUG]  [BUGGY]  if(o  ==  null)  {  if(!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(!(o  instanceof  JsonPrimitive))  {	  if(o    instanceof    JsonPrimitive)    {    if(o    instanceof    JsonPrimitive)    <    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
661	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive  <  UNREADABLE_READER  ||  o  instanceof  JsonPrimitive  >=  false)  {  [CE]  >  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive  <  UNREADABLE_READER  ||  o  instanceof  JsonPrimitive  >=  false)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonPrimitive  <  UNREADABLE_READER  ||  o  instanceof  JsonPrimitive  >=  false)  {	  if(o    instanceof    JsonPrimitive)    {    if(o    instanceof    JsonPrimitive)    <    	non-compiled	[CE]  >  expected	126	None	replace
662	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>,  stack[stackSize  -  2])  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>,  stack[stackSize  -  2])  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>,  stack[stackSize  -  2])  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator    <?>)    {    	non-compiled	[CE]  ')'  expected	60	None	replace
663	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  String  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  String  ||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	2	replace
664	[BUG]  [BUGGY]  if(o  instanceof  String  ||  o  instanceof  Iterator  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  String  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  String  ||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	2	replace
665	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonPrimitive)    {    if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
666	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o!=  null  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o!=  null  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonPrimitive)    {    if(o!=  null  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
667	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  If(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  If(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonPrimitive)    {    If(o  ==  null  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  ';'  expected	36	None	add
668	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o  >=  null  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o  >=  null  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonPrimitive)    {    if(o  >=  null  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
669	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o  >>  null  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o  >>  null  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonPrimitive)    {    if(o  >>  null  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
670	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o  [BUGGY]  null  ||  o  instanceof  JsonPrimitive)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o  [BUGGY]  null  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonPrimitive)    {    if(o  [BUGGY]  null  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  ')'  expected	36	None	add
671	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  <  0)  {  if(o  ==  null  ||  stackSize  <  0)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  <  0)  {  if(o  ==  null  ||  stackSize  <  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stackSize    <    0)    {    if(o  ==  null  ||  stackSize  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	166	None	add
672	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  <  0)  {  if(o!=  null  ||  stackSize  <  0)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  <  0)  {  if(o!=  null  ||  stackSize  <  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stackSize    <    0)    {    if(o!=  null  ||  stackSize  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	166	None	add
673	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  <  0)  {  if(o  ==  null  ||  stackSize  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  <  0)  {  if(o  ==  null  ||  stackSize  >=  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stackSize    <    0)    {    if(o  ==  null  ||  stackSize  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	166	None	add
674	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  <  0)  {  If(o  ==  null  ||  stackSize  <  0)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  <  0)  {  If(o  ==  null  ||  stackSize  <  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stackSize    <    0)    {    If(o  ==  null  ||  stackSize  <  0)  {	  	non-compiled	[CE]  ';'  expected	166	None	add
675	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  <  0)  {  if(o  >=  null  ||  stackSize  <  0)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  <  0)  {  if(o  >=  null  ||  stackSize  <  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stackSize    <    0)    {    if(o  >=  null  ||  stackSize  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	166	None	add
676	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  <  0)  {  if(o  >>  null  ||  stackSize  <  0)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  <  0)  {  if(o  >>  null  ||  stackSize  <  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stackSize    <    0)    {    if(o  >>  null  ||  stackSize  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	166	None	add
677	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.None.NULL)  {  [CE]  cannot  find  symbol  None  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.None.NULL)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.None.NULL)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonPrimitive.NULL)    {    	non-compiled	[CE]  cannot  find  symbol  None	143	None	replace
678	[BUG]  [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.NULL)  {  [CE]  cannot  find  symbol  NULL  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(stack  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.NULL)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(stack  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.NULL)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonPrimitive.NULL)    {    	non-compiled	[CE]  cannot  find  symbol  NULL	143	None	replace
679	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.NO_OBJECT)  {  [CE]  cannot  find  symbol  NO_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.NO_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.NO_OBJECT)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonPrimitive.NULL)    {    	non-compiled	[CE]  cannot  find  symbol  NO_OBJECT	143	None	replace
680	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||!(o    instanceof    JsonPrimitive))    {    if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
681	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  If(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  If(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||!(o    instanceof    JsonPrimitive))    {    If(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  ';'  expected	40	None	add
682	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  if(o  instanceof  JsonObject  ||?!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  if(o  instanceof  JsonObject  ||?!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||!(o    instanceof    JsonPrimitive))    {    if(o  instanceof  JsonObject  ||?!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
683	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  if(o  instanceof  JSONObject  ||!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  if(o  instanceof  JSONObject  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||!(o    instanceof    JsonPrimitive))    {    if(o  instanceof  JSONObject  ||!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
684	[BUG]  [BUGGY]  if(o!=  null  &&  o.getClass()!=  getClass())  {  if(o!=  null  &&  o.getClass()!=  getClass())  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o.getClass()!=  getClass())  {  if(o!=  null  &&  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    o.getClass()!=    getClass())    {    if(o!=  null  &&  o.getClass()!=  getClass())  {	  	non-compiled	[CE]  illegal  start  of  expression	181	None	add
685	[BUG]  [BUGGY]  if(o!=  null  &&  o.getClass()!=  getClass())  {  if(o  ==  null  &&  o.getClass()!=  getClass())  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o.getClass()!=  getClass())  {  if(o  ==  null  &&  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    o.getClass()!=    getClass())    {    if(o  ==  null  &&  o.getClass()!=  getClass())  {	  	non-compiled	[CE]  illegal  start  of  expression	181	None	add
686	[BUG]  [BUGGY]  if(o!=  null  &&  o.getClass()!=  getClass())  {  if(o!=  null  &&  o.getClass()  ==  getClass())  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o.getClass()!=  getClass())  {  if(o!=  null  &&  o.getClass()  ==  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    o.getClass()!=    getClass())    {    if(o!=  null  &&  o.getClass()  ==  getClass())  {	  	non-compiled	[CE]  illegal  start  of  expression	181	None	add
687	[BUG]  [BUGGY]  if(o!=  null  &&  o.getClass()!=  getClass())  {  if(o!=  null  &&  o.getClass()  >=  getClass())  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o.getClass()!=  getClass())  {  if(o!=  null  &&  o.getClass()  >=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    o.getClass()!=    getClass())    {    if(o!=  null  &&  o.getClass()  >=  getClass())  {	  	non-compiled	[CE]  illegal  start  of  expression	181	None	add
688	[BUG]  [BUGGY]  if(o!=  null  &&  o.getClass()!=  getClass())  {  if(o  >=  null  &&  o.getClass()!=  getClass())  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o.getClass()!=  getClass())  {  if(o  >=  null  &&  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    o.getClass()!=    getClass())    {    if(o  >=  null  &&  o.getClass()!=  getClass())  {	  	non-compiled	[CE]  illegal  start  of  expression	181	None	add
689	[BUG]  [BUGGY]  if(o!=  null  &&  o.getClass()!=  getClass())  {  if(o!=  null  &&  o.getClass()  >>  getClass())  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o.getClass()!=  getClass())  {  if(o!=  null  &&  o.getClass()  >>  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    o.getClass()!=    getClass())    {    if(o!=  null  &&  o.getClass()  >>  getClass())  {	  	non-compiled	[CE]  illegal  start  of  expression	181	None	add
690	[BUG]  [BUGGY]  if(o!=  null  &&  o.getClass()!=  getClass())  {  If(o!=  null  &&  o.getClass()!=  getClass())  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o.getClass()!=  getClass())  {  If(o!=  null  &&  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    o.getClass()!=    getClass())    {    If(o!=  null  &&  o.getClass()!=  getClass())  {	  	non-compiled	[CE]  ';'  expected	181	None	add
691	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o!=    null    &&    stack[stackSize    -    2]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	180	2	replace
692	[BUG]  [BUGGY]  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o!=    null    &&    stack[stackSize    -    2]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	180	2	replace
693	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  &&  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  &&  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o!=    null    &&    stack[stackSize    -    2]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	180	2	replace
694	[BUG]  [BUGGY]  if(o  ==  null  &&  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  &&  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  &&  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o!=    null    &&    stack[stackSize    -    2]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	180	2	replace
695	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o!=    null    &&    stack[stackSize    -    2]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	180	2	replace
696	[BUG]  [BUGGY]  if(o  ==  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o!=    null    &&    stack[stackSize    -    2]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	180	2	replace
697	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.END_OBJECT)    {    if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	110	None	add
698	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  if(o!=  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  if(o!=  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.END_OBJECT)    {    if(o!=  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	110	None	add
699	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  if(o  ==  null  ||  stack[stackSize  -  2]  >=  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  if(o  ==  null  ||  stack[stackSize  -  2]  >=  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.END_OBJECT)    {    if(o  ==  null  ||  stack[stackSize  -  2]  >=  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	110	None	add
700	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  if(o  ==  null  ||  stack[stackSize  -  2]  >>  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  if(o  ==  null  ||  stack[stackSize  -  2]  >>  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.END_OBJECT)    {    if(o  ==  null  ||  stack[stackSize  -  2]  >>  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	110	None	add
701	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  If(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  If(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.END_OBJECT)    {    If(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	110	None	add
702	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.END_OBJECT)    {    if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	110	None	add
703	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  if(o  ==  null  ||  stack[stackSize  -  2]  [Delete]  JsonToken.END_OBJECT)  {  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  if(o  ==  null  ||  stack[stackSize  -  2]  [Delete]  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.END_OBJECT)    {    if(o  ==  null  ||  stack[stackSize  -  2]  [Delete]  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ')'  expected	110	None	add
704	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonToken.VALUE_STRING)  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonToken.VALUE_STRING)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  JsonToken.VALUE_STRING)  {	  if(o    ==    null    ||    o    instanceof    JsonObject)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	14	None	replace
705	[BUG]  [BUGGY]  if(o!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
706	[BUG]  [BUGGY]  ||(o  ==  null  &&  o.isPrimitive()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  ||(o  ==  null  &&  o.isPrimitive()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	||(o  ==  null  &&  o.isPrimitive()))  {  throw  new  IllegalArgumentException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
707	[BUG]  [BUGGY]  ||(o  ==  null  &&  o.getClass()!=  JsonToken.VALUE_NULL))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  ||(o  ==  null  &&  o.getClass()!=  JsonToken.VALUE_NULL))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	||(o  ==  null  &&  o.getClass()!=  JsonToken.VALUE_NULL))  {  throw  new  IllegalArgumentException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
708	[BUG]  [BUGGY]  ||(o  ==  null  &&  o.getClass()!=  JsonToken.END_OBJECT))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  ||(o  ==  null  &&  o.getClass()!=  JsonToken.END_OBJECT))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	||(o  ==  null  &&  o.getClass()!=  JsonToken.END_OBJECT))  {  throw  new  IllegalArgumentException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
709	[BUG]  [BUGGY]  parent  ==  null  ||  o  ==  parent.next())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  parent  ==  null  ||  o  ==  parent.next())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	parent  ==  null  ||  o  ==  parent.next())  {  throw  new  IllegalArgumentException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	69	None	replace
710	[BUG]  [BUGGY]  ||(o  ==  null  &&  o.getClass()!=  JsonToken.STRING))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  ||(o  ==  null  &&  o.getClass()!=  JsonToken.STRING))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	||(o  ==  null  &&  o.getClass()!=  JsonToken.STRING))  {  throw  new  IllegalArgumentException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
711	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonPrimitive  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    instanceof    JsonPrimitive    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	2	replace
712	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    instanceof    JsonPrimitive    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	2	replace
713	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  stack.length  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonPrimitive  &&  stack.length  >  0)  {	  if(o    instanceof    JsonPrimitive    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	2	replace
714	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  &&  stack.length  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  stack.length  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  &&  stack.length  >  0)  {	  if(o    instanceof    JsonPrimitive    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	2	replace
715	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonPrimitive  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {	  if(o    instanceof    JsonPrimitive    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	2	replace
716	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {	  if(o    instanceof    JsonPrimitive    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	2	replace
717	[BUG]  [BUGGY]  Object  stack  =(o!=  null)?  JsonNull.createJsonNull()  :  o.toString();  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o!=  null)?  JsonNull.createJsonNull()  :  o.toString();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o!=  null)?  JsonNull.createJsonNull()  :  o.toString();	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o.toString();    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
718	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  new  JsonPrimitive(o.toString());  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  new  JsonPrimitive(o.toString());  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  new  JsonPrimitive(o.toString());	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o.toString();    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
719	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJSObject()  :  o.toString();  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJSObject()  :  o.toString();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.createJSObject()  :  o.toString();	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o.toString();    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
720	[BUG]  [BUGGY]  Object  stack  =(o  ==  JsonNull.createJsonNull())?  JsonNull.createJsonNull()  :  o.toString();  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  JsonNull.createJsonNull())?  JsonNull.createJsonNull()  :  o.toString();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  JsonNull.createJsonNull())?  JsonNull.createJsonNull()  :  o.toString();	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o.toString();    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
721	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  object.toString();  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  object.toString();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  object.toString();	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o.toString();    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
722	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonPrimitive()  :  o.toString();  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonPrimitive()  :  o.toString();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.createJsonPrimitive()  :  o.toString();	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o.toString();    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
723	[BUG]  [BUGGY]  if(o!=  null)  {  If(o  ==  null)  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  If(o  ==  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  If(o  ==  null)  {	  if(o!=    null)    {    If(o!=    null)    {    	non-compiled	[CE]  ';'  expected	116	None	replace
724	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    if(O    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
725	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator))  {  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator))  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    if(O    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
726	[BUG]  [BUGGY]  if(o  instanceof  Iterator)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    if(O    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
727	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    if(O    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
728	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonArray    ||    o    instanceof    Iterator)    {    if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
729	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  If(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  If(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonArray    ||    o    instanceof    Iterator)    {    If(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ';'  expected	65	None	add
730	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  if(o  instanceof  JsonArray  ||  o  instanceof  iterator)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  if(o  instanceof  JsonArray  ||  o  instanceof  iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonArray    ||    o    instanceof    Iterator)    {    if(o  instanceof  JsonArray  ||  o  instanceof  iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
731	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  if(o  instanceof  JSONArray  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  if(o  instanceof  JSONArray  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonArray    ||    o    instanceof    Iterator)    {    if(o  instanceof  JSONArray  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
732	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  if(o  instancesof  JsonArray  ||  o  instanceof  Iterator)  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  if(o  instancesof  JsonArray  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonArray    ||    o    instanceof    Iterator)    {    if(o  instancesof  JsonArray  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ')'  expected	65	None	add
733	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  if(O  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  if(O  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonArray    ||    o    instanceof    Iterator)    {    if(O  instanceof  JsonArray  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
734	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
735	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(o!=  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(o!=  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(o!=  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
736	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  If(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  If(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    If(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  ';'  expected	107	None	add
737	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(o  ==  null  ||  stack[stackSize  -  2]  instancesof  JsonPrimitive)  {  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(o  ==  null  ||  stack[stackSize  -  2]  instancesof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(o  ==  null  ||  stack[stackSize  -  2]  instancesof  JsonPrimitive)  {	  	non-compiled	[CE]  ')'  expected	107	None	add
738	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(o  >=  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(o  >=  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(o  >=  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
739	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
740	[BUG]  [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stack[stackSize    -    1]    instanceof    JsonObject)    {    if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	186	None	add
741	[BUG]  [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o  ==  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o  ==  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stack[stackSize    -    1]    instanceof    JsonObject)    {    if(o  ==  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	186	None	add
742	[BUG]  [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o  >=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o  >=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stack[stackSize    -    1]    instanceof    JsonObject)    {    if(o  >=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	186	None	add
743	[BUG]  [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  If(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  If(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stack[stackSize    -    1]    instanceof    JsonObject)    {    If(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {	  	non-compiled	[CE]  ';'  expected	186	None	add
744	[BUG]  [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o  >>  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o  >>  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stack[stackSize    -    1]    instanceof    JsonObject)    {    if(o  >>  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	186	None	add
745	[BUG]  [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stack[stackSize    -    1]    instanceof    JsonObject)    {    if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	186	None	add
746	[BUG]  [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o  [Delete]  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o  [Delete]  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stack[stackSize    -    1]    instanceof    JsonObject)    {    if(o  [Delete]  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {	  	non-compiled	[CE]  ')'  expected	186	None	add
747	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
748	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  if(o!=  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  if(o!=  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    if(o!=  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
749	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  if(o  ==  null  ||  stack[stackSize  -  2]  >=  JsonToken.NAME)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  if(o  ==  null  ||  stack[stackSize  -  2]  >=  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    if(o  ==  null  ||  stack[stackSize  -  2]  >=  JsonToken.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
750	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  if(o  ==  null  ||  stack[stackSize  -  2]  >>  JsonToken.NAME)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  if(o  ==  null  ||  stack[stackSize  -  2]  >>  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    if(o  ==  null  ||  stack[stackSize  -  2]  >>  JsonToken.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
751	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  If(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  If(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    If(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {	  	non-compiled	[CE]  ';'  expected	105	None	add
752	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.NAME)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
753	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  if(o  ==  null  ||  stack[stackSize  -  2]  [Delete]  JsonToken.NAME)  {  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  if(o  ==  null  ||  stack[stackSize  -  2]  [Delete]  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    if(o  ==  null  ||  stack[stackSize  -  2]  [Delete]  JsonToken.NAME)  {	  	non-compiled	[CE]  ')'  expected	105	None	add
754	[BUG]  [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o  ==  JsonToken.END_ARRAY)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.START_OBJECT  ||  o  ==  JsonToken.END_ARRAY)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	135	None	replace
755	[BUG]  [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o!=  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o!=  JsonToken.END_ARRAY)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.START_OBJECT  ||  o!=  JsonToken.END_ARRAY)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	135	None	replace
756	[BUG]  [BUGGY]  if(o!=  JsonToken.END_OBJECT  ||  o  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  START_ARRAY  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  JsonToken.END_OBJECT  ||  o  ==  JsonToken.START_ARRAY)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  JsonToken.END_OBJECT  ||  o  ==  JsonToken.START_ARRAY)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	135	None	replace
757	[BUG]  [BUGGY]  if(o  ==  JsonToken.END_OBJECT  ||  o  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  START_ARRAY  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.END_OBJECT  ||  o  ==  JsonToken.START_ARRAY)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.END_OBJECT  ||  o  ==  JsonToken.START_ARRAY)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	135	None	replace
758	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||!(o  instanceof  Iterator))  {	  if(o    instanceof    Iterator    <?>)    {    if(o    instanceof    Iterator    >=?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	52	2	replace
759	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||!(o  instanceof  Iterator))  {	  if(o    instanceof    Iterator    <?>)    {    if(o    instanceof    Iterator    >=?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	52	2	replace
760	[BUG]  [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL;  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL;  }	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.VALUE_NULL;    }    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
761	[BUG]  [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL;  }  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL;  }	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.VALUE_NULL;    }    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
762	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL;  }  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL;  }	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.VALUE_NULL;    }    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
763	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.VALUE_NULL;    }    	non-compiled	[CE]  ';'  expected	175	None	replace
764	[BUG]  [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL;  }  [CE]  illegal  start  of  type  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.START_OBJECT  ||  o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL;  }	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.VALUE_NULL;    }    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
765	[BUG]  [BUGGY]  if(o  ==  null)  {  If(o  instanceof  Iterator  <?>)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  If(o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  If(o  instanceof  Iterator  <?>)  {	  if(o    instanceof    Iterator    <?>)    {    If(o    instanceof    Iterator    <?>)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
766	[BUG]  [BUGGY]  if(o!=  null)  {  If(o  instanceof  Iterator  <?>)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  If(o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  If(o  instanceof  Iterator  <?>)  {	  if(o    instanceof    Iterator    <?>)    {    If(o    instanceof    Iterator    <?>)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
767	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  If(o  instanceof  Iterator  <?>)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject)  {  If(o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject)  {  If(o  instanceof  Iterator  <?>)  {	  if(o    instanceof    Iterator    <?>)    {    If(o    instanceof    Iterator    <?>)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
768	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  <?>)  {  If(o  instanceof  Iterator  <?>)  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  <?>)  {  If(o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  <?>)  {  If(o  instanceof  Iterator  <?>)  {	  if(o    instanceof    Iterator    <?>)    {    If(o    instanceof    Iterator    <?>)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
769	[BUG]  [BUGGY]  if(o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator?)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator?)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator?)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator?)    {    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
770	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator?)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator?)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator?)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator?)    {    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
771	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator?)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator?)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator?)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator?)    {    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
772	[BUG]  [BUGGY]  if(o  instanceof  Iterator)  {  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator))  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator)  {  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator)  {  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator))  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator?)    {    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
773	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  0)  {  if(o  ==  null  ||  stack.length  <  0)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  0)  {  if(o  ==  null  ||  stack.length  <  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    <    0)    {    if(o  ==  null  ||  stack.length  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	168	None	add
774	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  0)  {  if(o!=  null  ||  stack.length  <  0)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  0)  {  if(o!=  null  ||  stack.length  <  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    <    0)    {    if(o!=  null  ||  stack.length  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	168	None	add
775	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  0)  {  If(o  ==  null  ||  stack.length  <  0)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  0)  {  If(o  ==  null  ||  stack.length  <  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    <    0)    {    If(o  ==  null  ||  stack.length  <  0)  {	  	non-compiled	[CE]  ';'  expected	168	None	add
776	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  0)  {  if(o  ==  null  ||  stack.length  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  0)  {  if(o  ==  null  ||  stack.length  >=  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    <    0)    {    if(o  ==  null  ||  stack.length  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	168	None	add
777	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  0)  {  if(o  >=  null  ||  stack.length  <  0)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  0)  {  if(o  >=  null  ||  stack.length  <  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    <    0)    {    if(o  >=  null  ||  stack.length  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	168	None	add
778	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  0)  {  if(o  >>  null  ||  stack.length  <  0)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  0)  {  if(o  >>  null  ||  stack.length  <  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    <    0)    {    if(o  >>  null  ||  stack.length  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	168	None	add
779	[BUG]  [BUGGY]  if(o  ==  null)  {  If(o  instanceof  JsonObject)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  If(o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  If(o  instanceof  JsonObject)  {	  if(o    instanceof    JsonObject)    {    If(o    instanceof    JsonObject)    {    	non-compiled	[CE]  ';'  expected	98	None	replace
780	[BUG]  [BUGGY]  if(o!=  null)  {  If(o  instanceof  JsonObject)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  If(o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  If(o  instanceof  JsonObject)  {	  if(o    instanceof    JsonObject)    {    If(o    instanceof    JsonObject)    {    	non-compiled	[CE]  ';'  expected	98	None	replace
781	[BUG]  [BUGGY]  if(o  ==  null)  {  If(o  instanceof  JsonNull)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  If(o  instanceof  JsonNull)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  If(o  instanceof  JsonNull)  {	  if(o    instanceof    JsonObject)    {    If(o    instanceof    JsonObject)    {    	non-compiled	[CE]  ';'  expected	98	None	replace
782	[BUG]  [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  if(o!=  null  ||  o.isIterator())  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  if(o!=  null  ||  o.isIterator())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.isPrimitive())  {  if(o!=  null  ||  o.isIterator())  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o!=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
783	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o!=  null  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o!=  null  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o!=  null  ||  o  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o!=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
784	[BUG]  [BUGGY]  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||!(o    instanceof    Iterator    <?>))    {    if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
785	[BUG]  [BUGGY]  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||!(o    instanceof    Iterator    <?>))    {    if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
786	[BUG]  [BUGGY]  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  if(o  >=  null  ||!(o  instanceof  Iterator  <?>))  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  if(o  >=  null  ||!(o  instanceof  Iterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||!(o    instanceof    Iterator    <?>))    {    if(o  >=  null  ||!(o  instanceof  Iterator  <?>))  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
787	[BUG]  [BUGGY]  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  If(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  If(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||!(o    instanceof    Iterator    <?>))    {    If(o!=  null  ||!(o  instanceof  Iterator  <?>))  {	  	non-compiled	[CE]  ';'  expected	120	None	add
788	[BUG]  [BUGGY]  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  if(o  >>  null  ||!(o  instanceof  Iterator  <?>))  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  if(o  >>  null  ||!(o  instanceof  Iterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||!(o    instanceof    Iterator    <?>))    {    if(o  >>  null  ||!(o  instanceof  Iterator  <?>))  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
789	[BUG]  [BUGGY]  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  if(o  [Delete]  null  ||!(o  instanceof  Iterator  <?>))  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  if(o  [Delete]  null  ||!(o  instanceof  Iterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||!(o    instanceof    Iterator    <?>))    {    if(o  [Delete]  null  ||!(o  instanceof  Iterator  <?>))  {	  	non-compiled	[CE]  ')'  expected	120	None	add
790	[BUG]  [BUGGY]  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  if(o  [BUGGY]  null  ||!(o  instanceof  Iterator  <?>))  {  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  if(o  [BUGGY]  null  ||!(o  instanceof  Iterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||!(o    instanceof    Iterator    <?>))    {    if(o  [BUGGY]  null  ||!(o  instanceof  Iterator  <?>))  {	  	non-compiled	[CE]  ')'  expected	120	None	add
791	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
792	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonObject)  {	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
793	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  if(o  instanceof  JsonObject)  {	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
794	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  1]  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
795	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonPrimitive  &&  o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	75	2	replace
796	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  &&  o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	75	2	replace
797	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive  &&!(o  instanceof  JsonPrimitive)))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||!(o  instanceof  JsonPrimitive  &&!(o  instanceof  JsonPrimitive)))  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	75	2	replace
798	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive  &&!(o  instanceof  JsonPrimitive)))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive  &&!(o  instanceof  JsonPrimitive)))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||!(o  instanceof  JsonPrimitive  &&!(o  instanceof  JsonPrimitive)))  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	75	2	replace
799	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonPrimitive  ||!(o  instanceof  JsonPrimitive))  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	75	2	replace
800	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||!(o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||!(o  instanceof  JsonPrimitive))  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	75	2	replace
801	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(JsonPrimitive  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [CE]  ']'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(JsonPrimitive  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  for(JsonPrimitive  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonObject)    {    for(o    instanceof    JsonObject)    {    	non-compiled	[CE]  ']'  expected	157	None	replace
802	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(int  i  =  0;  i  <  stack.length;  i++)  {  [CE]  'else'  without  'if'  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(int  i  =  0;  i  <  stack.length;  i++)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  for(int  i  =  0;  i  <  stack.length;  i++)  {	  if(o    instanceof    JsonObject)    {    for(o    instanceof    JsonObject)    {    	non-compiled	[CE]  'else'  without  'if'	157	None	replace
803	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(int  i  =  0,  stackSize;  i  <  stack.length;  ++i)  {  [CE]  'else'  without  'if'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(int  i  =  0,  stackSize;  i  <  stack.length;  ++i)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  for(int  i  =  0,  stackSize;  i  <  stack.length;  ++i)  {	  if(o    instanceof    JsonObject)    {    for(o    instanceof    JsonObject)    {    	non-compiled	[CE]  'else'  without  'if'	157	None	replace
804	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(int  i  =  1;  i  <  stack.length;  ++i)  {  [CE]  'else'  without  'if'  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(int  i  =  1;  i  <  stack.length;  ++i)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  for(int  i  =  1;  i  <  stack.length;  ++i)  {	  if(o    instanceof    JsonObject)    {    for(o    instanceof    JsonObject)    {    	non-compiled	[CE]  'else'  without  'if'	157	None	replace
805	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(int  i  =  0;  i  <  stackSize;  i++)  {  [CE]  'else'  without  'if'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(int  i  =  0;  i  <  stackSize;  i++)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  for(int  i  =  0;  i  <  stackSize;  i++)  {	  if(o    instanceof    JsonObject)    {    for(o    instanceof    JsonObject)    {    	non-compiled	[CE]  'else'  without  'if'	157	None	replace
806	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(stack  instanceof  JsonPrimitive)  {  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(stack  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  for(stack  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonObject)    {    for(o    instanceof    JsonObject)    {    	non-compiled	[CE]  not  a  statement	157	None	replace
807	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  2]  ==  JsonToken.NAME)  {  return  JsonToken.START_OBJECT;  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  2]  ==  JsonToken.NAME)  {  return  JsonToken.START_OBJECT;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  2]  ==  JsonToken.NAME)  {  return  JsonToken.START_OBJECT;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.START_OBJECT;    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
808	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  2]  ==  JsonToken.NAME)  {  return  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  2]  ==  JsonToken.NAME)  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  if(o  instanceof  JsonObject)  {  if(stack[stackSize  -  2]  ==  JsonToken.NAME)  {  return  JsonToken.END_OBJECT;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.START_OBJECT;    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
809	[BUG]  [BUGGY]  Object  stack  =(o!=  null)?  JsonNull.createJsonNull()  :  o.getClass();  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o!=  null)?  JsonNull.createJsonNull()  :  o.getClass();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o!=  null)?  JsonNull.createJsonNull()  :  o.getClass();	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o.getClass();    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
810	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJSObject()  :  o.getClass();  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJSObject()  :  o.getClass();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.createJSObject()  :  o.getClass();	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o.getClass();    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
811	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonPrimitive()  :  o.getClass();  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonPrimitive()  :  o.getClass();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.createJsonPrimitive()  :  o.getClass();	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o.getClass();    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
812	[BUG]  [BUGGY]  Object  stack  =(o  ==  JsonNull.createJsonNull())?  JsonNull.createJsonNull()  :  o.getClass();  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  JsonNull.createJsonNull())?  JsonNull.createJsonNull()  :  o.getClass();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  JsonNull.createJsonNull())?  JsonNull.createJsonNull()  :  o.getClass();	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o.getClass();    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
813	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  object.getClass();  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  object.getClass();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  object.getClass();	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o.getClass();    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
814	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  &&  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonArray  &&  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonArray    ||    o    instanceof    Iterator    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	2	replace
815	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  &&  o  instanceof  Iterator  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  &&  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonArray  &&  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonArray    ||    o    instanceof    Iterator    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	2	replace
816	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>,  stack[stackSize  -  2])  {  [CE]  ')'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>,  stack[stackSize  -  2])  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>,  stack[stackSize  -  2])  {	  if(o    instanceof    JsonArray    ||    o    instanceof    Iterator    <?>)    {    	non-compiled	[CE]  ')'  expected	64	None	replace
817	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonArray    ||    o    instanceof    Iterator    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	2	replace
818	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonArray    ||    o    instanceof    Iterator    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	2	replace
819	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>,  stack[stackSize  -  2])  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>,  stack[stackSize  -  2])  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>,  stack[stackSize  -  2])  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator    <?>)    {    	non-compiled	[CE]  ')'  expected	79	None	replace
820	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  3]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack[stackSize  -  3]  instanceof  JsonPrimitive)  {	  if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	108	2	replace
821	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  3]  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  3]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  3]  instanceof  JsonPrimitive)  {	  if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	108	2	replace
822	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator    <?>)    {    Object  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  ';'  expected	78	None	add
823	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    If(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
824	[BUG]  [BUGGY]  if(o  instanceof  Iterator  <?>)  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  <?>)  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator  <?>)  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    If(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
825	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    If(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
826	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator))  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonObject    ||    o    instanceof    iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	2	replace
827	[BUG]  [BUGGY]  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator))  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonObject    ||    o    instanceof    iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	2	replace
828	[BUG]  [BUGGY]  if(o  ==  JsonPrimitive.NULL_OBJECT  ||  o  ==  JsonPrimitive.NULL_OBJECT)  {  [CE]  cannot  find  symbol  NULL_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonPrimitive.NULL_OBJECT  ||  o  ==  JsonPrimitive.NULL_OBJECT)  {  [BUGGY]    null)  {  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonPrimitive.NULL_OBJECT  ||  o  ==  JsonPrimitive.NULL_OBJECT)  {	  if(o!=    null)    {    if(o    	non-compiled	[CE]  cannot  find  symbol  NULL_OBJECT	117	None	replace
829	[BUG]  [BUGGY]  if(o  ==  JsonPrimitive.NULL_OBJECT  ||  o  ==  JsonPrimitive.NULL_VALUE)  {  [CE]  cannot  find  symbol  NULL_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonPrimitive.NULL_OBJECT  ||  o  ==  JsonPrimitive.NULL_VALUE)  {  [BUGGY]    null)  {  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonPrimitive.NULL_OBJECT  ||  o  ==  JsonPrimitive.NULL_VALUE)  {	  if(o!=    null)    {    if(o    	non-compiled	[CE]  cannot  find  symbol  NULL_OBJECT	117	None	replace
830	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	137	2	replace
831	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	137	2	replace
832	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!o.equals(UNREADABLE_READER))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||!o.equals(UNREADABLE_READER))  {	  if(o!=    null    ||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	2	replace
833	[BUG]  [BUGGY]  if(o  ==  null  ||!o.equals(UNREADABLE_READER))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!o.equals(UNREADABLE_READER))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||!o.equals(UNREADABLE_READER))  {	  if(o!=    null    ||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	2	replace
834	[BUG]  [BUGGY]  if(o  ==  null  ||!o.isObject())  {  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!o.isObject())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||!o.isObject())  {	  if(o!=    null    ||!(o    instanceof    JsonPrimitive))    {    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
835	[BUG]  [BUGGY]  if(o  ==  null  ||!o.hasChildren())  {  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!o.hasChildren())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||!o.hasChildren())  {	  if(o!=    null    ||!(o    instanceof    JsonPrimitive))    {    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
836	[BUG]  [BUGGY]  if(o  ==  null  ||!o.equals(JsonNull.createJsonNull()))  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!o.equals(JsonNull.createJsonNull()))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||!o.equals(JsonNull.createJsonNull()))  {	  if(o!=    null    ||!(o    instanceof    JsonPrimitive))    {    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
837	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonArray)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonArray)  {	  if(o    ==    null    ||    stack[stackSize    -    1]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	142	2	replace
838	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonArray)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonArray)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonArray)  {	  if(o    ==    null    ||    stack[stackSize    -    1]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	142	2	replace
839	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {	  if(o    instanceof    JsonObject    ||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	41	2	replace
840	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {	  if(o    instanceof    JsonObject    ||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	41	2	replace
841	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {	  if(o    instanceof    JsonObject    ||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	41	2	replace
842	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {	  if(o    instanceof    JsonObject    ||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	41	2	replace
843	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonSequence))  {  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonSequence))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  ||!(o  instanceof  JsonSequence))  {	  if(o    instanceof    JsonObject    ||!(o    instanceof    JsonPrimitive))    {    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
844	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonObject)    {    Object  o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  ';'  expected	76	None	add
845	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonObject)  <?>  stack[stackSize  -  1])  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonObject)  <?>  stack[stackSize  -  1])  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  if(o  instanceof  JsonObject)  <?>  stack[stackSize  -  1])  {  return  JsonToken.NAME;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.PREFIX;    }    	non-compiled	[CE]  illegal  start  of  type	202	None	replace
846	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(!(stack[stackSize  -  1]  instanceof  JsonPrimitive))  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(!(stack[stackSize  -  1]  instanceof  JsonPrimitive))  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(!(stack[stackSize  -  1]  instanceof  JsonPrimitive))  {  return  JsonToken.NAME;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.PREFIX;    }    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
847	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  1]!=  JsonPrimitive)  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  1]!=  JsonPrimitive)  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  1]!=  JsonPrimitive)  {  return  JsonToken.NAME;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.PREFIX;    }    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
848	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  2]!=  JsonPrimitive)  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  2]!=  JsonPrimitive)  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  2]!=  JsonPrimitive)  {  return  JsonToken.NAME;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.PREFIX;    }    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
849	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonNull)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonNull)  {	  if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	104	2	replace
850	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonNull)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonNull)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonNull)  {	  if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	104	2	replace
851	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  new  JsonPrimitive(o.getClass());  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  new  JsonPrimitive(o.getClass());  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  new  JsonPrimitive(o.getClass());	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o.getClass();    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
852	[BUG]  [BUGGY]  if(o  ==  null)  {  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator))  {  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator))  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    <    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
853	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator))  {  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject)  {  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject)  {  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator))  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    <    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
854	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    <    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
855	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  type)  {  [CE]  cannot  find  symbol  type  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  type)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  type)  {	  if(o    ==    null    ||    o.getClass()    instanceof    Iterator)    {    	non-compiled	[CE]  cannot  find  symbol  type	85	None	replace
856	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  Token.NAME)  {  [CE]  cannot  find  symbol  Token  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  Token.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  Token.NAME)  {	  if(o    ==    null    ||    o.getClass()    instanceof    Iterator)    {    	non-compiled	[CE]  cannot  find  symbol  Token	85	None	replace
857	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  o.getClass()!=  null)  {	  if(o    ==    null    ||    o.getClass()    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	85	2	replace
858	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  null)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  null)  {	  if(o    ==    null    ||    o.getClass()    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	85	2	replace
859	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonToken.STRING)  {  [CE]  incomparable  types:  Class<CAP#1>  and  JsonToken  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonToken.STRING)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  JsonToken.STRING)  {	  if(o    ==    null    ||    o.getClass()    instanceof    Iterator)    {    	non-compiled	[CE]  incomparable  types:  Class<CAP#1>  and  JsonToken	85	None	replace
860	[BUG]  [BUGGY]  if(o  ==  JsonPrimitive)  {  [CE]  cannot  find  symbol  JsonPrimitive  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonPrimitive)  {  [BUGGY]    null)  {  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonPrimitive)  {	  if(o    ==    null)    {    if(o    	non-compiled	[CE]  cannot  find  symbol  JsonPrimitive	11	None	replace
861	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.END_OBJECT  ||  o  ==  JsonToken.END_ARRAY)  {  [BUGGY]    null)  {  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  JsonToken.END_OBJECT  ||  o  ==  JsonToken.END_ARRAY)  {	  if(o    ==    null)    {    if(o    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	2	replace
862	[BUG]  [BUGGY]  if(o  ==  JsonToken.END_OBJECT  ||  o  ==  JsonToken.END_ARRAY)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.END_OBJECT  ||  o  ==  JsonToken.END_ARRAY)  {  [BUGGY]    null)  {  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.END_OBJECT  ||  o  ==  JsonToken.END_ARRAY)  {	  if(o    ==    null)    {    if(o    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	2	replace
863	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	2	replace
864	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	2	replace
865	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonArray)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonArray)  {	  if(o    instanceof    JsonArray    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	2	replace
866	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonArray)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonArray)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonArray)  {	  if(o    instanceof    JsonArray    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	2	replace
867	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonArray    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	2	replace
868	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonArray    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	2	replace
869	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
870	[BUG]  [BUGGY]  if(o!=  null)  {  if(!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  if(!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  if(!(o  instanceof  JsonPrimitive))  {	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
871	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
872	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.  [CE]  <identifier>  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o    ==    null)return    JsonToken.END_ARRAY;    if(o.getClass()!=    getClass())    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	176	None	replace
873	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(!(o  instanceof  JsonPrimitive))  {	  if(o    instanceof    JsonObject)    {    if(o    exampleof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	101	2	replace
874	[BUG]  [BUGGY]  if(!(o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(!(o  instanceof  JsonPrimitive))  {	  if(o    instanceof    JsonObject)    {    if(o    exampleof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	101	2	replace
875	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  for(Iterator  <?>  iterator  =  stack[stackSize  -  1];  [CE]  '.class'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject)  {  for(Iterator  <?>  iterator  =  stack[stackSize  -  1];  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject)  {  for(Iterator  <?>  iterator  =  stack[stackSize  -  1];	  if(o    instanceof    JsonPrimitive)    {    for(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  '.class'  expected	138	None	replace
876	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  for(Iterator  <?>  iterator  =  stack[stackSize  -  2];  [CE]  '.class'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject)  {  for(Iterator  <?>  iterator  =  stack[stackSize  -  2];  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject)  {  for(Iterator  <?>  iterator  =  stack[stackSize  -  2];	  if(o    instanceof    JsonPrimitive)    {    for(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  '.class'  expected	138	None	replace
877	[BUG]  [BUGGY]  if(o  ==  null)  {  for(int  i  =  0;  i  <  stackSize;  i++)  {  [CE]  'else'  without  'if'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  for(int  i  =  0;  i  <  stackSize;  i++)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  for(int  i  =  0;  i  <  stackSize;  i++)  {	  if(o    instanceof    JsonPrimitive)    {    for(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  'else'  without  'if'	138	None	replace
878	[BUG]  [BUGGY]  if(o!=  null)  {  for(int  i  =  0;  i  <  stackSize;  i++)  {  [CE]  'else'  without  'if'  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  for(int  i  =  0;  i  <  stackSize;  i++)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  for(int  i  =  0;  i  <  stackSize;  i++)  {	  if(o    instanceof    JsonPrimitive)    {    for(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  'else'  without  'if'	138	None	replace
879	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  for(JsonObject  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  ']'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject)  {  for(JsonObject  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject)  {  for(JsonObject  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    instanceof    JsonPrimitive)    {    for(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  ']'  expected	138	None	replace
880	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject)  {  if(o!=  null  ||  o  instanceof  JsonObject)  <  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject)  {  if(o!=  null  ||  o  instanceof  JsonObject)  <  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    JsonObject)    {    if(o!=  null  ||  o  instanceof  JsonObject)  <	  	non-compiled	[CE]  illegal  start  of  type	15	None	add
881	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  2]  instanceof  JsonObject;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  stack[stackSize  -  2]  instanceof  JsonObject;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  stack[stackSize  -  2]  instanceof  JsonObject;	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    Object    o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
882	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  2];  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  stack[stackSize  -  2];  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  stack[stackSize  -  2];	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    Object    o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
883	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonObject;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  stack[stackSize  -  1]  instanceof  JsonObject;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  stack[stackSize  -  1]  instanceof  JsonObject;	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    Object    o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
884	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  1];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  stack[stackSize  -  1];  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  stack[stackSize  -  1];	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    Object    o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
885	[BUG]  [BUGGY]  Object  o  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    Object    o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	140	None	replace
886	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.VALUE_NULL;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL;  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.VALUE_NULL;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.VALUE_NULL;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL;  }	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.VALUE_NULL;    }    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
887	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.VALUE_NULL;    }    	non-compiled	[CE]  ';'  expected	175	None	replace
888	[BUG]  [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.VALUE_NULL;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL;  }  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.VALUE_NULL;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.VALUE_NULL;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL;  }	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.VALUE_NULL;    }    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
889	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  0)  {  if(o  ==  null  ||  stack.length  >  0)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  0)  {  if(o  ==  null  ||  stack.length  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    <    0)    {    if(o  ==  null  ||  stack.length  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	168	None	add
890	[BUG]  [BUGGY]  if(o!=  JsonToken.NAME  ||  o  ==  JsonToken.START_OBJECT  ||  o  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  JsonToken.NAME  ||  o  ==  JsonToken.START_OBJECT  ||  o  ==  JsonToken.END_ARRAY)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  JsonToken.NAME  ||  o  ==  JsonToken.START_OBJECT  ||  o  ==  JsonToken.END_ARRAY)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	135	None	replace
891	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  JsonToken.END_OBJECT  ||  o  ==  JsonToken.END_ARRAY)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  JsonToken.END_OBJECT  ||  o  ==  JsonToken.END_ARRAY)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.END_ARRAY)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	135	2	replace
892	[BUG]  [BUGGY]  if(o!=  JsonToken.END_OBJECT  ||  o  ==  JsonToken.END_ARRAY)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  JsonToken.END_OBJECT  ||  o  ==  JsonToken.END_ARRAY)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  JsonToken.END_OBJECT  ||  o  ==  JsonToken.END_ARRAY)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.END_ARRAY)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	135	2	replace
893	[BUG]  [BUGGY]  if(o!=  JsonToken.STRING  ||  o  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  JsonToken.STRING  ||  o  ==  JsonToken.START_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  JsonToken.STRING  ||  o  ==  JsonToken.START_OBJECT)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	135	None	replace
894	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    IllegalArgument)    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
895	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    IllegalArgument)    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
896	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  object  instanceof  IllegalArgument)  {  [CE]  cannot  find  symbol  object  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  object  instanceof  IllegalArgument)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  object  instanceof  IllegalArgument)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    IllegalArgument)    {    	non-compiled	[CE]  cannot  find  symbol  object	84	None	replace
897	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o!=  null  ||  o.getClass()!=  getClass())  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o!=  null  ||  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o!=  null  ||  o.getClass()!=  getClass())  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o    >>    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
898	[BUG]  [BUGGY]  if(o  ==  null)  {  if(isObject  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(isObject  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(isObject  ||  o  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o    >>    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
899	[BUG]  [BUGGY]  if(o  ==  JsonToken.STRING  ||  o  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.STRING  ||  o  ==  JsonToken.START_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.STRING  ||  o  ==  JsonToken.START_OBJECT)  {	  if(o    ==    JsonToken.START_OBJECT    ||    o    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	134	None	replace
900	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o    ==    null    ||    o    instanceof    iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
901	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  ==  null  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  ==  null  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o  ==  null  ||  o  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o    ==    null    ||    o    instanceof    iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
902	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	31	2	replace
903	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	31	2	replace
904	[BUG]  [BUGGY]  if(o  ==  null)  {  If(o!=  null  ||  o.getClass()!=  getClass())  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  If(o!=  null  ||  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  If(o!=  null  ||  o.getClass()!=  getClass())  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    If(o!=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
905	[BUG]  [BUGGY]  if(o  ==  null)  {  If(o!=  null  ||  o.isPrimitive())  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  If(o!=  null  ||  o.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  If(o!=  null  ||  o.isPrimitive())  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    If(o!=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
906	[BUG]  [BUGGY]  if(o!=  null)  {  If(o!=  null  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  If(o!=  null  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  If(o!=  null  ||  o  instanceof  Iterator)  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    If(o!=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
907	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  If(o!=  null  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  If(o!=  null  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  Iterator)  {  If(o!=  null  ||  o  instanceof  Iterator)  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    If(o!=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
908	[BUG]  [BUGGY]  if(o!=  null)  {  If(o  ==  null  ||  o.getClass()!=  getClass())  {  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  If(o  ==  null  ||  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  If(o  ==  null  ||  o.getClass()!=  getClass())  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    If(o!=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
909	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  Object  o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  Object  o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    Object  o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ';'  expected	136	None	add
910	[BUG]  [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	69	None	replace
911	[BUG]  [BUGGY]  if(o  ==  null)  {  return  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  return  JsonToken.END_OBJECT;  }	  if(o    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
912	[BUG]  [BUGGY]  if(o  ==  null)  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  return  JsonToken.NAME;  }	  if(o    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
913	[BUG]  [BUGGY]  if(o!=  null)  {  return  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  return  JsonToken.END_OBJECT;  }	  if(o    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
914	[BUG]  [BUGGY]  if(o  ==  null)  {  return  JsonToken.END_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  return  JsonToken.END_ARRAY;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  return  JsonToken.END_ARRAY;  }	  if(o    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
915	[BUG]  [BUGGY]  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    Object    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
916	[BUG]  [BUGGY]  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    Object    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
917	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonNull)  {  [CE]  cannot  find  symbol  JsonNull  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonNull)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonNull)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonNull)    {    	non-compiled	[CE]  cannot  find  symbol  JsonNull	144	None	replace
918	[BUG]  [BUGGY]  Object  o!=  null  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o!=  null  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o!=  null  ||  o  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    Object    o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	130	None	replace
919	[BUG]  [BUGGY]  Object  o  ==  null  ||  o.getClass()!=  getClass())  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  ==  null  ||  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  ==  null  ||  o.getClass()!=  getClass())  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    Object    o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	130	None	replace
920	[BUG]  [BUGGY]  Object  o  {  null  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  {  null  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  {  null  ||  o  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    Object    o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	130	None	replace
921	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject)  {  Object  o  ==  null  ||  o  instanceof  JsonObject)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject)  {  Object  o  ==  null  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonObject)    {    Object  o  ==  null  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
922	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  ';'  expected	172	None	replace
923	[BUG]  [BUGGY]  if(o  ==  UNREADABLE_READER)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  UNREADABLE_READER)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  UNREADABLE_READER)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_OBJECT;  }	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	172	None	replace
924	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  else  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  else  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  else  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_OBJECT;  }	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	172	None	replace
925	[BUG]  [BUGGY]  if(o  ==  null  ||!o.isArray())  {  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!o.isArray())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||!o.isArray())  {	  if(o    ==    null    ||!(o    instanceof    JsonPrimitive))    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
926	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  Object  o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  Object  o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||    o    instanceof    Iterator    <?>)    {    Object  o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  ';'  expected	59	None	add
927	[BUG]  [BUGGY]  int  stackSize  =  stack.length  -  3;  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack.length  -  3;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack.length  -  3;	  int    stackSize    =    stack.length;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
928	[BUG]  [BUGGY]  if(o  ==  JsonPrimitive.None.class)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonPrimitive.None.class)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonPrimitive.None.class)  {	  if(o!=    null)    {    if(o    >>    null)    {    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
929	[BUG]  [BUGGY]  if(o!=  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  JsonToken.START_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  JsonToken.START_OBJECT)  {	  if(o!=    null)    {    if(o    >>    null)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	115	None	replace
930	[BUG]  [BUGGY]  if(o  ==  JsonPrimitive.NULL)  {  [CE]  cannot  find  symbol  NULL  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonPrimitive.NULL)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonPrimitive.NULL)  {	  if(o!=    null)    {    if(o    >>    null)    {    	non-compiled	[CE]  cannot  find  symbol  NULL	115	None	replace
931	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  Object  o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  Object  o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonArray    ||    o    instanceof    Iterator    <?>)    {    Object  o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  ';'  expected	63	None	add
932	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  if(O  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  if(O  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonArray    ||    o    instanceof    Iterator    <?>)    {    if(O  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
933	[BUG]  [BUGGY]  int  stackSize  =  this.stack.size();  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  this.stack.size();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  this.stack.size();	  int    stackSize    =    stack.size();    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
934	[BUG]  [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  &  0xff;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  &  0xff;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack[stackSize  -  1]  &  0xff;	  int    stackSize    =    stack[stackSize    -    1];    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
935	[BUG]  [BUGGY]  int  stackSize  =  stack[size  -  1];  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack[size  -  1];  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack[size  -  1];	  int    stackSize    =    stack[stackSize    -    1];    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
936	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  Object  o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  Object  o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||!(o    instanceof    JsonPrimitive))    {    Object  o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  ';'  expected	40	None	add
937	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  if(o  instanceof  JsonObject  ||! "(o  instanceof  JsonPrimitive))  {  [CE]  unclosed  string  literal  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  if(o  instanceof  JsonObject  ||! "(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||!(o    instanceof    JsonPrimitive))    {    if(o  instanceof  JsonObject  ||! "(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  unclosed  string  literal	40	None	add
938	[BUG]  [BUGGY]  if(o!=  null  ||  o.isPrimitive())  {  if(o!=  null  ||  o.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o.isPrimitive())  {  if(o!=  null  ||  o.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o.isPrimitive())  {  if(o!=  null  ||  o.isPrimitive())  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    if(o!=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
939	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  if(o  ==  null  ||  o  instanceof  Ilerator  <?>)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  if(o  ==  null  ||  o  instanceof  Ilerator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    Iterator    <?>)    {    if(o  ==  null  ||  o  instanceof  Ilerator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
940	[BUG]  [BUGGY]  if(o  ==  JsonPrimitive.None.class)  {  If(o!=  null)  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonPrimitive.None.class)  {  If(o!=  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonPrimitive.None.class)  {  If(o!=  null)  {	  if(o!=    null)    {    If(o!=    null)    {    	non-compiled	[CE]  ';'  expected	116	None	replace
941	[BUG]  [BUGGY]  if(o  ==  JsonPrimitive.UNREADABLE_READER)  {  If(o!=  null)  {  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonPrimitive.UNREADABLE_READER)  {  If(o!=  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonPrimitive.UNREADABLE_READER)  {  If(o!=  null)  {	  if(o!=    null)    {    If(o!=    null)    {    	non-compiled	[CE]  ';'  expected	116	None	replace
942	[BUG]  [BUGGY]  if(o  ==  JsonPrimitive)  {  If(o!=  null)  {  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonPrimitive)  {  If(o!=  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonPrimitive)  {  If(o!=  null)  {	  if(o!=    null)    {    If(o!=    null)    {    	non-compiled	[CE]  ';'  expected	116	None	replace
943	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  ==  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack[stackSize  -  2]  ==  JsonToken.NAME)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	106	2	replace
944	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  ==  JsonToken.NAME)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  ==  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  2]  ==  JsonToken.NAME)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	106	2	replace
945	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  3]!=  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack[stackSize  -  3]!=  JsonToken.NAME)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	106	2	replace
946	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  3]!=  JsonToken.NAME)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  3]!=  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  3]!=  JsonToken.NAME)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	106	2	replace
947	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    if(o    instancesof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
948	[BUG]  [BUGGY]  if(o!=  null  &&  stack.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  stack.isPrimitive())  {	  if(o!=    null    &&    o.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
949	[BUG]  [BUGGY]  if(o!=  null  &&!o.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&!o.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&!o.isPrimitive())  {	  if(o!=    null    &&    o.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
950	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  JsonToken.END_OBJECT)return  JsonToken.END_ARRAY;  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  JsonToken.END_OBJECT)return  JsonToken.END_ARRAY;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  JsonToken.END_OBJECT)return  JsonToken.END_ARRAY;	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	174	None	replace
951	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  JsonToken.END_OBJECT)return  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  JsonToken.END_OBJECT)return  JsonToken.END_OBJECT;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  JsonToken.END_OBJECT)return  JsonToken.END_OBJECT;	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	174	None	replace
952	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  <  0)  {  if(o  ==  null  ||  stackSize  >  0)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  <  0)  {  if(o  ==  null  ||  stackSize  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stackSize    <    0)    {    if(o  ==  null  ||  stackSize  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	166	None	add
953	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  0  ||  o.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  0  ||  o.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  <  0  ||  o.isPrimitive())  {	  if(o    ==    null    ||    o.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
954	[BUG]  [BUGGY]  if(o  ==  null  ||  object.isPrimitive())  {  [CE]  cannot  find  symbol  object  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  object.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  object.isPrimitive())  {	  if(o    ==    null    ||    o.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  object	21	None	replace
955	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {	  if(o    instanceof    JsonPrimitive)    {    if(o    exampleof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	127	2	replace
956	[BUG]  [BUGGY]  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {	  if(o    instanceof    JsonPrimitive)    {    if(o    exampleof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	127	2	replace
957	[BUG]  [BUGGY]  Object[]  stack  =(o  ==  null)?  JsonNull.NULL_VALUE  :  o.toString();  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object[]  stack  =(o  ==  null)?  JsonNull.NULL_VALUE  :  o.toString();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object[]  stack  =(o  ==  null)?  JsonNull.NULL_VALUE  :  o.toString();	  Object[]    stack    =(o    ==    null)?    null    :    o.toString();    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
958	[BUG]  [BUGGY]  Object[]  stack  =(o  ==  null)?  null  :  o.toArray();  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object[]  stack  =(o  ==  null)?  null  :  o.toArray();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object[]  stack  =(o  ==  null)?  null  :  o.toArray();	  Object[]    stack    =(o    ==    null)?    null    :    o.toString();    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
959	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.END_OBJECT  ||  o  ==  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  JsonToken.END_OBJECT  ||  o  ==  JsonToken.END_OBJECT)  {	  if(o    ==    null)    {    if(o    >=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	replace
960	[BUG]  [BUGGY]  if(o  ==  JsonToken.END_OBJECT  ||  o  ==  JsonToken.END_OBJECT)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.END_OBJECT  ||  o  ==  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.END_OBJECT  ||  o  ==  JsonToken.END_OBJECT)  {	  if(o    ==    null)    {    if(o    >=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	replace
961	[BUG]  [BUGGY]  if(o!=  JsonToken.START_OBJECT  ||  o  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  JsonToken.START_OBJECT  ||  o  ==  JsonToken.START_ARRAY)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  JsonToken.START_OBJECT  ||  o  ==  JsonToken.START_ARRAY)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	133	None	replace
962	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  JsonToken.END_OBJECT  ||  o  ==  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  JsonToken.END_OBJECT  ||  o  ==  JsonToken.END_OBJECT)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	133	2	replace
963	[BUG]  [BUGGY]  if(o!=  JsonToken.END_OBJECT  ||  o  ==  JsonToken.END_OBJECT)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  JsonToken.END_OBJECT  ||  o  ==  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  JsonToken.END_OBJECT  ||  o  ==  JsonToken.END_OBJECT)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	133	2	replace
964	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    <    2)    {    if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	90	None	add
965	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    <    2)    {    if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	90	None	add
966	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonArray)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonArray)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    <    2)    {    if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonArray)  {	  	non-compiled	[CE]  illegal  start  of  expression	90	None	add
967	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  Object  o  ==  null  ||  o  instanceof  JsonPrimitive)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  Object  o  ==  null  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonPrimitive)    {    Object  o  ==  null  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  ';'  expected	36	None	add
968	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  ==  null  ||  o.getClass()!=  getClass())  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  if(o  ==  null  ||  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  if(o  ==  null  ||  o.getClass()!=  getClass())  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    if(o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
969	[BUG]  [BUGGY]  if(o!=  null  ||  o.getClass()!=  getClass())  {  if(o  ==  null  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o.getClass()!=  getClass())  {  if(o  ==  null  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o.getClass()!=  getClass())  {  if(o  ==  null  ||  o  instanceof  Iterator)  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    if(o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
970	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack.length  >=  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  stack.length  >=  0)  {	  if(o!=    null    ||    stack.length    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	89	2	replace
971	[BUG]  [BUGGY]  if(o!=  null  ||  stack.length  >=  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack.length  >=  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  stack.length  >=  0)  {	  if(o!=    null    ||    stack.length    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	89	2	replace
972	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonObject  &&  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	2	replace
973	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  &&  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	2	replace
974	[BUG]  [BUGGY]  int  stackSize  =  stack[size  -  2];  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack[size  -  2];  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack[size  -  2];	  int    stackSize    =    stack[stackSize    -    2];    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
975	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length!=  2)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack.length!=  2)  {	  if(o    ==    null    ||    stack.length    <    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
976	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length!=  2)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length!=  2)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length!=  2)  {	  if(o    ==    null    ||    stack.length    <    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
977	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  >=  2)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack.length  >=  2)  {	  if(o    ==    null    ||    stack.length    <    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
978	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  >=  2)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  >=  2)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  >=  2)  {	  if(o    ==    null    ||    stack.length    <    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
979	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  2  ||  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2  ||  isObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  <  2  ||  isObject)  {	  if(o    ==    null    ||    stack.length    <    2)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	91	None	replace
980	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  2  ||!isPrimitive(o))  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2  ||!isPrimitive(o))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  <  2  ||!isPrimitive(o))  {	  if(o    ==    null    ||    stack.length    <    2)    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
981	[BUG]  [BUGGY]  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  if(o!=  null  ||?!(o  instanceof  Iterator  <?>))  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  if(o!=  null  ||?!(o  instanceof  Iterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||!(o    instanceof    Iterator    <?>))    {    if(o!=  null  ||?!(o  instanceof  Iterator  <?>))  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
982	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(o  ==  null  ||  stack[stackSize  +  2]  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(o  ==  null  ||  stack[stackSize  +  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(o  ==  null  ||  stack[stackSize  +  2]  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
983	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  if(stack!=  null  ||  stack.length  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  if(stack!=  null  ||  stack.length  <  =  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  Iterator)  {  if(stack!=  null  ||  stack.length  <  =  0)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o    >=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
984	[BUG]  [BUGGY]  if(o  instanceof  Iterator  <?>)  {  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator))  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  <?>)  {  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator  <?>)  {  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator))  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator?)    {    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
985	[BUG]  [BUGGY]  if(o  instanceof  Iterator)  {  if(!(o  instanceof  JsonObject  ||  o  instanceof  Iterator))  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator)  {  if(!(o  instanceof  JsonObject  ||  o  instanceof  Iterator))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator)  {  if(!(o  instanceof  JsonObject  ||  o  instanceof  Iterator))  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator?)    {    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
986	[BUG]  [BUGGY]  if(o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator?)    {    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
987	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonArray    ||    o    instanceof    Iterator    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	2	replace
988	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonArray    ||    o    instanceof    Iterator    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	2	replace
989	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  if(o  ==  null  ||!(o  instanceof  iterator  <?>))  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  if(o  ==  null  ||!(o  instanceof  iterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||!(o    instanceof    Iterator    <?>))    {    if(o  ==  null  ||!(o  instanceof  iterator  <?>))  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
990	[BUG]  [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o!=  null  &&  stack[stackSize  -  1]  instancesof  JsonObject)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o!=  null  &&  stack[stackSize  -  1]  instancesof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stack[stackSize    -    1]    instanceof    JsonObject)    {    if(o!=  null  &&  stack[stackSize  -  1]  instancesof  JsonObject)  {	  	non-compiled	[CE]  ')'  expected	186	None	add
991	[BUG]  [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o!=  null  &&  stack[stackSize  +  1]  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o!=  null  &&  stack[stackSize  +  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    &&    stack[stackSize    -    1]    instanceof    JsonObject)    {    if(o!=  null  &&  stack[stackSize  +  1]  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	186	None	add
992	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  1]!=  JsonPrimitive)  {  return  JsonPrimitive.NULL;  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  1]!=  JsonPrimitive)  {  return  JsonPrimitive.NULL;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  1]!=  JsonPrimitive)  {  return  JsonPrimitive.NULL;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
993	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  &&  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  Iterator  &&  o  instanceof  JsonObject)  {	  if(o    instanceof    Iterator    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	2	replace
994	[BUG]  [BUGGY]  if(o  instanceof  Iterator  &&  o  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  &&  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator  &&  o  instanceof  JsonObject)  {	  if(o    instanceof    Iterator    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	2	replace
995	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o  ==  null  ||  stack[stackSize  +  2]  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o  ==  null  ||  stack[stackSize  +  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonObject)    {    if(o  ==  null  ||  stack[stackSize  +  2]  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
996	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o.getClass()!=  getClass())  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o.getClass()!=  getClass())  {	  if(o    instanceof    JsonPrimitive)    {    if(o    instanceof    JsonPrimitive)    <    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
997	[BUG]  [BUGGY]  if(o  ==  null)  {  if(!(o  instanceof  JsonObject))  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(!(o  instanceof  JsonObject))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(!(o  instanceof  JsonObject))  {	  if(o    instanceof    JsonPrimitive)    {    if(o    instanceof    JsonPrimitive)    <    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
998	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.START_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.START_OBJECT)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	111	None	replace
999	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  ==  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack[stackSize  -  2]  ==  JsonToken.END_OBJECT)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.END_OBJECT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	111	2	replace
1000	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  ==  JsonToken.END_OBJECT)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  ==  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  2]  ==  JsonToken.END_OBJECT)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.END_OBJECT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	111	2	replace
1001	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.FIELD_NAME)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.FIELD_NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.FIELD_NAME)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	111	None	replace
1002	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject)  {  If(o  ==  null  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject)  {  If(o  ==  null  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonObject)  {  If(o  ==  null  ||  o  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    If(o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
1003	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  if(!(o  instanceof  JsonPrimitive))  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    if(O    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1004	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  &&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  &&  o  instanceof  Iterator)  {	  if(o!=    null    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	2	replace
1005	[BUG]  [BUGGY]  if(o  ==  null  &&  o  instanceof  Iterator)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  &&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  &&  o  instanceof  Iterator)  {	  if(o!=    null    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	2	replace
1006	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator  <?>,  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator  <?>,  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  Iterator  <?>,  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    instanceof    Iterator    <?>,    stack[stackSize    -    2]    instanceof    JsonObject)    {    	non-compiled	[CE]  ')'  expected	122	None	replace
1007	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  <?>,  stack[stackSize  -  2]  instanceof  Iterator  <?>)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  <?>,  stack[stackSize  -  2]  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  <?>,  stack[stackSize  -  2]  instanceof  Iterator  <?>)  {	  if(o    instanceof    Iterator    <?>,    stack[stackSize    -    2]    instanceof    JsonObject)    {    	non-compiled	[CE]  ')'  expected	122	None	replace
1008	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  Object  o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  Object  o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    Object  o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
1009	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    &&    o    instanceof    Iterator)    {    if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
1010	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Ilerator)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Ilerator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    &&    o    instanceof    Iterator)    {    if(o  instanceof  JsonPrimitive  &&  o  instanceof  Ilerator)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
1011	[BUG]  [BUGGY]  if(o!=  null  ||  stack.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  stack.isPrimitive())  {	  if(o!=    null    ||    o.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
1012	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  if(O  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  if(O  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    &&    o    instanceof    Iterator)    {    if(O  instanceof  JsonObject  &&  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	158	None	add
1013	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    &&    o    instanceof    Iterator)    {    if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	158	None	add
1014	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(isObject)  {  return  JsonToken.NAME;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.UNREADABLE_READER;    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
1015	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(!(stack[stackSize  -  1]  instanceof  JsonPrimitive))  {  return  JsonToken.UNREADABLE_READER;  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(!(stack[stackSize  -  1]  instanceof  JsonPrimitive))  {  return  JsonToken.UNREADABLE_READER;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(!(stack[stackSize  -  1]  instanceof  JsonPrimitive))  {  return  JsonToken.UNREADABLE_READER;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.UNREADABLE_READER;    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
1016	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonPrimitive.NULL)  {  [CE]  cannot  find  symbol  NULL  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonPrimitive.NULL)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonPrimitive.NULL)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonPrimitive.NULL)    {    	non-compiled	[CE]  cannot  find  symbol  NULL	143	None	replace
1017	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.NUMBER_OBJECT)  {  [CE]  cannot  find  symbol  NUMBER_OBJECT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.NUMBER_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.NUMBER_OBJECT)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonPrimitive.NULL)    {    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OBJECT	143	None	replace
1018	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  if(o!=  null  ||  o  instanceof  iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  if(o!=  null  ||  o  instanceof  iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    Iterator    <?>)    {    if(o!=  null  ||  o  instanceof  iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
1019	[BUG]  [BUGGY]  if(o!=  null  ||  o.getClass()!=  JsonPrimitive)  {  [CE]  cannot  find  symbol  JsonPrimitive  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o.getClass()!=  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o.getClass()!=  JsonPrimitive)  {	  if(o!=    null    ||    o.getClass()    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol  JsonPrimitive	18	None	replace
1020	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o.getClass()  ==  JsonPrimitive.class)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  o.getClass()  ==  JsonPrimitive.class)  {	  if(o!=    null    ||    o.getClass()    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	2	replace
1021	[BUG]  [BUGGY]  if(o!=  null  ||  o.getClass()  ==  JsonPrimitive.class)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o.getClass()  ==  JsonPrimitive.class)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o.getClass()  ==  JsonPrimitive.class)  {	  if(o!=    null    ||    o.getClass()    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	2	replace
1022	[BUG]  [BUGGY]  if(o!=  null  ||  o.getClass()  ==  JsonPrimitive)  {  [CE]  cannot  find  symbol  JsonPrimitive  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o.getClass()  ==  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o.getClass()  ==  JsonPrimitive)  {	  if(o!=    null    ||    o.getClass()    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol  JsonPrimitive	18	None	replace
1023	[BUG]  [BUGGY]  if(o!=  null  &&  o.getClass()  instanceof  JsonPrimitive)  {  [CE]  inconvertible  types  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o.getClass()  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  o.getClass()  instanceof  JsonPrimitive)  {	  if(o!=    null    ||    o.getClass()    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  inconvertible  types	18	None	replace
1024	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonNull)  {  Object  o  ==  null  ||  o  instanceof  JsonNull)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonNull)  {  Object  o  ==  null  ||  o  instanceof  JsonNull)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonNull)    {    Object  o  ==  null  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  ';'  expected	193	None	add
1025	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonNull)  {  [CE]  cannot  find  symbol  JsonNull  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonNull)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  JsonNull)  {	  if(o    ==    null    ||    o.getClass()    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol  JsonNull	17	None	replace
1026	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  1]!=  JsonPrimitive)  {  return  JsonPrimitive.NULL_OBJECT;  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  1]!=  JsonPrimitive)  {  return  JsonPrimitive.NULL_OBJECT;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  if(stack[stackSize  -  1]!=  JsonPrimitive)  {  return  JsonPrimitive.NULL_OBJECT;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.START_OBJECT;    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
1027	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_ARRAY  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_ARRAY  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_ARRAY	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.END_ARRAY;    }    	non-compiled	[CE]  ';'  expected	173	None	replace
1028	[BUG]  [BUGGY]  if(o  ==  UNREADABLE_READER)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_ARRA  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  UNREADABLE_READER)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_ARRA  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  UNREADABLE_READER)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_ARRA	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.END_ARRAY;    }    	non-compiled	[CE]  ';'  expected	173	None	replace
1029	[BUG]  [BUGGY]  if(o  ==  null)  {  for(int  i  =  0;  i  <  stack.length;  ++i)  {  [CE]  'else'  without  'if'  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  for(int  i  =  0;  i  <  stack.length;  ++i)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  for(int  i  =  0;  i  <  stack.length;  ++i)  {	  if(o    instanceof    JsonObject)    {    for(o    instanceof    JsonObject)    {    	non-compiled	[CE]  'else'  without  'if'	157	None	replace
1030	[BUG]  [BUGGY]  if(o!=  null)  {  for(int  i  =  0;  i  <  stack.length;  ++i)  {  [CE]  'else'  without  'if'  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  for(int  i  =  0;  i  <  stack.length;  ++i)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  for(int  i  =  0;  i  <  stack.length;  ++i)  {	  if(o    instanceof    JsonObject)    {    for(o    instanceof    JsonObject)    {    	non-compiled	[CE]  'else'  without  'if'	157	None	replace
1031	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(JsonPrimitive  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [CE]  ']'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(JsonPrimitive  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  for(JsonPrimitive  stack[stackSize  -  1]  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonObject)    {    for(o    instanceof    JsonObject)    {    	non-compiled	[CE]  ']'  expected	157	None	replace
1032	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  Object  o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  Object  o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonArray    ||    o    instanceof    Iterator)    {    Object  o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ';'  expected	65	None	add
1033	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o  ==  null  ||  stack[stackSize  +  1]  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  if(o  ==  null  ||  stack[stackSize  +  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    1]    instanceof    JsonObject)    {    if(o  ==  null  ||  stack[stackSize  +  1]  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
1034	[BUG]  [BUGGY]  if(o  ==  null)  {  Object  o  =  peekStack();  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  Object  o  =  peekStack();  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  Object  o  =  peekStack();  }	  if(o    ==    null)    {    Object    o    =    peekStack();    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
1035	[BUG]  [BUGGY]  if(o  ==  null)  {  Object  o  =  peekStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  Object  o  =  peekStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  Object  o  =  peekStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(o    ==    null)    {    Object    o    =    peekStack();    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
1036	[BUG]  [BUGGY]  if(o  ==  null)  {  Object  o  =  peekStack();  }  else  {  return  JsonToken.END_OBJECT;  [CE]  'else'  without  'if'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  Object  o  =  peekStack();  }  else  {  return  JsonToken.END_OBJECT;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  Object  o  =  peekStack();  }  else  {  return  JsonToken.END_OBJECT;	  if(o    ==    null)    {    Object    o    =    peekStack();    	non-compiled	[CE]  'else'  without  'if'	156	None	replace
1037	[BUG]  [BUGGY]  if(o  ==  null)  {  Object  o  =  peekStack();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  Object  o  =  peekStack();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  Object  o  =  peekStack();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(o    ==    null)    {    Object    o    =    peekStack();    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
1038	[BUG]  [BUGGY]  if(o  ==  null)  {  Object  o  =  peekStack();  }  else  {  return  JsonToken.START_OBJECT;  [CE]  'else'  without  'if'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  Object  o  =  peekStack();  }  else  {  return  JsonToken.START_OBJECT;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  Object  o  =  peekStack();  }  else  {  return  JsonToken.START_OBJECT;	  if(o    ==    null)    {    Object    o    =    peekStack();    	non-compiled	[CE]  'else'  without  'if'	156	None	replace
1039	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  o.toArray();  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  o.toArray();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  o.toArray();	  Object    stack    =(o    ==    null)?    JsonNull.UNREADABLE_READER    :    o.getClass();    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
1040	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  o.cloneTree();  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  o.cloneTree();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  o.cloneTree();	  Object    stack    =(o    ==    null)?    JsonNull.UNREADABLE_READER    :    o.getClass();    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
1041	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  o.clone();  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  o.clone();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  o.clone();	  Object    stack    =(o    ==    null)?    JsonNull.UNREADABLE_READER    :    o.getClass();    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
1042	[BUG]  [BUGGY]  if(o  instanceof  IllegalIterator  <?>  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalIterator  <?>  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalIterator  <?>  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {	  if(o    instanceof    IllegalIterator    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	191	None	replace
1043	[BUG]  [BUGGY]  if(o  instanceof  IllegalIterator  <?>  ||  o  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalIterator  <?>  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalIterator  <?>  ||  o  instanceof  JsonObject)  {	  if(o    instanceof    IllegalIterator    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	191	None	replace
1044	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  >  0)  {  if(o  {  null  ||  stackSize  >  0)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  >  0)  {  if(o  {  null  ||  stackSize  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stackSize    >    0)    {    if(o  {  null  ||  stackSize  >  0)  {	  	non-compiled	[CE]  ')'  expected	163	None	add
1045	[BUG]  [BUGGY]  if(o  ==  JsonToken.VALUE_NUMBER_INT  ||  o  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.VALUE_NUMBER_INT  ||  o  ==  JsonToken.END_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.VALUE_NUMBER_INT  ||  o  ==  JsonToken.END_OBJECT)  {	  if(o!=    null)    {    if(o    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	113	None	replace
1046	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <  Object>)  {  [CE]  illegal  generic  type  for  instanceof  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <  Object>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <  Object>)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator    <    Object>)    {    	non-compiled	[CE]  illegal  generic  type  for  instanceof	82	None	replace
1047	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator  <  Object>)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator  <  Object>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator  <  Object>)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator    <    Object>)    {    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
1048	[BUG]  [BUGGY]  if(o  ==  JsonPrimitive  ||  o.getClass()!=  getClass())  {  [CE]  cannot  find  symbol  JsonPrimitive  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonPrimitive  ||  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonPrimitive  ||  o.getClass()!=  getClass())  {	  if(o    ==    null    ||    o.getClass()!=    getClass())    {    	non-compiled	[CE]  cannot  find  symbol  JsonPrimitive	87	None	replace
1049	[BUG]  [BUGGY]  parent  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  parent  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	parent  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	68	None	replace
1050	[BUG]  [BUGGY]  while(o!=  null)  {  stack[stackSize  -  1]  =  JsonPrimitive.createJsonPrimitive(o);  [CE]  'else'  without  'if'  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  while(o!=  null)  {  stack[stackSize  -  1]  =  JsonPrimitive.createJsonPrimitive(o);  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	while(o!=  null)  {  stack[stackSize  -  1]  =  JsonPrimitive.createJsonPrimitive(o);	  if(o    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	68	None	replace
1051	[BUG]  [BUGGY]  while(o!=  null)  {  stack[stackSize  -  2]  =  JsonPrimitive.createJsonPrimitive(o);  [CE]  'else'  without  'if'  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  while(o!=  null)  {  stack[stackSize  -  2]  =  JsonPrimitive.createJsonPrimitive(o);  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	while(o!=  null)  {  stack[stackSize  -  2]  =  JsonPrimitive.createJsonPrimitive(o);	  if(o    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	68	None	replace
1052	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonPrimitive)    {    Object  o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  ';'  expected	74	None	add
1053	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalIterator  <?>)  {  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalIterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalIterator  <?>)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
1054	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  if(o  ==  null  ||  stack[stackSize  -  3]!=  JsonToken.NAME)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  if(o  ==  null  ||  stack[stackSize  -  3]!=  JsonToken.NAME)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    if(o  ==  null  ||  stack[stackSize  -  3]!=  JsonToken.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
1055	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  <?>  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  <?>  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  <?>  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    instanceof    JsonObject    <?>    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	161	None	replace
1056	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    IllegalArgumentIterator)    {    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
1057	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    IllegalArgumentIterator)    {    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
1058	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  object  instanceof  IllegalArgumentIterator)  {  [CE]  cannot  find  symbol  object  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  object  instanceof  IllegalArgumentIterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  object  instanceof  IllegalArgumentIterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    IllegalArgumentIterator)    {    	non-compiled	[CE]  cannot  find  symbol  object	83	None	replace
1059	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  ==  null  ||  o.getClass()!=  getClass())  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  ==  null  ||  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  ==  null  ||  o.getClass()!=  getClass())  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o    {    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1060	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    If(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
1061	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  getClass())  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    If(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
1062	[BUG]  [BUGGY]  if(o  instanceof  String)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  String)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  String)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    If(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
1063	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  Iterator)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    If(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
1064	[BUG]  [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalArgumentIterator  <?>  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {	  if(o    instanceof    IllegalArgumentIterator    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	190	None	replace
1065	[BUG]  [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalArgumentIterator  <?>  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o    instanceof    IllegalArgumentIterator    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	190	None	replace
1066	[BUG]  [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>  >  stack[stackSize  -  2])  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>  >  stack[stackSize  -  2])  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalArgumentIterator  <?>  >  stack[stackSize  -  2])  {	  if(o    instanceof    IllegalArgumentIterator    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	190	None	replace
1067	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.STRING  ||  o!=  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  JsonToken.STRING  ||  o!=  null)  {	  if(o    ==    JsonToken.START_OBJECT    ||    o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	131	2	replace
1068	[BUG]  [BUGGY]  if(o  ==  JsonToken.STRING  ||  o!=  null)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.STRING  ||  o!=  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.STRING  ||  o!=  null)  {	  if(o    ==    JsonToken.START_OBJECT    ||    o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	131	2	replace
1069	[BUG]  [BUGGY]  if(o  ==  JsonToken.NOT_OBJECT  ||  o!=  null)  {  [CE]  cannot  find  symbol  NOT_OBJECT  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.NOT_OBJECT  ||  o!=  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.NOT_OBJECT  ||  o!=  null)  {	  if(o    ==    JsonToken.START_OBJECT    ||    o!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  NOT_OBJECT	131	None	replace
1070	[BUG]  [BUGGY]  if(o  ==  JsonToken.FIELD_NAME  ||  o!=  null)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.FIELD_NAME  ||  o!=  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.FIELD_NAME  ||  o!=  null)  {	  if(o    ==    JsonToken.START_OBJECT    ||    o!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	131	None	replace
1071	[BUG]  [BUGGY]  if(o  ==  JsonPrimitive)  {  If(o  ==  null)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonPrimitive)  {  If(o  ==  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonPrimitive)  {  If(o  ==  null)  {	  if(o    ==    null)    {    If(o    ==    null)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
1072	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  if(o  ==  null  ||! "(o  instanceof  JsonPrimitive))  {  [CE]  unclosed  string  literal  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  if(o  ==  null  ||! "(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||!(o    instanceof    JsonPrimitive))    {    if(o  ==  null  ||! "(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  unclosed  string  literal	32	None	add
1073	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_ARRAY)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_ARRAY)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonNull)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	144	2	replace
1074	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_ARRAY)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_ARRAY)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_ARRAY)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonNull)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	144	2	replace
1075	[BUG]  [BUGGY]  int  stackSize  =  stack[offsetSize  -  2];  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack[offsetSize  -  2];  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack[offsetSize  -  2];	  int    stackSize    =    stack[stackSize    -    2];    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
1076	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  <  Object>)  {  [CE]  type  JsonArray  does  not  take  parameters  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  <  Object>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonArray  <  Object>)  {	  if(o    instanceof    JsonArray    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  type  JsonArray  does  not  take  parameters	66	None	replace
1077	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack.length  <  2)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  stack.length  <  2)  {	  if(o!=    null)    {    if(o    >=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	114	2	replace
1078	[BUG]  [BUGGY]  if(o!=  null  ||  stack.length  <  2)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack.length  <  2)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  stack.length  <  2)  {	  if(o!=    null)    {    if(o    >=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	114	2	replace
1079	[BUG]  [BUGGY]  if(o  ==  JsonToken.VALUE_NULL  ||  o  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.VALUE_NULL  ||  o  ==  JsonToken.START_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.VALUE_NULL  ||  o  ==  JsonToken.START_OBJECT)  {	  if(o    ==    JsonToken.START_OBJECT    ||    o    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	134	None	replace
1080	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  new  JsonToken(o.toString());  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  new  JsonToken(o.toString());  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  new  JsonToken(o.toString());	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o.toString();    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
1081	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  [CE]  'else'  without  'if'  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {	  if(o    instanceof    JsonObject)    {    for(o    instanceof    JsonObject)    {    	non-compiled	[CE]  'else'  without  'if'	157	None	replace
1082	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(int  i  =  0,  len  =  stack.length;  i  <  len;  ++i)  {  [CE]  'else'  without  'if'  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(int  i  =  0,  len  =  stack.length;  i  <  len;  ++i)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  for(int  i  =  0,  len  =  stack.length;  i  <  len;  ++i)  {	  if(o    instanceof    JsonObject)    {    for(o    instanceof    JsonObject)    {    	non-compiled	[CE]  'else'  without  'if'	157	None	replace
1083	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(int  i  =  1;  i  <  stackSize;  i++)  {  [CE]  'else'  without  'if'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(int  i  =  1;  i  <  stackSize;  i++)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  for(int  i  =  1;  i  <  stackSize;  i++)  {	  if(o    instanceof    JsonObject)    {    for(o    instanceof    JsonObject)    {    	non-compiled	[CE]  'else'  without  'if'	157	None	replace
1084	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  <?>)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  [CE]  'else'  without  'if'  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  <?>)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  <?>)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {	  if(o    instanceof    JsonObject)    {    for(o    instanceof    JsonObject)    {    	non-compiled	[CE]  'else'  without  'if'	157	None	replace
1085	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(int  i  =  1;  i  <  stackSize;  ++i)  {  [CE]  'else'  without  'if'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(int  i  =  1;  i  <  stackSize;  ++i)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {  for(int  i  =  1;  i  <  stackSize;  ++i)  {	  if(o    instanceof    JsonObject)    {    for(o    instanceof    JsonObject)    {    	non-compiled	[CE]  'else'  without  'if'	157	None	replace
1086	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  getClass())  {  throw  new  IllegalStateException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
1087	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  >  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  >  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stackSize  >  0)  {  throw  new  IllegalStateException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
1088	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoClassCastException  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  try  {  [Delete]  catch(NoClassCastException  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	try  {  [Delete]  catch(NoClassCastException  e)  {  throw  new  IllegalStateException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
1089	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  <  2)  {  throw  new  IllegalStateException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
1090	[BUG]  [BUGGY]  try  {  [Delete]  catch(IOException  io)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  try  {  [Delete]  catch(IOException  io)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	try  {  [Delete]  catch(IOException  io)  {  throw  new  IllegalStateException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
1091	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2  ||  stackSize  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack.length  <  2  ||  stackSize  >  0)  {	  if(o    ==    null    ||    stack.length    <    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
1092	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  2  ||  stackSize  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2  ||  stackSize  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  <  2  ||  stackSize  >  0)  {	  if(o    ==    null    ||    stack.length    <    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
1093	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  2  ||  o!=  JsonNull.createJsonNull())  {  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2  ||  o!=  JsonNull.createJsonNull())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  <  2  ||  o!=  JsonNull.createJsonNull())  {	  if(o    ==    null    ||    stack.length    <    2)    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
1094	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  1  ||  stack.length  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack.length  <  1  ||  stack.length  >  0)  {	  if(o    ==    null    ||    stack.length    <    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
1095	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  1  ||  stack.length  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  1  ||  stack.length  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  <  1  ||  stack.length  >  0)  {	  if(o    ==    null    ||    stack.length    <    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
1096	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  =  2)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  =  2)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  <  =  2)  {	  if(o    ==    null    ||    stack.length    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1097	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  if(o  instanceof  JsonArray  ||  o  instanceof  Ilerator)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  if(o  instanceof  JsonArray  ||  o  instanceof  Ilerator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonArray    ||    o    instanceof    Iterator)    {    if(o  instanceof  JsonArray  ||  o  instanceof  Ilerator)  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
1098	[BUG]  [BUGGY]  Object  o  =  peekStack(stackSize);  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  peekStack(stackSize);  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  peekStack(stackSize);	  if(o    ==    null)    {    Object    o    =    peekStack();    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
1099	[BUG]  [BUGGY]  Object  o  =  peekStackToken();  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  peekStackToken();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  peekStackToken();	  if(o    ==    null)    {    Object    o    =    peekStack();    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
1100	[BUG]  [BUGGY]  Object  o  =  peekStackEmpty();  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  peekStackEmpty();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  peekStackEmpty();	  if(o    ==    null)    {    Object    o    =    peekStack();    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
1101	[BUG]  [BUGGY]  Object  o  =  peekStackTrace();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  peekStackTrace();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  peekStackTrace();	  if(o    ==    null)    {    Object    o    =    peekStack();    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
1102	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  <?>,  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  <?>,  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  <?>,  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    instanceof    JsonObject    <?>    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ')'  expected	161	None	replace
1103	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  <?>  orig()  ||  o  instanceof  Iterator)  {  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  <?>  orig()  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  <?>  orig()  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    <?>    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ')'  expected	161	None	replace
1104	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Unknown)  {  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Unknown)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  ||  o  instanceof  Unknown)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
1105	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	31	2	replace
1106	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	31	2	replace
1107	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  ==  0)  {  if(o  {  null  ||  stack.length  ==  0)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  ==  0)  {  if(o  {  null  ||  stack.length  ==  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    ==    0)    {    if(o  {  null  ||  stack.length  ==  0)  {	  	non-compiled	[CE]  ')'  expected	92	None	add
1108	[BUG]  [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.START_OBJECT  ||  o  ==  JsonToken.VALUE_NULL)  {	  if(o    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	94	None	replace
1109	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.getClass()  instanceof  JsonPrimitive)  {  [CE]  inconvertible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.getClass()  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.getClass()  instanceof  JsonPrimitive)  {	  if(o!=    null    ||    o.getClass()    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  inconvertible  types	18	None	replace
1110	[BUG]  [BUGGY]  if(o!=  null  ||  o.getClass()!=  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o.getClass()!=  JsonToken.VALUE_NULL)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o.getClass()!=  JsonToken.VALUE_NULL)  {	  if(o!=    null    ||    o.getClass()    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	18	None	replace
1111	[BUG]  [BUGGY]  if(o!=  JsonToken.NAME  ||  o  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  START_ARRAY  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  JsonToken.NAME  ||  o  ==  JsonToken.START_ARRAY)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  JsonToken.NAME  ||  o  ==  JsonToken.START_ARRAY)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	135	None	replace
1112	[BUG]  [BUGGY]  if(o!=  JsonToken.VALUE_NULL  ||  o  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  JsonToken.VALUE_NULL  ||  o  ==  JsonToken.START_ARRAY)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  JsonToken.VALUE_NULL  ||  o  ==  JsonToken.START_ARRAY)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	135	None	replace
1113	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  JsonToken.STRING  ||  o  ==  JsonToken.END_ARRAY)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  JsonToken.STRING  ||  o  ==  JsonToken.END_ARRAY)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.END_ARRAY)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	135	2	replace
1114	[BUG]  [BUGGY]  if(o!=  JsonToken.STRING  ||  o  ==  JsonToken.END_ARRAY)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  JsonToken.STRING  ||  o  ==  JsonToken.END_ARRAY)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  JsonToken.STRING  ||  o  ==  JsonToken.END_ARRAY)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.END_ARRAY)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	135	2	replace
1115	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  JsonToken.NAME  ||  o  ==  JsonToken.END_ARRAY)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  JsonToken.NAME  ||  o  ==  JsonToken.END_ARRAY)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.END_ARRAY)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	135	2	replace
1116	[BUG]  [BUGGY]  if(o!=  JsonToken.NAME  ||  o  ==  JsonToken.END_ARRAY)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  JsonToken.NAME  ||  o  ==  JsonToken.END_ARRAY)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  JsonToken.NAME  ||  o  ==  JsonToken.END_ARRAY)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.END_ARRAY)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	135	2	replace
1117	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  getClass())  {  throw  new  IllegalArgumentException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
1118	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
1119	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoClassCastException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  try  {  [Delete]  catch(NoClassCastException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	try  {  [Delete]  catch(NoClassCastException  e)  {  throw  new  IllegalArgumentException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
1120	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  <  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
1121	[BUG]  [BUGGY]  try  {  [Delete]  catch(IOException  io)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  try  {  [Delete]  catch(IOException  io)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	try  {  [Delete]  catch(IOException  io)  {  throw  new  IllegalArgumentException( " ");  }	  if(o    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
1122	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o.equals(UNREADABLE_READER))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  &&  o.equals(UNREADABLE_READER))  {	  if(o!=    null    &&    o.isPrimitive())    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	185	2	replace
1123	[BUG]  [BUGGY]  if(o!=  null  &&  o.equals(UNREADABLE_READER))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o.equals(UNREADABLE_READER))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  o.equals(UNREADABLE_READER))  {	  if(o!=    null    &&    o.isPrimitive())    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	185	2	replace
1124	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  {  return  JsonToken.NAME;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  illegal  start  of  type	199	None	replace
1125	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  1])  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  1])  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  1])  {  return  JsonToken.NAME;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  illegal  start  of  type	199	None	replace
1126	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  return  JsonToken.NAME;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.NAME;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	199	2	replace
1127	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  return  JsonToken.NAME;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonObject)  {  return  JsonToken.NAME;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.NAME;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	199	2	replace
1128	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  return  JsonPrimitive.UNREADABLE_READER;  }  [CE]  cannot  find  symbol  UNREADABLE_READER  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  return  JsonPrimitive.UNREADABLE_READER;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  return  JsonPrimitive.UNREADABLE_READER;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol  UNREADABLE_READER	199	None	replace
1129	[BUG]  [BUGGY]  if(o  instanceof  IllegalIterator  <?>  ||  o  instanceof  UnknownIterator  <?>)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalIterator  <?>  ||  o  instanceof  UnknownIterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalIterator  <?>  ||  o  instanceof  UnknownIterator  <?>)  {	  if(o    instanceof    IllegalIterator    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	191	None	replace
1130	[BUG]  [BUGGY]  if(o  instanceof  IllegalIterator  <?>,Object>)  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalIterator  <?>,Object>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalIterator  <?>,Object>)  {	  if(o    instanceof    IllegalIterator    <?>)    {    	non-compiled	[CE]  ')'  expected	191	None	replace
1131	[BUG]  [BUGGY]  if(o  instanceof  IllegalIterator  <?>  ||!(o  instanceof  JsonObject))  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalIterator  <?>  ||!(o  instanceof  JsonObject))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalIterator  <?>  ||!(o  instanceof  JsonObject))  {	  if(o    instanceof    IllegalIterator    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	191	None	replace
1132	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  if(o  {  null  ||  o  instanceof  Iterator  <?>)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  if(o  {  null  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    Iterator    <?>)    {    if(o  {  null  ||  o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  ')'  expected	147	None	add
1133	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ==  false)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonObject  ==  false)  {	  if(o    instanceof    JsonObject    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	159	2	replace
1134	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ==  false)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ==  false)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  ==  false)  {	  if(o    instanceof    JsonObject    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	159	2	replace
1135	[BUG]  [BUGGY]  Object[]  stack  =(o  ==  null)?  null  :  o.toStringArray();  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object[]  stack  =(o  ==  null)?  null  :  o.toStringArray();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object[]  stack  =(o  ==  null)?  null  :  o.toStringArray();	  Object[]    stack    =(o    ==    null)?    null    :    o.toString();    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
1136	[BUG]  [BUGGY]  if(o  ==  null  ||  o.hasChildren())  {  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.hasChildren())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.hasChildren())  {	  if(o    ==    null    ||    o.getClass()!=    getClass())    {    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
1137	[BUG]  [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o  ==  JsonToken.START_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o  ==  JsonToken.START_ARRAY)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.START_OBJECT  ||  o  ==  JsonToken.START_ARRAY)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	133	None	replace
1138	[BUG]  [BUGGY]  if(o!=  JsonToken.VALUE_NULL  ||  o  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  JsonToken.VALUE_NULL  ||  o  ==  JsonToken.START_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  JsonToken.VALUE_NULL  ||  o  ==  JsonToken.START_OBJECT)  {	  if(o!=    JsonToken.START_OBJECT    ||    o    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	133	None	replace
1139	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.VALUE_NULL)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.VALUE_NULL)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	106	None	replace
1140	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.STRING)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.STRING)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	106	2	replace
1141	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.STRING)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.STRING)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  1]!=  JsonToken.STRING)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonToken.NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	106	2	replace
1142	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator  <?>)&&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||!(o  instanceof  Iterator  <?>)&&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    ==    null    ||!(o    instanceof    Iterator    <?>))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	119	2	replace
1143	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator  <?>)&&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator  <?>)&&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||!(o  instanceof  Iterator  <?>)&&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    ==    null    ||!(o    instanceof    Iterator    <?>))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	119	2	replace
1144	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  IllegalArgumentIterator  <?>))  {  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  IllegalArgumentIterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||!(o  instanceof  IllegalArgumentIterator  <?>))  {	  if(o    ==    null    ||!(o    instanceof    Iterator    <?>))    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
1145	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  IllegalIterator  <?>))  {  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  IllegalIterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||!(o  instanceof  IllegalIterator  <?>))  {	  if(o    ==    null    ||!(o    instanceof    Iterator    <?>))    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
1146	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  if(O  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  if(O  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    &&    o    instanceof    Iterator)    {    if(O  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
1147	[BUG]  [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  -  1;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  -  1;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack[stackSize  -  1]  -  1;	  int    stackSize    =    stack[stackSize    -    1];    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
1148	[BUG]  [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  &  0xFF;  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  =  stack[stackSize  -  1]  &  0xFF;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack[stackSize  -  1]  &  0xFF;	  int    stackSize    =    stack[stackSize    -    1];    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
1149	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.  [CE]  <identifier>  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o    ==    null)return    JsonToken.END_ARRAY;    if(o.getClass()!=    getClass())    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  <identifier>  expected	176	None	replace
1150	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  if(!(o  instanceof  Iterator))  {  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject)  {  if(!(o  instanceof  Iterator))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject)  {  if(!(o  instanceof  Iterator))  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    <    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1151	[BUG]  [BUGGY]  if(o  ==  null)  {  if(!(o  instanceof  JsonNull))  {  return  JsonNull.createJsonNull();  }  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(!(o  instanceof  JsonNull))  {  return  JsonNull.createJsonNull();  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(!(o  instanceof  JsonNull))  {  return  JsonNull.createJsonNull();  }	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    <    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
1152	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonPrimitive  ||!(o  instanceof  Iterator))  {  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  if(o  instanceof  JsonPrimitive  ||!(o  instanceof  Iterator))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  if(o  instanceof  JsonPrimitive  ||!(o  instanceof  Iterator))  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    <    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1153	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Ilerator  <?>)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Ilerator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||    o    instanceof    Iterator    <?>)    {    if(o  instanceof  JsonObject  ||  o  instanceof  Ilerator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
1154	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  >  getStackSize())  {  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  >  getStackSize())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stackSize  >  getStackSize())  {	  if(o!=    null    ||    o.getClass()!=    getClass())    {    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
1155	[BUG]  [BUGGY]  Object  o  =  null  ||  o.getClass()!=  getClass())  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  null  ||  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  null  ||  o.getClass()!=  getClass())  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    Object    o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	130	None	replace
1156	[BUG]  [BUGGY]  Object  o  =  null  ||  stackSize  >  0)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  =  null  ||  stackSize  >  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  =  null  ||  stackSize  >  0)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    Object    o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	130	None	replace
1157	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize.isPrimitive())  {  [CE]  int  cannot  be  dereferenced  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stackSize.isPrimitive())  {	  if(o    ==    null    ||    o.isPrimitive())    {    	non-compiled	[CE]  int  cannot  be  dereferenced	21	None	replace
1158	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	2	replace
1159	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	2	replace
1160	[BUG]  [BUGGY]  if(o  ==  null)  {  if(!(o  instanceof  JsonNull))  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(!(o  instanceof  JsonNull))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(!(o  instanceof  JsonNull))  {	  if(o    instanceof    JsonPrimitive)    {    if(o    instanceof    JsonPrimitive)    <    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1161	[BUG]  [BUGGY]  if(o!=  null)  {  if(o.getClass()!=  getClass())  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null)  {  if(o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {  if(o.getClass()!=  getClass())  {	  if(o    instanceof    JsonPrimitive)    {    if(o    instanceof    JsonPrimitive)    <    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1162	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonNull)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonNull)  {	  if(o!=    null    &&    stack[stackSize    -    1]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	187	2	replace
1163	[BUG]  [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonNull)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonNull)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonNull)  {	  if(o!=    null    &&    stack[stackSize    -    1]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	187	2	replace
1164	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stackSize  <  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  stackSize  <  0)  {	  if(o    ==    null    ||    stackSize    <    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	167	2	replace
1165	[BUG]  [BUGGY]  if(o!=  null  ||  stackSize  <  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stackSize  <  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  stackSize  <  0)  {	  if(o    ==    null    ||    stackSize    <    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	167	2	replace
1166	[BUG]  [BUGGY]  if(o  ==  null  ||!o.equals(JsonToken.VALUE_NULL))  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!o.equals(JsonToken.VALUE_NULL))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||!o.equals(JsonToken.VALUE_NULL))  {	  if(o!=    null    ||!(o    instanceof    JsonPrimitive))    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	35	None	replace
1167	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  getClass())return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.END_ARRAY;    }    	non-compiled	[CE]  ';'  expected	173	None	replace
1168	[BUG]  [BUGGY]  if(o  ==  null  ||  o.isPrimitive())return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_AR  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.isPrimitive())return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_AR  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.isPrimitive())return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_AR	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.END_ARRAY;    }    	non-compiled	[CE]  ';'  expected	173	None	replace
1169	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_AR  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_AR  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  getClass())return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_AR	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.END_ARRAY;    }    	non-compiled	[CE]  ';'  expected	173	None	replace
1170	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator?)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator?)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    &&    o    instanceof    Iterator)    {    if(o  instanceof  JsonObject  &&  o  instanceof  Iterator?)  {	  	non-compiled	[CE]  illegal  start  of  expression	158	None	add
1171	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  o.cloneTree();  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  o.cloneTree();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  o.cloneTree();	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o.getClass();    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
1172	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  o.type;  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  o.type;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  o.type;	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o.getClass();    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
1173	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  o.toArray();  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  o.toArray();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  o.toArray();	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o.getClass();    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
1174	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o  ==  null  ||  stack[stackSize  -  2)]  instanceof  JsonObject)  {  [CE]  ']'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  if(o  ==  null  ||  stack[stackSize  -  2)]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonObject)    {    if(o  ==  null  ||  stack[stackSize  -  2)]  instanceof  JsonObject)  {	  	non-compiled	[CE]  ']'  expected	103	None	add
1175	[BUG]  [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  if(o  ==  null  ||  o.getClass()!=  getClass())  {  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  if(o  ==  null  ||  o.getClass()!=  getClass())  {  [BUGGY]    null  ||  o  instanceof  Iterator)  {  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.isPrimitive())  {  if(o  ==  null  ||  o.getClass()!=  getClass())  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1176	[BUG]  [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  if(o  ==  null  ||  o.isArray())  {  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  if(o  ==  null  ||  o.isArray())  {  [BUGGY]    null  ||  o  instanceof  Iterator)  {  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.isPrimitive())  {  if(o  ==  null  ||  o.isArray())  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1177	[BUG]  [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  if(o  ==  null  ||  o.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  if(o  ==  null  ||  o.isEmpty())  {  [BUGGY]    null  ||  o  instanceof  Iterator)  {  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.isPrimitive())  {  if(o  ==  null  ||  o.isEmpty())  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1178	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  <?>  ||  o  instanceof  Iterator  <?>)  {  [CE]  type  JsonArray  does  not  take  parameters  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  <?>  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonArray  <?>  ||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonArray    ||    o    instanceof    Iterator    <?>)    {    	non-compiled	[CE]  type  JsonArray  does  not  take  parameters	64	None	replace
1179	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  <  Object>||  o  instanceof  Iterator  <?>)  {  [CE]  type  JsonArray  does  not  take  parameters  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  <  Object>||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonArray  <  Object>||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonArray    ||    o    instanceof    Iterator    <?>)    {    	non-compiled	[CE]  type  JsonArray  does  not  take  parameters	64	None	replace
1180	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  IllegalArgumentIterator  <?>)  {  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  IllegalArgumentIterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonArray  ||  o  instanceof  IllegalArgumentIterator  <?>)  {	  if(o    instanceof    JsonArray    ||    o    instanceof    Iterator    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
1181	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  <?>)  {  [CE]  type  JsonArray  does  not  take  parameters  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonArray  <?>)  {	  if(o    instanceof    JsonArray    ||    o    instanceof    Iterator    <?>)    {    	non-compiled	[CE]  type  JsonArray  does  not  take  parameters	64	None	replace
1182	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.NAME;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.UNREADABLE_READER;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	200	2	replace
1183	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.NAME;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.NAME;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <?>    (stack[stackSize    -    2])    ==    return    JsonToken.NAME;    }    else    {    push(iterator.next());    return    JsonToken.UNREADABLE_READER;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	200	2	replace
1184	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.NAME  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  JsonToken.NAME  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	108	2	replace
1185	[BUG]  [BUGGY]  if(o  ==  JsonToken.NAME  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.NAME  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.NAME  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	108	2	replace
1186	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  If(!(o  instanceof  Iterator  <?>))  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject)  {  If(!(o  instanceof  Iterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject)  {  If(!(o  instanceof  Iterator  <?>))  {	  if(o    instanceof    Iterator    <?>)    {    If(o    instanceof    Iterator    <?>)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
1187	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  <?>)  {  If(!(o  instanceof  Iterator  <?>))  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  <?>)  {  If(!(o  instanceof  Iterator  <?>))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  <?>)  {  If(!(o  instanceof  Iterator  <?>))  {	  if(o    instanceof    Iterator    <?>)    {    If(o    instanceof    Iterator    <?>)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
1188	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o.isIterator())  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o.isIterator())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o.isIterator())  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    IllegalArgumentIterator)    {    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
1189	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonArray  ||  o  instanceof  Ilerator  <?>)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonArray  ||  o  instanceof  Ilerator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonArray    ||    o    instanceof    Iterator    <?>)    {    if(o  instanceof  JsonArray  ||  o  instanceof  Ilerator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
1190	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonToken.START_OBJECT)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  JsonToken.START_OBJECT)  {	  if(o    ==    null    ||    o.getClass()    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	17	None	replace
1191	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonToken.END_ARRAY)  {  [CE]  incomparable  types:  Class<CAP#1>  and  JsonToken  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonToken.END_ARRAY)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  JsonToken.END_ARRAY)  {	  if(o    ==    null    ||    o.getClass()    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  incomparable  types:  Class<CAP#1>  and  JsonToken	17	None	replace
1192	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(!(o  instanceof  JsonObject  ||  o  instanceof  Iterator))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(!(o  instanceof  JsonObject  ||  o  instanceof  Iterator))  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator?)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	189	2	replace
1193	[BUG]  [BUGGY]  if(!(o  instanceof  JsonObject  ||  o  instanceof  Iterator))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(!(o  instanceof  JsonObject  ||  o  instanceof  Iterator))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(!(o  instanceof  JsonObject  ||  o  instanceof  Iterator))  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator?)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	189	2	replace
1194	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument  ||  o  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument  ||  o  instanceof  JsonObject)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    IllegalArgument)    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
1195	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||!(o  instanceof  IllegalArgument))  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||!(o  instanceof  IllegalArgument))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||!(o  instanceof  IllegalArgument))  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    IllegalArgument)    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
1196	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  if(a  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  if(a  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonPrimitive)    {    if(a  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
1197	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  IllegalArgumentIterator  <?>)  {  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  IllegalArgumentIterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  ||  o  instanceof  IllegalArgumentIterator  <?>)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
1198	[BUG]  [BUGGY]  if(o  instanceof  Iterator  <?>)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  Iterator  <?>)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator  <?>)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    If(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
1199	[BUG]  [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.isPrimitive())  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    If(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
1200	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack[stackSize  -  1]!=  null)  {	  if(o    ==    null)    {    if(o    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	2	replace
1201	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  null)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]!=  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  1]!=  null)  {	  if(o    ==    null)    {    if(o    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	2	replace
1202	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  if(a  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  if(a  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    JsonObject)    {    if(a  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
1203	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonNull)  {  if(o  {  null  ||  o  instanceof  JsonNull)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonNull)  {  if(o  {  null  ||  o  instanceof  JsonNull)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonNull)    {    if(o  {  null  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  ')'  expected	193	None	add
1204	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.VALUE_NULL;  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.VALUE_NULL;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.VALUE_NULL;  }	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.VALUE_NULL;    }    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
1205	[BUG]  [BUGGY]  if(o  ==  null  ||  o.isPrimitive())return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.isPrimitive())return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.isPrimitive())return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.VALUE_NULL;    }    	non-compiled	[CE]  ';'  expected	175	None	replace
1206	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  getClass())return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.VALUE_NULL;    }    	non-compiled	[CE]  ';'  expected	175	None	replace
1207	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o  instanceof  JsonNull)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  &&  o  instanceof  JsonNull)  {	  if(o!=    null    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	2	replace
1208	[BUG]  [BUGGY]  if(o!=  null  &&  o  instanceof  JsonNull)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  o  instanceof  JsonNull)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  o  instanceof  JsonNull)  {	  if(o!=    null    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	2	replace
1209	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  [CE]  'else'  without  'if'  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {	  if(o    instanceof    JsonPrimitive)    {    for(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  'else'  without  'if'	138	None	replace
1210	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  for(Iterator  <?>  iterator  =  stack.iterator();  iterator.hasNext();)  {  [CE]  'else'  without  'if'  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject)  {  for(Iterator  <?>  iterator  =  stack.iterator();  iterator.hasNext();)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject)  {  for(Iterator  <?>  iterator  =  stack.iterator();  iterator.hasNext();)  {	  if(o    instanceof    JsonPrimitive)    {    for(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  'else'  without  'if'	138	None	replace
1211	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  for(int  i  =  0;  i  <  stackSize;  i++)  {  [CE]  'else'  without  'if'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject)  {  for(int  i  =  0;  i  <  stackSize;  i++)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject)  {  for(int  i  =  0;  i  <  stackSize;  i++)  {	  if(o    instanceof    JsonPrimitive)    {    for(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  'else'  without  'if'	138	None	replace
1212	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  for(int  i  =  0,  len  =  stackSize;  i  <  len;  ++i)  {  [CE]  'else'  without  'if'  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject)  {  for(int  i  =  0,  len  =  stackSize;  i  <  len;  ++i)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject)  {  for(int  i  =  0,  len  =  stackSize;  i  <  len;  ++i)  {	  if(o    instanceof    JsonPrimitive)    {    for(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  'else'  without  'if'	138	None	replace
1213	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  for(int  i  =  0,  len  =  stack.length;  i  <  len;  ++i)  {  [CE]  'else'  without  'if'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject)  {  for(int  i  =  0,  len  =  stack.length;  i  <  len;  ++i)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject)  {  for(int  i  =  0,  len  =  stack.length;  i  <  len;  ++i)  {	  if(o    instanceof    JsonPrimitive)    {    for(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  'else'  without  'if'	138	None	replace
1214	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  for(int  i  =  0,  count  =  stackSize;  i  <  count;  ++i)  {  [CE]  'else'  without  'if'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject)  {  for(int  i  =  0,  count  =  stackSize;  i  <  count;  ++i)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject)  {  for(int  i  =  0,  count  =  stackSize;  i  <  count;  ++i)  {	  if(o    instanceof    JsonPrimitive)    {    for(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  'else'  without  'if'	138	None	replace
1215	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  for(Iterator  <?>  iterator  =  stack[stackSize  -  2];  iterator.hasNext();)  {  [CE]  'else'  without  'if'  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject)  {  for(Iterator  <?>  iterator  =  stack[stackSize  -  2];  iterator.hasNext();)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject)  {  for(Iterator  <?>  iterator  =  stack[stackSize  -  2];  iterator.hasNext();)  {	  if(o    instanceof    JsonPrimitive)    {    for(o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  'else'  without  'if'	138	None	replace
1216	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o  {  null  ||  o  instanceof  JsonPrimitive)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  if(o  {  null  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonPrimitive)    {    if(o  {  null  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  ')'  expected	36	None	add
1217	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.UNRESOLVED)  {  [CE]  cannot  find  symbol  UNRESOLVED  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.UNRESOLVED)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.UNRESOLVED)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonPrimitive.NULL)    {    	non-compiled	[CE]  cannot  find  symbol  UNRESOLVED	143	None	replace
1218	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.UNKNOWN)  {  [CE]  cannot  find  symbol  UNKNOWN  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.UNKNOWN)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.UNKNOWN)  {	  if(o    ==    null    ||    stack[stackSize    -    2]!=    JsonPrimitive.NULL)    {    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	143	None	replace
1219	[BUG]  [BUGGY]  if(o  ==  null)  {  If(o!=  null)  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  If(o!=  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  If(o!=  null)  {	  if(o!=    null)    {    If(o!=    null)    {    	non-compiled	[CE]  ';'  expected	116	None	replace
1220	[BUG]  [BUGGY]  if(o!=  null  ||  stack.length  <  0  ||  o.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack.length  <  0  ||  o.isPrimitive())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  stack.length  <  0  ||  o.isPrimitive())  {	  if(o!=    null    ||    o.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
1221	[BUG]  [BUGGY]  if(o!=  null  ||  o.isPrimitive())  {  if(o  ==  null  ||  o.isIterator())  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  o.isPrimitive())  {  if(o  ==  null  ||  o.isIterator())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o.isPrimitive())  {  if(o  ==  null  ||  o.isIterator())  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    if(o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
1222	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o!=  null  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o!=  null  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  getClass())  {  if(o!=  null  ||  o  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o!=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1223	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Ilerator  <?>)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Ilerator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator    <?>)    {    if(o  instanceof  JsonPrimitive  ||  o  instanceof  Ilerator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
1224	[BUG]  [BUGGY]  int  stackSize  -  stack.length;  [CE]  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  int  stackSize  -  stack.length;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  -  stack.length;	  int    stackSize    =    stack.length;    	non-compiled	[CE]  	72	None	replace
1225	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  if(o  {  null  ||  stack.length  <  2)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  if(o  {  null  ||  stack.length  <  2)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    <    2)    {    if(o  {  null  ||  stack.length  <  2)  {	  	non-compiled	[CE]  ')'  expected	90	None	add
1226	[BUG]  [BUGGY]  if(o  ==  null  ||  o.isPrimitive())return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.isPrimitive())return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.isPrimitive())return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.NAME;    if(o.getClass()!=    getClass())    {    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  ';'  expected	172	None	replace
1227	[BUG]  [BUGGY]  if(o  ==  JsonToken.VALUE_NULL  ||  o!=  null)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.VALUE_NULL  ||  o!=  null)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.VALUE_NULL  ||  o!=  null)  {	  if(o    ==    JsonToken.START_OBJECT    ||    o!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	131	None	replace
1228	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o  {  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o  {  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o  {  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ')'  expected	136	None	add
1229	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  <  0)  {  if(o  {  null  ||  stackSize  <  0)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  <  0)  {  if(o  {  null  ||  stackSize  <  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stackSize    <    0)    {    if(o  {  null  ||  stackSize  <  0)  {	  	non-compiled	[CE]  ')'  expected	166	None	add
1230	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  if(O  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  if(O  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||!(o    instanceof    JsonPrimitive))    {    if(O  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
1231	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  if(o  instanceof  JsonObject  ||!!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  if(o  instanceof  JsonObject  ||!!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||!(o    instanceof    JsonPrimitive))    {    if(o  instanceof  JsonObject  ||!!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
1232	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(o  ==  null  ||  stack[stackSsize  -  2]  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  if(o  ==  null  ||  stack[stackSsize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack[stackSize    -    2]    instanceof    JsonPrimitive)    {    if(o  ==  null  ||  stack[stackSsize  -  2]  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
1233	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject)  {  if(o  {  null  ||  o  instanceof  JsonObject)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject)  {  if(o  {  null  ||  o  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    JsonObject)    {    if(o  {  null  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  ')'  expected	13	None	add
1234	[BUG]  [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>,Object>)  {  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>,Object>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalArgumentIterator  <?>,Object>)  {	  if(o    instanceof    IllegalArgumentIterator    <?>)    {    	non-compiled	[CE]  ')'  expected	190	None	replace
1235	[BUG]  [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>  ||!(o  instanceof  JsonObject))  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>  ||!(o  instanceof  JsonObject))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalArgumentIterator  <?>  ||!(o  instanceof  JsonObject))  {	  if(o    instanceof    IllegalArgumentIterator    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	190	None	replace
1236	[BUG]  [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>  ||  o  instanceof  UnknownIterator  <?>)  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>  ||  o  instanceof  UnknownIterator  <?>)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalArgumentIterator  <?>  ||  o  instanceof  UnknownIterator  <?>)  {	  if(o    instanceof    IllegalArgumentIterator    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	190	None	replace
1237	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalStateException  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  IllegalStateException  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    instanceof    Iterator    <?>,    stack[stackSize    -    2]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	122	2	replace
1238	[BUG]  [BUGGY]  if(o  instanceof  IllegalStateException  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  IllegalStateException  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalStateException  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    instanceof    Iterator    <?>,    stack[stackSize    -    2]    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	122	2	replace
1239	[BUG]  [BUGGY]  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  if(o!=  null  ||?!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  if(o!=  null  ||?!(o  instanceof  JsonPrimitive))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||!(o    instanceof    JsonPrimitive))    {    if(o!=  null  ||?!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
1240	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.equals( "null "))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  o.equals( "null "))  {	  if(o    instanceof    JsonPrimitive)    {    if(o    exampleof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	127	2	replace
1241	[BUG]  [BUGGY]  if(o  ==  null  ||  o.equals( "null "))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.equals( "null "))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.equals( "null "))  {	  if(o    instanceof    JsonPrimitive)    {    if(o    exampleof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	127	2	replace
1242	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonToken.START_OBJECT)return  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  JsonToken.START_OBJECT)return  JsonToken.END_OBJECT;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  JsonToken.START_OBJECT)return  JsonToken.END_OBJECT;	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	174	None	replace
1243	[BUG]  [BUGGY]  if(o  ==  JsonToken.START_OBJECT)return  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  JsonToken.START_OBJECT)return  JsonToken.END_OBJECT;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.START_OBJECT)return  JsonToken.END_OBJECT;	  if(o    ==    null)return    JsonToken.START_OBJECT;    if(o!=    null)return    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	174	None	replace
1244	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  0)  {  if(o  {  null  ||  stack.length  <  0)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length  <  0)  {  if(o  {  null  ||  stack.length  <  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length    <    0)    {    if(o  {  null  ||  stack.length  <  0)  {	  	non-compiled	[CE]  ')'  expected	168	None	add
1245	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  Html.Iterator.class)  {  [CE]  package  Html  does  not  exist  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  Html.Iterator.class)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  Html.Iterator.class)  {	  if(o    ==    null    ||    o.getClass()    instanceof    Iterator)    {    	non-compiled	[CE]  package  Html  does  not  exist	85	None	replace
1246	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  UNREADABLE_READER)  {  [CE]  incomparable  types:  Class<CAP#1>  and  Reader  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  UNREADABLE_READER)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  UNREADABLE_READER)  {	  if(o    ==    null    ||    o.getClass()    instanceof    Iterator)    {    	non-compiled	[CE]  incomparable  types:  Class<CAP#1>  and  Reader	85	None	replace
1247	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||!(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator))  {	  if(o    instanceof    JsonPrimitive    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	2	replace
1248	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator))  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||!(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator))  {	  if(o    instanceof    JsonPrimitive    &&    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	2	replace
1249	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  <?>  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  <?>  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  <?>  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    instanceof    JsonObject    <?>)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	162	None	replace
1250	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  <?>  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  instanceof  JsonObject  <?>  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  <?>  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {	  if(o    instanceof    JsonObject    <?>)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	162	None	replace
1251	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  If(o!=  null  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  If(o!=  null  ||  o  instanceof  Iterator)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  getClass())  {  If(o!=  null  ||  o  instanceof  Iterator)  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    If(o!=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
1252	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  If(o!=  null  ||  o.getClass()!=  getClass())  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  If(o!=  null  ||  o.getClass()!=  getClass())  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  getClass())  {  If(o!=  null  ||  o.getClass()!=  getClass())  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    If(o!=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
1253	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  o);  [CE]  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  o);  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  o);	  Object    stack    =(o    ==    null)?    JsonNull.createJsonNull()    :    o;    	non-compiled	[CE]  	154	None	replace
1254	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack.length  ==  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  &&  stack.length  ==  0)  {	  if(o!=    null    ||    stack.length    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	89	2	replace
1255	[BUG]  [BUGGY]  if(o!=  null  &&  stack.length  ==  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  &&  stack.length  ==  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  stack.length  ==  0)  {	  if(o!=    null    ||    stack.length    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	89	2	replace
1256	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  ==  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stackSize  ==  0)  {	  if(o!=    null    ||    stack.length    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	89	2	replace
1257	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  ==  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stackSize  ==  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stackSize  ==  0)  {	  if(o!=    null    ||    stack.length    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	89	2	replace
1258	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null)  {  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.NAME;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	102	2	replace
1259	[BUG]  [BUGGY]  if(o  ==  null)  {  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.NAME;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null)  {  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.NAME;  }  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.NAME;  }	  if(o    instanceof    JsonObject)    {    if(o    instanceof    JsonObject)    <    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	102	2	replace
1260	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length!=  0)  {  if(o  {  null  ||  stack.length!=  0)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length!=  0)  {  if(o  {  null  ||  stack.length!=  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length!=    0)    {    if(o  {  null  ||  stack.length!=  0)  {	  	non-compiled	[CE]  ')'  expected	95	None	add
1261	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length!=  0)  {  if(o  ==  null  ||  stack.length  [Delete]  0)  {  [CE]  ')'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o  ==  null  ||  stack.length!=  0)  {  if(o  ==  null  ||  stack.length  [Delete]  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    stack.length!=    0)    {    if(o  ==  null  ||  stack.length  [Delete]  0)  {	  	non-compiled	[CE]  ')'  expected	95	None	add
1262	[BUG]  [BUGGY]  if(o!=  null  ||  stack.length  ==  0)  {  if(o!=  null  ||  stack.length  {  0)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  if(o!=  null  ||  stack.length  ==  0)  {  if(o!=  null  ||  stack.length  {  0)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    stack.length    ==    0)    {    if(o!=  null  ||  stack.length  {  0)  {	  	non-compiled	[CE]  ')'  expected	88	None	add
1263	[BUG]  [BUGGY]  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator10)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator10)  {  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator10)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    Object    o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
1264	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  o.type;  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  o.type;  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  o.type;	  Object    stack    =(o    ==    null)?    JsonNull.UNREADABLE_READER    :    o.getClass();    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
1265	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  o.value();  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();      [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  o.value();  [BUGGY]      boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  o.value();	  Object    stack    =(o    ==    null)?    JsonNull.UNREADABLE_READER    :    o.getClass();    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
