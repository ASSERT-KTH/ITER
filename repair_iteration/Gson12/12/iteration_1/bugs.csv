bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();  [BUGGY]  if(o  instanceof  JsonObject)  {  [BUGGY]  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonObject)  {	if  (o  instanceof  Iterator)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	replace
2	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();  [BUGGY]  if(o  instanceof  JsonObject)  {  [BUGGY]  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject)  {	if  (o  instanceof  Iterator)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	replace
3	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	if  (o  instanceof  Iterator)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	replace
4	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	if  (o  instanceof  Iterator)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	replace
5	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  [BUGGY]  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonPrimitive)  {	if  (o  instanceof  Iterator)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	replace
6	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  [BUGGY]  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive)  {	if  (o  instanceof  Iterator)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	replace
7	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	if  (o  instanceof  Iterator)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	replace
8	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	if  (o  instanceof  Iterator)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	replace
9	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();  [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator)  {  [BUGGY]  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  o  instanceof  Iterator)  {	if  (o  instanceof  Iterator)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	replace
10	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();  [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator)  {  [BUGGY]  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o  instanceof  Iterator)  {	if  (o  instanceof  Iterator)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	replace
11	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  [BUGGY]  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  o  instanceof  Iterator)  {	if  (o  instanceof  Iterator)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	replace
12	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  [BUGGY]  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  Iterator)  {	if  (o  instanceof  Iterator)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	replace
13	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException  [CONTEXT]  @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();  [BUGGY]  if(o  instanceof  Iterator  <?>)  {  [BUGGY]  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  Iterator  <?>)  {	if  (o  instanceof  Iterator)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	replace
14	[BUG]  [BUGGY]  if(o  instanceof  Iterator  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException  [CONTEXT]  @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();  [BUGGY]  if(o  instanceof  Iterator  <?>)  {  [BUGGY]  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator  <?>)  {	if  (o  instanceof  Iterator)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	replace
15	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException  [CONTEXT]  @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();  [BUGGY]    [BUGGY]  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	  	if  (o  instanceof  Iterator)  {  	non-compiled	[CE]  illegal  start  of  type	23	None	replace
16	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();  [BUGGY]  if(o!=  null)  {  [BUGGY]  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null)  {	if  (o  instanceof  Iterator)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	replace
17	[BUG]  [BUGGY]  if(o!=  null)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();  [BUGGY]  if(o!=  null)  {  [BUGGY]  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null)  {	if  (o  instanceof  Iterator)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	replace
18	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();  [BUGGY]  if(o  ==  null)  {  [BUGGY]  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null)  {	if  (o  instanceof  Iterator)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	replace
19	[BUG]  [BUGGY]  if(o  ==  null)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();  [BUGGY]  if(o  ==  null)  {  [BUGGY]  boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {	if  (o  instanceof  Iterator)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	replace
