bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()));  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()));	  Integer    str    =    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  orphaned  case	33	None	replace
2	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  +  1));  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  +  1));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  +  1));	  Integer    str    =    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  orphaned  case	33	None	replace
3	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1)+  1);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1)+  1);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  1)+  1);	  Integer    str    =    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  orphaned  case	33	None	replace
4	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  +  1);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.length()  +  1);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  createInteger(str.length()  +  1);	  Integer    str    =    createInteger(str.length()    -    1);    	non-compiled	[CE]  orphaned  case	6	None	replace
5	[BUG]  [BUGGY]  int  str  =  str.indexOf('.',  12);  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  str  =  str.indexOf('.',  12);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	int  str  =  str.indexOf('.',  12);	  int    str    =    str.indexOf('.',    4);    	non-compiled	[CE]  orphaned  case	30	None	replace
6	[BUG]  [BUGGY]  Integer  str  =  getNumber(mant);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  getNumber(mant);  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  getNumber(mant);	  Integer    str    =    getNumber(str);    	non-compiled	[CE]  orphaned  case	25	None	replace
7	[BUG]  [BUGGY]  Integer  str  =  getIntValue(str);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  getIntValue(str);  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  getIntValue(str);	  Integer    str    =    getNumber(str);    	non-compiled	[CE]  orphaned  case	25	None	replace
8	[BUG]  [BUGGY]  if(str.startsWith( "-0 ")||  str.startsWith( "-0 ")||  str.startsWith( "-0 "))  {  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( "-0 ")||  str.startsWith( "-0 ")||  str.startsWith( "-0 "))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( "-0 ")||  str.startsWith( "-0 ")||  str.startsWith( "-0 "))  {	  if(str.startsWith(   ".0   ")||    str.startsWith(   ".0   ")||    str.startsWith(   ".0   "))    {    	non-compiled	[CE]  orphaned  case	29	None	replace
9	[BUG]  [BUGGY]  if(str.startsWith( "0   ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( "0   ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( "0   ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {	  if(str.startsWith(   ".0   ")||    str.startsWith(   ".0   ")||    str.startsWith(   ".0   "))    {    	non-compiled	[CE]  orphaned  case	29	None	replace
10	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  mant);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  createInteger(str,  mant);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  createInteger(str,  mant);	  Integer    str    =    createInteger(mant);    	non-compiled	[CE]  orphaned  case	4	None	replace
11	[BUG]  [BUGGY]  Integer  str  =  getInteger(1);  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  getInteger(1);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  getInteger(1);	  Integer    str    =    getInteger(mant);    	non-compiled	[CE]  orphaned  case	15	None	replace
12	[BUG]  [BUGGY]  Integer  str  =  getInteger(mant.length());  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  getInteger(mant.length());  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  getInteger(mant.length());	  Integer    str    =    getInteger(str.length());    	non-compiled	[CE]  orphaned  case	16	None	replace
13	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.length()  +  1);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  getInteger(str.length()  +  1);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  getInteger(str.length()  +  1);	  Integer    str    =    getInteger(str.length());    	non-compiled	[CE]  orphaned  case	16	None	replace
14	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  2);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  2);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  2);	  String    str    =    str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  orphaned  case	17	None	replace
15	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "1x ")||  str.startsWith( "-1))  {  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "1x ")||  str.startsWith( "-1))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( "0x ")||  str.startsWith( "1x ")||  str.startsWith( "-1))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "-1x       ")||    str.startsWith(   "-1))    {    	non-compiled	[CE]  orphaned  case	7	None	replace
16	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  orphaned  case	34	None	replace
17	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  orphaned  case	34	None	replace
18	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('e');  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('e');  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('e');	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  orphaned  case	34	None	replace
19	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('-')+  str.indexOf('.');  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('-')+  str.indexOf('.');  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	int  decPos  =  str.indexOf('-')+  str.indexOf('.');	  int    decPos    =    str.indexOf('-');    	non-compiled	[CE]  orphaned  case	24	None	replace
20	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('-')+  str.indexOf(':');  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('-')+  str.indexOf(':');  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	int  decPos  =  str.indexOf('-')+  str.indexOf(':');	  int    decPos    =    str.indexOf('-');    	non-compiled	[CE]  orphaned  case	24	None	replace
21	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('-')+  str.indexOf('E')+  1;  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('-')+  str.indexOf('E')+  1;  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	int  decPos  =  str.indexOf('-')+  str.indexOf('E')+  1;	  int    decPos    =    str.indexOf('-');    	non-compiled	[CE]  orphaned  case	24	None	replace
22	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "- ")||  str.startsWith( "- "))  {  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( "- ")||  str.startsWith( "- ")||  str.startsWith( "- "))  {	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   "))    {    	non-compiled	[CE]  orphaned  case	28	None	replace
23	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "0.0x ")||  str.startsWith( "0.0x "))  {  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "0.0x ")||  str.startsWith( "0.0x "))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( "0x ")||  str.startsWith( "0.0x ")||  str.startsWith( "0.0x "))  {	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   "))    {    	non-compiled	[CE]  orphaned  case	28	None	replace
24	[BUG]  [BUGGY]  int  str  =  str.indexOf('.',  10);  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  str  =  str.indexOf('.',  10);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	int  str  =  str.indexOf('.',  10);	  int    str    =    str.indexOf('.',    16);    	non-compiled	[CE]  orphaned  case	27	None	replace
25	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "- ")||  str.startsWith( "-1))  {  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "- ")||  str.startsWith( "-1))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( "- ")||  str.startsWith( "- ")||  str.startsWith( "-1))  {	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".-1))    {    	non-compiled	[CE]  orphaned  case	22	None	replace
26	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".-1))  {  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".-1))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( "0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".-1))  {	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".-1))    {    	non-compiled	[CE]  orphaned  case	22	None	replace
27	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length())+  1;  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length())+  1;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	String  str  =  str.substring(0,  str.length()  -  1,  str.length())+  1;	  String    str    =    str.substring(0,    str.length()    -    1,    str.length()    +    1);    	non-compiled	[CE]  orphaned  case	20	None	replace
28	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "0x "))  {  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "0x "))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( "0x ")||  str.startsWith( "0x "))  {	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   "))    {    	non-compiled	[CE]  orphaned  case	39	None	replace
29	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( "- ")||  str.startsWith( "- "))  {	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   "))    {    	non-compiled	[CE]  orphaned  case	39	None	replace
30	[BUG]  [BUGGY]  Integer  str  =  getMinimumInteger();  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  getMinimumInteger();  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  getMinimumInteger();	  Integer    str    =    getInteger(0);    	non-compiled	[CE]  orphaned  case	14	None	replace
31	[BUG]  [BUGGY]  int  str  =  str.indexOf('.',  2);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  str  =  str.indexOf('.',  2);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	int  str  =  str.indexOf('.',  2);	  int    str    =    str.indexOf('.',    1);    	non-compiled	[CE]  orphaned  case	10	None	replace
32	[BUG]  [BUGGY]  Integer  str  =  createInteger(mant.length());  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  createInteger(mant.length());  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  createInteger(mant.length());	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  orphaned  case	3	None	replace
33	[BUG]  [BUGGY]  int  str  =  str.indexOf('.')+  2;  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  str  =  str.indexOf('.')+  2;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	int  str  =  str.indexOf('.')+  2;	  int    str    =    str.indexOf('.')+    1;    	non-compiled	[CE]  orphaned  case	9	None	replace
34	[BUG]  [BUGGY]  int  str  =  str.lastIndexOf('.')+  1;  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  str  =  str.lastIndexOf('.')+  1;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	int  str  =  str.lastIndexOf('.')+  1;	  int    str    =    str.indexOf('.')+    1;    	non-compiled	[CE]  orphaned  case	9	None	replace
35	[BUG]  [BUGGY]  int  str  =  str.indexOf('.')+  3;  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  str  =  str.indexOf('.')+  3;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	int  str  =  str.indexOf('.')+  3;	  int    str    =    str.indexOf('.')+    1;    	non-compiled	[CE]  orphaned  case	9	None	replace
36	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  *  1  +  1);  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  *  1  +  1);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	String  str  =  str.substring(0,  str.length()  *  1  +  1);	  String    str    =    str.substring(0,    str.length()    -    1    +    1);    	non-compiled	[CE]  orphaned  case	23	None	replace
37	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	String  str  =  str.substring(0,  str.length()  -  1)+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  orphaned  case	35	None	replace
38	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1)+  1;  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1)+  1;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	String  str  =  str.substring(0,  str.length()  +  1)+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  orphaned  case	35	None	replace
39	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length())+  2;  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length())+  2;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	String  str  =  str.substring(0,  str.length())+  2;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  orphaned  case	35	None	replace
40	[BUG]  [BUGGY]  if(str.startsWith( ".0x ")||  str.startsWith( ".-1x ")||  str.startsWith( ".-1))  {  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( ".0x ")||  str.startsWith( ".-1x ")||  str.startsWith( ".-1))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( ".0x ")||  str.startsWith( ".-1x ")||  str.startsWith( ".-1))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "-1x       ")||    str.startsWith(   "-1))    {    	non-compiled	[CE]  orphaned  case	7	None	replace
41	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "-1x ")||  str.startsWith( ".-1))  {  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "-1x ")||  str.startsWith( ".-1))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( "0x ")||  str.startsWith( "-1x ")||  str.startsWith( ".-1))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "-1x       ")||    str.startsWith(   "-1))    {    	non-compiled	[CE]  orphaned  case	7	None	replace
42	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( ".-1x ")||  str.startsWith( "-1))  {  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( ".-1x ")||  str.startsWith( "-1))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( "0x ")||  str.startsWith( ".-1x ")||  str.startsWith( "-1))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "-1x       ")||    str.startsWith(   "-1))    {    	non-compiled	[CE]  orphaned  case	7	None	replace
43	[BUG]  [BUGGY]  Integer  str  =  getNumber(1);  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  getNumber(1);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  getNumber(1);	  Integer    str    =    getInteger(0);    	non-compiled	[CE]  orphaned  case	14	None	replace
44	[BUG]  [BUGGY]  if(str.startsWith( "-0x ")||  str.startsWith( "-0x ")||  str.startsWith( "-0x "))  {  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( "-0x ")||  str.startsWith( "-0x ")||  str.startsWith( "-0x "))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( "-0x ")||  str.startsWith( "-0x ")||  str.startsWith( "-0x "))  {	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   "))    {    	non-compiled	[CE]  orphaned  case	28	None	replace
45	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.substring(0,  str.length()  -  1));  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  getInteger(str.substring(0,  str.length()  -  1));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  getInteger(str.substring(0,  str.length()  -  1));	  Integer    str    =    getInteger(str.length());    	non-compiled	[CE]  orphaned  case	16	None	replace
46	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('-')+  1;  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('-')+  1;  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('-')+  1;	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  orphaned  case	34	None	replace
47	[BUG]  [BUGGY]  int  str  =  str.indexOf('.',  18);  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  str  =  str.indexOf('.',  18);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	int  str  =  str.indexOf('.',  18);	  int    str    =    str.indexOf('.',    16);    	non-compiled	[CE]  orphaned  case	27	None	replace
48	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  3);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  3);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	String  str  =  str.substring(0,  str.length()  -  3);	  String    str    =    str.substring(0,    str.length();    	non-compiled	[CE]  orphaned  case	8	None	replace
49	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1),  decPos);  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1),  decPos);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  1),  decPos);	  Integer    str    =    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  orphaned  case	33	None	replace
50	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-0 ")||  str.startsWith( "-0 "))  {  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-0 ")||  str.startsWith( "-0 "))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( "- ")||  str.startsWith( "-0 ")||  str.startsWith( "-0 "))  {	  if(str.startsWith(   ".0   ")||    str.startsWith(   ".0   ")||    str.startsWith(   ".0   "))    {    	non-compiled	[CE]  orphaned  case	29	None	replace
51	[BUG]  [BUGGY]  if(str.startsWith( "-0x ")||  str.startsWith( "-0x "))  {  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( "-0x ")||  str.startsWith( "-0x "))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( "-0x ")||  str.startsWith( "-0x "))  {	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   "))    {    	non-compiled	[CE]  orphaned  case	39	None	replace
52	[BUG]  [BUGGY]  if(str.startsWith( "-0 ")||  str.startsWith( "-0 "))  {  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( "-0 ")||  str.startsWith( "-0 "))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( "-0 ")||  str.startsWith( "-0 "))  {	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   "))    {    	non-compiled	[CE]  orphaned  case	39	None	replace
53	[BUG]  [BUGGY]  if(str.startsWith( "-0x ")||  str.startsWith( "-0x ")||  str.startsWith( "-1))  {  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( "-0x ")||  str.startsWith( "-0x ")||  str.startsWith( "-1))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( "-0x ")||  str.startsWith( "-0x ")||  str.startsWith( "-1))  {	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".-1))    {    	non-compiled	[CE]  orphaned  case	22	None	replace
54	[BUG]  [BUGGY]  if(str.startsWith( "-0 ")||  str.startsWith( "-0x ")||  str.startsWith( "-1))  {  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( "-0 ")||  str.startsWith( "-0x ")||  str.startsWith( "-1))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( "-0 ")||  str.startsWith( "-0x ")||  str.startsWith( "-1))  {	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".-1))    {    	non-compiled	[CE]  orphaned  case	22	None	replace
55	[BUG]  [BUGGY]  int  str  =  str.indexOf('.')+  0;  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  str  =  str.indexOf('.')+  0;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	int  str  =  str.indexOf('.')+  0;	  int    str    =    str.indexOf('.')+    1;    	non-compiled	[CE]  orphaned  case	9	None	replace
56	[BUG]  [BUGGY]  if(str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( "-1))  {  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( "-1))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( "-1))  {	  if(str.startsWith(   "0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   "-1))    {    	non-compiled	[CE]  orphaned  case	21	None	replace
57	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length(),  str.length());  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length(),  str.length());  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	String  str  =  str.substring(0,  str.length(),  str.length());	  String    str    =    str.substring(0,    str.length()    +    1,    str.length()    -    1);    	non-compiled	[CE]  orphaned  case	18	None	replace
58	[BUG]  [BUGGY]  if  (str.startsWith( ".0x ")||  str.startsWith( "-1))  {  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if  (str.startsWith( ".0x ")||  str.startsWith( "-1))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if  (str.startsWith( ".0x ")||  str.startsWith( "-1))  {	  if    (str.startsWith(   ".0x   ")||    str.startsWith(   ".-1))    {    	non-compiled	[CE]  orphaned  case	12	None	replace
59	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  4);  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  4);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	String  str  =  str.substring(0,  str.length()  -  4);	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  orphaned  case	1	None	replace
60	[BUG]  [BUGGY]  Integer  str  =  getNumber(str.intValue());  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  getNumber(str.intValue());  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  getNumber(str.intValue());	  Integer    str    =    getNumber(str);    	non-compiled	[CE]  orphaned  case	25	None	replace
61	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('-')+  1;  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('-')+  1;  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	int  decPos  =  str.indexOf('-')+  1;	  int    decPos    =    str.indexOf('-');    	non-compiled	[CE]  orphaned  case	24	None	replace
62	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('-')+  str.indexOf('-');  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('-')+  str.indexOf('-');  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	int  decPos  =  str.indexOf('-')+  str.indexOf('-');	  int    decPos    =    str.indexOf('-');    	non-compiled	[CE]  orphaned  case	24	None	replace
63	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('-'  +  1);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('-'  +  1);  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	int  decPos  =  str.indexOf('-'  +  1);	  int    decPos    =    str.indexOf('-');    	non-compiled	[CE]  orphaned  case	24	None	replace
64	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('-',  -1);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('-',  -1);  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	int  decPos  =  str.indexOf('-',  -1);	  int    decPos    =    str.indexOf('-');    	non-compiled	[CE]  orphaned  case	24	None	replace
65	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.charAt(0));  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.charAt(0));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  createInteger(str.charAt(0));	  Integer    str    =    createInteger(str.length()    -    1);    	non-compiled	[CE]  orphaned  case	6	None	replace
66	[BUG]  [BUGGY]  if  (str.startsWith( ".0x ")||  str.startsWith( ".-1x ")||  str.startsWith( ".-1x "))  {  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if  (str.startsWith( ".0x ")||  str.startsWith( ".-1x ")||  str.startsWith( ".-1x "))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if  (str.startsWith( ".0x ")||  str.startsWith( ".-1x ")||  str.startsWith( ".-1x "))  {	  if    (str.startsWith(   "0x   ")||    str.startsWith(   "-1x   ")||    str.startsWith(   "-1x   "))    {    	non-compiled	[CE]  orphaned  case	26	None	replace
67	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.indexOf('0'));  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.indexOf('0'));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  createInteger(str.indexOf('0'));	  Integer    str    =    createInteger(str.length()    -    1);    	non-compiled	[CE]  orphaned  case	6	None	replace
68	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.substring(0,  str.length()));  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  getInteger(str.substring(0,  str.length()));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  getInteger(str.substring(0,  str.length()));	  Integer    str    =    getInteger(str.length());    	non-compiled	[CE]  orphaned  case	16	None	replace
69	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  *  1);  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  *  1);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	String  str  =  str.substring(0,  str.length()  *  1);	  String    str    =    str.substring(0,    str.length()    -    1    +    1);    	non-compiled	[CE]  orphaned  case	23	None	replace
70	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(str);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  createBigInteger(str);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  createBigInteger(str);	  Integer    str    =    createInteger(mant);    	non-compiled	[CE]  orphaned  case	4	None	replace
71	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1)/  1;  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1)/  1;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	String  str  =  str.substring(0,  str.length()  +  1)/  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  orphaned  case	35	None	replace
72	[BUG]  [BUGGY]  Integer  str  =  getInt(str);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  getInt(str);  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  getInt(str);	  Integer    str    =    getNumber(str);    	non-compiled	[CE]  orphaned  case	25	None	replace
73	[BUG]  [BUGGY]  int  str  =  str.indexOf('.')/  1;  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  str  =  str.indexOf('.')/  1;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	int  str  =  str.indexOf('.')/  1;	  int    str    =    str.indexOf('.')+    1;    	non-compiled	[CE]  orphaned  case	9	None	replace
74	[BUG]  [BUGGY]  int  str  =  str.indexOf('.')+  4;  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  str  =  str.indexOf('.')+  4;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	int  str  =  str.indexOf('.')+  4;	  int    str    =    str.indexOf('.')+    1;    	non-compiled	[CE]  orphaned  case	9	None	replace
75	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  *  1,  str.length()  *  1);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  *  1,  str.length()  *  1);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	String  str  =  str.substring(0,  str.length()  *  1,  str.length()  *  1);	  String    str    =    str.substring(0,    str.length()    -    1,    str.length()    +    1);    	non-compiled	[CE]  orphaned  case	20	None	replace
76	[BUG]  [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".-1))  {  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".-1))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".-1))  {	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".-1))    {    	non-compiled	[CE]  orphaned  case	22	None	replace
77	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  1));  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  1));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  1));	  Integer    str    =    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  orphaned  case	33	None	replace
78	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "1.0x ")||  str.startsWith( "-1))  {  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "1.0x ")||  str.startsWith( "-1))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( "0x ")||  str.startsWith( "1.0x ")||  str.startsWith( "-1))  {	  if(str.startsWith(   "0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   "-1))    {    	non-compiled	[CE]  orphaned  case	21	None	replace
79	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.charAt(0));  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Integer  str  =  getInteger(str.charAt(0));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	Integer  str  =  getInteger(str.charAt(0));	  Integer    str    =    getInteger(str.length()    -    1);    	non-compiled	[CE]  orphaned  case	32	None	replace
80	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( "- ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {	  if(str.startsWith(   ".0   ")||    str.startsWith(   ".0   ")||    str.startsWith(   ".0   "))    {    	non-compiled	[CE]  orphaned  case	29	None	replace
81	[BUG]  [BUGGY]  if(str.startsWith( ".0x ")||  str.startsWith( ".-1x ")||  str.startsWith( ".-1 "))  {  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( ".0x ")||  str.startsWith( ".-1x ")||  str.startsWith( ".-1 "))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( ".0x ")||  str.startsWith( ".-1x ")||  str.startsWith( ".-1 "))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "-1x       ")||    str.startsWith(   "-1))    {    	non-compiled	[CE]  orphaned  case	7	None	replace
82	[BUG]  [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( ".-1 ")||  str.startsWith( ".-1 "))  {  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( ".-1 ")||  str.startsWith( ".-1 "))  {  [BUGGY]      return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	411	411	1	replace	if(str.startsWith( ".0 ")||  str.startsWith( ".-1 ")||  str.startsWith( ".-1 "))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "-1x       ")||    str.startsWith(   "-1))    {    	non-compiled	[CE]  orphaned  case	7	None	replace
