bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  [CE]  orphaned  case  [FE]        NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  str  =  str.substring(0,  str.length());  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	String  str  =  str.substring(0,  str.length());	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  orphaned  case	1	None	replace
2	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [CE]  orphaned  case  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	String  str  =  str.substring(0,  str.length()  +  1);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  orphaned  case	1	None	replace
3	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  [CE]  orphaned  case  [FE]        NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  orphaned  case	14	None	replace
4	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  [CE]  orphaned  case  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  orphaned  case	14	None	replace
5	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('e');  [CE]  orphaned  case  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('e');  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('e');	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  orphaned  case	14	None	replace
6	[BUG]  [BUGGY]  String  lastChar  =  str.charAt(str.length())+  1;  [CE]  orphaned  case  [FE]    NoSuchMethodError    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  lastChar  =  str.charAt(str.length())+  1;  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	String  lastChar  =  str.charAt(str.length())+  1;	  String    lastChar    =    str.charAt(str.length()    -    1);    	non-compiled	[CE]  orphaned  case	8	None	replace
7	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.length()  -  2);  [CE]  orphaned  case  [FE]        NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  char  lastChar  =  str.charAt(str.length()  -  2);  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	char  lastChar  =  str.charAt(str.length()  -  2);	  String    lastChar    =    str.charAt(str.length());    	non-compiled	[CE]  orphaned  case	13	None	replace
8	[BUG]  [BUGGY]  String  lastChar  =  str.charAt(str.length()  -  1);  String  lastChar  =  str.charAt(str.length()  -  1);  [CE]  orphaned  case  [FE]    NoSuchMethodError    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  lastChar  =  str.charAt(str.length()  -  1);  String  lastChar  =  str.charAt(str.length()  -  1);  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	String    lastChar    =    str.charAt(str.length()    -    1);    String  lastChar  =  str.charAt(str.length()  -  1);	  	non-compiled	[CE]  orphaned  case	7	None	add
9	[BUG]  [BUGGY]  String  lastChar  =  str.charAt(str.length()  -  1);  String  lastCHAR  =  str.charAt(str.length()  -  1);  [CE]  orphaned  case  [FE]      NoSuchMethodError    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  lastChar  =  str.charAt(str.length()  -  1);  String  lastCHAR  =  str.charAt(str.length()  -  1);  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	String    lastChar    =    str.charAt(str.length()    -    1);    String  lastCHAR  =  str.charAt(str.length()  -  1);	  	non-compiled	[CE]  orphaned  case	7	None	add
10	[BUG]  [BUGGY]  String  lastChar  =  str.charAt(str.length()  -  1);  String  oldChar  =  str.charAt(str.length()  -  1);  [CE]  orphaned  case  [FE]        NoSuchMethodError    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  lastChar  =  str.charAt(str.length()  -  1);  String  oldChar  =  str.charAt(str.length()  -  1);  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	String    lastChar    =    str.charAt(str.length()    -    1);    String  oldChar  =  str.charAt(str.length()  -  1);	  	non-compiled	[CE]  orphaned  case	7	None	add
11	[BUG]  [BUGGY]  String  lastChar  =  str.charAt(str.length()  -  1);  String  mant  =  str.charAt(str.length()  -  1);  [CE]  orphaned  case  [FE]          NoSuchMethodError    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  lastChar  =  str.charAt(str.length()  -  1);  String  mant  =  str.charAt(str.length()  -  1);  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	String    lastChar    =    str.charAt(str.length()    -    1);    String  mant  =  str.charAt(str.length()  -  1);	  	non-compiled	[CE]  orphaned  case	7	None	add
12	[BUG]  [BUGGY]  String  lastChar  =  str.charAt(str.length()  -  1);  Character  lastChar  =  str.charAt(str.length()  -  1);  [CE]  orphaned  case  [FE]            NoSuchMethodError    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  lastChar  =  str.charAt(str.length()  -  1);  Character  lastChar  =  str.charAt(str.length()  -  1);  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	String    lastChar    =    str.charAt(str.length()    -    1);    Character  lastChar  =  str.charAt(str.length()  -  1);	  	non-compiled	[CE]  orphaned  case	7	None	add
13	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.length()  -  1)+  1;  [CE]  orphaned  case  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  char  lastChar  =  str.charAt(str.length()  -  1)+  1;  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	char  lastChar  =  str.charAt(str.length()  -  1)+  1;	  char    lastChar    =    str.charAt(str.length())+    1;    	non-compiled	[CE]  orphaned  case	9	None	replace
14	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.length()  +  1)+  1;  [CE]  orphaned  case  [FE]              NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  char  lastChar  =  str.charAt(str.length()  +  1)+  1;  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	char  lastChar  =  str.charAt(str.length()  +  1)+  1;	  char    lastChar    =    str.charAt(str.length())+    1;    	non-compiled	[CE]  orphaned  case	9	None	replace
15	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length();  [CE]  orphaned  case  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  str  =  str.substring(0,  str.length();  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	String  str  =  str.substring(0,  str.length();	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  orphaned  case	2	None	replace
16	[BUG]  [BUGGY]  NumberFormatException  e  =  nfe;  [CE]  orphaned  case  [FE]              NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  nfe;  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	NumberFormatException  e  =  nfe;	      NumberFormatException    e    =    null;    	non-compiled	[CE]  orphaned  case	4	None	replace
17	[BUG]  [BUGGY]  NumberFormatException  e  =  NUMBER_FAILURE;  [CE]  orphaned  case  [FE]                NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  NUMBER_FAILURE;  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	NumberFormatException  e  =  NUMBER_FAILURE;	      NumberFormatException    e    =    null;    	non-compiled	[CE]  orphaned  case	4	None	replace
18	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.length()  -  1);  [CE]  orphaned  case  [FE]                  NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.length()  -  1);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	NumberFormatException  e  =  new  NumberFormatException(str.length()  -  1);	      NumberFormatException    e    =    null;    	non-compiled	[CE]  orphaned  case	4	None	replace
19	[BUG]  [BUGGY]  String  lastChar  =  str.charAt(str.length()  *  1);  [CE]  orphaned  case  [FE]              NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  lastChar  =  str.charAt(str.length()  *  1);  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	String  lastChar  =  str.charAt(str.length()  *  1);	  char    lastChar    =    str.charAt(str.length()    *    1);    	non-compiled	[CE]  orphaned  case	10	None	replace
20	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.length()  *  2);  [CE]  orphaned  case  [FE]                NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  char  lastChar  =  str.charAt(str.length()  *  2);  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	char  lastChar  =  str.charAt(str.length()  *  2);	  char    lastChar    =    str.charAt(str.length()    *    1);    	non-compiled	[CE]  orphaned  case	10	None	replace
21	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.length()  /  1);  [CE]  orphaned  case  [FE]                  NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  char  lastChar  =  str.charAt(str.length()  /  1);  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	char  lastChar  =  str.charAt(str.length()  /  1);	  char    lastChar    =    str.charAt(str.length()    *    1);    	non-compiled	[CE]  orphaned  case	10	None	replace
22	[BUG]  [BUGGY]  Integer  str  =  createInteger(mant);  [CE]  orphaned  case  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  Integer  str  =  createInteger(mant);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	Integer  str  =  createInteger(mant);	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  orphaned  case	3	None	replace
23	[BUG]  [BUGGY]  Integer  str  =  createInteger(0);  [CE]  orphaned  case  [FE]              NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  Integer  str  =  createInteger(0);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	Integer  str  =  createInteger(0);	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  orphaned  case	3	None	replace
24	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));  [CE]  orphaned  case  [FE]                NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  orphaned  case	3	None	replace
25	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.length());  char  lastChar  =  str.charAt(str.length());  [CE]  orphaned  case  [FE]    NoSuchMethodError    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  char  lastChar  =  str.charAt(str.length());  char  lastChar  =  str.charAt(str.length());  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	char    lastChar    =    str.charAt(str.length());    char  lastChar  =  str.charAt(str.length());	  	non-compiled	[CE]  orphaned  case	5	None	add
26	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.length());  String  lastChar  =  str.charAt(str.length());  [CE]  orphaned  case  [FE]      NoSuchMethodError    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  char  lastChar  =  str.charAt(str.length());  String  lastChar  =  str.charAt(str.length());  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	char    lastChar    =    str.charAt(str.length());    String  lastChar  =  str.charAt(str.length());	  	non-compiled	[CE]  orphaned  case	5	None	add
27	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.length());  Character  lastChar  =  str.charAt(str.length());  [CE]  orphaned  case  [FE]        NoSuchMethodError    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  char  lastChar  =  str.charAt(str.length());  Character  lastChar  =  str.charAt(str.length());  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	char    lastChar    =    str.charAt(str.length());    Character  lastChar  =  str.charAt(str.length());	  	non-compiled	[CE]  orphaned  case	5	None	add
28	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.length());  char  firstChar  =  str.charAt(str.length());  [CE]  orphaned  case  [FE]          NoSuchMethodError    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  char  lastChar  =  str.charAt(str.length());  char  firstChar  =  str.charAt(str.length());  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	char    lastChar    =    str.charAt(str.length());    char  firstChar  =  str.charAt(str.length());	  	non-compiled	[CE]  orphaned  case	5	None	add
29	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.length());  Character  str  =  str.charAt(str.length());  [CE]  orphaned  case  [FE]            NoSuchMethodError    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  char  lastChar  =  str.charAt(str.length());  Character  str  =  str.charAt(str.length());  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	char    lastChar    =    str.charAt(str.length());    Character  str  =  str.charAt(str.length());	  	non-compiled	[CE]  orphaned  case	5	None	add
30	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()));  [CE]  orphaned  case  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()));  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()));	      NumberFormatException    e    =    new    NumberFormatException(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  orphaned  case	12	None	replace
31	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  str.length());  [CE]  orphaned  case  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  str.length());  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  str.length());	      NumberFormatException    e    =    new    NumberFormatException(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  orphaned  case	12	None	replace
32	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  str.length()  -  1);  [CE]  orphaned  case  [FE]              NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  str.length()  -  1);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  str.length()  -  1);	      NumberFormatException    e    =    new    NumberFormatException(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  orphaned  case	12	None	replace
33	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  -  1);  [CE]  orphaned  case  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  Integer  str  =  createInteger(str.length()  -  1);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	Integer  str  =  createInteger(str.length()  -  1);	      Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  orphaned  case	15	None	replace
34	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  +  1);  [CE]  orphaned  case  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  Integer  str  =  createInteger(str.length()  +  1);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	Integer  str  =  createInteger(str.length()  +  1);	      Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  orphaned  case	15	None	replace
35	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  str);  [CE]  orphaned  case  [FE]        NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  str);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	NumberFormatException  e  =  new  NumberFormatException( " ",  str);	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  orphaned  case	11	None	replace
36	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exception: ");  [CE]  orphaned  case  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exception: ");  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	NumberFormatException  e  =  new  NumberFormatException( "Number  format  exception: ");	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  orphaned  case	11	None	replace
37	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  error: ");  [CE]  orphaned  case  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  error: ");  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	NumberFormatException  e  =  new  NumberFormatException( "Number  format  error: ");	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  orphaned  case	11	None	replace
38	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1  +  1);  [CE]  orphaned  case  [FE]        NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1  +  1);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	String  str  =  str.substring(0,  str.length()  -  1  +  1);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  orphaned  case	1	None	replace
39	[BUG]  [BUGGY]  String  lastChar  =  str.charAt(str.length()  -  2);  [CE]  orphaned  case  [FE]        NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  lastChar  =  str.charAt(str.length()  -  2);  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	String  lastChar  =  str.charAt(str.length()  -  2);	  String    lastChar    =    str.charAt(str.length());    	non-compiled	[CE]  orphaned  case	13	None	replace
40	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.length());  String  mant  =  str.charAt(str.length());  [CE]  orphaned  case  [FE]    NoSuchMethodError    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  char  lastChar  =  str.charAt(str.length());  String  mant  =  str.charAt(str.length());  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	char    lastChar    =    str.charAt(str.length());    String  mant  =  str.charAt(str.length());	  	non-compiled	[CE]  orphaned  case	5	None	add
41	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.length());  char  lastCHAR  =  str.charAt(str.length());  [CE]  orphaned  case  [FE]      NoSuchMethodError    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  char  lastChar  =  str.charAt(str.length());  char  lastCHAR  =  str.charAt(str.length());  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	char    lastChar    =    str.charAt(str.length());    char  lastCHAR  =  str.charAt(str.length());	  	non-compiled	[CE]  orphaned  case	5	None	add
42	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('-')+  1;  [CE]  orphaned  case  [FE]        NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('-')+  1;  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('-')+  1;	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  orphaned  case	14	None	replace
43	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  -  2);  [CE]  orphaned  case  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  Integer  str  =  createInteger(str.length()  -  2);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	Integer  str  =  createInteger(str.length()  -  2);	      Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  orphaned  case	15	None	replace
44	[BUG]  [BUGGY]  String  lastChar  =  str.charAt(str.length()  -  1);  String  lastChar  =  str.charAt(str.length()  -  1));  [CE]  orphaned  case  [FE]    NoSuchMethodError    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  lastChar  =  str.charAt(str.length()  -  1);  String  lastChar  =  str.charAt(str.length()  -  1));  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	String    lastChar    =    str.charAt(str.length()    -    1);    String  lastChar  =  str.charAt(str.length()  -  1));	  	non-compiled	[CE]  orphaned  case	7	None	add
45	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1)+  1);  [CE]  orphaned  case  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1)+  1);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1)+  1);	      NumberFormatException    e    =    new    NumberFormatException(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  orphaned  case	12	None	replace
46	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  decPos);  [CE]  orphaned  case  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  decPos);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  decPos);	      NumberFormatException    e    =    new    NumberFormatException(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  orphaned  case	12	None	replace
47	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exceptions: ");  [CE]  orphaned  case  [FE]        NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exceptions: ");  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	NumberFormatException  e  =  new  NumberFormatException( "Number  format  exceptions: ");	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  orphaned  case	11	None	replace
48	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( ", ");  [CE]  orphaned  case  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( ", ");  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	NumberFormatException  e  =  new  NumberFormatException( ", ");	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  orphaned  case	11	None	replace
49	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  nfe);  [CE]  orphaned  case  [FE]        NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  nfe);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	NumberFormatException  e  =  new  NumberFormatException( " ",  nfe);	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  orphaned  case	11	None	replace
50	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exceptions  can  not  be  null. ");  [CE]  orphaned  case  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exceptions  can  not  be  null. ");  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	NumberFormatException  e  =  new  NumberFormatException( "Number  format  exceptions  can  not  be  null. ");	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  orphaned  case	11	None	replace
51	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.indexOf('-'));  [CE]  orphaned  case  [FE]    NoSuchMethodError    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  char  lastChar  =  str.charAt(str.indexOf('-'));  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	char  lastChar  =  str.charAt(str.indexOf('-'));	  char    lastChar    =    str.charAt(str.length());    	non-compiled	[CE]  orphaned  case	6	None	replace
52	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('a')+  1;  [CE]  orphaned  case  [FE]        NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('a')+  1;  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('a')+  1;	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  orphaned  case	14	None	replace
53	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(str.length());  [CE]  orphaned  case  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  Integer  str  =  createBigInteger(str.length());  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	Integer  str  =  createBigInteger(str.length());	      Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  orphaned  case	15	None	replace
54	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.indexOf('-')+  1);  [CE]  orphaned  case  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  char  lastChar  =  str.charAt(str.indexOf('-')+  1);  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	char  lastChar  =  str.charAt(str.indexOf('-')+  1);	  char    lastChar    =    str.charAt(str.length())+    1;    	non-compiled	[CE]  orphaned  case	9	None	replace
55	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.indexOf('0')+  1)+  1;  [CE]  orphaned  case  [FE]              NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  char  lastChar  =  str.charAt(str.indexOf('0')+  1)+  1;  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	char  lastChar  =  str.charAt(str.indexOf('0')+  1)+  1;	  char    lastChar    =    str.charAt(str.length())+    1;    	non-compiled	[CE]  orphaned  case	9	None	replace
56	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length())+  1;  [CE]  orphaned  case  [FE]        NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  str  =  str.substring(0,  str.length())+  1;  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	String  str  =  str.substring(0,  str.length())+  1;	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  orphaned  case	1	None	replace
57	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(1));  [CE]  orphaned  case  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  Integer  str  =  createInteger(str.substring(1));  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	Integer  str  =  createInteger(str.substring(1));	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  orphaned  case	3	None	replace
58	[BUG]  [BUGGY]  String  lastChar  =  str.charAt(str.length()  -  1);  char  lastChar  =  str.charAt(str.length()  -  1);  [CE]  orphaned  case  [FE]    NoSuchMethodError    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  lastChar  =  str.charAt(str.length()  -  1);  char  lastChar  =  str.charAt(str.length()  -  1);  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	String    lastChar    =    str.charAt(str.length()    -    1);    char  lastChar  =  str.charAt(str.length()  -  1);	  	non-compiled	[CE]  orphaned  case	7	None	add
59	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  1));  [CE]  orphaned  case  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  1));  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  1));	      NumberFormatException    e    =    new    NumberFormatException(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  orphaned  case	12	None	replace
60	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(1,  str.length()));  [CE]  orphaned  case  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(1,  str.length()));  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	414	414	1	replace	NumberFormatException  e  =  new  NumberFormatException(str.substring(1,  str.length()));	      NumberFormatException    e    =    new    NumberFormatException(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  orphaned  case	12	None	replace
