bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  dec  =  Character.isDigit(numeric.charAt(0));  [CE]  [FE]        NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  String  dec  =  Character.isDigit(numeric.charAt(0));  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	String  dec  =  Character.isDigit(numeric.charAt(0));	      Character    dec    =    Character.isDigit(numeric.charAt(0));    	non-compiled	[CE]  	11	None	replace
2	[BUG]  [BUGGY]  Character  dec  =  Character.isDigit(numeric.charAt(0))&&  exp  ==  null;  [CE]  [FE]          NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  Character  dec  =  Character.isDigit(numeric.charAt(0))&&  exp  ==  null;  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	Character  dec  =  Character.isDigit(numeric.charAt(0))&&  exp  ==  null;	      Character    dec    =    Character.isDigit(numeric.charAt(0));    	non-compiled	[CE]  	11	None	replace
3	[BUG]  [BUGGY]  Character  dec  =  Character.isDigit(numeric.charAt(1));  [CE]  [FE]            NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  Character  dec  =  Character.isDigit(numeric.charAt(1));  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	Character  dec  =  Character.isDigit(numeric.charAt(1));	      Character    dec    =    Character.isDigit(numeric.charAt(0));    	non-compiled	[CE]  	11	None	replace
4	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(1))  [CE]  [FE]        NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(1))  [BUGGY]    &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(1))	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.charAt(0))    	non-compiled	[CE]  	13	None	replace
5	[BUG]  [BUGGY]  if(numeric!=  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0))  [CE]  [FE]          NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  if(numeric!=  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0))  [BUGGY]    &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	if(numeric!=  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0))	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.charAt(0))    	non-compiled	[CE]  	13	None	replace
6	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.')+  1;  [CE]  [FE]                NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  int  decPos  =  str.lastIndexOf('.')+  1;  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	int  decPos  =  str.lastIndexOf('.')+  1;	      int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  	7	None	replace
7	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  2;  [CE]  [FE]                  NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  int  decPos  =  str.indexOf('.')+  2;  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	int  decPos  =  str.indexOf('.')+  2;	      int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  	7	None	replace
8	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos)+  1;  [CE]  [FE]                    NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  int  decPos  =  str.indexOf('.',  expPos)+  1;  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	int  decPos  =  str.indexOf('.',  expPos)+  1;	      int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  	7	None	replace
9	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length());  [CE]  [FE]          NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  String  dec  =  str.substring(0,  str.length());  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	String  dec  =  str.substring(0,  str.length());	      String    dec    =    numeric.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	4	None	replace
10	[BUG]  [BUGGY]  String  dec  =  numeric.substring(0,  str.length());  [CE]  [FE]            NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  String  dec  =  numeric.substring(0,  str.length());  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	String  dec  =  numeric.substring(0,  str.length());	      String    dec    =    numeric.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	4	None	replace
11	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  +  1);  [CE]  [FE]            NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  String  dec  =  str.substring(0,  str.length()  +  1);  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	String  dec  =  str.substring(0,  str.length()  +  1);	      String    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	10	None	replace
12	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length();  [CE]  [FE]              NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  String  dec  =  str.substring(0,  str.length();  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	String  dec  =  str.substring(0,  str.length();	      String    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	10	None	replace
13	[BUG]  [BUGGY]  Integer  dec  =  createLong(numeric);  [CE]  [FE]        NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  Integer  dec  =  createLong(numeric);  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	Integer  dec  =  createLong(numeric);	      Integer    dec    =    createInteger(numeric);    	non-compiled	[CE]  	8	None	replace
14	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric.substring(1));  [CE]  [FE]          NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  Integer  dec  =  createInteger(numeric.substring(1));  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	Integer  dec  =  createInteger(numeric.substring(1));	      Integer    dec    =    createInteger(numeric);    	non-compiled	[CE]  	8	None	replace
15	[BUG]  [BUGGY]  Integer  dec  =  createInteger(0);  [CE]  [FE]            NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  Integer  dec  =  createInteger(0);  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	Integer  dec  =  createInteger(0);	      Integer    dec    =    createInteger(numeric);    	non-compiled	[CE]  	8	None	replace
16	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  1);  [CE]  [FE]          NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  1);  [BUGGY]    &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	String  numeric  =  str.substring(0,  str.length()  -  1);	      	non-compiled	[CE]  	2	None	replace
17	[BUG]  [BUGGY]  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0)));  [CE]  [FE]            NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0)));  [BUGGY]    &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0)));	      	non-compiled	[CE]  	2	None	replace
18	[BUG]  [BUGGY]  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))));  [CE]  [FE]              NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))));  [BUGGY]    &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))));	      	non-compiled	[CE]  	2	None	replace
19	[BUG]  [BUGGY]  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(1)));  [CE]  [FE]                NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(1)));  [BUGGY]    &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(1)));	      	non-compiled	[CE]  	2	None	replace
20	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  0);  [CE]  [FE]              NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  0);  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	int  decPos  =  str.lastIndexOf('.',  0);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	6	None	replace
21	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  1);  [CE]  [FE]                NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  1);  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	int  decPos  =  str.lastIndexOf('.',  1);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	6	None	replace
22	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DECEMBER);  [CE]  [FE]                  NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DECEMBER);  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	int  decPos  =  str.lastIndexOf('.',  DECEMBER);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	6	None	replace
23	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  decPos);  [CE]  [FE]          NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  int  decPos  =  str.indexOf('.',  decPos);  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	int  decPos  =  str.indexOf('.',  decPos);	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  	12	None	replace
24	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  exp);  [CE]  [FE]            NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  int  decPos  =  str.indexOf('.',  exp);  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	int  decPos  =  str.indexOf('.',  exp);	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  	12	None	replace
25	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  0);  [CE]  [FE]              NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  int  decPos  =  str.indexOf('.',  0);  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	int  decPos  =  str.indexOf('.',  0);	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  	12	None	replace
26	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  [CE]  [FE]        NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  [BUGGY]    &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2))    	non-compiled	[CE]  	1	None	replace
27	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp!=  null  &&  isDigits(numeric.substring(1))  [CE]  [FE]          NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  if(dec  ==  null  &&  exp!=  null  &&  isDigits(numeric.substring(1))  [BUGGY]    &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	if(dec  ==  null  &&  exp!=  null  &&  isDigits(numeric.substring(1))	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2))    	non-compiled	[CE]  	1	None	replace
28	[BUG]  [BUGGY]  Integer  dec  =  str.substring(0,  str.length());  [CE]  [FE]            NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  Integer  dec  =  str.substring(0,  str.length());  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	Integer  dec  =  str.substring(0,  str.length());	      Integer    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	5	None	replace
29	[BUG]  [BUGGY]  Integer  dec  =  str.substring(0,  str.length()  +  1);  [CE]  [FE]              NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  Integer  dec  =  str.substring(0,  str.length()  +  1);  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	Integer  dec  =  str.substring(0,  str.length()  +  1);	      Integer    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	5	None	replace
30	[BUG]  [BUGGY]  Integer  dec  =  str.substring(0,  str.length();  [CE]  [FE]                NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  Integer  dec  =  str.substring(0,  str.length();  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	Integer  dec  =  str.substring(0,  str.length();	      Integer    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	5	None	replace
31	[BUG]  [BUGGY]  int  decPos  =  str.length()  -  1;  [CE]  [FE]        NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  int  decPos  =  str.length()  -  1;  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	int  decPos  =  str.length()  -  1;	      int    decPos    =    str.length();    	non-compiled	[CE]  	3	None	replace
32	[BUG]  [BUGGY]  int  decPos  =  str.length()  +  1;  [CE]  [FE]          NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  int  decPos  =  str.length()  +  1;  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	int  decPos  =  str.length()  +  1;	      int    decPos    =    str.length();    	non-compiled	[CE]  	3	None	replace
33	[BUG]  [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(2))  [CE]  [FE]          NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(2))  [BUGGY]    &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(2))	  if(dec    ==    null    ||    exp    ==    null    ||    isDigits(numeric.substring(1))    	non-compiled	[CE]  	14	None	replace
34	[BUG]  [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.charAt(0))  [CE]  [FE]            NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.charAt(0))  [BUGGY]    &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.charAt(0))	  if(dec    ==    null    ||    exp    ==    null    ||    isDigits(numeric.substring(1))    	non-compiled	[CE]  	14	None	replace
35	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(lastChar)&&  isAllZeros(exp);  [CE]  [FE]          NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  boolean  allZeros  =  isAllZeros(lastChar)&&  isAllZeros(exp);  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	boolean  allZeros  =  isAllZeros(lastChar)&&  isAllZeros(exp);	      boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp);    	non-compiled	[CE]  	9	None	replace
36	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(exp);  [CE]  [FE]            NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(exp);  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(exp);	      boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp);    	non-compiled	[CE]  	9	None	replace
37	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  lastChar);  [CE]  [FE]          NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  int  decPos  =  str.indexOf('.',  lastChar);  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	int  decPos  =  str.indexOf('.',  lastChar);	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  	12	None	replace
38	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PREFIX);  [CE]  [FE]            NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PREFIX);  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	int  decPos  =  str.indexOf('.',  DEC_PREFIX);	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  	12	None	replace
39	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  len);  [CE]  [FE]              NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  len);  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	int  decPos  =  str.lastIndexOf('.',  len);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	6	None	replace
40	[BUG]  [BUGGY]  Integer  dec  =  str.substring(0,  str.length()  -  1  +  1);  [CE]  [FE]            NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  Integer  dec  =  str.substring(0,  str.length()  -  1  +  1);  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	Integer  dec  =  str.substring(0,  str.length()  -  1  +  1);	      Integer    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	5	None	replace
41	[BUG]  [BUGGY]  if(dec!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  [CE]  [FE]        NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  if(dec!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  [BUGGY]    &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	if(dec!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2))    	non-compiled	[CE]  	1	None	replace
42	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  lastChar)+  1;  [CE]  [FE]                NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  int  decPos  =  str.indexOf('.',  lastChar)+  1;  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	int  decPos  =  str.indexOf('.',  lastChar)+  1;	      int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  	7	None	replace
43	[BUG]  [BUGGY]  String  numeric  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  [FE]          NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  String  numeric  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	String  numeric  =  str.substring(expPos  +  1,  str.length()  -  1);	      	non-compiled	[CE]  	2	None	replace
44	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1  +  1);  [CE]  [FE]            NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1  +  1);  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	String  dec  =  str.substring(0,  str.length()  -  1  +  1);	      String    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	10	None	replace
45	[BUG]  [BUGGY]  Character  dec  =  Character.isDigit(numeric.charAt(0))&&  (dec  ==  '-'  ||  Character.isDigit(numeric.charAt(0)));  [CE]  [FE]        NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  Character  dec  =  Character.isDigit(numeric.charAt(0))&&  (dec  ==  '-'  ||  Character.isDigit(numeric.charAt(0)));  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	Character  dec  =  Character.isDigit(numeric.charAt(0))&&  (dec  ==  '-'  ||  Character.isDigit(numeric.charAt(0)));	      Character    dec    =    Character.isDigit(numeric.charAt(0));    	non-compiled	[CE]  	11	None	replace
46	[BUG]  [BUGGY]  Character  dec  =  Character.isDigit(numeric.charAt(0))&&  exp  ==  null  &&  isDigits(numeric.substring(1));  [CE]  [FE]          NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  Character  dec  =  Character.isDigit(numeric.charAt(0))&&  exp  ==  null  &&  isDigits(numeric.substring(1));  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	Character  dec  =  Character.isDigit(numeric.charAt(0))&&  exp  ==  null  &&  isDigits(numeric.substring(1));	      Character    dec    =    Character.isDigit(numeric.charAt(0));    	non-compiled	[CE]  	11	None	replace
47	[BUG]  [BUGGY]  Character  dec  =  Character.isDigit(numeric.charAt(0))&&!Character.isDigit(numeric.charAt(0));  [CE]  [FE]            NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  Character  dec  =  Character.isDigit(numeric.charAt(0))&&!Character.isDigit(numeric.charAt(0));  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	Character  dec  =  Character.isDigit(numeric.charAt(0))&&!Character.isDigit(numeric.charAt(0));	      Character    dec    =    Character.isDigit(numeric.charAt(0));    	non-compiled	[CE]  	11	None	replace
48	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  dec);  [CE]  [FE]              NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  dec);  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	int  decPos  =  str.lastIndexOf('.',  dec);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	6	None	replace
49	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  decPos);  [CE]  [FE]                NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  decPos);  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	int  decPos  =  str.lastIndexOf('.',  decPos);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	6	None	replace
50	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX);  [CE]  [FE]                  NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX);  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	6	None	replace
51	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)||  isAllZeros(exp);  [CE]  [FE]          NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  boolean  allZeros  =  isAllZeros(mant)||  isAllZeros(exp);  [BUGGY]    &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	boolean  allZeros  =  isAllZeros(mant)||  isAllZeros(exp);	      	non-compiled	[CE]  	2	None	replace
52	[BUG]  [BUGGY]  Integer  dec  =  createBigInteger(numeric);  [CE]  [FE]        NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  Integer  dec  =  createBigInteger(numeric);  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	Integer  dec  =  createBigInteger(numeric);	      Integer    dec    =    createInteger(numeric);    	non-compiled	[CE]  	8	None	replace
53	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  [CE]  [FE]          NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  [BUGGY]    &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))	  if(dec    ==    null    ||    exp    ==    null    ||    isDigits(numeric.substring(1))    	non-compiled	[CE]  	14	None	replace
54	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length())+  1;  [CE]  [FE]          NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  String  dec  =  str.substring(0,  str.length())+  1;  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	String  dec  =  str.substring(0,  str.length())+  1;	      String    dec    =    numeric.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	4	None	replace
55	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  dec);  [CE]  [FE]          NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  int  decPos  =  str.indexOf('.',  dec);  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	int  decPos  =  str.indexOf('.',  dec);	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  	12	None	replace
56	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')/  1;  [CE]  [FE]                NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  int  decPos  =  str.indexOf('.')/  1;  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	int  decPos  =  str.indexOf('.')/  1;	      int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  	7	None	replace
57	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  decPos)+  1;  [CE]  [FE]                  NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  int  decPos  =  str.indexOf('.',  decPos)+  1;  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	int  decPos  =  str.indexOf('.',  decPos)+  1;	      int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  	7	None	replace
58	[BUG]  [BUGGY]  Character  dec  =  Character.isDigit(numeric.charAt(0))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0)));  [CE]  [FE]        NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  Character  dec  =  Character.isDigit(numeric.charAt(0))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0)));  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	Character  dec  =  Character.isDigit(numeric.charAt(0))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0)));	      Character    dec    =    Character.isDigit(numeric.charAt(0));    	non-compiled	[CE]  	11	None	replace
59	[BUG]  [BUGGY]  Character  dec  =  Character.isDigit(numeric.charAt(0))  &&  isDigits(numeric.substring(0,  decPos));  [CE]  [FE]          NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  Character  dec  =  Character.isDigit(numeric.charAt(0))  &&  isDigits(numeric.substring(0,  decPos));  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	Character  dec  =  Character.isDigit(numeric.charAt(0))  &&  isDigits(numeric.substring(0,  decPos));	      Character    dec    =    Character.isDigit(numeric.charAt(0));    	non-compiled	[CE]  	11	None	replace
60	[BUG]  [BUGGY]  String  dec  =  str.substring(expPos  +  1,  str.length());  [CE]  [FE]            NumberFormatException    [CONTEXT]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :    [BUGGY]  String  dec  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    if  (dec  ==  null      &&  exp  ==  null            &&  isDigits(numeric.substring(1))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	452	454	1	replace	String  dec  =  str.substring(expPos  +  1,  str.length());	      String    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	10	None	replace
