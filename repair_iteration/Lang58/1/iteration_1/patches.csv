bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  str);  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  str);  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  str);	  Throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	18	None	replace
2	[BUG]  [BUGGY]  Throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  does  not  exist. ");  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  does  not  exist. ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  does  not  exist. ");	  Throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	18	None	replace
3	[BUG]  [BUGGY]  Character.isDigit(numeric.charAt(0))&&  isDigits(numeric.charAt(1)))  {  return  createBigInteger(numeric);  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Character.isDigit(numeric.charAt(0))&&  isDigits(numeric.charAt(1)))  {  return  createBigInteger(numeric);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Character.isDigit(numeric.charAt(0))&&  isDigits(numeric.charAt(1)))  {  return  createBigInteger(numeric);	      Character.isDigit(numeric.charAt(0))    &&    isDigits(numeric.charAt(0)))    {    return    createBigInteger(numeric);    	non-compiled	[CE]  not  a  statement	22	None	replace
4	[BUG]  [BUGGY]  Character.isDigit(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  [CE]  not  a  statement  [FE]                NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Character.isDigit(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Character.isDigit(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);	      Character.isDigit(numeric.charAt(0))    &&    isDigits(numeric.charAt(0)))    {    return    createBigInteger(numeric);    	non-compiled	[CE]  not  a  statement	22	None	replace
5	[BUG]  [BUGGY]  Character.isDigit(numeric.charAt(0))&&  isDigits(numeric.charAt(1)))  {  return  createLong(numeric);  }  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Character.isDigit(numeric.charAt(0))&&  isDigits(numeric.charAt(1)))  {  return  createLong(numeric);  }  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Character.isDigit(numeric.charAt(0))&&  isDigits(numeric.charAt(1)))  {  return  createLong(numeric);  }	      Character.isDigit(numeric.charAt(0))    &&    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	21	None	replace
6	[BUG]  [BUGGY]  Character.isDigit(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Character.isDigit(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Character.isDigit(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }	      Character.isDigit(numeric.charAt(0))    &&    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	21	None	replace
7	[BUG]  [BUGGY]  throw  new  NumberFormatException(   "   "  +  str  +   "  is  not  a  valid  number.   ");  throw  new  NumberFormatException(   "   "  +  str  +   "  is  not  a  valid  number.   ");  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]    NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException(   "   "  +  str  +   "  is  not  a  valid  number.   ");  throw  new  NumberFormatException(   "   "  +  str  +   "  is  not  a  valid  number.   ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.   ");    throw  new  NumberFormatException(   "   "  +  str  +   "  is  not  a  valid  number.   ");	  	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	7	None	add
8	[BUG]  [BUGGY]  throw  new  NumberFormatException(   "   "  +  str  +   "  is  not  a  valid  number.   ");  Throw  new  NumberFormatException(   "   "  +  str  +   "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]      NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException(   "   "  +  str  +   "  is  not  a  valid  number.   ");  Throw  new  NumberFormatException(   "   "  +  str  +   "  is  not  a  valid  number.   ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.   ");    Throw  new  NumberFormatException(   "   "  +  str  +   "  is  not  a  valid  number.   ");	  	non-compiled	[CE]  not  a  statement	7	None	add
9	[BUG]  [BUGGY]  String  str  =  str.substring(1,  str.length());  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]            NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  str.substring(1,  str.length());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	String  str  =  str.substring(1,  str.length());	      String    str    =    str.substring(1,    str.length()    -    1);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	3	None	replace
10	[BUG]  [BUGGY]  String  str  =  str.substring(1,  string.length()  -  1);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]              NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  str.substring(1,  string.length()  -  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	String  str  =  str.substring(1,  string.length()  -  1);	      String    str    =    str.substring(1,    str.length()    -    1);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	3	None	replace
11	[BUG]  [BUGGY]  String.format( "Number  format  exception:  %s  is  not  a  valid  number.   ",  str));  [CE]  [FE]              NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String.format( "Number  format  exception:  %s  is  not  a  valid  number.   ",  str));  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	String.format( "Number  format  exception:  %s  is  not  a  valid  number.   ",  str));	  throw    new    NumberFormatException(String.format(   "Number    format    exception:    %s    is    not    a    valid    number.   ",    str));    	non-compiled	[CE]  	11	None	replace
12	[BUG]  [BUGGY]  throw  new  NumberFormatException(String.format( "Number  format  exception:  %s  is  not  a  valid  number.   ",  mant));  [CE]  cannot  find  symbol  [FE]                NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException(String.format( "Number  format  exception:  %s  is  not  a  valid  number.   ",  mant));  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	throw  new  NumberFormatException(String.format( "Number  format  exception:  %s  is  not  a  valid  number.   ",  mant));	  throw    new    NumberFormatException(String.format(   "Number    format    exception:    %s    is    not    a    valid    number.   ",    str));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
13	[BUG]  [BUGGY]  [FE]  NumberFormatException  [FE]        NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Character.isDigit(numeric.charAt(0));  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	add	Character.isDigit(numeric.charAt(0));	      Character.isDigit(numeric.charAt(0)));    	compilable	  [FE]  NumberFormatException  	19	1	replace
14	[BUG]  [BUGGY]  Character.isDigit(numeric.charAt(0));  [FE]  NumberFormatException  [FE]        NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Character.isDigit(numeric.charAt(0));  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Character.isDigit(numeric.charAt(0));	      Character.isDigit(numeric.charAt(0)));    	compilable	  [FE]  NumberFormatException  	19	1	replace
15	[BUG]  [BUGGY]  Character.isDigit(numeric.charAt(1)));  [CE]  ';'  expected  [FE]          NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Character.isDigit(numeric.charAt(1)));  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Character.isDigit(numeric.charAt(1)));	      Character.isDigit(numeric.charAt(0)));    	non-compiled	[CE]  ';'  expected	19	None	replace
16	[BUG]  [BUGGY]  Character.isDigit(numeric.charAt(0)),  str);  [CE]  ';'  expected  [FE]            NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Character.isDigit(numeric.charAt(0)),  str);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Character.isDigit(numeric.charAt(0)),  str);	      Character.isDigit(numeric.charAt(0)));    	non-compiled	[CE]  ';'  expected	19	None	replace
17	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]              NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  str.substring(0,  str.length());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	String  str  =  str.substring(0,  str.length());	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	4	None	replace
18	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length();  [CE]  ')'  expected  [FE]                NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  str.substring(0,  str.length();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	String  str  =  str.substring(0,  str.length();	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  ')'  expected	4	None	replace
19	[BUG]  [BUGGY]  NumberShort.parseNumber(numeric,  str);  [CE]  cannot  find  symbol  NumberShort  [FE]          NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  NumberShort.parseNumber(numeric,  str);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	NumberShort.parseNumber(numeric,  str);	      NumberShort.parseNumber(numeric);    	non-compiled	[CE]  cannot  find  symbol  NumberShort	14	None	replace
20	[BUG]  [BUGGY]  NumberShort.parseNumber(str);  [CE]  cannot  find  symbol  NumberShort  [FE]            NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  NumberShort.parseNumber(str);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	NumberShort.parseNumber(str);	      NumberShort.parseNumber(numeric);    	non-compiled	[CE]  cannot  find  symbol  NumberShort	14	None	replace
21	[BUG]  [BUGGY]  NumberShort.parseNumber(numeric.substring(1));  [CE]  cannot  find  symbol  NumberShort  [FE]              NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  NumberShort.parseNumber(numeric.substring(1));  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	NumberShort.parseNumber(numeric.substring(1));	      NumberShort.parseNumber(numeric);    	non-compiled	[CE]  cannot  find  symbol  NumberShort	14	None	replace
22	[BUG]  [BUGGY]  Integer  str  =  Integer.parseInt(numeric.substring(1));  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]            NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  Integer.parseInt(numeric.substring(1));  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Integer  str  =  Integer.parseInt(numeric.substring(1));	      Integer    str    =    Integer.parseInt(numeric);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	15	None	replace
23	[BUG]  [BUGGY]  Integer  str  =  Integer.parseInt(numeric.substring(2));  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]              NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  Integer.parseInt(numeric.substring(2));  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Integer  str  =  Integer.parseInt(numeric.substring(2));	      Integer    str    =    Integer.parseInt(numeric);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	15	None	replace
24	[BUG]  [BUGGY]  Integer  str  =  Integer.parseInt(numeric)+  1;  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]                NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  Integer.parseInt(numeric)+  1;  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Integer  str  =  Integer.parseInt(numeric)+  1;	      Integer    str    =    Integer.parseInt(numeric);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	15	None	replace
25	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]        NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	String  str  =  str.substring(0,  str.length()  +  1);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	1	None	replace
26	[BUG]  [BUGGY]  Throwables.wrap(numeric  + "  is  not  a  valid  number. ",  str);  [CE]  cannot  find  symbol  Throwables  [FE]        NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Throwables.wrap(numeric  + "  is  not  a  valid  number. ",  str);  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Throwables.wrap(numeric  + "  is  not  a  valid  number. ",  str);	  Throwables.wrap(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	12	None	replace
27	[BUG]  [BUGGY]  Throwables.wrap(numeric  + ",  is  not  a  valid  number. ");  [CE]  cannot  find  symbol  Throwables  [FE]          NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Throwables.wrap(numeric  + ",  is  not  a  valid  number. ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Throwables.wrap(numeric  + ",  is  not  a  valid  number. ");	  Throwables.wrap(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	12	None	replace
28	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Number  format  exception: "  +  str  + "  is  not  a  valid  number.n ");  [CE]  unreachable  statement  [FE]    NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException( "Number  format  exception: "  +  str  + "  is  not  a  valid  number.n ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	throw  new  NumberFormatException( "Number  format  exception: "  +  str  + "  is  not  a  valid  number.n ");	  throw    new    NumberFormatException(   "Number    format    exception:   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  unreachable  statement	10	None	replace
29	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Number  format  exception: "  +  str  + "  is  not  a  valid  number.  If(numeric.charAt(0)  ==  '-')  {  throw  new  NumberFormatException( " ");  }  [CE]  unclosed  string  literal  [FE]      NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException( "Number  format  exception: "  +  str  + "  is  not  a  valid  number.  If(numeric.charAt(0)  ==  '-')  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	throw  new  NumberFormatException( "Number  format  exception: "  +  str  + "  is  not  a  valid  number.  If(numeric.charAt(0)  ==  '-')  {  throw  new  NumberFormatException( " ");  }	  throw    new    NumberFormatException(   "Number    format    exception:   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
30	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  str);  [CE]  no  suitable  constructor  found  for  NumberFormatException(String,String)  [FE]        NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  str);  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  str);	  throw    new    NumberFormatException(numeric    +   ",    is    not    a    valid    number.   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  NumberFormatException(String,String)	17	None	replace
31	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  +   "  is  not  a  valid  number.   ");  throw  new  NumberFormatException(numeric  +   "  is  not  a  valid  number.   ");  [CE]  cannot  find  symbol  NumberShort  [FE]    NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException(numeric  +   "  is  not  a  valid  number.   ");  throw  new  NumberFormatException(numeric  +   "  is  not  a  valid  number.   ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    throw  new  NumberFormatException(numeric  +   "  is  not  a  valid  number.   ");	  	non-compiled	[CE]  cannot  find  symbol  NumberShort	5	None	add
32	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  +   "  is  not  a  valid  number.   ");  Throw  new  NumberFormatException(numeric  +   "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]      NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException(numeric  +   "  is  not  a  valid  number.   ");  Throw  new  NumberFormatException(numeric  +   "  is  not  a  valid  number.   ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    Throw  new  NumberFormatException(numeric  +   "  is  not  a  valid  number.   ");	  	non-compiled	[CE]  not  a  statement	5	None	add
33	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Invalid  number: "  +  str  + "  is  not  a  valid  number. ");  [CE]  unreachable  statement  [FE]    NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException( "Invalid  number: "  +  str  + "  is  not  a  valid  number. ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	throw  new  NumberFormatException( "Invalid  number: "  +  str  + "  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  unreachable  statement	8	None	replace
34	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ");  [CE]  unreachable  statement  [FE]      NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  unreachable  statement	8	None	replace
35	[BUG]  [BUGGY]  throw  new  NumberFormatException(   "Number  format  exception:   "  +  str  +   "  is  not  a  valid  number.   ");  throw  new  NumberFormatException( "Number  format  exception:   "  +  str  +   "  is  not  a  valid  number.   ");  [CE]  cannot  find  symbol  NumberShort  [FE]    NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException(   "Number  format  exception:   "  +  str  +   "  is  not  a  valid  number.   ");  throw  new  NumberFormatException( "Number  format  exception:   "  +  str  +   "  is  not  a  valid  number.   ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	throw    new    NumberFormatException(   "Number    format    exception:   "    +    str    +   "    is    not    a    valid    number.   ");    throw  new  NumberFormatException( "Number  format  exception:   "  +  str  +   "  is  not  a  valid  number.   ");	  	non-compiled	[CE]  cannot  find  symbol  NumberShort	9	None	add
36	[BUG]  [BUGGY]  throw  new  NumberFormatException(   "Number  format  exception:   "  +  str  +   "  is  not  a  valid  number.   ");  Throw  new  NumberFormatException( "Number  format  exception:   "  +  str  +   "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]      NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException(   "Number  format  exception:   "  +  str  +   "  is  not  a  valid  number.   ");  Throw  new  NumberFormatException( "Number  format  exception:   "  +  str  +   "  is  not  a  valid  number.   ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	throw    new    NumberFormatException(   "Number    format    exception:   "    +    str    +   "    is    not    a    valid    number.   ");    Throw  new  NumberFormatException( "Number  format  exception:   "  +  str  +   "  is  not  a  valid  number.   ");	  	non-compiled	[CE]  not  a  statement	9	None	add
37	[BUG]  [BUGGY]  Character  numeric  =  Character.toLowerCase(numeric,  str);  [CE]  variable  numeric  is  already  defined  in  method  createNumber(String)  [FE]        NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Character  numeric  =  Character.toLowerCase(numeric,  str);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Character  numeric  =  Character.toLowerCase(numeric,  str);	      Character    numeric    =    Character.toLowerCase(numeric);    	non-compiled	[CE]  variable  numeric  is  already  defined  in  method  createNumber(String)	13	None	replace
38	[BUG]  [BUGGY]  Character  numeric  =  Character.toLowerCase(numeric.charAt(0));  [CE]  variable  numeric  is  already  defined  in  method  createNumber(String)  [FE]          NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Character  numeric  =  Character.toLowerCase(numeric.charAt(0));  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Character  numeric  =  Character.toLowerCase(numeric.charAt(0));	      Character    numeric    =    Character.toLowerCase(numeric);    	non-compiled	[CE]  variable  numeric  is  already  defined  in  method  createNumber(String)	13	None	replace
39	[BUG]  [BUGGY]  Character  numeric  =  Character.toUpperCase(numeric);  [CE]  variable  numeric  is  already  defined  in  method  createNumber(String)  [FE]            NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Character  numeric  =  Character.toUpperCase(numeric);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Character  numeric  =  Character.toUpperCase(numeric);	      Character    numeric    =    Character.toLowerCase(numeric);    	non-compiled	[CE]  variable  numeric  is  already  defined  in  method  createNumber(String)	13	None	replace
40	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  is  numeric. ");  [CE]  unreachable  statement  [FE]    NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  is  numeric. ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  is  numeric. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  unreachable  statement	6	None	replace
41	[BUG]  [BUGGY]  Number  number  =  str.substring(0,  str.length());  [CE]  incompatible  types  [FE]          NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Number  number  =  str.substring(0,  str.length());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Number  number  =  str.substring(0,  str.length());	      Number    number    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  incompatible  types	2	None	replace
42	[BUG]  [BUGGY]  Number  number  =  str.substring(0,  str.length()  *  1);  [CE]  incompatible  types  [FE]            NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Number  number  =  str.substring(0,  str.length()  *  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Number  number  =  str.substring(0,  str.length()  *  1);	      Number    number    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  incompatible  types	2	None	replace
43	[BUG]  [BUGGY]  Character.isDigit(numeric.charAt(0))&&  isDigits(numeric.charAt(1)))  {  return  createLong(numeric);  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Character.isDigit(numeric.charAt(0))&&  isDigits(numeric.charAt(1)))  {  return  createLong(numeric);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Character.isDigit(numeric.charAt(0))&&  isDigits(numeric.charAt(1)))  {  return  createLong(numeric);	      Character.isDigit(numeric.charAt(0))    &&    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    	non-compiled	[CE]  not  a  statement	20	None	replace
44	[BUG]  [BUGGY]  Character.isDigit(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Character.isDigit(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Character.isDigit(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);	      Character.isDigit(numeric.charAt(0))    &&    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    	non-compiled	[CE]  not  a  statement	20	None	replace
45	[BUG]  [BUGGY]  Integer  str  =  numeric.intValue();  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]              NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  numeric.intValue();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Integer  str  =  numeric.intValue();	      Integer    str    =    Integer.valueOf(0);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	16	None	replace
46	[BUG]  [BUGGY]  Integer  str  =  null;  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]                NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  null;  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Integer  str  =  null;	      Integer    str    =    Integer.valueOf(0);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	16	None	replace
47	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()));  [CE]  ';'  expected  [FE]        NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  str.substring(0,  str.length()));  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	String  str  =  str.substring(0,  str.length()));	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ';'  expected	1	None	replace
48	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  numeric  value  returns  numeric. ");  [CE]  unreachable  statement  [FE]        NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  numeric  value  returns  numeric. ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  numeric  value  returns  numeric. ");	  throw    new    NumberFormatException(numeric    +   ",    is    not    a    valid    number.   ");    	non-compiled	[CE]  unreachable  statement	17	None	replace
49	[BUG]  [BUGGY]  Character.isDigit(numeric.charAt(0))  &&  isDigits(numeric.substring(1))  &&(numeric.charAt(1)  ==  '-'  ||  Character.isDigit(numeric.charAt(1))  [CE]  ')'  expected  [FE]        NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Character.isDigit(numeric.charAt(0))  &&  isDigits(numeric.substring(1))  &&(numeric.charAt(1)  ==  '-'  ||  Character.isDigit(numeric.charAt(1))  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Character.isDigit(numeric.charAt(0))  &&  isDigits(numeric.substring(1))  &&(numeric.charAt(1)  ==  '-'  ||  Character.isDigit(numeric.charAt(1))	      Character.isDigit(numeric.charAt(0)));    	non-compiled	[CE]  ')'  expected	19	None	replace
50	[BUG]  [BUGGY]  Throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  is  less  than  1  character. ");  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  is  less  than  1  character. ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  is  less  than  1  character. ");	  Throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	18	None	replace
51	[BUG]  [BUGGY]  Throwables.wrap(numeric  + "  is  not  a  valid  number: ");  [CE]  cannot  find  symbol  Throwables  [FE]        NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Throwables.wrap(numeric  + "  is  not  a  valid  number: ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Throwables.wrap(numeric  + "  is  not  a  valid  number: ");	  Throwables.wrap(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	12	None	replace
52	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   "  +  str);  [CE]  unreachable  statement  [FE]    NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   "  +  str);  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   "  +  str);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  unreachable  statement	6	None	replace
53	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Number  format  exception: "  +  mant  + "  is  not  a  valid  number.   ");  [CE]  unreachable  statement  [FE]    NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException( "Number  format  exception: "  +  mant  + "  is  not  a  valid  number.   ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	throw  new  NumberFormatException( "Number  format  exception: "  +  mant  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(   "Number    format    exception:   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  unreachable  statement	10	None	replace
54	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Number  format  exception: "  +  str  + "  is  not  a  valid  number.  If(numeric.charAt(0)  ==  '-')  {  return  createBigInteger(numeric);  }  [CE]  unclosed  string  literal  [FE]      NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException( "Number  format  exception: "  +  str  + "  is  not  a  valid  number.  If(numeric.charAt(0)  ==  '-')  {  return  createBigInteger(numeric);  }  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	throw  new  NumberFormatException( "Number  format  exception: "  +  str  + "  is  not  a  valid  number.  If(numeric.charAt(0)  ==  '-')  {  return  createBigInteger(numeric);  }	  throw    new    NumberFormatException(   "Number    format    exception:   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
55	[BUG]  [BUGGY]  Character.isDigit(numeric.charAt(1))  &&  isDigits(numeric.charAt(1)))  {  return  createBigInteger(numeric);  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Character.isDigit(numeric.charAt(1))  &&  isDigits(numeric.charAt(1)))  {  return  createBigInteger(numeric);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Character.isDigit(numeric.charAt(1))  &&  isDigits(numeric.charAt(1)))  {  return  createBigInteger(numeric);	      Character.isDigit(numeric.charAt(0))    &&    isDigits(numeric.charAt(0)))    {    return    createBigInteger(numeric);    	non-compiled	[CE]  not  a  statement	22	None	replace
56	[BUG]  [BUGGY]  Number  number  =  str.substring(0,  str.length()  -  1,  numeric.length());  [CE]  no  suitable  method  found  for  substring(int,int,int)  [FE]          NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Number  number  =  str.substring(0,  str.length()  -  1,  numeric.length());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Number  number  =  str.substring(0,  str.length()  -  1,  numeric.length());	      Number    number    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	2	None	replace
57	[BUG]  [BUGGY]  Character.isDigit(numeric.charAt(0))&&  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Character.isDigit(numeric.charAt(0))&&  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Character.isDigit(numeric.charAt(0))&&  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }	      Character.isDigit(numeric.charAt(0))    &&    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	21	None	replace
58	[BUG]  [BUGGY]  Character.isDigit(numeric.charAt(0))&&  isDigits(numeric.charAt(1)))  {  return  createInteger(numeric);  }  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Character.isDigit(numeric.charAt(0))&&  isDigits(numeric.charAt(1)))  {  return  createInteger(numeric);  }  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Character.isDigit(numeric.charAt(0))&&  isDigits(numeric.charAt(1)))  {  return  createInteger(numeric);  }	      Character.isDigit(numeric.charAt(0))    &&    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	21	None	replace
59	[BUG]  [BUGGY]  String  str  =  str.substring(1,  number.length()  -  1);  [CE]  orphaned  case  [FE]            NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  str.substring(1,  number.length()  -  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	String  str  =  str.substring(1,  number.length()  -  1);	      String    str    =    str.substring(1,    str.length()    -    1);    	non-compiled	[CE]  orphaned  case	3	None	replace
60	[BUG]  [BUGGY]  String  str  =  str.substring(1,  string.length());  [CE]  orphaned  case  [FE]              NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  str.substring(1,  string.length());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	String  str  =  str.substring(1,  string.length());	      String    str    =    str.substring(1,    str.length()    -    1);    	non-compiled	[CE]  orphaned  case	3	None	replace
61	[BUG]  [BUGGY]  String  msg( "Number  format  exception:  %s  is  not  a  valid  number.   ",  str));  [CE]  [FE]              NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  msg( "Number  format  exception:  %s  is  not  a  valid  number.   ",  str));  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	String  msg( "Number  format  exception:  %s  is  not  a  valid  number.   ",  str));	  throw    new    NumberFormatException(String.format(   "Number    format    exception:    %s    is    not    a    valid    number.   ",    str));    	non-compiled	[CE]  	11	None	replace
62	[BUG]  [BUGGY]  NumberShort.parseNumber(numeric)+  str;  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  NumberShort.parseNumber(numeric)+  str;  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	NumberShort.parseNumber(numeric)+  str;	      NumberShort.parseNumber(numeric);    	non-compiled	[CE]  not  a  statement	14	None	replace
63	[BUG]  [BUGGY]  Character.isDigit(numeric.charAt(0))&&  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Character.isDigit(numeric.charAt(0))&&  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Character.isDigit(numeric.charAt(0))&&  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);	      Character.isDigit(numeric.charAt(0))    &&    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    	non-compiled	[CE]  not  a  statement	20	None	replace
64	[BUG]  [BUGGY]  Character.isDigit(numeric.charAt(0))&&  isDigits(numeric.charAt(1)))  {  return  createInteger(numeric);  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Character.isDigit(numeric.charAt(0))&&  isDigits(numeric.charAt(1)))  {  return  createInteger(numeric);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Character.isDigit(numeric.charAt(0))&&  isDigits(numeric.charAt(1)))  {  return  createInteger(numeric);	      Character.isDigit(numeric.charAt(0))    &&    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    	non-compiled	[CE]  not  a  statement	20	None	replace
65	[BUG]  [BUGGY]  Integer  s  =  Integer.parseInt(numeric);  [CE]  orphaned  case  [FE]            NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  s  =  Integer.parseInt(numeric);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Integer  s  =  Integer.parseInt(numeric);	      Integer    str    =    Integer.parseInt(numeric);    	non-compiled	[CE]  orphaned  case	15	None	replace
66	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  +   "  is  not  a  valid  number.   ");  new  NumberFormatException(numeric  +   "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]    NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException(numeric  +   "  is  not  a  valid  number.   ");  new  NumberFormatException(numeric  +   "  is  not  a  valid  number.   ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    new  NumberFormatException(numeric  +   "  is  not  a  valid  number.   ");	  	non-compiled	[CE]  not  a  statement	5	None	add
67	[BUG]  [BUGGY]  Number  number  =  str.substring(0,  str.length()  -  1,  null);  [CE]  orphaned  case  [FE]          NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Number  number  =  str.substring(0,  str.length()  -  1,  null);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Number  number  =  str.substring(0,  str.length()  -  1,  null);	      Number    number    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  orphaned  case	2	None	replace
68	[BUG]  [BUGGY]  Character  numeric  =  Character.toLowerCase(numeric,  dec);  [CE]  orphaned  case  [FE]        NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Character  numeric  =  Character.toLowerCase(numeric,  dec);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Character  numeric  =  Character.toLowerCase(numeric,  dec);	      Character    numeric    =    Character.toLowerCase(numeric);    	non-compiled	[CE]  orphaned  case	13	None	replace
69	[BUG]  [BUGGY]  Throw  new  NumberFormatException(numeric  + ",  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Throw  new  NumberFormatException(numeric  + ",  is  not  a  valid  number. ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Throw  new  NumberFormatException(numeric  + ",  is  not  a  valid  number. ");	  Throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	18	None	replace
70	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  is  less  than  1  character. ");  [CE]  orphaned  case  [FE]    NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  is  less  than  1  character. ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  is  less  than  1  character. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  orphaned  case	6	None	replace
71	[BUG]  [BUGGY]  Throw  new  NumberFormatException(String.format( "Number  format  exception:  %s  is  not  a  valid  number. ",  str));  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Throw  new  NumberFormatException(String.format( "Number  format  exception:  %s  is  not  a  valid  number. ",  str));  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Throw  new  NumberFormatException(String.format( "Number  format  exception:  %s  is  not  a  valid  number. ",  str));	  throw    new    NumberFormatException(String.format(   "Number    format    exception:    %s    is    not    a    valid    number.   ",    str));    	non-compiled	[CE]  not  a  statement	11	None	replace
72	[BUG]  [BUGGY]  Character.isDigit(numeric.charAt(0))  &&  isDigits(numeric.substring(1));  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Character.isDigit(numeric.charAt(0))  &&  isDigits(numeric.substring(1));  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Character.isDigit(numeric.charAt(0))  &&  isDigits(numeric.substring(1));	      Character.isDigit(numeric.charAt(0)));    	non-compiled	[CE]  not  a  statement	19	None	replace
73	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.  If(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))));  [CE]  unclosed  string  literal  [FE]    NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.  If(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))));  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.  If(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))));	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  unclosed  string  literal	8	None	replace
74	[BUG]  [BUGGY]  NumberShort.parseInt(numeric);  [CE]  orphaned  case  [FE]          NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  NumberShort.parseInt(numeric);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	NumberShort.parseInt(numeric);	      NumberShort.parseNumber(numeric);    	non-compiled	[CE]  orphaned  case	14	None	replace
75	[BUG]  [BUGGY]  Integer  str  =  Integer.parseInt(numeric).intValue();  [CE]  orphaned  case  [FE]            NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  Integer.parseInt(numeric).intValue();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Integer  str  =  Integer.parseInt(numeric).intValue();	      Integer    str    =    Integer.parseInt(numeric);    	non-compiled	[CE]  orphaned  case	15	None	replace
76	[BUG]  [BUGGY]  String  str  =  str.substring(1,  number.length());  [CE]  orphaned  case  [FE]            NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  str.substring(1,  number.length());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	String  str  =  str.substring(1,  number.length());	      String    str    =    str.substring(1,    str.length()    -    1);    	non-compiled	[CE]  orphaned  case	3	None	replace
77	[BUG]  [BUGGY]  Integer  str  =  NumberUtils.createInteger(numeric);  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]    &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  NumberUtils.createInteger(numeric);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.7071067811865475	464	464	1	replace	Integer  str  =  NumberUtils.createInteger(numeric);	      Integer    str    =    Integer.valueOf(0);    	non-compiled	[CE]  not  a  statement	16	None	replace
