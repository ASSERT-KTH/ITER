bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  dec  =  str.substring(decPos  +  1,  str.length()  -  2);  [CE]  [FE]          NumberFormatException    [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {    [BUGGY]  String  dec  =  str.substring(decPos  +  1,  str.length()  -  2);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	444	444	1	replace	String  dec  =  str.substring(decPos  +  1,  str.length()  -  2);	      String    dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	7	None	replace
2	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1);  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {    [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	444	444	1	replace	String  dec  =  str.substring(0,  str.length()  -  1);	      String    dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	7	None	replace
3	[BUG]  [BUGGY]  String  dec  =  str.substring(decPos  +  1,  str.length()  +  1);  [CE]  [FE]              NumberFormatException    [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {    [BUGGY]  String  dec  =  str.substring(decPos  +  1,  str.length()  +  1);  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	444	444	1	replace	String  dec  =  str.substring(decPos  +  1,  str.length()  +  1);	      String    dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	7	None	replace
4	[BUG]  [BUGGY]  exp  =  str.substring(0,  expPos  +  1);  [CE]  [FE]        NumberFormatException    [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {    [BUGGY]  exp  =  str.substring(0,  expPos  +  1);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	444	444	1	replace	exp  =  str.substring(0,  expPos  +  1);	  exp    =    str.substring(0,    expPos);    	non-compiled	[CE]  	8	None	replace
5	[BUG]  [BUGGY]  exp  =  str.substring(0,  expPos  -  1);  [CE]  [FE]          NumberFormatException    [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {    [BUGGY]  exp  =  str.substring(0,  expPos  -  1);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	444	444	1	replace	exp  =  str.substring(0,  expPos  -  1);	  exp    =    str.substring(0,    expPos);    	non-compiled	[CE]  	8	None	replace
6	[BUG]  [BUGGY]  exp  =  str.substring(0,  decPos);  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {    [BUGGY]  exp  =  str.substring(0,  decPos);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	444	444	1	replace	exp  =  str.substring(0,  decPos);	  exp    =    str.substring(0,    expPos);    	non-compiled	[CE]  	8	None	replace
7	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length());  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {    [BUGGY]  exp  =  str.substring(0,  str.length());  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	444	444	1	replace	exp  =  str.substring(0,  str.length());	  exp    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	3	None	replace
8	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  +  1);  [CE]  [FE]              NumberFormatException    [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {    [BUGGY]  exp  =  str.substring(0,  str.length()  +  1);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	444	444	1	replace	exp  =  str.substring(0,  str.length()  +  1);	  exp    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	3	None	replace
9	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length())+  1;  [CE]  [FE]                NumberFormatException    [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {    [BUGGY]  exp  =  str.substring(0,  str.length())+  1;  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	444	444	1	replace	exp  =  str.substring(0,  str.length())+  1;	  exp    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	3	None	replace
10	[BUG]  [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length());  [CE]  [FE]          NumberFormatException    [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {    [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	444	444	1	replace	expPos  =  str.substring(expPos  +  1,  str.length());	  exp    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  	2	None	replace
11	[BUG]  [BUGGY]  exp  = " "  +  str.substring(expPos  +  1,  str.length());  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {    [BUGGY]  exp  = " "  +  str.substring(expPos  +  1,  str.length());  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	444	444	1	replace	exp  = " "  +  str.substring(expPos  +  1,  str.length());	  exp    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  	2	None	replace
12	[BUG]  [BUGGY]  exp  =  str.substring(prefix  +  1,  str.length()  -  1);  [CE]  [FE]          NumberFormatException    [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {    [BUGGY]  exp  =  str.substring(prefix  +  1,  str.length()  -  1);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	444	444	1	replace	exp  =  str.substring(prefix  +  1,  str.length()  -  1);	  exp    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  	9	None	replace
13	[BUG]  [BUGGY]  String  dec  =  str.substring(expPos  +  1,  str.length());  [CE]  [FE]        NumberFormatException    [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {    [BUGGY]  String  dec  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	444	444	1	replace	String  dec  =  str.substring(expPos  +  1,  str.length());	      String    dec    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  	6	None	replace
14	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  [FE]              NumberFormatException    [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	444	444	1	replace	exp  =  str.substring(expPos  +  1,  str.length()  -  2);	  exp    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  	4	None	replace
15	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  +  1);  [CE]  [FE]                NumberFormatException    [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  +  1);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	444	444	1	replace	exp  =  str.substring(expPos  +  1,  str.length()  +  1);	  exp    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  	4	None	replace
16	[BUG]  [BUGGY]  String  dec  =  str.substring(decPos  +  1,  expPos.length());  [CE]  [FE]          NumberFormatException    [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {    [BUGGY]  String  dec  =  str.substring(decPos  +  1,  expPos.length());  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	444	444	1	replace	String  dec  =  str.substring(decPos  +  1,  expPos.length());	      String    dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	7	None	replace
17	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  -  1  +  1);  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {    [BUGGY]  exp  =  str.substring(0,  str.length()  -  1  +  1);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	444	444	1	replace	exp  =  str.substring(0,  str.length()  -  1  +  1);	  exp    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	3	None	replace
18	[BUG]  [BUGGY]  exp  =  str.substring(0,  expPos  +  2);  [CE]  [FE]        NumberFormatException    [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {    [BUGGY]  exp  =  str.substring(0,  expPos  +  2);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	444	444	1	replace	exp  =  str.substring(0,  expPos  +  2);	  exp    =    str.substring(0,    expPos);    	non-compiled	[CE]  	8	None	replace
19	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  decPos);  [CE]  [FE]        NumberFormatException    [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  decPos);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	444	444	1	replace	exp  =  str.substring(expPos  +  1,  decPos);	  exp    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  	11	None	replace
20	[BUG]  [BUGGY]  exp  =  str.substring(decPos  +  1,  expPos  +  1);  [CE]  [FE]          NumberFormatException    [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {    [BUGGY]  exp  =  str.substring(decPos  +  1,  expPos  +  1);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	444	444	1	replace	exp  =  str.substring(decPos  +  1,  expPos  +  1);	  exp    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  	11	None	replace
21	[BUG]  [BUGGY]  exp  =  str.substring(decPos  +  1,  expPos  -  1);  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {    [BUGGY]  exp  =  str.substring(decPos  +  1,  expPos  -  1);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	444	444	1	replace	exp  =  str.substring(decPos  +  1,  expPos  -  1);	  exp    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  	11	None	replace
22	[BUG]  [BUGGY]  char  dec  =  str.substring(decPos  +  1,  str.length());  [CE]  [FE]        NumberFormatException    [CONTEXT]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {    [BUGGY]  char  dec  =  str.substring(decPos  +  1,  str.length());  [BUGGY]    exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	444	444	1	replace	char  dec  =  str.substring(decPos  +  1,  str.length());	      String    dec    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  	6	None	replace
