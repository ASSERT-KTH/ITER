bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    String  dec  =  str.substring(0,  str.length()  -  1);  [CE]  [FE]    NumberFormatException  [CONTEXT]  if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  [BUGGY]    String  dec  =  str.substring(0,  str.length()  -  1);  [BUGGY]  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	    String  dec  =  str.substring(0,  str.length()  -  1);		non-compiled	[CE]  	42	None	add
2	[BUG]  [BUGGY]    String  numeric  =  str.substring(0,  str.length()  -  1);  [CE]  [FE]      NumberFormatException  [CONTEXT]  if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  [BUGGY]    String  numeric  =  str.substring(0,  str.length()  -  1);  [BUGGY]  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	    String  numeric  =  str.substring(0,  str.length()  -  1);		non-compiled	[CE]  	42	None	add
3	[BUG]  [BUGGY]    Character  dec  =  Character.getDigit(numeric.charAt(0));  [CE]  [FE]        NumberFormatException  [CONTEXT]  if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  [BUGGY]    Character  dec  =  Character.getDigit(numeric.charAt(0));  [BUGGY]  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	    Character  dec  =  Character.getDigit(numeric.charAt(0));		non-compiled	[CE]  	42	None	add
4	[BUG]  [BUGGY]    String  dec  =  str.substring(0,  str.length()  -  2);  [CE]  [FE]          NumberFormatException  [CONTEXT]  if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  [BUGGY]    String  dec  =  str.substring(0,  str.length()  -  2);  [BUGGY]  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	    String  dec  =  str.substring(0,  str.length()  -  2);		non-compiled	[CE]  	42	None	add
5	[BUG]  [BUGGY]  return  createBigInteger(numeric);  [CE]  [FE]    NumberFormatException  [CONTEXT]  if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  [BUGGY]  return  createBigInteger(numeric);  [BUGGY]  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	return  createBigInteger(numeric);	return  createLong(numeric);  	non-compiled	[CE]  	41	None	replace
6	[BUG]  [BUGGY]  return  createInteger(numeric);  [CE]  [FE]      NumberFormatException  [CONTEXT]  if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  [BUGGY]  return  createInteger(numeric);  [BUGGY]  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	return  createInteger(numeric);	return  createLong(numeric);  	non-compiled	[CE]  	41	None	replace
7	[BUG]  [BUGGY]  return  createBigDecimal(numeric);  [CE]  [FE]        NumberFormatException  [CONTEXT]  if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  [BUGGY]  return  createBigDecimal(numeric);  [BUGGY]  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	return  createBigDecimal(numeric);	return  createLong(numeric);  	non-compiled	[CE]  	41	None	replace
8	[BUG]  [BUGGY]    Integer  dec  =  createInteger(numeric);  [CE]  [FE]    NumberFormatException  [CONTEXT]  if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  [BUGGY]    Integer  dec  =  createInteger(numeric);  [BUGGY]  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	    Integer  dec  =  createInteger(numeric);		non-compiled	[CE]  	42	None	add
9	[BUG]  [BUGGY]    Numeric  dec  =  str.substring(0,  str.length()  -  1);  [CE]  [FE]      NumberFormatException  [CONTEXT]  if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  [BUGGY]    Numeric  dec  =  str.substring(0,  str.length()  -  1);  [BUGGY]  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	    Numeric  dec  =  str.substring(0,  str.length()  -  1);		non-compiled	[CE]  	42	None	add
10	[BUG]  [BUGGY]    NumberFormatException  e  =  new  NumberFormatException(str);  [CE]  [FE]        NumberFormatException  [CONTEXT]  if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  [BUGGY]    NumberFormatException  e  =  new  NumberFormatException(str);  [BUGGY]  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	    NumberFormatException  e  =  new  NumberFormatException(str);		non-compiled	[CE]  	42	None	add
11	[BUG]  [BUGGY]    NumberFormatException  e  =  new  NumberFormatException(str,  dec);  [CE]  [FE]          NumberFormatException  [CONTEXT]  if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  [BUGGY]    NumberFormatException  e  =  new  NumberFormatException(str,  dec);  [BUGGY]  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	    NumberFormatException  e  =  new  NumberFormatException(str,  dec);		non-compiled	[CE]  	42	None	add
12	[BUG]  [BUGGY]    if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong  [CE]  [FE]    NumberFormatException  [CONTEXT]  if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  [BUGGY]    if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong  [BUGGY]  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	    if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong		non-compiled	[CE]  	42	None	add
13	[BUG]  [BUGGY]    if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu  [CE]  [FE]      NumberFormatException  [CONTEXT]  if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  [BUGGY]    if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu  [BUGGY]  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	    if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu		non-compiled	[CE]  	42	None	add
14	[BUG]  [BUGGY]    if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createBigInteger(numeric);  }  [CE]  [FE]        NumberFormatException  [CONTEXT]  if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  [BUGGY]    if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createBigInteger(numeric);  }  [BUGGY]  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	    if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createBigInteger(numeric);  }		non-compiled	[CE]  	42	None	add
15	[BUG]  [BUGGY]    if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  (numeric.charAt(0)  ==  '-'  &&  Character.isDigit(numeric.charAt(0))))  {  return  createLong  [CE]  [FE]          NumberFormatException  [CONTEXT]  if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {  [BUGGY]    if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  (numeric.charAt(0)  ==  '-'  &&  Character.isDigit(numeric.charAt(0))))  {  return  createLong  [BUGGY]  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	    if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  (numeric.charAt(0)  ==  '-'  &&  Character.isDigit(numeric.charAt(0))))  {  return  createLong		non-compiled	[CE]  	42	None	add
