bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  dec  =  createLong(numeric);  [CE]  [FE]        NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  Integer  dec  =  createLong(numeric);  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Integer  dec  =  createLong(numeric);	      Integer    dec    =    createInteger(numeric);    	non-compiled	[CE]  	8	None	replace
2	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric.substring(1));  [CE]  [FE]          NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  Integer  dec  =  createInteger(numeric.substring(1));  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Integer  dec  =  createInteger(numeric.substring(1));	      Integer    dec    =    createInteger(numeric);    	non-compiled	[CE]  	8	None	replace
3	[BUG]  [BUGGY]  Integer  dec  =  createBigInteger(numeric);  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  Integer  dec  =  createBigInteger(numeric);  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Integer  dec  =  createBigInteger(numeric);	      Integer    dec    =    createInteger(numeric);    	non-compiled	[CE]  	8	None	replace
4	[BUG]  [BUGGY]  Integer  dec  =  createInteger(0);  [CE]  [FE]              NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  Integer  dec  =  createInteger(0);  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Integer  dec  =  createInteger(0);	      Integer    dec    =    createInteger(numeric);    	non-compiled	[CE]  	8	None	replace
5	[BUG]  [BUGGY]  return  createBigInteger(numeric.substring(1));  [CE]  [FE]        NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  return  createBigInteger(numeric.substring(1));  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	return  createBigInteger(numeric.substring(1));	  return    createBigInteger(numeric);    	non-compiled	[CE]  	5	None	replace
6	[BUG]  [BUGGY]  return  createBigDecimal(numeric.substring(1));  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  return  createBigDecimal(numeric.substring(1));  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	return  createBigDecimal(numeric.substring(1));	  return    createBigDecimal(numeric);    	non-compiled	[CE]  	7	None	replace
7	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong  [CE]  [FE]          NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong(nu    	non-compiled	[CE]  	13	None	replace
8	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong(nu    	non-compiled	[CE]  	13	None	replace
9	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length());  [CE]  [FE]        NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  String  dec  =  str.substring(0,  str.length());  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	String  dec  =  str.substring(0,  str.length());	      String    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	1	None	replace
10	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length();  [CE]  [FE]          NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  String  dec  =  str.substring(0,  str.length();  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	String  dec  =  str.substring(0,  str.length();	      String    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	1	None	replace
11	[BUG]  [BUGGY]  State  state  =(State)numeric.getValue();  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  State  state  =(State)numeric.getValue();  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	State  state  =(State)numeric.getValue();	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  	14	None	replace
12	[BUG]  [BUGGY]  return  createBoolean(numeric);  [CE]  [FE]          NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  return  createBoolean(numeric);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	return  createBoolean(numeric);	  return    createInteger(numeric);    	non-compiled	[CE]  	6	None	replace
13	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric);  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric);  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(numeric);	      NumberFormatException    e    =    new    NumberFormatException(str);    	non-compiled	[CE]  	10	None	replace
14	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric.substring(1));  [CE]  [FE]              NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric.substring(1));  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(numeric.substring(1));	      NumberFormatException    e    =    new    NumberFormatException(str);    	non-compiled	[CE]  	10	None	replace
15	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(dec);  [CE]  [FE]                NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(dec);  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(dec);	      NumberFormatException    e    =    new    NumberFormatException(str);    	non-compiled	[CE]  	10	None	replace
16	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric,  str);  [CE]  [FE]                  NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric,  str);  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(numeric,  str);	      NumberFormatException    e    =    new    NumberFormatException(str);    	non-compiled	[CE]  	10	None	replace
17	[BUG]  [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(0),  str);  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(0),  str);  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Character  dec  =  Character.getDigit(numeric.charAt(0),  str);	      Character    dec    =    Character.getDigit(numeric.charAt(0));    	non-compiled	[CE]  	3	None	replace
18	[BUG]  [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(0),  exp);  [CE]  [FE]              NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(0),  exp);  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Character  dec  =  Character.getDigit(numeric.charAt(0),  exp);	      Character    dec    =    Character.getDigit(numeric.charAt(0));    	non-compiled	[CE]  	3	None	replace
19	[BUG]  [BUGGY]  Character  dec  =  Character.getDigit(numeric.substring(1));  [CE]  [FE]                NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  Character  dec  =  Character.getDigit(numeric.substring(1));  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Character  dec  =  Character.getDigit(numeric.substring(1));	      Character    dec    =    Character.getDigit(numeric.charAt(0));    	non-compiled	[CE]  	3	None	replace
20	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  str.length());  [CE]  [FE]          NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  String  numeric  =  str.substring(0,  str.length());  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	String  numeric  =  str.substring(0,  str.length());	      String    numeric    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	2	None	replace
21	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  str.length()  +  1);  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  String  numeric  =  str.substring(0,  str.length()  +  1);  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	String  numeric  =  str.substring(0,  str.length()  +  1);	      String    numeric    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	2	None	replace
22	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(dec,  str);  [CE]  [FE]              NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(dec,  str);  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(dec,  str);	      NumberFormatException    e    =    new    NumberFormatException(str,    dec);    	non-compiled	[CE]  	11	None	replace
23	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric,  dec);  [CE]  [FE]                NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric,  dec);  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(numeric,  dec);	      NumberFormatException    e    =    new    NumberFormatException(str,    dec);    	non-compiled	[CE]  	11	None	replace
24	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(mant,  str,  dec);  [CE]  [FE]                  NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(mant,  str,  dec);  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(mant,  str,  dec);	      NumberFormatException    e    =    new    NumberFormatException(str,    dec);    	non-compiled	[CE]  	11	None	replace
25	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  (numeric.charAt(0)  ==  '-'  &&  Character.isDigit(numeric.charAt(0))))  {  return  createLong  [CE]  [FE]              NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  (numeric.charAt(0)  ==  '-'  &&  Character.isDigit(numeric.charAt(0))))  {  return  createLong  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  (numeric.charAt(0)  ==  '-'  &&  Character.isDigit(numeric.charAt(0))))  {  return  createLong	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    (numeric.charAt(0)    ==    '-'    &&    Character.isDigit(numeric.charAt(0))))    {    return    createLong    	non-compiled	[CE]  	15	None	replace
26	[BUG]  [BUGGY]  Numeric  dec  =  str.substring(0,  str.length());  [CE]  [FE]          NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  Numeric  dec  =  str.substring(0,  str.length());  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Numeric  dec  =  str.substring(0,  str.length());	      Numeric    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	9	None	replace
27	[BUG]  [BUGGY]  Numeric  dec  =  str.substring(0,  str.length();  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  Numeric  dec  =  str.substring(0,  str.length();  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Numeric  dec  =  str.substring(0,  str.length();	      Numeric    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	9	None	replace
28	[BUG]  [BUGGY]  return  createBigDecimal(numeric.substring(2));  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  return  createBigDecimal(numeric.substring(2));  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	return  createBigDecimal(numeric.substring(2));	  return    createBigDecimal(numeric);    	non-compiled	[CE]  	7	None	replace
29	[BUG]  [BUGGY]  Numeric  dec  =  str.substring(0,  str.length())+  1;  [CE]  [FE]          NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  Numeric  dec  =  str.substring(0,  str.length())+  1;  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Numeric  dec  =  str.substring(0,  str.length())+  1;	      Numeric    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	9	None	replace
30	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(mant);  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(mant);  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(mant);	      NumberFormatException    e    =    new    NumberFormatException(str);    	non-compiled	[CE]  	10	None	replace
31	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  str.length()  1);  [CE]  [FE]          NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  String  numeric  =  str.substring(0,  str.length()  1);  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	String  numeric  =  str.substring(0,  str.length()  1);	      String    numeric    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	2	None	replace
32	[BUG]  [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(numeric);  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(numeric);  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NeighborDecimal  dec  =  createNeighborDecimal(numeric);	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  	14	None	replace
33	[BUG]  [BUGGY]  NeighborDecimal  d  =  createNeighborDecimal(numeric);  [CE]  [FE]              NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  NeighborDecimal  d  =  createNeighborDecimal(numeric);  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NeighborDecimal  d  =  createNeighborDecimal(numeric);	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  	14	None	replace
34	[BUG]  [BUGGY]  NeighborDecimal  dec  =  getDecimalDecimal(numeric);  [CE]  [FE]                NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  NeighborDecimal  dec  =  getDecimalDecimal(numeric);  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NeighborDecimal  dec  =  getDecimalDecimal(numeric);	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  	14	None	replace
35	[BUG]  [BUGGY]  MutableDecimal  dec  =  createDecimal(numeric);  [CE]  [FE]                  NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  MutableDecimal  dec  =  createDecimal(numeric);  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	MutableDecimal  dec  =  createDecimal(numeric);	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  	14	None	replace
36	[BUG]  [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(0),  '-');  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(0),  '-');  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Character  dec  =  Character.getDigit(numeric.charAt(0),  '-');	      Character    dec    =    Character.getDigit(numeric.charAt(0));    	non-compiled	[CE]  	3	None	replace
37	[BUG]  [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(  [CE]  [FE]          NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	&&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong(nu    	non-compiled	[CE]  	13	None	replace
38	[BUG]  [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	&&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong(nu    	non-compiled	[CE]  	13	None	replace
39	[BUG]  [BUGGY]  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu  [CE]  [FE]              NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	&&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong(nu    	non-compiled	[CE]  	13	None	replace
40	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(mant,  str);  [CE]  [FE]              NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(mant,  str);  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(mant,  str);	      NumberFormatException    e    =    new    NumberFormatException(str,    dec);    	non-compiled	[CE]  	11	None	replace
41	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  1);  [CE]  [FE]        NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  String  dec  =  str.substring(0,  str.length()  1);  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	String  dec  =  str.substring(0,  str.length()  1);	      String    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	1	None	replace
42	[BUG]  [BUGGY]  parent  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createBigInt  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  parent  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createBigInt  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	parent  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createBigInt	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  	14	None	replace
43	[BUG]  [BUGGY]  parent  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createBigInteger  [CE]  [FE]              NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  parent  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createBigInteger  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	parent  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createBigInteger	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  	14	None	replace
44	[BUG]  [BUGGY]  parent  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createBigInte  [CE]  [FE]                NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  parent  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createBigInte  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	parent  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createBigInte	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  	14	None	replace
45	[BUG]  [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu  [CE]  [FE]          NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	&&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong(nu    	non-compiled	[CE]  	13	None	replace
46	[BUG]  [BUGGY]  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	&&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong(nu    	non-compiled	[CE]  	13	None	replace
47	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  (numeric.charAt(0)  ==  '-'  &&  Character.isDigit(numeric.charAt(0))))  {  return  createLong  [CE]  [FE]              NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  (numeric.charAt(0)  ==  '-'  &&  Character.isDigit(numeric.charAt(0))))  {  return  createLong  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  (numeric.charAt(0)  ==  '-'  &&  Character.isDigit(numeric.charAt(0))))  {  return  createLong	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    (numeric.charAt(0)    ==    '-'    &&    Character.isDigit(numeric.charAt(0))))    {    return    createLong    	non-compiled	[CE]  	15	None	replace
48	[BUG]  [BUGGY]  Numeric  dec  =  str.substring(0,  str.length()  1);  [CE]  [FE]          NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  Numeric  dec  =  str.substring(0,  str.length()  1);  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Numeric  dec  =  str.substring(0,  str.length()  1);	      Numeric    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	9	None	replace
49	[BUG]  [BUGGY]  return  createLeftInteger(numeric);  [CE]  [FE]        NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  return  createLeftInteger(numeric);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	return  createLeftInteger(numeric);	  return    createBigInteger(numeric);    	non-compiled	[CE]  	5	None	replace
50	[BUG]  [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(0),  dec);  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {    [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(0),  dec);  [BUGGY]    return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Character  dec  =  Character.getDigit(numeric.charAt(0),  dec);	      Character    dec    =    Character.getDigit(numeric.charAt(0));    	non-compiled	[CE]  	3	None	replace
