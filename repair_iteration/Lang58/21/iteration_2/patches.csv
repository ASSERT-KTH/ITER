bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  createLong(numeric.substring(1));  [CE]  [FE]            NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  return  createLong(numeric.substring(1));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	return  createLong(numeric.substring(1));	  return    createBigInteger(numeric.substring(1));    	non-compiled	[CE]  	5	None	replace
2	[BUG]  [BUGGY]  return  createBigInteger(numeric.substring(2));  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  return  createBigInteger(numeric.substring(2));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	return  createBigInteger(numeric.substring(2));	  return    createBigInteger(numeric.substring(1));    	non-compiled	[CE]  	5	None	replace
3	[BUG]  [BUGGY]  return  createBigInteger(numeric.substring(1),  str);  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  return  createBigInteger(numeric.substring(1),  str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	return  createBigInteger(numeric.substring(1),  str);	  return    createBigInteger(numeric.substring(1));    	non-compiled	[CE]  	5	None	replace
4	[BUG]  [BUGGY]  NeighborDecimal  d  =  createNeighborDecimal(numeric.substring(1));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NeighborDecimal  d  =  createNeighborDecimal(numeric.substring(1));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NeighborDecimal  d  =  createNeighborDecimal(numeric.substring(1));	  NeighborDecimal    d    =    createNeighborDecimal(numeric);    	non-compiled	[CE]  	33	None	replace
5	[BUG]  [BUGGY]  NeighborDecimal  d  =  createNeighborDecimal(numeric,  str);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NeighborDecimal  d  =  createNeighborDecimal(numeric,  str);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NeighborDecimal  d  =  createNeighborDecimal(numeric,  str);	  NeighborDecimal    d    =    createNeighborDecimal(numeric);    	non-compiled	[CE]  	33	None	replace
6	[BUG]  [BUGGY]  NeighborDecimal  d  =  createNeighborDecimal(numeric.substring(2));  [CE]  [FE]                      NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NeighborDecimal  d  =  createNeighborDecimal(numeric.substring(2));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NeighborDecimal  d  =  createNeighborDecimal(numeric.substring(2));	  NeighborDecimal    d    =    createNeighborDecimal(numeric);    	non-compiled	[CE]  	33	None	replace
7	[BUG]  [BUGGY]  Character  dec  =  Character.getDigit(numeric.substring(0,  1));  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Character  dec  =  Character.getDigit(numeric.substring(0,  1));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Character  dec  =  Character.getDigit(numeric.substring(0,  1));	  Character    dec    =    Character.getDigit(numeric.substring(1));    	non-compiled	[CE]  	19	None	replace
8	[BUG]  [BUGGY]  Character  dec  =  Character.getDigit(numeric.substring(2));  [CE]  [FE]                      NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Character  dec  =  Character.getDigit(numeric.substring(2));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Character  dec  =  Character.getDigit(numeric.substring(2));	  Character    dec    =    Character.getDigit(numeric.substring(1));    	non-compiled	[CE]  	19	None	replace
9	[BUG]  [BUGGY]  Character  dec  =  Character.getDigit(numeric.substring(1),  str);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Character  dec  =  Character.getDigit(numeric.substring(1),  str);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Character  dec  =  Character.getDigit(numeric.substring(1),  str);	  Character    dec    =    Character.getDigit(numeric.substring(1));    	non-compiled	[CE]  	19	None	replace
10	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(String.valueOf(numeric.charAt(0)));  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(String.valueOf(numeric.charAt(0)));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(String.valueOf(numeric.charAt(0)));	  NumberFormatException    e    =    new    NumberFormatException(mant);    	non-compiled	[CE]  	30	None	replace
11	[BUG]  [BUGGY]  Numeric  dec  =  str.substring(0,  str.length()  -  2);  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Numeric  dec  =  str.substring(0,  str.length()  -  2);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Numeric  dec  =  str.substring(0,  str.length()  -  2);	  Numeric    dec    =    str.substring(0,    str.length()    1);    	non-compiled	[CE]  	48	None	replace
12	[BUG]  [BUGGY]  Numeric  dec  =  str.substring(0,  str.length()  -1  +  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Numeric  dec  =  str.substring(0,  str.length()  -1  +  1);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Numeric  dec  =  str.substring(0,  str.length()  -1  +  1);	  Numeric    dec    =    str.substring(0,    str.length()    1);    	non-compiled	[CE]  	48	None	replace
13	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str,  mant);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str,  mant);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(str,  mant);	  NumberFormatException    e    =    new    NumberFormatException(mant,    str);    	non-compiled	[CE]  	40	None	replace
14	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric.substring(1),  str);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric.substring(1),  str);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(numeric.substring(1),  str);	  NumberFormatException    e    =    new    NumberFormatException(mant,    str);    	non-compiled	[CE]  	40	None	replace
15	[BUG]  [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(1),  str);  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(1),  str);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Character  dec  =  Character.getDigit(numeric.charAt(1),  str);	  Character    dec    =    Character.getDigit(numeric.charAt(0),    dec);    	non-compiled	[CE]  	50	None	replace
16	[BUG]  [BUGGY]  State  state  =(State)numeric.getKey();  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  State  state  =(State)numeric.getKey();  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	State  state  =(State)numeric.getKey();	  State    state    =(State)numeric.getValue();    	non-compiled	[CE]  	11	None	replace
17	[BUG]  [BUGGY]  State  state  =(State)numeric.getNext();  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  State  state  =(State)numeric.getNext();  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	State  state  =(State)numeric.getNext();	  State    state    =(State)numeric.getValue();    	non-compiled	[CE]  	11	None	replace
18	[BUG]  [BUGGY]  State  state  =(State)numeric.getAsChar();  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  State  state  =(State)numeric.getAsChar();  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	State  state  =(State)numeric.getAsChar();	  State    state    =(State)numeric.getValue();    	non-compiled	[CE]  	11	None	replace
19	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  (numeric.charAt(0)  ==  '-'  &&  Character.isDigit(numeric.charAt(0))))  {  return  createLong(  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  (numeric.charAt(0)  ==  '-'  &&  Character.isDigit(numeric.charAt(0))))  {  return  createLong(  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  (numeric.charAt(0)  ==  '-'  &&  Character.isDigit(numeric.charAt(0))))  {  return  createLong(	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong(    	non-compiled	[CE]  	8	None	replace
20	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong(    	non-compiled	[CE]  	8	None	replace
21	[BUG]  [BUGGY]  ||  exp  ==  null  &&  isDigits(numeric.substring(1))&&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  ||  exp  ==  null  &&  isDigits(numeric.substring(1))&&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	||  exp  ==  null  &&  isDigits(numeric.substring(1))&&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(	  &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong(    	non-compiled	[CE]  	37	None	replace
22	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric,  mant);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric,  mant);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(numeric,  mant);	  NumberFormatException    e    =    new    NumberFormatException(numeric,    str);    	non-compiled	[CE]  	16	None	replace
23	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str,  null);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str,  null);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(str,  null);	  NumberFormatException    e    =    new    NumberFormatException(numeric,    str);    	non-compiled	[CE]  	16	None	replace
24	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  2);  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  2);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	String  numeric  =  str.substring(0,  str.length()  -  2);	  String    numeric    =    str.substring(0,    str.length());    	non-compiled	[CE]  	20	None	replace
25	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(dec,  numeric);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(dec,  numeric);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(dec,  numeric);	  NumberFormatException    e    =    new    NumberFormatException(numeric,    dec);    	non-compiled	[CE]  	23	None	replace
26	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric,  dec,  str);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric,  dec,  str);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(numeric,  dec,  str);	  NumberFormatException    e    =    new    NumberFormatException(numeric,    dec);    	non-compiled	[CE]  	23	None	replace
27	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(dec,  null);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(dec,  null);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(dec,  null);	  NumberFormatException    e    =    new    NumberFormatException(numeric,    dec);    	non-compiled	[CE]  	23	None	replace
28	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  +  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  String  dec  =  str.substring(0,  str.length()  +  1);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	String  dec  =  str.substring(0,  str.length()  +  1);	  String    dec    =    str.substring(0,    str.length();    	non-compiled	[CE]  	10	None	replace
29	[BUG]  [BUGGY]  parent  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  parent  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	parent  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong	  parent    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createBigInteger    	non-compiled	[CE]  	43	None	replace
30	[BUG]  [BUGGY]  reader  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))&&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createBigInteger  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  reader  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))&&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createBigInteger  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	reader  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))&&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createBigInteger	  parent    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createBigInteger    	non-compiled	[CE]  	43	None	replace
31	[BUG]  [BUGGY]  ||  exp  ==  null  &&  isDigits(numeric.substring(1))&&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  ||  exp  ==  null  &&  isDigits(numeric.substring(1))&&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	||  exp  ==  null  &&  isDigits(numeric.substring(1))&&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong	  &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong    	non-compiled	[CE]  	38	None	replace
32	[BUG]  [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	&&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong	  &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong    	non-compiled	[CE]  	38	None	replace
33	[BUG]  [BUGGY]  NeighborDecimal  dec  =  getDecimalDecimal(numeric.substring(1));  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NeighborDecimal  dec  =  getDecimalDecimal(numeric.substring(1));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NeighborDecimal  dec  =  getDecimalDecimal(numeric.substring(1));	  NeighborDecimal    dec    =    getDecimalDecimal(numeric);    	non-compiled	[CE]  	34	None	replace
34	[BUG]  [BUGGY]  NeighborDecimal  dec  =  getDecimalDecimal(numeric.substring(2));  [CE]  [FE]                      NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NeighborDecimal  dec  =  getDecimalDecimal(numeric.substring(2));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NeighborDecimal  dec  =  getDecimalDecimal(numeric.substring(2));	  NeighborDecimal    dec    =    getDecimalDecimal(numeric);    	non-compiled	[CE]  	34	None	replace
35	[BUG]  [BUGGY]  NeighborDecimal  dec  =  getDecimalDecimal(numeric,  str);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NeighborDecimal  dec  =  getDecimalDecimal(numeric,  str);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NeighborDecimal  dec  =  getDecimalDecimal(numeric,  str);	  NeighborDecimal    dec    =    getDecimalDecimal(numeric);    	non-compiled	[CE]  	34	None	replace
36	[BUG]  [BUGGY]  parent  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createInt  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  parent  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createInt  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	parent  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createInt	  parent    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createBigInt    	non-compiled	[CE]  	42	None	replace
37	[BUG]  [BUGGY]  reader  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))&&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createBigInt  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  reader  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))&&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createBigInt  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	reader  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))&&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createBigInt	  parent    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createBigInt    	non-compiled	[CE]  	42	None	replace
38	[BUG]  [BUGGY]  MutableDecimal  dec  =  createMutableDecimal(numeric);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  MutableDecimal  dec  =  createMutableDecimal(numeric);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	MutableDecimal  dec  =  createMutableDecimal(numeric);	  MutableDecimal    dec    =    createDecimal(numeric);    	non-compiled	[CE]  	35	None	replace
39	[BUG]  [BUGGY]  MutableDecimal  dec  =  createDigits(numeric);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  MutableDecimal  dec  =  createDigits(numeric);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	MutableDecimal  dec  =  createDigits(numeric);	  MutableDecimal    dec    =    createDecimal(numeric);    	non-compiled	[CE]  	35	None	replace
40	[BUG]  [BUGGY]  MutableDecimal  dec  =  createDecimal(numeric,  str);  [CE]  [FE]                          NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  MutableDecimal  dec  =  createDecimal(numeric,  str);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	MutableDecimal  dec  =  createDecimal(numeric,  str);	  MutableDecimal    dec    =    createDecimal(numeric);    	non-compiled	[CE]  	35	None	replace
41	[BUG]  [BUGGY]  Numeric  dec  =  str.substring(0,  str.length()  +  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Numeric  dec  =  str.substring(0,  str.length()  +  1);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Numeric  dec  =  str.substring(0,  str.length()  +  1);	  Numeric    dec    =    str.substring(0,    str.length());    	non-compiled	[CE]  	26	None	replace
42	[BUG]  [BUGGY]  return  createBigDecimal(numeric.substring(1),  str);  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  return  createBigDecimal(numeric.substring(1),  str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	return  createBigDecimal(numeric.substring(1),  str);	  return    createBigDecimal(numeric.substring(1));    	non-compiled	[CE]  	6	None	replace
43	[BUG]  [BUGGY]  return  createBigDecimal(numeric.substring(0,  1));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  return  createBigDecimal(numeric.substring(0,  1));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	return  createBigDecimal(numeric.substring(0,  1));	  return    createBigDecimal(numeric.substring(1));    	non-compiled	[CE]  	6	None	replace
44	[BUG]  [BUGGY]  parent  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createInteger  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  parent  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createInteger  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	parent  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createInteger	  parent    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createBigInte    	non-compiled	[CE]  	44	None	replace
45	[BUG]  [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(0),  mant);  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(0),  mant);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Character  dec  =  Character.getDigit(numeric.charAt(0),  mant);	  Character    dec    =    Character.getDigit(numeric.charAt(0),    str);    	non-compiled	[CE]  	17	None	replace
46	[BUG]  [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(1),  mant);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(1),  mant);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Character  dec  =  Character.getDigit(numeric.charAt(1),  mant);	  Character    dec    =    Character.getDigit(numeric.charAt(0),    str);    	non-compiled	[CE]  	17	None	replace
47	[BUG]  [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(0),  '-',  exp);  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(0),  '-',  exp);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Character  dec  =  Character.getDigit(numeric.charAt(0),  '-',  exp);	  Character    dec    =    Character.getDigit(numeric.charAt(0),    '-');    	non-compiled	[CE]  	36	None	replace
48	[BUG]  [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(0),  '-'  +  str);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(0),  '-'  +  str);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Character  dec  =  Character.getDigit(numeric.charAt(0),  '-'  +  str);	  Character    dec    =    Character.getDigit(numeric.charAt(0),    '-');    	non-compiled	[CE]  	36	None	replace
49	[BUG]  [BUGGY]  Character  dec  =  Character.getDigit(numeric.substring(0,  1),  '-');  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Character  dec  =  Character.getDigit(numeric.substring(0,  1),  '-');  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Character  dec  =  Character.getDigit(numeric.substring(0,  1),  '-');	  Character    dec    =    Character.getDigit(numeric.charAt(0),    '-');    	non-compiled	[CE]  	36	None	replace
50	[BUG]  [BUGGY]  ||  exp  ==  null  &&  isDigits(numeric.substring(1))&&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  ||  exp  ==  null  &&  isDigits(numeric.substring(1))&&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	||  exp  ==  null  &&  isDigits(numeric.substring(1))&&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu	  &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong(nu    	non-compiled	[CE]  	45	None	replace
51	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric.substring(2));  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Integer  dec  =  createInteger(numeric.substring(2));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Integer  dec  =  createInteger(numeric.substring(2));	  Integer    dec    =    createInteger(numeric.substring(1));    	non-compiled	[CE]  	2	None	replace
52	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric.substring(0,  1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Integer  dec  =  createInteger(numeric.substring(0,  1));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Integer  dec  =  createInteger(numeric.substring(0,  1));	  Integer    dec    =    createInteger(numeric.substring(1));    	non-compiled	[CE]  	2	None	replace
53	[BUG]  [BUGGY]  Integer  dec  =  createBigInteger(numeric.substring(1));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Integer  dec  =  createBigInteger(numeric.substring(1));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Integer  dec  =  createBigInteger(numeric.substring(1));	  Integer    dec    =    createInteger(numeric.substring(1));    	non-compiled	[CE]  	2	None	replace
54	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric.substring(1),  str);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Integer  dec  =  createInteger(numeric.substring(1),  str);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Integer  dec  =  createInteger(numeric.substring(1),  str);	  Integer    dec    =    createInteger(numeric.substring(1));    	non-compiled	[CE]  	2	None	replace
55	[BUG]  [BUGGY]  ||  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  ||  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	||  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu	  &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong(nu    	non-compiled	[CE]  	39	None	replace
56	[BUG]  [BUGGY]  &&  isDigits(numeric.charAt(0))&&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  &&  isDigits(numeric.charAt(0))&&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	&&  isDigits(numeric.charAt(0))&&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu	  &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong(nu    	non-compiled	[CE]  	39	None	replace
57	[BUG]  [BUGGY]  Character  dec  =  Character.getDigit(numeric.substring(0,  exp));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Character  dec  =  Character.getDigit(numeric.substring(0,  exp));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Character  dec  =  Character.getDigit(numeric.substring(0,  exp));	  Character    dec    =    Character.getDigit(numeric.charAt(0),    exp);    	non-compiled	[CE]  	18	None	replace
58	[BUG]  [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(2),  exp);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(2),  exp);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Character  dec  =  Character.getDigit(numeric.charAt(2),  exp);	  Character    dec    =    Character.getDigit(numeric.charAt(0),    exp);    	non-compiled	[CE]  	18	None	replace
59	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(null,  str);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(null,  str);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(null,  str);	  NumberFormatException    e    =    new    NumberFormatException(dec,    str);    	non-compiled	[CE]  	22	None	replace
60	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric,  str,  dec);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric,  str,  dec);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(numeric,  str,  dec);	  NumberFormatException    e    =    new    NumberFormatException(mant,    str,    dec);    	non-compiled	[CE]  	24	None	replace
61	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(dec,  str,  mant);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(dec,  str,  mant);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(dec,  str,  mant);	  NumberFormatException    e    =    new    NumberFormatException(mant,    str,    dec);    	non-compiled	[CE]  	24	None	replace
62	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(dec,  str,  dec);  [CE]  [FE]                          NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(dec,  str,  dec);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(dec,  str,  dec);	  NumberFormatException    e    =    new    NumberFormatException(mant,    str,    dec);    	non-compiled	[CE]  	24	None	replace
63	[BUG]  [BUGGY]  Integer  dec  =  createInt(numeric);  [CE]  [FE]            NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Integer  dec  =  createInt(numeric);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Integer  dec  =  createInt(numeric);	  Integer    dec    =    createLong(numeric);    	non-compiled	[CE]  	1	None	replace
64	[BUG]  [BUGGY]  Integer  dec  =  createLong(numeric.substring(1));  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Integer  dec  =  createLong(numeric.substring(1));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Integer  dec  =  createLong(numeric.substring(1));	  Integer    dec    =    createLong(numeric);    	non-compiled	[CE]  	1	None	replace
65	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -1  +  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -1  +  1);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	String  numeric  =  str.substring(0,  str.length()  -1  +  1);	  String    numeric    =    str.substring(0,    str.length()    1);    	non-compiled	[CE]  	31	None	replace
66	[BUG]  [BUGGY]  Numeric  dec  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Numeric  dec  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Numeric  dec  =  str.substring(0,  str.length()  -  1)+  1;	  Numeric    dec    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	29	None	replace
67	[BUG]  [BUGGY]  Numeric  dec  =  str.substring(0,  str.length()  +  1)+  1;  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Numeric  dec  =  str.substring(0,  str.length()  +  1)+  1;  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Numeric  dec  =  str.substring(0,  str.length()  +  1)+  1;	  Numeric    dec    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	29	None	replace
68	[BUG]  [BUGGY]  return  createBigDecimal(numeric.substring(2),  str);  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  return  createBigDecimal(numeric.substring(2),  str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	return  createBigDecimal(numeric.substring(2),  str);	  return    createBigDecimal(numeric.substring(2));    	non-compiled	[CE]  	28	None	replace
69	[BUG]  [BUGGY]  Integer  dec  =  createBigInteger(numeric.substring(2));  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Integer  dec  =  createBigInteger(numeric.substring(2));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Integer  dec  =  createBigInteger(numeric.substring(2));	  Integer    dec    =    createBigInteger(numeric);    	non-compiled	[CE]  	3	None	replace
70	[BUG]  [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(numeric.substring(1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(numeric.substring(1));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NeighborDecimal  dec  =  createNeighborDecimal(numeric.substring(1));	  NeighborDecimal    dec    =    createNeighborDecimal(numeric);    	non-compiled	[CE]  	32	None	replace
71	[BUG]  [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(numeric.substring(2));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(numeric.substring(2));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NeighborDecimal  dec  =  createNeighborDecimal(numeric.substring(2));	  NeighborDecimal    dec    =    createNeighborDecimal(numeric);    	non-compiled	[CE]  	32	None	replace
72	[BUG]  [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(numeric,  str);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(numeric,  str);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NeighborDecimal  dec  =  createNeighborDecimal(numeric,  str);	  NeighborDecimal    dec    =    createNeighborDecimal(numeric);    	non-compiled	[CE]  	32	None	replace
73	[BUG]  [BUGGY]  return  createLeftInteger(numeric,  str);  [CE]  [FE]            NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  return  createLeftInteger(numeric,  str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	return  createLeftInteger(numeric,  str);	  return    createLeftInteger(numeric);    	non-compiled	[CE]  	49	None	replace
74	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric.substring(2));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric.substring(2));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(numeric.substring(2));	  NumberFormatException    e    =    new    NumberFormatException(numeric.substring(1));    	non-compiled	[CE]  	14	None	replace
75	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(1));  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(1));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(str.substring(1));	  NumberFormatException    e    =    new    NumberFormatException(numeric.substring(1));    	non-compiled	[CE]  	14	None	replace
76	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric.substring(0,  str.length()  -  1));  [CE]  [FE]                      NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric.substring(0,  str.length()  -  1));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(numeric.substring(0,  str.length()  -  1));	  NumberFormatException    e    =    new    NumberFormatException(numeric.substring(1));    	non-compiled	[CE]  	14	None	replace
77	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  -1  +  1);  [CE]  [FE]            NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  String  dec  =  str.substring(0,  str.length()  -1  +  1);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	String  dec  =  str.substring(0,  str.length()  -1  +  1);	  String    dec    =    str.substring(0,    str.length()    1);    	non-compiled	[CE]  	41	None	replace
78	[BUG]  [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(0),  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(0),  1);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Character  dec  =  Character.getDigit(numeric.charAt(0),  1);	  Character    dec    =    Character.getDigit(numeric.charAt(0),    '-');    	non-compiled	[CE]  	36	None	replace
79	[BUG]  [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(1),  '-');  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(1),  '-');  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Character  dec  =  Character.getDigit(numeric.charAt(1),  '-');	  Character    dec    =    Character.getDigit(numeric.charAt(0),    '-');    	non-compiled	[CE]  	36	None	replace
80	[BUG]  [BUGGY]  Integer  dec  =  createBigDecimal(numeric);  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Integer  dec  =  createBigDecimal(numeric);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Integer  dec  =  createBigDecimal(numeric);	  Integer    dec    =    createBigInteger(numeric);    	non-compiled	[CE]  	3	None	replace
81	[BUG]  [BUGGY]  Integer  dec  =  createInteger(1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Integer  dec  =  createInteger(1);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Integer  dec  =  createInteger(1);	  Integer    dec    =    createInteger(0);    	non-compiled	[CE]  	4	None	replace
82	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(dec,  str,  str);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(dec,  str,  str);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(dec,  str,  str);	  NumberFormatException    e    =    new    NumberFormatException(mant,    str,    dec);    	non-compiled	[CE]  	24	None	replace
83	[BUG]  [BUGGY]  Character  dec  =  Character.getDigit(numeric.substring(0,  1),  exp);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Character  dec  =  Character.getDigit(numeric.substring(0,  1),  exp);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Character  dec  =  Character.getDigit(numeric.substring(0,  1),  exp);	  Character    dec    =    Character.getDigit(numeric.charAt(0),    exp);    	non-compiled	[CE]  	18	None	replace
84	[BUG]  [BUGGY]  Numeric  dec  =  str.substring(1,  str.length());  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Numeric  dec  =  str.substring(1,  str.length());  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Numeric  dec  =  str.substring(1,  str.length());	  Numeric    dec    =    str.substring(0,    str.length());    	non-compiled	[CE]  	26	None	replace
85	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  4);  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  4);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	String  dec  =  str.substring(0,  str.length()  -  4);	  String    dec    =    str.substring(0,    str.length();    	non-compiled	[CE]  	10	None	replace
86	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric,  exp);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric,  exp);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(numeric,  exp);	  NumberFormatException    e    =    new    NumberFormatException(dec);    	non-compiled	[CE]  	15	None	replace
87	[BUG]  [BUGGY]  return  createBigDecimal(numeric.substring(0,  2));  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  return  createBigDecimal(numeric.substring(0,  2));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	return  createBigDecimal(numeric.substring(0,  2));	  return    createBigDecimal(numeric.substring(2));    	non-compiled	[CE]  	28	None	replace
88	[BUG]  [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(n  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(n  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	&&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(n	  &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong(nu    	non-compiled	[CE]  	45	None	replace
89	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric.substring(0,  1));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric.substring(0,  1));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(numeric.substring(0,  1));	  NumberFormatException    e    =    new    NumberFormatException(numeric.substring(1));    	non-compiled	[CE]  	14	None	replace
90	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createInteger  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createInteger  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createInteger	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong    	non-compiled	[CE]  	7	None	replace
91	[BUG]  [BUGGY]  Numeric  dec  =  str.substring(1,  str.length()  -  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Numeric  dec  =  str.substring(1,  str.length()  -  1);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Numeric  dec  =  str.substring(1,  str.length()  -  1);	  Numeric    dec    =    str.substring(0,    str.length()    1);    	non-compiled	[CE]  	48	None	replace
92	[BUG]  [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	&&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(	  &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong(    	non-compiled	[CE]  	37	None	replace
93	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric.substring(1),  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Integer  dec  =  createInteger(numeric.substring(1),  1);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Integer  dec  =  createInteger(numeric.substring(1),  1);	  Integer    dec    =    createInteger(numeric.substring(1));    	non-compiled	[CE]  	2	None	replace
94	[BUG]  [BUGGY]  State  state  =(State)numeric.evaluate(numeric);  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  State  state  =(State)numeric.evaluate(numeric);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	State  state  =(State)numeric.evaluate(numeric);	  State    state    =(State)numeric.getValue();    	non-compiled	[CE]  	11	None	replace
95	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric.toString());  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric.toString());  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(numeric.toString());	  NumberFormatException    e    =    new    NumberFormatException(numeric);    	non-compiled	[CE]  	13	None	replace
96	[BUG]  [BUGGY]  Numeric  dec  =  str.substring(0,  str.length()  -  2)+  1;  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Numeric  dec  =  str.substring(0,  str.length()  -  2)+  1;  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Numeric  dec  =  str.substring(0,  str.length()  -  2)+  1;	  Numeric    dec    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	29	None	replace
97	[BUG]  [BUGGY]  Numeric  dec  =  str.substring(1,  str.length())+  1;  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Numeric  dec  =  str.substring(1,  str.length())+  1;  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Numeric  dec  =  str.substring(1,  str.length())+  1;	  Numeric    dec    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	29	None	replace
98	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  4);  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  4);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	String  numeric  =  str.substring(0,  str.length()  -  4);	  String    numeric    =    str.substring(0,    str.length());    	non-compiled	[CE]  	20	None	replace
99	[BUG]  [BUGGY]  &&  isDigits(numeric.substring(2))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  &&  isDigits(numeric.substring(2))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	&&  isDigits(numeric.substring(2))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu	  &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong(nu    	non-compiled	[CE]  	39	None	replace
100	[BUG]  [BUGGY]  &&  isDigits(numeric.substring(1)))  {  return  createLong(numeric  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  &&  isDigits(numeric.substring(1)))  {  return  createLong(numeric  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	&&  isDigits(numeric.substring(1)))  {  return  createLong(numeric	  &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong(nu    	non-compiled	[CE]  	39	None	replace
101	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric,  string);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric,  string);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(numeric,  string);	  NumberFormatException    e    =    new    NumberFormatException(numeric,    dec);    	non-compiled	[CE]  	23	None	replace
102	[BUG]  [BUGGY]  MutableDecimal  dec  =  createDecimal(numeric.substring(1));  [CE]  [FE]                      NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  MutableDecimal  dec  =  createDecimal(numeric.substring(1));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	MutableDecimal  dec  =  createDecimal(numeric.substring(1));	  MutableDecimal    dec    =    createDecimal(numeric);    	non-compiled	[CE]  	35	None	replace
103	[BUG]  [BUGGY]  MutableDecimal  dec  =  createDecimal(numeric.substring(2));  [CE]  [FE]                        NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  MutableDecimal  dec  =  createDecimal(numeric.substring(2));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	MutableDecimal  dec  =  createDecimal(numeric.substring(2));	  MutableDecimal    dec    =    createDecimal(numeric);    	non-compiled	[CE]  	35	None	replace
104	[BUG]  [BUGGY]  Character  dec  =  Character.getDigit(numeric.substring(decPos));  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Character  dec  =  Character.getDigit(numeric.substring(decPos));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Character  dec  =  Character.getDigit(numeric.substring(decPos));	  Character    dec    =    Character.getDigit(numeric.substring(1));    	non-compiled	[CE]  	19	None	replace
105	[BUG]  [BUGGY]  Character  dec  =  Character.getDigit(numeric.substring(decPos  +  1));  [CE]  [FE]                      NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Character  dec  =  Character.getDigit(numeric.substring(decPos  +  1));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Character  dec  =  Character.getDigit(numeric.substring(decPos  +  1));	  Character    dec    =    Character.getDigit(numeric.substring(1));    	non-compiled	[CE]  	19	None	replace
106	[BUG]  [BUGGY]  return  createBigDecimal(numeric.substring(2),  dec);  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  return  createBigDecimal(numeric.substring(2),  dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	return  createBigDecimal(numeric.substring(2),  dec);	  return    createBigDecimal(numeric.substring(2));    	non-compiled	[CE]  	28	None	replace
107	[BUG]  [BUGGY]  return  createLong(numeric.substring(2));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  return  createLong(numeric.substring(2));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	return  createLong(numeric.substring(2));	  return    createBigDecimal(numeric.substring(2));    	non-compiled	[CE]  	28	None	replace
108	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric.substring(1),  exp);  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric.substring(1),  exp);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(numeric.substring(1),  exp);	  NumberFormatException    e    =    new    NumberFormatException(numeric);    	non-compiled	[CE]  	13	None	replace
109	[BUG]  [BUGGY]  NeighborDecimal  dec  =  createNumberDecimal(numeric);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NeighborDecimal  dec  =  createNumberDecimal(numeric);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NeighborDecimal  dec  =  createNumberDecimal(numeric);	  NeighborDecimal    dec    =    getDecimalDecimal(numeric);    	non-compiled	[CE]  	34	None	replace
110	[BUG]  [BUGGY]  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	&&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(	  &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong(    	non-compiled	[CE]  	37	None	replace
111	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric.substring(dec.length()  -  1,  exp.length()));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric.substring(dec.length()  -  1,  exp.length()));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(numeric.substring(dec.length()  -  1,  exp.length()));	  NumberFormatException    e    =    new    NumberFormatException(numeric.substring(1));    	non-compiled	[CE]  	14	None	replace
112	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric.substring(1),  dec);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric.substring(1),  dec);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(numeric.substring(1),  dec);	  NumberFormatException    e    =    new    NumberFormatException(numeric.substring(1));    	non-compiled	[CE]  	14	None	replace
113	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric.substring(dec.length(),  exp.length()));  [CE]  [FE]                      NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric.substring(dec.length(),  exp.length()));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(numeric.substring(dec.length(),  exp.length()));	  NumberFormatException    e    =    new    NumberFormatException(numeric.substring(1));    	non-compiled	[CE]  	14	None	replace
114	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric,  dec,  exp);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric,  dec,  exp);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(numeric,  dec,  exp);	  NumberFormatException    e    =    new    NumberFormatException(numeric,    dec);    	non-compiled	[CE]  	23	None	replace
115	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(dec,  exp);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(dec,  exp);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(dec,  exp);	  NumberFormatException    e    =    new    NumberFormatException(numeric,    dec);    	non-compiled	[CE]  	23	None	replace
116	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric,  dec,  ex);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(numeric,  dec,  ex);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(numeric,  dec,  ex);	  NumberFormatException    e    =    new    NumberFormatException(numeric,    dec);    	non-compiled	[CE]  	23	None	replace
117	[BUG]  [BUGGY]  MutableDecimal  dec  =  createDecimal(numeric,  dec);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  MutableDecimal  dec  =  createDecimal(numeric,  dec);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	MutableDecimal  dec  =  createDecimal(numeric,  dec);	  MutableDecimal    dec    =    createDecimal(numeric);    	non-compiled	[CE]  	35	None	replace
118	[BUG]  [BUGGY]  String  dec  =  str.substring(1,  str.length()  -  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  String  dec  =  str.substring(1,  str.length()  -  1);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	String  dec  =  str.substring(1,  str.length()  -  1);	  String    dec    =    str.substring(0,    str.length();    	non-compiled	[CE]  	10	None	replace
119	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong	  if(dec    ==    null    &&    exp    ==    null    ||    isDigits(numeric.substring(1))    ||    (numeric.charAt(0)    ==    '-'    &&    Character.isDigit(numeric.charAt(0))))    {    return    createLong    	non-compiled	[CE]  	47	None	replace
120	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(dec,  str,  null);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(dec,  str,  null);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NumberFormatException  e  =  new  NumberFormatException(dec,  str,  null);	  NumberFormatException    e    =    new    NumberFormatException(mant,    str,    dec);    	non-compiled	[CE]  	24	None	replace
121	[BUG]  [BUGGY]  return  createBigDecimal(numeric.substring(1),  dec);  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  return  createBigDecimal(numeric.substring(1),  dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	return  createBigDecimal(numeric.substring(1),  dec);	  return    createBigDecimal(numeric.substring(1));    	non-compiled	[CE]  	6	None	replace
122	[BUG]  [BUGGY]  State  state  =(State)numeric.clone();  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  State  state  =(State)numeric.clone();  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	State  state  =(State)numeric.clone();	  State    state    =(State)numeric.getValue();    	non-compiled	[CE]  	11	None	replace
123	[BUG]  [BUGGY]  int  dec  =  createInteger(numeric);  [CE]  [FE]            NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  int  dec  =  createInteger(numeric);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	int  dec  =  createInteger(numeric);	  Integer    dec    =    createLong(numeric);    	non-compiled	[CE]  	1	None	replace
124	[BUG]  [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(numeric,  exp);  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(numeric,  exp);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NeighborDecimal  dec  =  createNeighborDecimal(numeric,  exp);	  NeighborDecimal    dec    =    createNeighborDecimal(numeric);    	non-compiled	[CE]  	32	None	replace
125	[BUG]  [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	&&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu	  &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong(nu    	non-compiled	[CE]  	45	None	replace
126	[BUG]  [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||(numeric.charAt(0)  ==  '-'  &&  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||(numeric.charAt(0)  ==  '-'  &&  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	&&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||(numeric.charAt(0)  ==  '-'  &&  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu	  &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong(nu    	non-compiled	[CE]  	45	None	replace
127	[BUG]  [BUGGY]  NeighborDecimal  d  =  createNeighborDecimal(numeric,  dec);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  NeighborDecimal  d  =  createNeighborDecimal(numeric,  dec);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	NeighborDecimal  d  =  createNeighborDecimal(numeric,  dec);	  NeighborDecimal    d    =    createNeighborDecimal(numeric);    	non-compiled	[CE]  	33	None	replace
128	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric.substring(decPos));  [CE]  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Integer  dec  =  createInteger(numeric.substring(decPos));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Integer  dec  =  createInteger(numeric.substring(decPos));	  Integer    dec    =    createInteger(numeric.substring(1));    	non-compiled	[CE]  	2	None	replace
129	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric.substring(decPos  +  1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Integer  dec  =  createInteger(numeric.substring(decPos  +  1));  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Integer  dec  =  createInteger(numeric.substring(decPos  +  1));	  Integer    dec    =    createInteger(numeric.substring(1));    	non-compiled	[CE]  	2	None	replace
130	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric.substring(1),  dec);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Integer  dec  =  createInteger(numeric.substring(1),  dec);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Integer  dec  =  createInteger(numeric.substring(1),  dec);	  Integer    dec    =    createInteger(numeric.substring(1));    	non-compiled	[CE]  	2	None	replace
131	[BUG]  [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(0),  '-'  +  exp);  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  Character  dec  =  Character.getDigit(numeric.charAt(0),  '-'  +  exp);  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	Character  dec  =  Character.getDigit(numeric.charAt(0),  '-'  +  exp);	  Character    dec    =    Character.getDigit(numeric.charAt(0),    '-');    	non-compiled	[CE]  	36	None	replace
132	[BUG]  [BUGGY]  &&  isDigits(numeric.substring(1))  ||  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  try  {      [BUGGY]  &&  isDigits(numeric.substring(1))  ||  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu  [BUGGY]      return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	457	457	1	replace	&&  isDigits(numeric.substring(1))  ||  (numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(nu	  &&    isDigits(numeric.substring(1))    &&    (numeric.charAt(0)    ==    '-'    ||    Character.isDigit(numeric.charAt(0))))    {    return    createLong(nu    	non-compiled	[CE]  	39	None	replace
