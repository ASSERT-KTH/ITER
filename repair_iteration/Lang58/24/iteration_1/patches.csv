bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ((  Number)str.get(i)).setLength(0);  [CE]  [FE]            NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  ((  Number)str.get(i)).setLength(0);  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	((  Number)str.get(i)).setLength(0);	      	non-compiled	[CE]  	3	None	replace
2	[BUG]  [BUGGY]  ((  Number)str.get(i)).doubleValue()  >  0;  [CE]  [FE]              NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  ((  Number)str.get(i)).doubleValue()  >  0;  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	((  Number)str.get(i)).doubleValue()  >  0;	      	non-compiled	[CE]  	3	None	replace
3	[BUG]  [BUGGY]  ((  Number)str.get(i)).setIndex(i);  [CE]  [FE]                NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  ((  Number)str.get(i)).setIndex(i);  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	((  Number)str.get(i)).setIndex(i);	      	non-compiled	[CE]  	3	None	replace
4	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  [FE]        NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	String  str  =  str.substring(0,  str.length()  -  1);	      String    str    =    str.substring(i    +    1,    str.length()    -    1);    	non-compiled	[CE]  	4	None	replace
5	[BUG]  [BUGGY]  String  str  =  str.substring(i,  str.length()  -  1);  [CE]  [FE]          NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  String  str  =  str.substring(i,  str.length()  -  1);  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	String  str  =  str.substring(i,  str.length()  -  1);	      String    str    =    str.substring(i    +    1,    str.length()    -    1);    	non-compiled	[CE]  	4	None	replace
6	[BUG]  [BUGGY]  Character.toLowerCase(str.charAt(0));  [CE]  [FE]              NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  Character.toLowerCase(str.charAt(0));  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	Character.toLowerCase(str.charAt(0));	      Character.toLowerCase(str.charAt(i));    	non-compiled	[CE]  	16	None	replace
7	[BUG]  [BUGGY]  Character.toLowerCase(str.charAt(i)+  1);  [CE]  [FE]                NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  Character.toLowerCase(str.charAt(i)+  1);  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	Character.toLowerCase(str.charAt(i)+  1);	      Character.toLowerCase(str.charAt(i));    	non-compiled	[CE]  	16	None	replace
8	[BUG]  [BUGGY]  Character.toLowerCase(str.charAt(i)+  1));  [CE]  [FE]                  NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  Character.toLowerCase(str.charAt(i)+  1));  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	Character.toLowerCase(str.charAt(i)+  1));	      Character.toLowerCase(str.charAt(i));    	non-compiled	[CE]  	16	None	replace
9	[BUG]  [BUGGY]  if(str.charAt(i)  ==  '0'  &&  str.charAt(i)  <  =  '9')  {  [CE]  [FE]        NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)  ==  '0'  &&  str.charAt(i)  <  =  '9')  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)  ==  '0'  &&  str.charAt(i)  <  =  '9')  {	  if(str.charAt(i)    >=    '0'    &&    str.charAt(i)    <    =    '9')    {    	non-compiled	[CE]  	17	None	replace
10	[BUG]  [BUGGY]  if(str.charAt(i)  >=  '0'  ||  str.charAt(i)  <  =  '9')  {  [CE]  [FE]          NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)  >=  '0'  ||  str.charAt(i)  <  =  '9')  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)  >=  '0'  ||  str.charAt(i)  <  =  '9')  {	  if(str.charAt(i)    >=    '0'    &&    str.charAt(i)    <    =    '9')    {    	non-compiled	[CE]  	17	None	replace
11	[BUG]  [BUGGY]  ((  String)str.charAt(i)).return  true;  [CE]  [FE]          NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  ((  String)str.charAt(i)).return  true;  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	((  String)str.charAt(i)).return  true;	      ((    String)str.charAt(i)).return    false;    	non-compiled	[CE]  	10	None	replace
12	[BUG]  [BUGGY]  ((  String)str.charAt(0)).return  true;  [CE]  [FE]            NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  ((  String)str.charAt(0)).return  true;  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	((  String)str.charAt(0)).return  true;	      ((    String)str.charAt(i)).return    false;    	non-compiled	[CE]  	10	None	replace
13	[BUG]  [BUGGY]  ((  Character)str.charAt(i)).return  true;  [CE]  [FE]              NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  ((  Character)str.charAt(i)).return  true;  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	((  Character)str.charAt(i)).return  true;	      ((    String)str.charAt(i)).return    false;    	non-compiled	[CE]  	10	None	replace
14	[BUG]  [BUGGY]  if(str.charAt(i)  >=  '0'  &&  str.charAt(i)  >=  'a'  &&  str.charAt(i)  <  =  'z')  {  [CE]  [FE]          NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)  >=  '0'  &&  str.charAt(i)  >=  'a'  &&  str.charAt(i)  <  =  'z')  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)  >=  '0'  &&  str.charAt(i)  >=  'a'  &&  str.charAt(i)  <  =  'z')  {	  if(str.charAt(i)!=    '0'    &&    str.charAt(i)    >=    'a'    &&    str.charAt(i)    <    =    'z')    {    	non-compiled	[CE]  	12	None	replace
15	[BUG]  [BUGGY]  if(str.charAt(i)  ==  '0'  &&  str.charAt(i)  >=  'a'  &&  str.charAt(i)  <  =  'z')  {  [CE]  [FE]            NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)  ==  '0'  &&  str.charAt(i)  >=  'a'  &&  str.charAt(i)  <  =  'z')  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)  ==  '0'  &&  str.charAt(i)  >=  'a'  &&  str.charAt(i)  <  =  'z')  {	  if(str.charAt(i)!=    '0'    &&    str.charAt(i)    >=    'a'    &&    str.charAt(i)    <    =    'z')    {    	non-compiled	[CE]  	12	None	replace
16	[BUG]  [BUGGY]  if(str.charAt(i)  >=  '0'  &&  str.charAt(i)  <  =  'a'  &&  str.charAt(i)  <  =  'z')  {  [CE]  [FE]              NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)  >=  '0'  &&  str.charAt(i)  <  =  'a'  &&  str.charAt(i)  <  =  'z')  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)  >=  '0'  &&  str.charAt(i)  <  =  'a'  &&  str.charAt(i)  <  =  'z')  {	  if(str.charAt(i)!=    '0'    &&    str.charAt(i)    >=    'a'    &&    str.charAt(i)    <    =    'z')    {    	non-compiled	[CE]  	12	None	replace
17	[BUG]  [BUGGY]  if(str.charAt(i)!=  '0'  ||  str.charAt(i)  <  =  '9')  {  [CE]  [FE]        NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)!=  '0'  ||  str.charAt(i)  <  =  '9')  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)!=  '0'  ||  str.charAt(i)  <  =  '9')  {	  if(str.charAt(i)!=    '0'    &&    str.charAt(i)    <    =    '9')    {    	non-compiled	[CE]  	11	None	replace
18	[BUG]  [BUGGY]  if(str.charAt(i)  ==  '0'  &&  str.charAt(i)!=  '9')  {  [CE]  [FE]          NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)  ==  '0'  &&  str.charAt(i)!=  '9')  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)  ==  '0'  &&  str.charAt(i)!=  '9')  {	  if(str.charAt(i)    ==    '0'    ||    str.charAt(i)!=    '9')    {    	non-compiled	[CE]  	2	None	replace
19	[BUG]  [BUGGY]  if(str.charAt(i)  ==  '0'  ||  str.charAt(i)  ==  '9')  {  [CE]  [FE]            NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)  ==  '0'  ||  str.charAt(i)  ==  '9')  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)  ==  '0'  ||  str.charAt(i)  ==  '9')  {	  if(str.charAt(i)    ==    '0'    ||    str.charAt(i)!=    '9')    {    	non-compiled	[CE]  	2	None	replace
20	[BUG]  [BUGGY]  if(str.charAt(i)  ==  '0'  ||  str.charAt(i)  >=  '9')  {  [CE]  [FE]              NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)  ==  '0'  ||  str.charAt(i)  >=  '9')  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)  ==  '0'  ||  str.charAt(i)  >=  '9')  {	  if(str.charAt(i)    ==    '0'    ||    str.charAt(i)!=    '9')    {    	non-compiled	[CE]  	2	None	replace
21	[BUG]  [BUGGY]  String  str  =  str.substring(i  +  1,  str.length()  -  2);  [CE]  [FE]          NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  String  str  =  str.substring(i  +  1,  str.length()  -  2);  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	String  str  =  str.substring(i  +  1,  str.length()  -  2);	      String    str    =    str.substring(i    +    1,    str.length());    	non-compiled	[CE]  	5	None	replace
22	[BUG]  [BUGGY]  String  str  =  str.substring(i  +  1,  str.length()  +  1);  [CE]  [FE]            NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  String  str  =  str.substring(i  +  1,  str.length()  +  1);  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	String  str  =  str.substring(i  +  1,  str.length()  +  1);	      String    str    =    str.substring(i    +    1,    str.length());    	non-compiled	[CE]  	5	None	replace
23	[BUG]  [BUGGY]  String  str  =  str.substring(i  +  1,  str.length()  -  3);  [CE]  [FE]              NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  String  str  =  str.substring(i  +  1,  str.length()  -  3);  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	String  str  =  str.substring(i  +  1,  str.length()  -  3);	      String    str    =    str.substring(i    +    1,    str.length());    	non-compiled	[CE]  	5	None	replace
24	[BUG]  [BUGGY]  String  str  =(String)str.get(i  +  1);  [CE]  [FE]            NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  String  str  =(String)str.get(i  +  1);  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	String  str  =(String)str.get(i  +  1);	      String    str    =(String)str.get(i);    	non-compiled	[CE]  	6	None	replace
25	[BUG]  [BUGGY]  String  str  =(String)str.get(i  -  1);  [CE]  [FE]              NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  String  str  =(String)str.get(i  -  1);  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	String  str  =(String)str.get(i  -  1);	      String    str    =(String)str.get(i);    	non-compiled	[CE]  	6	None	replace
26	[BUG]  [BUGGY]  String  str  =(String)this.str.get(i);  [CE]  [FE]                NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  String  str  =(String)this.str.get(i);  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	String  str  =(String)this.str.get(i);	      String    str    =(String)str.get(i);    	non-compiled	[CE]  	6	None	replace
27	[BUG]  [BUGGY]  ((  char)str.charAt(i)).return  true;  [CE]  [FE]                NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  ((  char)str.charAt(i)).return  true;  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	((  char)str.charAt(i)).return  true;	      ((    char)str.charAt(i)).return    false;    	non-compiled	[CE]  	8	None	replace
28	[BUG]  [BUGGY]  Character.toLowerCase(str.charAt(i)))  {  return  true;  }  [CE]  [FE]            NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  Character.toLowerCase(str.charAt(i)))  {  return  true;  }  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	Character.toLowerCase(str.charAt(i)))  {  return  true;  }	      Character.toLowerCase(str.charAt(i)))    {    return    false;    }    	non-compiled	[CE]  	15	None	replace
29	[BUG]  [BUGGY]  Character.toUpperCase(str.charAt(i)))  {  return  false;  }  [CE]  [FE]              NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  Character.toUpperCase(str.charAt(i)))  {  return  false;  }  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	Character.toUpperCase(str.charAt(i)))  {  return  false;  }	      Character.toLowerCase(str.charAt(i)))    {    return    false;    }    	non-compiled	[CE]  	15	None	replace
30	[BUG]  [BUGGY]  Character.toLowerCase(str.charAt(0)))  {  return  false;  }  [CE]  [FE]                NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  Character.toLowerCase(str.charAt(0)))  {  return  false;  }  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	Character.toLowerCase(str.charAt(0)))  {  return  false;  }	      Character.toLowerCase(str.charAt(i)))    {    return    false;    }    	non-compiled	[CE]  	15	None	replace
31	[BUG]  [BUGGY]  Character.toLowerCase(str.charAt(i)))  {  return  true;  [CE]  [FE]        NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  Character.toLowerCase(str.charAt(i)))  {  return  true;  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	Character.toLowerCase(str.charAt(i)))  {  return  true;	      Character.toLowerCase(str.charAt(i)))    {    return    false;    	non-compiled	[CE]  	13	None	replace
32	[BUG]  [BUGGY]  Character.toUpperCase(str.charAt(i)))  {  return  true;  [CE]  [FE]          NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  Character.toUpperCase(str.charAt(i)))  {  return  true;  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	Character.toUpperCase(str.charAt(i)))  {  return  true;	      Character.toUpperCase(str.charAt(i)))    {    return    false;    	non-compiled	[CE]  	14	None	replace
33	[BUG]  [BUGGY]  Character.valueOf(str.charAt(i)))  {  return  false;  [CE]  [FE]            NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  Character.valueOf(str.charAt(i)))  {  return  false;  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	Character.valueOf(str.charAt(i)))  {  return  false;	      Character.toUpperCase(str.charAt(i)))    {    return    false;    	non-compiled	[CE]  	14	None	replace
34	[BUG]  [BUGGY]  if(str.charAt(i)  ==  '0'  ||  str.charAt(i)  ==  'a'  ||  str.charAt(i)  ==  'a'  ||  str.charAt(i)  ==  'z')  {  [CE]  [FE]        NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)  ==  '0'  ||  str.charAt(i)  ==  'a'  ||  str.charAt(i)  ==  'a'  ||  str.charAt(i)  ==  'z')  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)  ==  '0'  ||  str.charAt(i)  ==  'a'  ||  str.charAt(i)  ==  'a'  ||  str.charAt(i)  ==  'z')  {	  if    (str.charAt(i)    ==    '0')    {    	non-compiled	[CE]  	1	None	replace
35	[BUG]  [BUGGY]  if(str.charAt(i)  ==  '0'  ||  str.charAt(i)  ==  'a'  ||  str.charAt(i)  ==  'a'  ||  str.charAt(i)  ==  'a'  ||  str.charAt  [CE]  [FE]          NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)  ==  '0'  ||  str.charAt(i)  ==  'a'  ||  str.charAt(i)  ==  'a'  ||  str.charAt(i)  ==  'a'  ||  str.charAt  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)  ==  '0'  ||  str.charAt(i)  ==  'a'  ||  str.charAt(i)  ==  'a'  ||  str.charAt(i)  ==  'a'  ||  str.charAt	  if    (str.charAt(i)    ==    '0')    {    	non-compiled	[CE]  	1	None	replace
36	[BUG]  [BUGGY]  char[]  str  =  str.toCharArray(i);  [CE]  [FE]        NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  char[]  str  =  str.toCharArray(i);  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	char[]  str  =  str.toCharArray(i);	      char[]    str    =    str.toCharArray();    	non-compiled	[CE]  	9	None	replace
37	[BUG]  [BUGGY]  char[]  str  =  this.str.toCharArray();  [CE]  [FE]          NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  char[]  str  =  this.str.toCharArray();  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	char[]  str  =  this.str.toCharArray();	      char[]    str    =    str.toCharArray();    	non-compiled	[CE]  	9	None	replace
38	[BUG]  [BUGGY]  String  str  =  str.toCharArray();  [CE]  [FE]            NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  String  str  =  str.toCharArray();  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	String  str  =  str.toCharArray();	      char[]    str    =    str.toCharArray();    	non-compiled	[CE]  	9	None	replace
39	[BUG]  [BUGGY]  ((  Character)str.charAt(0)).return  true;  [CE]  [FE]              NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  ((  Character)str.charAt(0)).return  true;  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	((  Character)str.charAt(0)).return  true;	      ((    Character)str.charAt(i)).return    false;    	non-compiled	[CE]  	7	None	replace
40	[BUG]  [BUGGY]  ((  Character)str.charAt(i)).isAllZeros(true);  [CE]  [FE]                NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  ((  Character)str.charAt(i)).isAllZeros(true);  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	((  Character)str.charAt(i)).isAllZeros(true);	      ((    Character)str.charAt(i)).return    false;    	non-compiled	[CE]  	7	None	replace
41	[BUG]  [BUGGY]  if(str.charAt(i)!=  '0'  &&  str.charAt(i)  >=  '9')  {  [CE]  [FE]        NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)!=  '0'  &&  str.charAt(i)  >=  '9')  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)!=  '0'  &&  str.charAt(i)  >=  '9')  {	  if(str.charAt(i)!=    '0'    &&    str.charAt(i)    <    =    '9')    {    	non-compiled	[CE]  	11	None	replace
42	[BUG]  [BUGGY]  ((  int)str.charAt(i)).return  false;  [CE]  [FE]                NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  ((  int)str.charAt(i)).return  false;  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	((  int)str.charAt(i)).return  false;	      ((    char)str.charAt(i)).return    false;    	non-compiled	[CE]  	8	None	replace
43	[BUG]  [BUGGY]  String  str  =  str.substring(0,  i.length()  -  1);  [CE]  [FE]        NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  String  str  =  str.substring(0,  i.length()  -  1);  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	String  str  =  str.substring(0,  i.length()  -  1);	      String    str    =    str.substring(i    +    1,    str.length()    -    1);    	non-compiled	[CE]  	4	None	replace
44	[BUG]  [BUGGY]  Character.isLetter(str.charAt(i)))  {  return  false;  }  [CE]  [FE]            NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  Character.isLetter(str.charAt(i)))  {  return  false;  }  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	Character.isLetter(str.charAt(i)))  {  return  false;  }	      Character.toLowerCase(str.charAt(i)))    {    return    false;    }    	non-compiled	[CE]  	15	None	replace
45	[BUG]  [BUGGY]  ((  String)str.charAt(i)).isAllZeros(true);  [CE]  [FE]          NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  ((  String)str.charAt(i)).isAllZeros(true);  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	((  String)str.charAt(i)).isAllZeros(true);	      ((    String)str.charAt(i)).return    false;    	non-compiled	[CE]  	10	None	replace
46	[BUG]  [BUGGY]  ((  String)str.substring(i)).return  true;  [CE]  [FE]            NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  ((  String)str.substring(i)).return  true;  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	((  String)str.substring(i)).return  true;	      ((    String)str.charAt(i)).return    false;    	non-compiled	[CE]  	10	None	replace
47	[BUG]  [BUGGY]  ((  String)str.charAt(i)).deleteCharAt(i);  [CE]  [FE]              NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  ((  String)str.charAt(i)).deleteCharAt(i);  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	((  String)str.charAt(i)).deleteCharAt(i);	      ((    String)str.charAt(i)).return    false;    	non-compiled	[CE]  	10	None	replace
48	[BUG]  [BUGGY]  if(str.charAt(i)  ==  '0'  ||  str.charAt(i)  ==  'a'  &&  str.charAt(i)  <  =  'z')  {  [CE]  [FE]        NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)  ==  '0'  ||  str.charAt(i)  ==  'a'  &&  str.charAt(i)  <  =  'z')  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)  ==  '0'  ||  str.charAt(i)  ==  'a'  &&  str.charAt(i)  <  =  'z')  {	  if    (str.charAt(i)    ==    '0')    {    	non-compiled	[CE]  	1	None	replace
49	[BUG]  [BUGGY]  if(str.charAt(i)  ==  '0'  ||  str.charAt(i)!=  'a'  &&  str.charAt(i)  <  =  'z')  {  [CE]  [FE]          NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)  ==  '0'  ||  str.charAt(i)!=  'a'  &&  str.charAt(i)  <  =  'z')  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)  ==  '0'  ||  str.charAt(i)!=  'a'  &&  str.charAt(i)  <  =  'z')  {	  if    (str.charAt(i)    ==    '0')    {    	non-compiled	[CE]  	1	None	replace
50	[BUG]  [BUGGY]  if(str.charAt(i)!=  '0'  &&  str.charAt(i)  <  =  'a'  &&  str.charAt(i)  <  =  'z')  {  [CE]  [FE]          NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)!=  '0'  &&  str.charAt(i)  <  =  'a'  &&  str.charAt(i)  <  =  'z')  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)!=  '0'  &&  str.charAt(i)  <  =  'a'  &&  str.charAt(i)  <  =  'z')  {	  if(str.charAt(i)!=    '0'    &&    str.charAt(i)    >=    'a'    &&    str.charAt(i)    <    =    'z')    {    	non-compiled	[CE]  	12	None	replace
51	[BUG]  [BUGGY]  if(str.charAt(i)  ==  '0'  &&  str.charAt(i)  <  =  'a'  &&  str.charAt(i)  <  =  'z')  {  [CE]  [FE]            NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)  ==  '0'  &&  str.charAt(i)  <  =  'a'  &&  str.charAt(i)  <  =  'z')  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)  ==  '0'  &&  str.charAt(i)  <  =  'a'  &&  str.charAt(i)  <  =  'z')  {	  if(str.charAt(i)!=    '0'    &&    str.charAt(i)    >=    'a'    &&    str.charAt(i)    <    =    'z')    {    	non-compiled	[CE]  	12	None	replace
52	[BUG]  [BUGGY]  if(str.charAt(i)  >=  '0'  &&  str.charAt(i)!=  '9')  {  [CE]  [FE]          NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)  >=  '0'  &&  str.charAt(i)!=  '9')  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)  >=  '0'  &&  str.charAt(i)!=  '9')  {	  if(str.charAt(i)    ==    '0'    ||    str.charAt(i)!=    '9')    {    	non-compiled	[CE]  	2	None	replace
53	[BUG]  [BUGGY]  Character.toUpperCase(str.charAt(i));  [CE]  [FE]              NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  Character.toUpperCase(str.charAt(i));  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	Character.toUpperCase(str.charAt(i));	      Character.toLowerCase(str.charAt(i));    	non-compiled	[CE]  	16	None	replace
54	[BUG]  [BUGGY]  if(str.charAt(i)  ==  '-')  {  if(!isAllZeros(str,  i))  {  return  false;  }  [CE]  [FE]            NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)  ==  '-')  {  if(!isAllZeros(str,  i))  {  return  false;  }  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)  ==  '-')  {  if(!isAllZeros(str,  i))  {  return  false;  }	      	non-compiled	[CE]  	3	None	replace
55	[BUG]  [BUGGY]  if(str.charAt(i)  ==  '0')  {  if(!isAllZeros(str,  i))  {  return  false;  }  [CE]  [FE]              NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)  ==  '0')  {  if(!isAllZeros(str,  i))  {  return  false;  }  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)  ==  '0')  {  if(!isAllZeros(str,  i))  {  return  false;  }	      	non-compiled	[CE]  	3	None	replace
56	[BUG]  [BUGGY]  ((  Number)str).setIndex(i);  [CE]  [FE]                NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  ((  Number)str).setIndex(i);  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	((  Number)str).setIndex(i);	      	non-compiled	[CE]  	3	None	replace
57	[BUG]  [BUGGY]  if(str.charAt(i)  ==  '-')  {  if(!isAllZeros(str,  i))  {  return  true;  }  [CE]  [FE]                  NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)  ==  '-')  {  if(!isAllZeros(str,  i))  {  return  true;  }  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)  ==  '-')  {  if(!isAllZeros(str,  i))  {  return  true;  }	      	non-compiled	[CE]  	3	None	replace
58	[BUG]  [BUGGY]  if(str.charAt(i)  ==  '0'  ||  str.charAt(i)  ==  '0')  {  [CE]  [FE]        NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)  ==  '0'  ||  str.charAt(i)  ==  '0')  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)  ==  '0'  ||  str.charAt(i)  ==  '0')  {	  if    (str.charAt(i)    ==    '0')    {    	non-compiled	[CE]  	1	None	replace
59	[BUG]  [BUGGY]  if(str.charAt(i)  ==  '0'  ||  str.charAt(i)  <  '0'  ||  str.charAt(i)  >  '9')  {  [CE]  [FE]          NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)  ==  '0'  ||  str.charAt(i)  <  '0'  ||  str.charAt(i)  >  '9')  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)  ==  '0'  ||  str.charAt(i)  <  '0'  ||  str.charAt(i)  >  '9')  {	  if    (str.charAt(i)    ==    '0')    {    	non-compiled	[CE]  	1	None	replace
60	[BUG]  [BUGGY]  if((  str.charAt(i)  >=  '0'  &&  str.charAt(i)  <  =  '9')||(i  ==  0  &&  str.charAt(0)!=  '-'))  {  [CE]  [FE]        NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if((  str.charAt(i)  >=  '0'  &&  str.charAt(i)  <  =  '9')||(i  ==  0  &&  str.charAt(0)!=  '-'))  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if((  str.charAt(i)  >=  '0'  &&  str.charAt(i)  <  =  '9')||(i  ==  0  &&  str.charAt(0)!=  '-'))  {	  if(str.charAt(i)    >=    '0'    &&    str.charAt(i)    <    =    '9')    {    	non-compiled	[CE]  	17	None	replace
61	[BUG]  [BUGGY]  if((  str.charAt(i)  >=  '0'  &&  str.charAt(i)  <  =  '9')||(i  >=  0  &&  str.charAt(0)!=  '-'))  {  [CE]  [FE]          NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if((  str.charAt(i)  >=  '0'  &&  str.charAt(i)  <  =  '9')||(i  >=  0  &&  str.charAt(0)!=  '-'))  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if((  str.charAt(i)  >=  '0'  &&  str.charAt(i)  <  =  '9')||(i  >=  0  &&  str.charAt(0)!=  '-'))  {	  if(str.charAt(i)    >=    '0'    &&    str.charAt(i)    <    =    '9')    {    	non-compiled	[CE]  	17	None	replace
62	[BUG]  [BUGGY]  if(str.charAt(i)  >=  '0'  &&  str.charAt(i)  <  =  'a'  &&  str.charAt(0)  <  =  'z')  {  [CE]  [FE]          NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)  >=  '0'  &&  str.charAt(i)  <  =  'a'  &&  str.charAt(0)  <  =  'z')  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)  >=  '0'  &&  str.charAt(i)  <  =  'a'  &&  str.charAt(0)  <  =  'z')  {	  if(str.charAt(i)!=    '0'    &&    str.charAt(i)    >=    'a'    &&    str.charAt(i)    <    =    'z')    {    	non-compiled	[CE]  	12	None	replace
63	[BUG]  [BUGGY]  if(str.charAt(i)  >=  '0'  &&  str.charAt(i)  <  =  'a'  &&  str.charAt(0)!=  'z')  {  [CE]  [FE]            NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)  >=  '0'  &&  str.charAt(i)  <  =  'a'  &&  str.charAt(0)!=  'z')  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)  >=  '0'  &&  str.charAt(i)  <  =  'a'  &&  str.charAt(0)!=  'z')  {	  if(str.charAt(i)!=    '0'    &&    str.charAt(i)    >=    'a'    &&    str.charAt(i)    <    =    'z')    {    	non-compiled	[CE]  	12	None	replace
64	[BUG]  [BUGGY]  Character.toUpperCase(str.charAt(0));  [CE]  [FE]              NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  Character.toUpperCase(str.charAt(0));  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	Character.toUpperCase(str.charAt(0));	      Character.toLowerCase(str.charAt(i));    	non-compiled	[CE]  	16	None	replace
65	[BUG]  [BUGGY]  if(str.charAt(i)!=  '0'  &&  str.charAt(i)!=  '9')  {  [CE]  [FE]          NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)!=  '0'  &&  str.charAt(i)!=  '9')  {  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)!=  '0'  &&  str.charAt(i)!=  '9')  {	  if(str.charAt(i)    ==    '0'    ||    str.charAt(i)!=    '9')    {    	non-compiled	[CE]  	2	None	replace
66	[BUG]  [BUGGY]  Character.toUpperCase(str.charAt(0)))  {  return  false;  [CE]  [FE]          NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  Character.toUpperCase(str.charAt(0)))  {  return  false;  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	Character.toUpperCase(str.charAt(0)))  {  return  false;	      Character.toUpperCase(str.charAt(i)))    {    return    false;    	non-compiled	[CE]  	14	None	replace
67	[BUG]  [BUGGY]  Character.toLowerCase(str.charAt(0)))  {  return  false;  [CE]  [FE]            NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  Character.toLowerCase(str.charAt(0)))  {  return  false;  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	Character.toLowerCase(str.charAt(0)))  {  return  false;	      Character.toUpperCase(str.charAt(i)))    {    return    false;    	non-compiled	[CE]  	14	None	replace
68	[BUG]  [BUGGY]  ((  Number)str).doubleValue();  [CE]  [FE]            NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  ((  Number)str).doubleValue();  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	((  Number)str).doubleValue();	      	non-compiled	[CE]  	3	None	replace
69	[BUG]  [BUGGY]  if(str.charAt(i)!=  '0')  {  if(str.charAt(i)  ==  '0')  {  return  false;  }  [CE]  [FE]              NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)!=  '0')  {  if(str.charAt(i)  ==  '0')  {  return  false;  }  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)!=  '0')  {  if(str.charAt(i)  ==  '0')  {  return  false;  }	      	non-compiled	[CE]  	3	None	replace
70	[BUG]  [BUGGY]  if(str.charAt(i)!=  '0')  {  if(str.charAt(i)  ==  '0')  {  return  true;  }  [CE]  [FE]                NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  if(str.charAt(i)!=  '0')  {  if(str.charAt(i)  ==  '0')  {  return  true;  }  [BUGGY]    return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	if(str.charAt(i)!=  '0')  {  if(str.charAt(i)  ==  '0')  {  return  true;  }	      	non-compiled	[CE]  	3	None	replace
71	[BUG]  [BUGGY]  String  str  =  str.substring(0,  i).substring(i  +  1,  str.length());  [CE]  [FE]        NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  String  str  =  str.substring(0,  i).substring(i  +  1,  str.length());  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	String  str  =  str.substring(0,  i).substring(i  +  1,  str.length());	      String    str    =    str.substring(i    +    1,    str.length()    -    1);    	non-compiled	[CE]  	4	None	replace
72	[BUG]  [BUGGY]  String  str  =  str.substring(0,  i).substring(i  +  1);  [CE]  [FE]          NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  String  str  =  str.substring(0,  i).substring(i  +  1);  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	String  str  =  str.substring(0,  i).substring(i  +  1);	      String    str    =    str.substring(i    +    1,    str.length()    -    1);    	non-compiled	[CE]  	4	None	replace
73	[BUG]  [BUGGY]  ((  Character)str.charAt(i)).clear();  [CE]  [FE]              NumberFormatException    [CONTEXT]    private  static  boolean  isAllZeros(String  str)  {  if  (str  ==  null)  {  return  true;  }  for  (int  i  =  str.length()  -  1;  i  >=  0;  i--)  {    [BUGGY]  ((  Character)str.charAt(i)).clear();  [BUGGY]    if  (str.charAt(i)  !=  '0')  {  return  false;  }  }  return  str.length()  >  0;  }  [CLASS]  NumberUtils  [METHOD]  isAllZeros  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	560	560	1	replace	((  Character)str.charAt(i)).clear();	      ((    Character)str.charAt(i)).return    false;    	non-compiled	[CE]  	7	None	replace
