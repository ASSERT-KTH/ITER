bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  str.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)&&  str.length()  ==  0)  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  1);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str,  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createNumber(str,  1);	  Number    str    =    createString(str,    0);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
4	[BUG]  [BUGGY]  Number  str  =  createString(str,  1);  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createString(str,  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createString(str,  1);	  Number    str    =    createString(str,    0);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
5	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
6	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isNullOrEmpty(str))  {  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isNullOrEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isNullOrEmpty(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
7	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
8	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.startsWith( "- "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.startsWith( "- "))  {	  if(str    ==    null    ||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  DEC  -  1);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str,  DEC  -  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createNumber(str,  DEC  -  1);	  Number    str    =    createNumber(str,    DEC);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
10	[BUG]  [BUGGY]  NumberUtils.setLength(str,  true);  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setLength(str,  true);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setLength(str,  true);	  NumberUtils.setBlank(str,    true);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
11	[BUG]  [BUGGY]  NumberUtils.setNumber(str,  false);  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setNumber(str,  false);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setNumber(str,  false);	  NumberUtils.setBlank(str,    true);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
12	[BUG]  [BUGGY]  NumberUtils.setShort(str,  true);  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setShort(str,  true);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setShort(str,  true);	  NumberUtils.setBlank(str,    true);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
13	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(!StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  if(StringUtils.isBlank(mant)&&  StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(mant)&&  StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isBlank(mant)&&  StringUtils.isEmpty(str))  {	  if(StringUtils.isBlank(str)&&    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
15	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isWhitespace(str))  {  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isWhitespace(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(!StringUtils.isBlank(str)||  StringUtils.isWhitespace(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isWhitespace(str))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
16	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str)||  str.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str)||  str.startsWith( "- "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str)||  str.startsWith( "- "))  {	  if(StringUtils.isBlank(str)||    StringUtils.isWhitespace(str))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
17	[BUG]  [BUGGY]  NumberUtils.copyValue(mant,  0,  str.length());  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.copyValue(mant,  0,  str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.copyValue(mant,  0,  str.length());	  NumberUtils.copyValue(str,    0,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
18	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.copyValue(str,  0,  str.length()  -  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.copyValue(str,  0,  str.length()  -  1);	  NumberUtils.copyValue(str,    0,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
19	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.copyValue(str,  0,  str.length()  -  2);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.copyValue(str,  0,  str.length()  -  2);	  NumberUtils.copyValue(str,    0,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
20	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  0,  str.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.copyValue(str,  0,  str.length()  +  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.copyValue(str,  0,  str.length()  +  1);	  NumberUtils.copyValue(str,    0,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
21	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  1);  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setBlank(str,  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setBlank(str,  1);	  NumberUtils.setBlank(str,    DEC);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
22	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  DEC,  str);  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setBlank(str,  DEC,  str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setBlank(str,  DEC,  str);	  NumberUtils.setBlank(str,    DEC);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
23	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  0,  str.length());  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setBlank(str,  0,  str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setBlank(str,  0,  str.length());	  NumberUtils.setBlank(str,    DEC);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
24	[BUG]  [BUGGY]  String  str  =  str!=  null?  null  :  str.trim();  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  str!=  null?  null  :  str.trim();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =  str!=  null?  null  :  str.trim();	  String    str    =    str    ==    null?    null    :    str.trim();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
25	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "-0x "))  {  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "-0x "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "-0x "))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    str.startsWith(   "-0   "))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
26	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "0x "))  {  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "0x "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "0x "))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    str.startsWith(   "-0   "))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
27	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =  str.substring(0,  str.length()  -  1));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
28	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2));  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =  str.substring(0,  str.length()  -  2));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
29	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1));  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =  str.substring(0,  str.length()  +  1));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
30	[BUG]  [BUGGY]  NumberUtils.setNumber(str,  0);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setNumber(str,  0);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setNumber(str,  0);	  NumberUtils.setNumber(str);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
31	[BUG]  [BUGGY]  String  str  =  str.toUpperCase();  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  str.toUpperCase();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =  str.toUpperCase();	  String    str    =    str.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
32	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str)||  str.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
33	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.length()  ==  0)  {  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  orphaned  case	46	None	replace
34	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.length()!=  0)  {  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.length()!=  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.length()!=  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  orphaned  case	46	None	replace
35	[BUG]  [BUGGY]  String  str  =(str  ==  null)?  null  :  str.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =(str  ==  null)?  null  :  str.toLowerCase();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =(str  ==  null)?  null  :  str.toLowerCase();	  String    str    =    null;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
36	[BUG]  [BUGGY]  String  str  =(str  ==  null)?  null  :  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =(str  ==  null)?  null  :  str.substring(0,  str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =(str  ==  null)?  null  :  str.substring(0,  str.length());	  String    str    =    null;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
37	[BUG]  [BUGGY]  String  str  =(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1);	  String    str    =    null;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
38	[BUG]  [BUGGY]  Number  str  =  createNull(str,  DEC);  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNull(str,  DEC);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createNull(str,  DEC);	  Number    str    =    createString(str,    DEC);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
39	[BUG]  [BUGGY]  Number  str  =  createNumber();  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createNumber();	  Number    str    =    createNull();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
40	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(1));  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str.substring(1));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createNumber(str.substring(1));	  Number    str    =    createNull();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
41	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(!StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {	  if(!StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
42	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(!StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {	  if(!StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
43	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(!StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {	  if(!StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
44	[BUG]  [BUGGY]  Number  str  =  getNumber(str.toLowerCase());  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str.toLowerCase());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  getNumber(str.toLowerCase());	  Number    str    =    getNumber(str.toUpperCase());    	non-compiled	[CE]  orphaned  case	29	None	replace
45	[BUG]  [BUGGY]  Number  str  =  getNumber(str.doubleValue());  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str.doubleValue());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  getNumber(str.doubleValue());	  Number    str    =    getNumber(str.toUpperCase());    	non-compiled	[CE]  orphaned  case	29	None	replace
46	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.intValue(),  1);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.intValue(),  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Integer  str  =  createInteger(str.intValue(),  1);	  Integer    str    =    createInteger(str.intValue());    	non-compiled	[CE]  orphaned  case	27	None	replace
47	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.intValue()  +  1);  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.intValue()  +  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Integer  str  =  createInteger(str.intValue()  +  1);	  Integer    str    =    createInteger(str.intValue());    	non-compiled	[CE]  orphaned  case	27	None	replace
48	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.doubleValue());  [CE]  orphaned  case  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.doubleValue());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Integer  str  =  createInteger(str.doubleValue());	  Integer    str    =    createInteger(str.intValue());    	non-compiled	[CE]  orphaned  case	27	None	replace
49	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.startsWith( "-0 "))  {  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.startsWith( "-0 "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.startsWith( "-0 "))  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str)||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  orphaned  case	60	None	replace
50	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.startsWith( "-0x "))  {  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.startsWith( "-0x "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.startsWith( "-0x "))  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str)||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  orphaned  case	60	None	replace
51	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.startsWith( "0x "))  {  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.startsWith( "0x "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.startsWith( "0x "))  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str)||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  orphaned  case	60	None	replace
52	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  orphaned  case	38	None	replace
53	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()));  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  orphaned  case	38	None	replace
54	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(2));  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(2));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Integer  str  =  createInteger(str.substring(2));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  orphaned  case	38	None	replace
55	[BUG]  [BUGGY]  String  str  =  str.trim().toLowerCase(LONG_MINUS_ONE);  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  str.trim().toLowerCase(LONG_MINUS_ONE);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =  str.trim().toLowerCase(LONG_MINUS_ONE);	  String    str    =    str.trim().toLowerCase();    	non-compiled	[CE]  orphaned  case	28	None	replace
56	[BUG]  [BUGGY]  String  str  =  str.trim().toLowerCase(LONG_ZERO);  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  str.trim().toLowerCase(LONG_ZERO);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =  str.trim().toLowerCase(LONG_ZERO);	  String    str    =    str.trim().toLowerCase();    	non-compiled	[CE]  orphaned  case	28	None	replace
57	[BUG]  [BUGGY]  String  str  =  str.trim().toLowerCase(Long.MAX_VALUE);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  str.trim().toLowerCase(Long.MAX_VALUE);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =  str.trim().toLowerCase(Long.MAX_VALUE);	  String    str    =    str.trim().toLowerCase();    	non-compiled	[CE]  orphaned  case	28	None	replace
58	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  orphaned  case	31	None	replace
59	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()!=  0)  {  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()!=  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()!=  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  orphaned  case	31	None	replace
60	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(!StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  orphaned  case	31	None	replace
61	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  -  1));  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  -  1));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createNumber(str.substring(0,  str.length()  -  1));	  Number    str    =    createNumber(str,    false);    	non-compiled	[CE]  orphaned  case	20	None	replace
62	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  false,  true);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str,  false,  true);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createNumber(str,  false,  true);	  Number    str    =    createNumber(str,    false);    	non-compiled	[CE]  orphaned  case	20	None	replace
63	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  false,  null);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str,  false,  null);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createNumber(str,  false,  null);	  Number    str    =    createNumber(str,    false);    	non-compiled	[CE]  orphaned  case	20	None	replace
64	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str)||  str.startsWith( "- "))  {  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str)||  str.startsWith( "- "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str)||  str.startsWith( "- "))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  orphaned  case	6	None	replace
65	[BUG]  [BUGGY]  if  (StringUtils.isBlank(str)||  str.startsWith( "0x   "))  {  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if  (StringUtils.isBlank(str)||  str.startsWith( "0x   "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if  (StringUtils.isBlank(str)||  str.startsWith( "0x   "))  {	  if    (StringUtils.isBlank(str)||    str.startsWith(   "-0   "))    {    	non-compiled	[CE]  orphaned  case	9	None	replace
66	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  nfe);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str,  nfe);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createNumber(str,  nfe);	  Number    str    =    createString(str,    nfe);    	non-compiled	[CE]  orphaned  case	19	None	replace
67	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  null);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str,  null);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createNumber(str,  null);	  Number    str    =    createString(str,    nfe);    	non-compiled	[CE]  orphaned  case	19	None	replace
68	[BUG]  [BUGGY]  Number  str  =  createString(str,  exp);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createString(str,  exp);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createString(str,  exp);	  Number    str    =    createString(str,    nfe);    	non-compiled	[CE]  orphaned  case	19	None	replace
69	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  exp);  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str,  exp);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createNumber(str,  exp);	  Number    str    =    createString(str,    nfe);    	non-compiled	[CE]  orphaned  case	19	None	replace
70	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  str.length()!=  0)  {  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  str.length()!=  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)&&  str.length()!=  0)  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    str.length()!=    0)    {    	non-compiled	[CE]  orphaned  case	54	None	replace
71	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.length()  >=  0)  {  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.length()  >=  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  str.length()  >=  0)  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    str.length()!=    0)    {    	non-compiled	[CE]  orphaned  case	54	None	replace
72	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  -1);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setBlank(str,  -1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setBlank(str,  -1);	  NumberUtils.setBlank(str,    0);    	non-compiled	[CE]  orphaned  case	35	None	replace
73	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  exp);  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setBlank(str,  exp);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setBlank(str,  exp);	  NumberUtils.setBlank(str,    dec);    	non-compiled	[CE]  orphaned  case	49	None	replace
74	[BUG]  [BUGGY]  NumberUtils.setBlank(dec,  str);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setBlank(dec,  str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setBlank(dec,  str);	  NumberUtils.setBlank(str,    dec);    	non-compiled	[CE]  orphaned  case	49	None	replace
75	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  dec,  exp);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setBlank(str,  dec,  exp);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setBlank(str,  dec,  exp);	  NumberUtils.setBlank(str,    dec);    	non-compiled	[CE]  orphaned  case	49	None	replace
76	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  ex);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setBlank(str,  ex);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setBlank(str,  ex);	  NumberUtils.setBlank(str,    dec);    	non-compiled	[CE]  orphaned  case	49	None	replace
77	[BUG]  [BUGGY]  NumberUtils.isNumber(str)?  null  :  str;  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.isNumber(str)?  null  :  str;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.isNumber(str)?  null  :  str;	  NumberUtils.isNumber(str);    	non-compiled	[CE]  orphaned  case	23	None	replace
78	[BUG]  [BUGGY]  NumberUtils.setNull(str);  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setNull(str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setNull(str);	  NumberUtils.isNumber(str);    	non-compiled	[CE]  orphaned  case	23	None	replace
79	[BUG]  [BUGGY]  Number  str  =  getString(str.toUpperCase());  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getString(str.toUpperCase());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  getString(str.toUpperCase());	  Number    str    =    getString(str);    	non-compiled	[CE]  orphaned  case	55	None	replace
80	[BUG]  [BUGGY]  Number  str  =  getString(str.toLowerCase());  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getString(str.toLowerCase());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  getString(str.toLowerCase());	  Number    str    =    getString(str);    	non-compiled	[CE]  orphaned  case	55	None	replace
81	[BUG]  [BUGGY]  Number  str  =  getNullValue(str);  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNullValue(str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  getNullValue(str);	  Number    str    =    getString(str);    	non-compiled	[CE]  orphaned  case	55	None	replace
82	[BUG]  [BUGGY]  Integer  str  =  createLong(str);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createLong(str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Integer  str  =  createLong(str);	  Integer    str    =    createBigInteger(str);    	non-compiled	[CE]  orphaned  case	57	None	replace
83	[BUG]  [BUGGY]  Integer  str  =  createBigDecimal(str);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createBigDecimal(str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Integer  str  =  createBigDecimal(str);	  Integer    str    =    createBigInteger(str);    	non-compiled	[CE]  orphaned  case	57	None	replace
84	[BUG]  [BUGGY]  String  str  =  this.mant.substring(0,  str.length()  -  1);  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  this.mant.substring(0,  str.length()  -  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =  this.mant.substring(0,  str.length()  -  1);	  String    str    =    this.mant.trim();    	non-compiled	[CE]  orphaned  case	41	None	replace
85	[BUG]  [BUGGY]  String  str  =  this.mant.trim(str);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  this.mant.trim(str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =  this.mant.trim(str);	  String    str    =    this.mant.trim();    	non-compiled	[CE]  orphaned  case	41	None	replace
86	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  -  1);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.length()  -  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Integer  str  =  createInteger(str.length()  -  1);	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  orphaned  case	25	None	replace
87	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  +  1);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.length()  +  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Integer  str  =  createInteger(str.length()  +  1);	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  orphaned  case	25	None	replace
88	[BUG]  [BUGGY]  Integer  str  =  createInteger(0);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(0);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Integer  str  =  createInteger(0);	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  orphaned  case	25	None	replace
89	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  -  2);  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.length()  -  2);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Integer  str  =  createInteger(str.length()  -  2);	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  orphaned  case	25	None	replace
90	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  -  1));  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  -  1));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  getNumber(str.substring(0,  str.length()  -  1));	  Number    str    =    getNumber(str.substring(1));    	non-compiled	[CE]  orphaned  case	30	None	replace
91	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()));  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  getNumber(str.substring(0,  str.length()));	  Number    str    =    getNumber(str.substring(1));    	non-compiled	[CE]  orphaned  case	30	None	replace
92	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(2));  [CE]  orphaned  case  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str.substring(2));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  getNumber(str.substring(2));	  Number    str    =    getNumber(str.substring(1));    	non-compiled	[CE]  orphaned  case	30	None	replace
93	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(1),  str.length());  [CE]  orphaned  case  [FE]                          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str.substring(1),  str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  getNumber(str.substring(1),  str.length());	  Number    str    =    getNumber(str.substring(1));    	non-compiled	[CE]  orphaned  case	30	None	replace
94	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.startsWith( "-0 "))  {  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.startsWith( "-0 "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.startsWith( "-0 "))  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  orphaned  case	8	None	replace
95	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.startsWith( "-0x "))  {  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.startsWith( "-0x "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.startsWith( "-0x "))  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  orphaned  case	8	None	replace
96	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.startsWith( "0x "))  {  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.startsWith( "0x "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.startsWith( "0x "))  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  orphaned  case	8	None	replace
97	[BUG]  [BUGGY]  NumberUtils.setLong(str.length());  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setLong(str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setLong(str.length());	  NumberUtils.setLong(str);    	non-compiled	[CE]  orphaned  case	51	None	replace
98	[BUG]  [BUGGY]  NumberUtils.setLong(str.longValue());  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setLong(str.longValue());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setLong(str.longValue());	  NumberUtils.setLong(str);    	non-compiled	[CE]  orphaned  case	51	None	replace
99	[BUG]  [BUGGY]  NumberUtils.setPosition(str.length());  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setPosition(str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setPosition(str.length());	  NumberUtils.setPosition(str);    	non-compiled	[CE]  orphaned  case	36	None	replace
100	[BUG]  [BUGGY]  NumberUtils.setPosition(str.length()  -  1);  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setPosition(str.length()  -  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setPosition(str.length()  -  1);	  NumberUtils.setPosition(str);    	non-compiled	[CE]  orphaned  case	36	None	replace
101	[BUG]  [BUGGY]  NumberUtils.setPosition(str,  0);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setPosition(str,  0);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setPosition(str,  0);	  NumberUtils.setPosition(str);    	non-compiled	[CE]  orphaned  case	36	None	replace
102	[BUG]  [BUGGY]  NumberUtils.setLength(str.length());  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setLength(str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setLength(str.length());	  NumberUtils.setLength(str);    	non-compiled	[CE]  orphaned  case	34	None	replace
103	[BUG]  [BUGGY]  NumberUtils.setLength(0);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setLength(0);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setLength(0);	  NumberUtils.setLength(str);    	non-compiled	[CE]  orphaned  case	34	None	replace
104	[BUG]  [BUGGY]  NumberUtils.setLength(str.length()  -  1);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setLength(str.length()  -  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setLength(str.length()  -  1);	  NumberUtils.setLength(str);    	non-compiled	[CE]  orphaned  case	34	None	replace
105	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  1);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str,  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Integer  str  =  createInteger(str,  1);	  Integer    str    =    createInteger(str,    0);    	non-compiled	[CE]  orphaned  case	26	None	replace
106	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  2);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str,  2);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Integer  str  =  createInteger(str,  2);	  Integer    str    =    createInteger(str,    0);    	non-compiled	[CE]  orphaned  case	26	None	replace
107	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  4);  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str,  4);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Integer  str  =  createInteger(str,  4);	  Integer    str    =    createInteger(str,    0);    	non-compiled	[CE]  orphaned  case	26	None	replace
108	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isLetter(str))  {  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isLetter(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isLetter(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  orphaned  case	44	None	replace
109	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  ex);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str,  ex);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createNumber(str,  ex);	  Number    str    =    createNumber(str,    dec);    	non-compiled	[CE]  orphaned  case	62	None	replace
110	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  dec,  exp);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str,  dec,  exp);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createNumber(str,  dec,  exp);	  Number    str    =    createNumber(str,    dec);    	non-compiled	[CE]  orphaned  case	62	None	replace
111	[BUG]  [BUGGY]  Number  str  =  createNull(str,  dec);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNull(str,  dec);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createNull(str,  dec);	  Number    str    =    createNumber(str,    dec);    	non-compiled	[CE]  orphaned  case	62	None	replace
112	[BUG]  [BUGGY]  Number  str  =  createNull(str);  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNull(str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createNull(str);	  Number    str    =    createInteger(str);    	non-compiled	[CE]  orphaned  case	58	None	replace
113	[BUG]  [BUGGY]  Number  str  =  createInteger(str,  0);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createInteger(str,  0);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createInteger(str,  0);	  Number    str    =    createInteger(str);    	non-compiled	[CE]  orphaned  case	58	None	replace
114	[BUG]  [BUGGY]  Number  str  =  createShort(str,  true);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createShort(str,  true);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createShort(str,  true);	  Number    str    =    createNumber(str,    true);    	non-compiled	[CE]  orphaned  case	22	None	replace
115	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  false);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str,  false);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  getNumber(str,  false);	  Number    str    =    createNumber(str,    true);    	non-compiled	[CE]  orphaned  case	22	None	replace
116	[BUG]  [BUGGY]  Number  str  =  createNull(str,  true);  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNull(str,  true);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createNull(str,  true);	  Number    str    =    createNumber(str,    true);    	non-compiled	[CE]  orphaned  case	22	None	replace
117	[BUG]  [BUGGY]  NumberUtils.setLength(str,  false);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setLength(str,  false);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setLength(str,  false);	  NumberUtils.setBlank(str,    false);    	non-compiled	[CE]  orphaned  case	15	None	replace
118	[BUG]  [BUGGY]  NumberUtils.setShort(str,  false);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setShort(str,  false);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setShort(str,  false);	  NumberUtils.setBlank(str,    false);    	non-compiled	[CE]  orphaned  case	15	None	replace
119	[BUG]  [BUGGY]  NumberUtils.setLong(str,  false);  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setLong(str,  false);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setLong(str,  false);	  NumberUtils.setBlank(str,    false);    	non-compiled	[CE]  orphaned  case	15	None	replace
120	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  2);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.copyValue(str,  2);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.copyValue(str,  2);	  NumberUtils.copyValue(str,    1);    	non-compiled	[CE]  orphaned  case	10	None	replace
121	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  0);  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.copyNumber(str,  0);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.copyNumber(str,  0);	  NumberUtils.copyValue(mant,    0);    	non-compiled	[CE]  orphaned  case	12	None	replace
122	[BUG]  [BUGGY]  NumberUtils.copyString(str,  0);  [CE]  orphaned  case  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.copyString(str,  0);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.copyString(str,  0);	  NumberUtils.copyValue(mant,    0);    	non-compiled	[CE]  orphaned  case	12	None	replace
123	[BUG]  [BUGGY]  Number  str  =  createQuotedString(str);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createQuotedString(str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createQuotedString(str);	  Number    str    =    createQuotedNumber(str);    	non-compiled	[CE]  orphaned  case	63	None	replace
124	[BUG]  [BUGGY]  Number  str  =  createQuotedNumber(str,  0);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createQuotedNumber(str,  0);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createQuotedNumber(str,  0);	  Number    str    =    createQuotedNumber(str);    	non-compiled	[CE]  orphaned  case	63	None	replace
125	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  0,  str.length());  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str,  0,  str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createNumber(str,  0,  str.length());	  Number    str    =    createNumber(str,    0);    	non-compiled	[CE]  orphaned  case	21	None	replace
126	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  -1);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str,  -1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createNumber(str,  -1);	  Number    str    =    createNumber(str,    0);    	non-compiled	[CE]  orphaned  case	21	None	replace
127	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  1);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str,  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  getNumber(str,  1);	  Number    str    =    getNumber(str,    0);    	non-compiled	[CE]  orphaned  case	43	None	replace
128	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  -1);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str,  -1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  getNumber(str,  -1);	  Number    str    =    getNumber(str,    0);    	non-compiled	[CE]  orphaned  case	43	None	replace
129	[BUG]  [BUGGY]  NumberUtils.isBlank(str)?  null  :  str.toLowerCase();  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.isBlank(str)?  null  :  str.toLowerCase();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.isBlank(str)?  null  :  str.toLowerCase();	  NumberUtils.isBlank(str)?    null    :    str;    	non-compiled	[CE]  orphaned  case	24	None	replace
130	[BUG]  [BUGGY]  NumberUtils.isBlank(mant)?  null  :  mant;  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.isBlank(mant)?  null  :  mant;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.isBlank(mant)?  null  :  mant;	  NumberUtils.isBlank(str)?    null    :    str;    	non-compiled	[CE]  orphaned  case	24	None	replace
131	[BUG]  [BUGGY]  NumberUtils.isBlank(str)?  null  :  str.length();  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.isBlank(str)?  null  :  str.length();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.isBlank(str)?  null  :  str.length();	  NumberUtils.isBlank(str)?    null    :    str;    	non-compiled	[CE]  orphaned  case	24	None	replace
132	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  this);  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setBlank(str,  this);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setBlank(str,  this);	  NumberUtils.setBlank(str,    null);    	non-compiled	[CE]  orphaned  case	13	None	replace
133	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  null,  0);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setBlank(str,  null,  0);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setBlank(str,  null,  0);	  NumberUtils.setBlank(str,    null);    	non-compiled	[CE]  orphaned  case	13	None	replace
134	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  null,  str);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setBlank(str,  null,  str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setBlank(str,  null,  str);	  NumberUtils.setBlank(str,    null);    	non-compiled	[CE]  orphaned  case	13	None	replace
135	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( ".0 "))  {  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( ".0 "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( ".0 "))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  orphaned  case	5	None	replace
136	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2;  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =  str.substring(0,  str.length()  -  2;	  String    str    =    str.substring(0,    str.length();    	non-compiled	[CE]  orphaned  case	17	None	replace
137	[BUG]  [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(str  ==  null  ||!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {	  if(!StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  orphaned  case	16	None	replace
138	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  StringUtils.isEmpty(str))  {  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)&&  StringUtils.isEmpty(str))  {	  if(StringUtils.isBlank(str)&&    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  orphaned  case	48	None	replace
139	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)&&    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  orphaned  case	48	None	replace
140	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(str)||  str.startsWith( "- "))  {  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(str)||  str.startsWith( "- "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(str)||  str.startsWith( "- "))  {	  if(StringUtils.isBlank(str)&&    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  orphaned  case	48	None	replace
141	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "-- "))  {  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "-- "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "-- "))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  orphaned  case	5	None	replace
142	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isWhitespace(str))  {  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isWhitespace(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isWhitespace(str))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  orphaned  case	7	None	replace
143	[BUG]  [BUGGY]  Number  str  =  createUniqueNumber();  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createUniqueNumber();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createUniqueNumber();	  Number    str    =    createNull();    	non-compiled	[CE]  	18	None	replace
144	[BUG]  [BUGGY]  Number  str  =  createBigInteger(str);  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createBigInteger(str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createBigInteger(str);	  Number    str    =    createNull();    	non-compiled	[CE]  	18	None	replace
145	[BUG]  [BUGGY]  String  str  =  str  ==  null? "null "  :  str.trim();  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  str  ==  null? "null "  :  str.trim();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =  str  ==  null? "null "  :  str.trim();	  String    str    =    str    ==    null?    null    :    str.trim();    	non-compiled	[CE]  	40	None	replace
146	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isWhitespace(str)||  StringUtils.isEmpty(str))  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isWhitespace(str)||  StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(str  ==  null  ||  StringUtils.isWhitespace(str)||  StringUtils.isEmpty(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  	32	None	replace
147	[BUG]  [BUGGY]  NumberUtils.setLong(str  +  1);  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setLong(str  +  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setLong(str  +  1);	  NumberUtils.setLong(str);    	non-compiled	[CE]  	51	None	replace
148	[BUG]  [BUGGY]  NumberUtils.setLong(str,  0);  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setLong(str,  0);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setLong(str,  0);	  NumberUtils.setLong(str);    	non-compiled	[CE]  	51	None	replace
149	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  -  1),  false);  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  -  1),  false);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createNumber(str.substring(0,  str.length()  -  1),  false);	  Number    str    =    createNumber(str,    false);    	non-compiled	[CE]  	20	None	replace
150	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.startsWith( "-1))  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.startsWith( "-1))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.startsWith( "-1))  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str)||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  	60	None	replace
151	[BUG]  [BUGGY]  NumberUtils.setNumber(str,  null);  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setNumber(str,  null);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setNumber(str,  null);	  NumberUtils.setBlank(str,    null);    	non-compiled	[CE]  	13	None	replace
152	[BUG]  [BUGGY]  NumberUtils.setBlank(str,   "0x ");  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setBlank(str,   "0x ");  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setBlank(str,   "0x ");	  NumberUtils.setBlank(str,    null);    	non-compiled	[CE]  	13	None	replace
153	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  0L);  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str,  0L);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createNumber(str,  0L);	  Number    str    =    createNumber(str,    0);    	non-compiled	[CE]  	21	None	replace
154	[BUG]  [BUGGY]  NumberUtils.setBlank(null,  false);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setBlank(null,  false);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setBlank(null,  false);	  NumberUtils.setBlank(str,    false);    	non-compiled	[CE]  	15	None	replace
155	[BUG]  [BUGGY]  NumberUtils.setString(string);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setString(string);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setString(string);	  NumberUtils.setString(str);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
156	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()!=  0)  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()!=  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()!=  0)  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    str.length()!=    0)    {    	non-compiled	[CE]  	54	None	replace
157	[BUG]  [BUGGY]  Number  str  =  createQuotedNumber(str,  null);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createQuotedNumber(str,  null);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createQuotedNumber(str,  null);	  Number    str    =    createQuotedNumber(str);    	non-compiled	[CE]  	63	None	replace
158	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(str.length());  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createBigInteger(str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Integer  str  =  createBigInteger(str.length());	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  	25	None	replace
159	[BUG]  [BUGGY]  NumberUtils.setLength(len);  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setLength(len);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setLength(len);	  NumberUtils.setLength(str);    	non-compiled	[CE]  	34	None	replace
160	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  0,  str);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.copyValue(str,  0,  str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.copyValue(str,  0,  str);	  NumberUtils.copyValue(mant,    0);    	non-compiled	[CE]  	12	None	replace
161	[BUG]  [BUGGY]  NumberUtils.copyValue(null,  0);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.copyValue(null,  0);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.copyValue(null,  0);	  NumberUtils.copyValue(mant,    0);    	non-compiled	[CE]  	12	None	replace
162	[BUG]  [BUGGY]  String  str  =  this.mant.trim().toLowerCase();  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  this.mant.trim().toLowerCase();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =  this.mant.trim().toLowerCase();	  String    str    =    this.mant.trim();    	non-compiled	[CE]  	41	None	replace
163	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createNumber(str.substring(0,  str.length()));	  Number    str    =    createNumber(str,    true);    	non-compiled	[CE]  	22	None	replace
164	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str)||  Character.isDigit(str))  {  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str)||  Character.isDigit(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str)||  Character.isDigit(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isWhitespace(str))    {    	non-compiled	[CE]  	45	None	replace
165	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isWhitespace(str))  {  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isWhitespace(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isWhitespace(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isWhitespace(str))    {    	non-compiled	[CE]  	45	None	replace
166	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isWhitespace(str))  {  [CE]  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isWhitespace(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isBlank(str)&&  StringUtils.isWhitespace(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isWhitespace(str))    {    	non-compiled	[CE]  	45	None	replace
167	[BUG]  [BUGGY]  NumberUtils.setPosition(str,  dec);  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setPosition(str,  dec);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setPosition(str,  dec);	  NumberUtils.setPosition(str);    	non-compiled	[CE]  	36	None	replace
168	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  3);  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  3);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =  str.substring(0,  str.length()  -  3);	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  	1	None	replace
169	[BUG]  [BUGGY]  if  (StringUtils.isBlank(str)||  str.startsWith( "-0x ")||  str.startsWith( "-0x   "))  {  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if  (StringUtils.isBlank(str)||  str.startsWith( "-0x ")||  str.startsWith( "-0x   "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if  (StringUtils.isBlank(str)||  str.startsWith( "-0x ")||  str.startsWith( "-0x   "))  {	  if    (StringUtils.isBlank(str)||    str.startsWith(   "-0x   "))    {    	non-compiled	[CE]  	47	None	replace
170	[BUG]  [BUGGY]  NumberUtils.setBlank(null,  true);  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setBlank(null,  true);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setBlank(null,  true);	  NumberUtils.setBlank(str,    true);    	non-compiled	[CE]  	14	None	replace
171	[BUG]  [BUGGY]  Number  str  =  createString(str,  null);  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createString(str,  null);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createString(str,  null);	  Number    str    =    createString(str,    nfe);    	non-compiled	[CE]  	19	None	replace
172	[BUG]  [BUGGY]  NumberUtils.isNumeric(str);  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.isNumeric(str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.isNumeric(str);	  NumberUtils.isNumber(str);    	non-compiled	[CE]  	23	None	replace
173	[BUG]  [BUGGY]  String  str  =  this.mant.toLowerCase();  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  this.mant.toLowerCase();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =  this.mant.toLowerCase();	  String    str    =    str.toLowerCase();    	non-compiled	[CE]  	56	None	replace
174	[BUG]  [BUGGY]  String  str  =  str.toLowerCase(LONG_ZERO);  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  str.toLowerCase(LONG_ZERO);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =  str.toLowerCase(LONG_ZERO);	  String    str    =    str.toLowerCase();    	non-compiled	[CE]  	56	None	replace
175	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.startsWith( ".0 "))  {  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.startsWith( ".0 "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.startsWith( ".0 "))  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  orphaned  case	8	None	replace
176	[BUG]  [BUGGY]  NumberUtils.isBlank(str)?  null  :  mant;  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.isBlank(str)?  null  :  mant;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.isBlank(str)?  null  :  mant;	  NumberUtils.isBlank(str)?    null    :    str;    	non-compiled	[CE]  	24	None	replace
177	[BUG]  [BUGGY]  NumberUtils.isEmpty(str)?  null  :  str;  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.isEmpty(str)?  null  :  str;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.isEmpty(str)?  null  :  str;	  NumberUtils.isBlank(str)?    null    :    str;    	non-compiled	[CE]  	24	None	replace
178	[BUG]  [BUGGY]  NumberUtils.copyValue(mant,  1);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.copyValue(mant,  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.copyValue(mant,  1);	  NumberUtils.copyValue(str,    1);    	non-compiled	[CE]  orphaned  case	10	None	replace
179	[BUG]  [BUGGY]  Number  str  =  getStringValue(str);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getStringValue(str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  getStringValue(str);	  Number    str    =    getString(str);    	non-compiled	[CE]  orphaned  case	55	None	replace
180	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  dec);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.copyValue(str,  dec);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.copyValue(str,  dec);	  NumberUtils.copyValue(str,    1);    	non-compiled	[CE]  orphaned  case	10	None	replace
181	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str)||  str.length()  ==  0)  {  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isWhitespace(str))    {    	non-compiled	[CE]  orphaned  case	45	None	replace
182	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str)||  str.startsWith( "-0 "))  {  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str)||  str.startsWith( "-0 "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str)||  str.startsWith( "-0 "))  {	  if(StringUtils.isBlank(str)||    StringUtils.isWhitespace(str))    {    	non-compiled	[CE]  orphaned  case	45	None	replace
183	[BUG]  [BUGGY]  NumberUtils.setBlank(mant,  false);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setBlank(mant,  false);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setBlank(mant,  false);	  NumberUtils.setBlank(str,    false);    	non-compiled	[CE]  	15	None	replace
184	[BUG]  [BUGGY]  NumberUtils.setPosition(dec);  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.setPosition(dec);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.setPosition(dec);	  NumberUtils.setPosition(str);    	non-compiled	[CE]  	36	None	replace
185	[BUG]  [BUGGY]  Number  str  =  getString(str.substring(0,  str.length()  -  1));  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getString(str.substring(0,  str.length()  -  1));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  getString(str.substring(0,  str.length()  -  1));	  Number    str    =    getString(str);    	non-compiled	[CE]  orphaned  case	55	None	replace
186	[BUG]  [BUGGY]  Number  str  =  createString(str,  dec);  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createString(str,  dec);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createString(str,  dec);	  Number    str    =    createString(str,    nfe);    	non-compiled	[CE]  	19	None	replace
187	[BUG]  [BUGGY]  NumberUtils.isBlank(str)?  null  :  dec;  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.isBlank(str)?  null  :  dec;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.isBlank(str)?  null  :  dec;	  NumberUtils.isBlank(str)?    null    :    str;    	non-compiled	[CE]  	24	None	replace
188	[BUG]  [BUGGY]  Number  str  =  createLong(str,  DEC);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createLong(str,  DEC);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createLong(str,  DEC);	  Number    str    =    createString(str,    DEC);    	non-compiled	[CE]  orphaned  case	59	None	replace
189	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str)||  str.startsWith( "-0 "))  {  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str)||  str.startsWith( "-0 "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str)||  str.startsWith( "-0 "))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  orphaned  case	6	None	replace
190	[BUG]  [BUGGY]  String  str  =  getString();  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  getString();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =  getString();	  String    str    =    null;    	non-compiled	[CE]  orphaned  case	42	None	replace
191	[BUG]  [BUGGY]  String  str  =  this.mant;  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  this.mant;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =  this.mant;	  String    str    =    null;    	non-compiled	[CE]  orphaned  case	42	None	replace
192	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isWhitespace(str)||  StringUtils.isBlank(str))  {  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isWhitespace(str)||  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	if(str  ==  null  ||  StringUtils.isWhitespace(str)||  StringUtils.isBlank(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  orphaned  case	44	None	replace
193	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(2,  str.length()));  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str.substring(2,  str.length()));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  getNumber(str.substring(2,  str.length()));	  Number    str    =    getNumber(str.substring(1));    	non-compiled	[CE]  orphaned  case	30	None	replace
194	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(2,  str.length()));  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(2,  str.length()));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Integer  str  =  createInteger(str.substring(2,  str.length()));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  orphaned  case	38	None	replace
195	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  1);	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  orphaned  case	38	None	replace
196	[BUG]  [BUGGY]  String  str  =  str  ==  null?  null  :  str.substring(0,  str.length()  -  1);  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  str  ==  null?  null  :  str.substring(0,  str.length()  -  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =  str  ==  null?  null  :  str.substring(0,  str.length()  -  1);	  String    str    =    str    ==    null?    null    :    str.trim();    	non-compiled	[CE]  orphaned  case	40	None	replace
197	[BUG]  [BUGGY]  String  str  =  str.trim().toUpperCase();  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  str.trim().toUpperCase();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	String  str  =  str.trim().toUpperCase();	  String    str    =    str.trim().toLowerCase();    	non-compiled	[CE]  orphaned  case	28	None	replace
198	[BUG]  [BUGGY]  Number  str  =  createLong(str);  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createLong(str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createLong(str);	  Number    str    =    createInteger(str);    	non-compiled	[CE]  orphaned  case	58	None	replace
199	[BUG]  [BUGGY]  NumberUtils.copyValue(dec,  0);  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NumberUtils.copyValue(dec,  0);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	NumberUtils.copyValue(dec,  0);	  NumberUtils.copyValue(mant,    0);    	non-compiled	[CE]  orphaned  case	12	None	replace
200	[BUG]  [BUGGY]  Number  str  =  createLong(str,  0);  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createLong(str,  0);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createLong(str,  0);	  Number    str    =    createString(str,    0);    	non-compiled	[CE]  orphaned  case	37	None	replace
201	[BUG]  [BUGGY]  Number  str  =  createQuotedNumber(str,  dec);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createQuotedNumber(str,  dec);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang58/src/java/org/apache/commons/lang/math/NumberUtils.java	0.5773502691896258	401	401	1	replace	Number  str  =  createQuotedNumber(str,  dec);	  Number    str    =    createQuotedNumber(str);    	non-compiled	[CE]  orphaned  case	63	None	replace
