bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace+ ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace+ ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	162	1	replace
2	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace+ ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace+ ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace+ ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	162	1	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "WhoseSPACE_BLOCK ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "WhoseSPACE_BLOCK ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	162	1	replace
4	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "WhoseSPACE_BLOCK ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "WhoseSPACE_BLOCK ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "WhoseSPACE_BLOCK ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	162	1	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "WhoseSPACE_BLOCK+ ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "WhoseSPACE_BLOCK+ ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	162	1	replace
5	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "WhoseSPACE_BLOCK+ ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "WhoseSPACE_BLOCK+ ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "WhoseSPACE_BLOCK+ ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	162	1	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }    [BUGGY]  return  cs1.equals(cs2)&&  cs2  ==  cs2;  [BUGGY]    }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	788	788	1	add	return  cs1.equals(cs2)&&  cs2  ==  cs2;	  return    cs1.equals(cs2)&&    cs2!=    cs1;    	compilable	  [FE]  AssertionFailedError  testEquals	285	1	replace
23	[BUG]  [BUGGY]  return  cs1.equals(cs2)&&  cs2  ==  cs2;  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }    [BUGGY]  return  cs1.equals(cs2)&&  cs2  ==  cs2;  [BUGGY]    }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	788	788	1	replace	return  cs1.equals(cs2)&&  cs2  ==  cs2;	  return    cs1.equals(cs2)&&    cs2!=    cs1;    	compilable	  [FE]  AssertionFailedError  testEquals	285	1	replace
82	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "  inability  to  parse  cs.substring(strLen  +  1) ");  [BUGGY]    }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	add	throw  new  IllegalArgumentException( "  inability  to  parse  cs.substring(strLen  +  1) ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  AssertionFailedError  testEquals	203	1	replace
83	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "  inability  to  parse  cs.substring(strLen  +  1) ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "  inability  to  parse  cs.substring(strLen  +  1) ");  [BUGGY]    }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	replace	throw  new  IllegalArgumentException( "  inability  to  parse  cs.substring(strLen  +  1) ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  AssertionFailedError  testEquals	203	1	replace
83	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "  inability  to  parse  cs.charAt(strLen) ");  [BUGGY]    }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	add	throw  new  IllegalArgumentException( "  inability  to  parse  cs.charAt(strLen) ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  AssertionFailedError  testEquals	203	1	replace
84	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "  inability  to  parse  cs.charAt(strLen) ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "  inability  to  parse  cs.charAt(strLen) ");  [BUGGY]    }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	replace	throw  new  IllegalArgumentException( "  inability  to  parse  cs.charAt(strLen) ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  AssertionFailedError  testEquals	203	1	replace
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "  inability  to  parse  cs.charAt(strLen  +  1) ");  [BUGGY]    }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	add	throw  new  IllegalArgumentException( "  inability  to  parse  cs.charAt(strLen  +  1) ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  AssertionFailedError  testEquals	203	1	replace
85	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "  inability  to  parse  cs.charAt(strLen  +  1) ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( "  inability  to  parse  cs.charAt(strLen  +  1) ");  [BUGGY]    }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	replace	throw  new  IllegalArgumentException( "  inability  to  parse  cs.charAt(strLen  +  1) ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  AssertionFailedError  testEquals	203	1	replace
93	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {    [BUGGY]  throw  new  IllegalArgumentException( "String  ' ");  [BUGGY]    }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	229	229	1	add	throw  new  IllegalArgumentException( "String  ' ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  AssertionFailedError  testEquals	563	1	replace
94	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "String  ' ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {    [BUGGY]  throw  new  IllegalArgumentException( "String  ' ");  [BUGGY]    }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	229	229	1	replace	throw  new  IllegalArgumentException( "String  ' ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  AssertionFailedError  testEquals	563	1	replace
94	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {    [BUGGY]  throw  new  UnsupportedOperationException( " ");  [BUGGY]    }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	229	229	1	add	throw  new  UnsupportedOperationException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  AssertionFailedError  testEquals	563	1	replace
95	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( " ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {    [BUGGY]  throw  new  UnsupportedOperationException( " ");  [BUGGY]    }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	229	229	1	replace	throw  new  UnsupportedOperationException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  AssertionFailedError  testEquals	563	1	replace
133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {    [BUGGY]  if(!Character.isLetter(cs.charAt(i)))  {  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	add	if(!Character.isLetter(cs.charAt(i)))  {	  if(Character.isWhitespace(cs.charAt(i)))    {    	compilable	  [FE]  AssertionFailedError  testEquals	192	1	replace
134	[BUG]  [BUGGY]  if(!Character.isLetter(cs.charAt(i)))  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {    [BUGGY]  if(!Character.isLetter(cs.charAt(i)))  {  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	replace	if(!Character.isLetter(cs.charAt(i)))  {	  if(Character.isWhitespace(cs.charAt(i)))    {    	compilable	  [FE]  AssertionFailedError  testEquals	192	1	replace
143	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {    [BUGGY]  throw  new  IllegalStateException( "String  contents  not  cloned. ");  [BUGGY]    }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	add	throw  new  IllegalStateException( "String  contents  not  cloned. ");	  throw    new    IllegalStateException(   "   ");    	compilable	  [FE]  AssertionFailedError  testEquals	215	1	replace
144	[BUG]  [BUGGY]  throw  new  IllegalStateException( "String  contents  not  cloned. ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {    [BUGGY]  throw  new  IllegalStateException( "String  contents  not  cloned. ");  [BUGGY]    }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	replace	throw  new  IllegalStateException( "String  contents  not  cloned. ");	  throw    new    IllegalStateException(   "   ");    	compilable	  [FE]  AssertionFailedError  testEquals	215	1	replace
202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }    [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]    }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	add	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  AssertionFailedError  testEquals	323	1	replace
203	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }    [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]    }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  AssertionFailedError  testEquals	323	1	replace
232	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "w+4 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "w+4 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+4   ");    	compilable	  [FE]  AssertionFailedError  testEquals	165	1	replace
233	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "w+4 ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "w+4 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "w+4 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+4   ");    	compilable	  [FE]  AssertionFailedError  testEquals	165	1	replace
233	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Width+4 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Width+4 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+4   ");    	compilable	  [FE]  AssertionFailedError  testEquals	165	1	replace
234	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Width+4 ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Width+4 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Width+4 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+4   ");    	compilable	  [FE]  AssertionFailedError  testEquals	165	1	replace
234	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s+1 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s+1 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+4   ");    	compilable	  [FE]  AssertionFailedError  testEquals	165	1	replace
235	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s+1 ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s+1 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s+1 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+4   ");    	compilable	  [FE]  AssertionFailedError  testEquals	165	1	replace
301	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }    [BUGGY]  return  cs.length()  >  0;  [BUGGY]    }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	add	return  cs.length()  >  0;	  return    cs.length()    ==    0;    	compilable	  [FE]  AssertionFailedError  testEquals	184	1	replace
302	[BUG]  [BUGGY]  return  cs.length()  >  0;  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }    [BUGGY]  return  cs.length()  >  0;  [BUGGY]    }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	replace	return  cs.length()  >  0;	  return    cs.length()    ==    0;    	compilable	  [FE]  AssertionFailedError  testEquals	184	1	replace
303	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }    [BUGGY]  return  cs.length()!=  1;  [BUGGY]    }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	add	return  cs.length()!=  1;	  return    cs.length()    ==    0;    	compilable	  [FE]  AssertionFailedError  testEquals	184	1	replace
304	[BUG]  [BUGGY]  return  cs.length()!=  1;  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }    [BUGGY]  return  cs.length()!=  1;  [BUGGY]    }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	replace	return  cs.length()!=  1;	  return    cs.length()    ==    0;    	compilable	  [FE]  AssertionFailedError  testEquals	184	1	replace
304	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }    [BUGGY]  return  cs.length()!=  2;  [BUGGY]    }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	add	return  cs.length()!=  2;	  return    cs.length()    ==    0;    	compilable	  [FE]  AssertionFailedError  testEquals	184	1	replace
305	[BUG]  [BUGGY]  return  cs.length()!=  2;  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }    [BUGGY]  return  cs.length()!=  2;  [BUGGY]    }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	replace	return  cs.length()!=  2;	  return    cs.length()    ==    0;    	compilable	  [FE]  AssertionFailedError  testEquals	184	1	replace
322	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace- ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace- ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-   ");    	compilable	  [FE]  AssertionFailedError  testEquals	163	1	replace
323	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace- ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace- ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace- ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-   ");    	compilable	  [FE]  AssertionFailedError  testEquals	163	1	replace
323	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "w- ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "w- ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-   ");    	compilable	  [FE]  AssertionFailedError  testEquals	163	1	replace
324	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "w- ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "w- ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "w- ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-   ");    	compilable	  [FE]  AssertionFailedError  testEquals	163	1	replace
324	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace-style ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace-style ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-   ");    	compilable	  [FE]  AssertionFailedError  testEquals	163	1	replace
325	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace-style ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace-style ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace-style ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-   ");    	compilable	  [FE]  AssertionFailedError  testEquals	163	1	replace
353	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {    [BUGGY]  throw  new  IllegalStateException( "String  ' ");  [BUGGY]    }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	229	229	1	add	throw  new  IllegalStateException( "String  ' ");	  throw    new    IllegalStateException(   "   ");    	compilable	  [FE]  AssertionFailedError  testEquals	564	1	replace
354	[BUG]  [BUGGY]  throw  new  IllegalStateException( "String  ' ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {    [BUGGY]  throw  new  IllegalStateException( "String  ' ");  [BUGGY]    }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	229	229	1	replace	throw  new  IllegalStateException( "String  ' ");	  throw    new    IllegalStateException(   "   ");    	compilable	  [FE]  AssertionFailedError  testEquals	564	1	replace
463	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;    [BUGGY]  if(cs!=  null  ||(strLen  =  cs.length())  ==  0)  {  [BUGGY]    return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	224	224	1	add	if(cs!=  null  ||(strLen  =  cs.length())  ==  0)  {	  if(cs    ==    null    ||(strLen    =    cs.length())    <    0)    {    	compilable	  [FE]  AssertionFailedError  testEquals	545	1	replace
464	[BUG]  [BUGGY]  if(cs!=  null  ||(strLen  =  cs.length())  ==  0)  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;    [BUGGY]  if(cs!=  null  ||(strLen  =  cs.length())  ==  0)  {  [BUGGY]    return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	224	224	1	replace	if(cs!=  null  ||(strLen  =  cs.length())  ==  0)  {	  if(cs    ==    null    ||(strLen    =    cs.length())    <    0)    {    	compilable	  [FE]  AssertionFailedError  testEquals	545	1	replace
483	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }    [BUGGY]  return  cs1.equals(cs2)||  cs2.equals(cs1);  [BUGGY]    }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	788	788	1	add	return  cs1.equals(cs2)||  cs2.equals(cs1);	  return    cs1.equals(cs2)&&    cs2.equals(cs1);    	compilable	  [FE]  AssertionFailedError  testEquals	283	1	replace
484	[BUG]  [BUGGY]  return  cs1.equals(cs2)||  cs2.equals(cs1);  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }    [BUGGY]  return  cs1.equals(cs2)||  cs2.equals(cs1);  [BUGGY]    }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	788	788	1	replace	return  cs1.equals(cs2)||  cs2.equals(cs1);	  return    cs1.equals(cs2)&&    cs2.equals(cs1);    	compilable	  [FE]  AssertionFailedError  testEquals	283	1	replace
513	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }    [BUGGY]  for(int  i  =  2;  i  <  strLen;  i++)  {  [BUGGY]    if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	227	227	1	add	for(int  i  =  2;  i  <  strLen;  i++)  {	  for(int    i    =    1;    i    <    strLen;    i++)    {    	compilable	  [FE]  AssertionFailedError  testEquals	63	1	replace
514	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  strLen;  i++)  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }    [BUGGY]  for(int  i  =  2;  i  <  strLen;  i++)  {  [BUGGY]    if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	227	227	1	replace	for(int  i  =  2;  i  <  strLen;  i++)  {	  for(int    i    =    1;    i    <    strLen;    i++)    {    	compilable	  [FE]  AssertionFailedError  testEquals	63	1	replace
581	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {    [BUGGY]  return  cs.length()  >  0;  [BUGGY]    }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	add	return  cs.length()  >  0;	  return    cs.length()    ==    0;    	compilable	  [FE]  AssertionFailedError  testEquals	213	1	replace
582	[BUG]  [BUGGY]  return  cs.length()  >  0;  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {    [BUGGY]  return  cs.length()  >  0;  [BUGGY]    }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	replace	return  cs.length()  >  0;	  return    cs.length()    ==    0;    	compilable	  [FE]  AssertionFailedError  testEquals	213	1	replace
621	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace+ ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace+ ");	  public    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	544	1	replace
622	[BUG]  [BUGGY]  public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace+ ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace+ ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace+ ");	  public    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	544	1	replace
623	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Width+ ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Width+ ");	  public    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	544	1	replace
624	[BUG]  [BUGGY]  public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Width+ ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Width+ ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Width+ ");	  public    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	544	1	replace
624	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace-style ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace-style ");	  public    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	544	1	replace
625	[BUG]  [BUGGY]  public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace-style ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace-style ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace-style ");	  public    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	544	1	replace
642	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }    [BUGGY]  return  cs1  ==  cs2  ||  cs2.equals(cs1);  [BUGGY]    }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	788	788	1	add	return  cs1  ==  cs2  ||  cs2.equals(cs1);	  return    cs1    ==    cs2    ||    cs1.equals(cs2);    	compilable	  [FE]  AssertionFailedError  testEquals	154	1	replace
643	[BUG]  [BUGGY]  return  cs1  ==  cs2  ||  cs2.equals(cs1);  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }    [BUGGY]  return  cs1  ==  cs2  ||  cs2.equals(cs1);  [BUGGY]    }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	788	788	1	replace	return  cs1  ==  cs2  ||  cs2.equals(cs1);	  return    cs1    ==    cs2    ||    cs1.equals(cs2);    	compilable	  [FE]  AssertionFailedError  testEquals	154	1	replace
643	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }    [BUGGY]  return  cs2  ==  cs1  ||  cs1.equals(cs2);  [BUGGY]    }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	788	788	1	add	return  cs2  ==  cs1  ||  cs1.equals(cs2);	  return    cs1    ==    cs2    ||    cs1.equals(cs2);    	compilable	  [FE]  AssertionFailedError  testEquals	154	1	replace
644	[BUG]  [BUGGY]  return  cs2  ==  cs1  ||  cs1.equals(cs2);  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }    [BUGGY]  return  cs2  ==  cs1  ||  cs1.equals(cs2);  [BUGGY]    }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	788	788	1	replace	return  cs2  ==  cs1  ||  cs1.equals(cs2);	  return    cs1    ==    cs2    ||    cs1.equals(cs2);    	compilable	  [FE]  AssertionFailedError  testEquals	154	1	replace
664	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }    [BUGGY]  for(int  i  =  0;  i!=  strLen;  i++)  {  [BUGGY]    if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	227	227	1	add	for(int  i  =  0;  i!=  strLen;  i++)  {	  for(int    i    =    0;    i    <=    strLen;    i++)    {    	compilable	  [FE]  AssertionFailedError  testEquals	65	1	replace
665	[BUG]  [BUGGY]  for(int  i  =  0;  i!=  strLen;  i++)  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }    [BUGGY]  for(int  i  =  0;  i!=  strLen;  i++)  {  [BUGGY]    if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	227	227	1	replace	for(int  i  =  0;  i!=  strLen;  i++)  {	  for(int    i    =    0;    i    <=    strLen;    i++)    {    	compilable	  [FE]  AssertionFailedError  testEquals	65	1	replace
692	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {    [BUGGY]  if(!Character.isWhitespace(cs.charAt(i))  ==  true)  {  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	add	if(!Character.isWhitespace(cs.charAt(i))  ==  true)  {	  if(Character.isWhitespace(cs.charAt(i))    ==    true)    {    	compilable	  [FE]  AssertionFailedError  testEquals	573	1	replace
693	[BUG]  [BUGGY]  if(!Character.isWhitespace(cs.charAt(i))  ==  true)  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {    [BUGGY]  if(!Character.isWhitespace(cs.charAt(i))  ==  true)  {  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	replace	if(!Character.isWhitespace(cs.charAt(i))  ==  true)  {	  if(Character.isWhitespace(cs.charAt(i))    ==    true)    {    	compilable	  [FE]  AssertionFailedError  testEquals	573	1	replace
693	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {    [BUGGY]  if(!Character.isWhitespace(cs.charAt(i))  ==  false)  {  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	add	if(!Character.isWhitespace(cs.charAt(i))  ==  false)  {	  if(Character.isWhitespace(cs.charAt(i))    ==    true)    {    	compilable	  [FE]  AssertionFailedError  testEquals	573	1	replace
694	[BUG]  [BUGGY]  if(!Character.isWhitespace(cs.charAt(i))  ==  false)  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {    [BUGGY]  if(!Character.isWhitespace(cs.charAt(i))  ==  false)  {  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	replace	if(!Character.isWhitespace(cs.charAt(i))  ==  false)  {	  if(Character.isWhitespace(cs.charAt(i))    ==    true)    {    	compilable	  [FE]  AssertionFailedError  testEquals	573	1	replace
702	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh-1 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh-1 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	164	1	replace
703	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh-1 ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh-1 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh-1 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	164	1	replace
703	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "ws-1 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "ws-1 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	164	1	replace
704	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "ws-1 ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "ws-1 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "ws-1 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	164	1	replace
704	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	164	1	replace
705	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	164	1	replace
204	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;    [BUGGY]  if(cs  ==  null  ||(strLen  =  cs.length())  <=  0)  {  [BUGGY]    return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	224	224	1	add	if(cs  ==  null  ||(strLen  =  cs.length())  <=  0)  {	  if(cs    ==    null    ||(strLen    =    cs.length())    <    0)    {    	compilable	  [FE]  AssertionFailedError  testEquals	545	1	replace
205	[BUG]  [BUGGY]  if(cs  ==  null  ||(strLen  =  cs.length())  <=  0)  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;    [BUGGY]  if(cs  ==  null  ||(strLen  =  cs.length())  <=  0)  {  [BUGGY]    return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	224	224	1	replace	if(cs  ==  null  ||(strLen  =  cs.length())  <=  0)  {	  if(cs    ==    null    ||(strLen    =    cs.length())    <    0)    {    	compilable	  [FE]  AssertionFailedError  testEquals	545	1	replace
344	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }    [BUGGY]  return  cs.length()!=  3;  [BUGGY]    }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	add	return  cs.length()!=  3;	  return    cs.length()    ==    0;    	compilable	  [FE]  AssertionFailedError  testEquals	184	1	replace
345	[BUG]  [BUGGY]  return  cs.length()!=  3;  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }    [BUGGY]  return  cs.length()!=  3;  [BUGGY]    }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	replace	return  cs.length()!=  3;	  return    cs.length()    ==    0;    	compilable	  [FE]  AssertionFailedError  testEquals	184	1	replace
361	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Path-WHITESPACE_BLOCK ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Path-WHITESPACE_BLOCK ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	164	1	replace
362	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Path-WHITESPACE_BLOCK ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Path-WHITESPACE_BLOCK ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Path-WHITESPACE_BLOCK ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	164	1	replace
363	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "#s-1 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "#s-1 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	164	1	replace
364	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "#s-1 ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "#s-1 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "#s-1 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	164	1	replace
364	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "org.joda.strip.WHITESPACE_BLOCK ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "org.joda.strip.WHITESPACE_BLOCK ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	164	1	replace
365	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "org.joda.strip.WHITESPACE_BLOCK ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "org.joda.strip.WHITESPACE_BLOCK ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "org.joda.strip.WHITESPACE_BLOCK ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	164	1	replace
981	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paint+ ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paint+ ");	  public    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	544	1	replace
982	[BUG]  [BUGGY]  public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paint+ ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paint+ ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paint+ ");	  public    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	544	1	replace
982	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths+ ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths+ ");	  public    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	544	1	replace
983	[BUG]  [BUGGY]  public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths+ ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths+ ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths+ ");	  public    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	544	1	replace
1061	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {    [BUGGY]  return  cs.length()!=  0;  [BUGGY]    }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	add	return  cs.length()!=  0;	  return    cs.length()    ==    0;    	compilable	  [FE]  AssertionFailedError  testEquals	213	1	replace
1062	[BUG]  [BUGGY]  return  cs.length()!=  0;  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {    [BUGGY]  return  cs.length()!=  0;  [BUGGY]    }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	replace	return  cs.length()!=  0;	  return    cs.length()    ==    0;    	compilable	  [FE]  AssertionFailedError  testEquals	213	1	replace
1064	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {    [BUGGY]  return  cs.length()!=  1;  [BUGGY]    }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	add	return  cs.length()!=  1;	  return    cs.length()    ==    0;    	compilable	  [FE]  AssertionFailedError  testEquals	213	1	replace
1065	[BUG]  [BUGGY]  return  cs.length()!=  1;  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {    [BUGGY]  return  cs.length()!=  1;  [BUGGY]    }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	replace	return  cs.length()!=  1;	  return    cs.length()    ==    0;    	compilable	  [FE]  AssertionFailedError  testEquals	213	1	replace
1141	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "[s+s] ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "[s+s] ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	162	1	replace
1142	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "[s+s] ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "[s+s] ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "[s+s] ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	162	1	replace
1143	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paint+ ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paint+ ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	162	1	replace
1144	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paint+ ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paint+ ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paint+ ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	162	1	replace
1144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths+ ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths+ ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	162	1	replace
1145	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths+ ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths+ ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths+ ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	162	1	replace
1381	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Path+4 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Path+4 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+4   ");    	compilable	  [FE]  AssertionFailedError  testEquals	165	1	replace
1382	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Path+4 ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Path+4 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Path+4 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+4   ");    	compilable	  [FE]  AssertionFailedError  testEquals	165	1	replace
1382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "p+4 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "p+4 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+4   ");    	compilable	  [FE]  AssertionFailedError  testEquals	165	1	replace
1383	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "p+4 ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "p+4 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "p+4 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+4   ");    	compilable	  [FE]  AssertionFailedError  testEquals	165	1	replace
1383	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths+4 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths+4 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+4   ");    	compilable	  [FE]  AssertionFailedError  testEquals	165	1	replace
1384	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths+4 ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths+4 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths+4 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+4   ");    	compilable	  [FE]  AssertionFailedError  testEquals	165	1	replace
1384	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paint+4 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paint+4 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+4   ");    	compilable	  [FE]  AssertionFailedError  testEquals	165	1	replace
1385	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paint+4 ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paint+4 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paint+4 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+4   ");    	compilable	  [FE]  AssertionFailedError  testEquals	165	1	replace
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }    [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs2);  [BUGGY]    }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	788	788	1	add	return  cs1.equals(cs2)&&  cs2.equals(cs2);	  return    cs1.equals(cs2)&&    cs2.equals(cs1);    	compilable	  [FE]  AssertionFailedError  testEquals	283	1	replace
2	[BUG]  [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs2);  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }    [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs2);  [BUGGY]    }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	788	788	1	replace	return  cs1.equals(cs2)&&  cs2.equals(cs2);	  return    cs1.equals(cs2)&&    cs2.equals(cs1);    	compilable	  [FE]  AssertionFailedError  testEquals	283	1	replace
304	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {    [BUGGY]  return  cs.length()  ==  1;  [BUGGY]    }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	add	return  cs.length()  ==  1;	  return    cs.length()    ==    0;    	compilable	  [FE]  AssertionFailedError  testEquals	213	1	replace
305	[BUG]  [BUGGY]  return  cs.length()  ==  1;  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {    [BUGGY]  return  cs.length()  ==  1;  [BUGGY]    }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	replace	return  cs.length()  ==  1;	  return    cs.length()    ==    0;    	compilable	  [FE]  AssertionFailedError  testEquals	213	1	replace
363	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {    [BUGGY]  return  cs.length()  ==  0;  [BUGGY]    }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	229	229	1	add	return  cs.length()  ==  0;	  return    true;    	compilable	  [FE]  AssertionFailedError  testEquals	102	1	replace
364	[BUG]  [BUGGY]  return  cs.length()  ==  0;  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {    [BUGGY]  return  cs.length()  ==  0;  [BUGGY]    }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	229	229	1	replace	return  cs.length()  ==  0;	  return    true;    	compilable	  [FE]  AssertionFailedError  testEquals	102	1	replace
751	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "xxxx ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "xxxx ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+4   ");    	compilable	  [FE]  AssertionFailedError  testEquals	165	1	replace
752	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "xxxx ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "xxxx ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "xxxx ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+4   ");    	compilable	  [FE]  AssertionFailedError  testEquals	165	1	replace
752	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh:mm:ss  a ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh:mm:ss  a ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+4   ");    	compilable	  [FE]  AssertionFailedError  testEquals	165	1	replace
753	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh:mm:ss  a ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh:mm:ss  a ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh:mm:ss  a ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+4   ");    	compilable	  [FE]  AssertionFailedError  testEquals	165	1	replace
754	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh:+4 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh:+4 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+4   ");    	compilable	  [FE]  AssertionFailedError  testEquals	165	1	replace
755	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh:+4 ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh:+4 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh:+4 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+4   ");    	compilable	  [FE]  AssertionFailedError  testEquals	165	1	replace
1383	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace-1 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace-1 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	164	1	replace
1384	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace-1 ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace-1 ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "whitespace-1 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	164	1	replace
1384	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh:-WHITESPACE_BLOCK ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh:-WHITESPACE_BLOCK ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	164	1	replace
1385	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh:-WHITESPACE_BLOCK ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh:-WHITESPACE_BLOCK ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh:-WHITESPACE_BLOCK ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	164	1	replace
1442	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh-WHITESPACE_BLOCK ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh-WHITESPACE_BLOCK ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-   ");    	compilable	  [FE]  AssertionFailedError  testEquals	163	1	replace
1443	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh-WHITESPACE_BLOCK ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh-WHITESPACE_BLOCK ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh-WHITESPACE_BLOCK ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-   ");    	compilable	  [FE]  AssertionFailedError  testEquals	163	1	replace
1443	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "xx- ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "xx- ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-   ");    	compilable	  [FE]  AssertionFailedError  testEquals	163	1	replace
1444	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "xx- ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "xx- ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "xx- ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-   ");    	compilable	  [FE]  AssertionFailedError  testEquals	163	1	replace
1444	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh: ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh: ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-   ");    	compilable	  [FE]  AssertionFailedError  testEquals	163	1	replace
1445	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh: ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh: ");  [BUGGY]      [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh: ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s-   ");    	compilable	  [FE]  AssertionFailedError  testEquals	163	1	replace
1951	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {    [BUGGY]  if(i  <  strLen  &&!Character.isWhitespace(cs.charAt(i)))  {  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	add	if(i  <  strLen  &&!Character.isWhitespace(cs.charAt(i)))  {	  if(Character.isWhitespace(cs.charAt(i)))    {    	compilable	  [FE]  AssertionFailedError  testEquals	192	1	replace
1952	[BUG]  [BUGGY]  if(i  <  strLen  &&!Character.isWhitespace(cs.charAt(i)))  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {    [BUGGY]  if(i  <  strLen  &&!Character.isWhitespace(cs.charAt(i)))  {  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	replace	if(i  <  strLen  &&!Character.isWhitespace(cs.charAt(i)))  {	  if(Character.isWhitespace(cs.charAt(i)))    {    	compilable	  [FE]  AssertionFailedError  testEquals	192	1	replace
1954	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {    [BUGGY]  if(i  <  strLen  &&!Character.isDigit(cs.charAt(i)))  {  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	add	if(i  <  strLen  &&!Character.isDigit(cs.charAt(i)))  {	  if(Character.isWhitespace(cs.charAt(i)))    {    	compilable	  [FE]  AssertionFailedError  testEquals	192	1	replace
1955	[BUG]  [BUGGY]  if(i  <  strLen  &&!Character.isDigit(cs.charAt(i)))  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]    public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {    [BUGGY]  if(i  <  strLen  &&!Character.isDigit(cs.charAt(i)))  {  [BUGGY]    return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	replace	if(i  <  strLen  &&!Character.isDigit(cs.charAt(i)))  {	  if(Character.isWhitespace(cs.charAt(i)))    {    	compilable	  [FE]  AssertionFailedError  testEquals	192	1	replace
