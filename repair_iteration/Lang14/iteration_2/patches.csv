bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "wh-1 ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "wh-1 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "hh-1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	703	1	replace
43	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "wh-1 ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "wh-1 ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "wh-1 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "hh-1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	703	1	replace
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Hh-1 ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Hh-1 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "hh-1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	703	1	replace
44	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Hh-1 ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Hh-1 ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Hh-1 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "hh-1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	703	1	replace
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths+1 ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths+1 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "Paths+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	1145	1	replace
63	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths+1 ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths+1 ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths+1 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "Paths+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	1145	1	replace
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths* ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths* ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "Paths+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	1145	1	replace
64	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths* ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths* ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Paths* ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "Paths+   ");    	compilable	  [FE]  AssertionFailedError  testEquals	1145	1	replace
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {      [BUGGY]  if(i  >  strLen  &&  i  <  strLen  &&!Character.isDigit(cs.charAt(i)))  {  [BUGGY]      return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	add	if(i  >  strLen  &&  i  <  strLen  &&!Character.isDigit(cs.charAt(i)))  {	  if(i    <    strLen    &&!Character.isDigit(cs.charAt(i)))    {    	compilable	  [FE]  AssertionFailedError  testEquals	1955	1	replace
122	[BUG]  [BUGGY]  if(i  >  strLen  &&  i  <  strLen  &&!Character.isDigit(cs.charAt(i)))  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]      public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {      [BUGGY]  if(i  >  strLen  &&  i  <  strLen  &&!Character.isDigit(cs.charAt(i)))  {  [BUGGY]      return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	replace	if(i  >  strLen  &&  i  <  strLen  &&!Character.isDigit(cs.charAt(i)))  {	  if(i    <    strLen    &&!Character.isDigit(cs.charAt(i)))    {    	compilable	  [FE]  AssertionFailedError  testEquals	1955	1	replace
122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {      [BUGGY]  if((  i  >  strLen)&&(i  <  0)&&(cs.charAt(i)!=  cs.charAt(i)))  {  [BUGGY]      return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	add	if((  i  >  strLen)&&(i  <  0)&&(cs.charAt(i)!=  cs.charAt(i)))  {	  if(i    <    strLen    &&!Character.isDigit(cs.charAt(i)))    {    	compilable	  [FE]  AssertionFailedError  testEquals	1955	1	replace
123	[BUG]  [BUGGY]  if((  i  >  strLen)&&(i  <  0)&&(cs.charAt(i)!=  cs.charAt(i)))  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]      public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {      [BUGGY]  if((  i  >  strLen)&&(i  <  0)&&(cs.charAt(i)!=  cs.charAt(i)))  {  [BUGGY]      return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	replace	if((  i  >  strLen)&&(i  <  0)&&(cs.charAt(i)!=  cs.charAt(i)))  {	  if(i    <    strLen    &&!Character.isDigit(cs.charAt(i)))    {    	compilable	  [FE]  AssertionFailedError  testEquals	1955	1	replace
123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {      [BUGGY]  if((  i  >  strLen)&&(i  <  0)&&(cs.charAt(i)  ==  cs.charAt(i)))  {  [BUGGY]      return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	add	if((  i  >  strLen)&&(i  <  0)&&(cs.charAt(i)  ==  cs.charAt(i)))  {	  if(i    <    strLen    &&!Character.isDigit(cs.charAt(i)))    {    	compilable	  [FE]  AssertionFailedError  testEquals	1955	1	replace
124	[BUG]  [BUGGY]  if((  i  >  strLen)&&(i  <  0)&&(cs.charAt(i)  ==  cs.charAt(i)))  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]      public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {      [BUGGY]  if((  i  >  strLen)&&(i  <  0)&&(cs.charAt(i)  ==  cs.charAt(i)))  {  [BUGGY]      return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	replace	if((  i  >  strLen)&&(i  <  0)&&(cs.charAt(i)  ==  cs.charAt(i)))  {	  if(i    <    strLen    &&!Character.isDigit(cs.charAt(i)))    {    	compilable	  [FE]  AssertionFailedError  testEquals	1955	1	replace
124	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {      [BUGGY]  if(cs.charAt(i)!=  cs.charAt(i))  {  [BUGGY]      return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	add	if(cs.charAt(i)!=  cs.charAt(i))  {	  if(i    <    strLen    &&!Character.isDigit(cs.charAt(i)))    {    	compilable	  [FE]  AssertionFailedError  testEquals	1955	1	replace
125	[BUG]  [BUGGY]  if(cs.charAt(i)!=  cs.charAt(i))  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]      public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {      [BUGGY]  if(cs.charAt(i)!=  cs.charAt(i))  {  [BUGGY]      return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	replace	if(cs.charAt(i)!=  cs.charAt(i))  {	  if(i    <    strLen    &&!Character.isDigit(cs.charAt(i)))    {    	compilable	  [FE]  AssertionFailedError  testEquals	1955	1	replace
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Hh-WHITESPACE_BLOCK ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Hh-WHITESPACE_BLOCK ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "hh-WHITESPACE_BLOCK   ");    	compilable	  [FE]  AssertionFailedError  testEquals	1443	1	replace
153	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Hh-WHITESPACE_BLOCK ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Hh-WHITESPACE_BLOCK ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Hh-WHITESPACE_BLOCK ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "hh-WHITESPACE_BLOCK   ");    	compilable	  [FE]  AssertionFailedError  testEquals	1443	1	replace
153	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "HH-WHITESPACE_BLOCK ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "HH-WHITESPACE_BLOCK ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "hh-WHITESPACE_BLOCK   ");    	compilable	  [FE]  AssertionFailedError  testEquals	1443	1	replace
154	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "HH-WHITESPACE_BLOCK ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "HH-WHITESPACE_BLOCK ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "HH-WHITESPACE_BLOCK ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "hh-WHITESPACE_BLOCK   ");    	compilable	  [FE]  AssertionFailedError  testEquals	1443	1	replace
154	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Wh-WHITESPACE_BLOCK ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Wh-WHITESPACE_BLOCK ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "hh-WHITESPACE_BLOCK   ");    	compilable	  [FE]  AssertionFailedError  testEquals	1443	1	replace
155	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Wh-WHITESPACE_BLOCK ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Wh-WHITESPACE_BLOCK ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Wh-WHITESPACE_BLOCK ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "hh-WHITESPACE_BLOCK   ");    	compilable	  [FE]  AssertionFailedError  testEquals	1443	1	replace
212	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "x- ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "x- ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "w-   ");    	compilable	  [FE]  AssertionFailedError  testEquals	324	1	replace
213	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "x- ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "x- ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "x- ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "w-   ");    	compilable	  [FE]  AssertionFailedError  testEquals	324	1	replace
213	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "w-space ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "w-space ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "w-   ");    	compilable	  [FE]  AssertionFailedError  testEquals	324	1	replace
214	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "w-space ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "w-space ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "w-space ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "w-   ");    	compilable	  [FE]  AssertionFailedError  testEquals	324	1	replace
214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh- ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh- ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "w-   ");    	compilable	  [FE]  AssertionFailedError  testEquals	324	1	replace
215	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh- ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh- ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh- ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "w-   ");    	compilable	  [FE]  AssertionFailedError  testEquals	324	1	replace
254	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "warning: ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "warning: ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "ws-1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	704	1	replace
255	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "warning: ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "warning: ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "warning: ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "ws-1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	704	1	replace
272	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }      [BUGGY]  return  cs.length()  ==  2;  [BUGGY]      }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	add	return  cs.length()  ==  2;	  return    cs.length()!=    2;    	compilable	  [FE]  AssertionFailedError  testEquals	305	1	replace
273	[BUG]  [BUGGY]  return  cs.length()  ==  2;  [FE]  AssertionFailedError  testEquals  [CONTEXT]      public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }      [BUGGY]  return  cs.length()  ==  2;  [BUGGY]      }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	replace	return  cs.length()  ==  2;	  return    cs.length()!=    2;    	compilable	  [FE]  AssertionFailedError  testEquals	305	1	replace
274	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }      [BUGGY]  return  cs.length()!=  4;  [BUGGY]      }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	add	return  cs.length()!=  4;	  return    cs.length()!=    2;    	compilable	  [FE]  AssertionFailedError  testEquals	305	1	replace
275	[BUG]  [BUGGY]  return  cs.length()!=  4;  [FE]  AssertionFailedError  testEquals  [CONTEXT]      public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }      [BUGGY]  return  cs.length()!=  4;  [BUGGY]      }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	replace	return  cs.length()!=  4;	  return    cs.length()!=    2;    	compilable	  [FE]  AssertionFailedError  testEquals	305	1	replace
351	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }      [BUGGY]  return  cs.length()  >  1;  [BUGGY]      }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	add	return  cs.length()  >  1;	  return    cs.length()!=    2;    	compilable	  [FE]  AssertionFailedError  testEquals	305	1	replace
352	[BUG]  [BUGGY]  return  cs.length()  >  1;  [FE]  AssertionFailedError  testEquals  [CONTEXT]      public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }      [BUGGY]  return  cs.length()  >  1;  [BUGGY]      }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	replace	return  cs.length()  >  1;	  return    cs.length()!=    2;    	compilable	  [FE]  AssertionFailedError  testEquals	305	1	replace
352	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }      [BUGGY]  return  cs.length()  ==  1;  [BUGGY]      }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	add	return  cs.length()  ==  1;	  return    cs.length()!=    2;    	compilable	  [FE]  AssertionFailedError  testEquals	305	1	replace
353	[BUG]  [BUGGY]  return  cs.length()  ==  1;  [FE]  AssertionFailedError  testEquals  [CONTEXT]      public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }      [BUGGY]  return  cs.length()  ==  1;  [BUGGY]      }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	replace	return  cs.length()  ==  1;	  return    cs.length()!=    2;    	compilable	  [FE]  AssertionFailedError  testEquals	305	1	replace
353	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }      [BUGGY]  return  cs.length()  ==  strLen;  [BUGGY]      }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	add	return  cs.length()  ==  strLen;	  return    cs.length()!=    2;    	compilable	  [FE]  AssertionFailedError  testEquals	305	1	replace
354	[BUG]  [BUGGY]  return  cs.length()  ==  strLen;  [FE]  AssertionFailedError  testEquals  [CONTEXT]      public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }      [BUGGY]  return  cs.length()  ==  strLen;  [BUGGY]      }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	replace	return  cs.length()  ==  strLen;	  return    cs.length()!=    2;    	compilable	  [FE]  AssertionFailedError  testEquals	305	1	replace
372	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh:mm:ss   ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh:mm:ss   ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "hh:mm:ss    a   ");    	compilable	  [FE]  AssertionFailedError  testEquals	753	1	replace
373	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh:mm:ss   ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh:mm:ss   ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "hh:mm:ss   ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "hh:mm:ss    a   ");    	compilable	  [FE]  AssertionFailedError  testEquals	753	1	replace
373	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "wh:mm:ss  a ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "wh:mm:ss  a ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "hh:mm:ss    a   ");    	compilable	  [FE]  AssertionFailedError  testEquals	753	1	replace
374	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "wh:mm:ss  a ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "wh:mm:ss  a ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "wh:mm:ss  a ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "hh:mm:ss    a   ");    	compilable	  [FE]  AssertionFailedError  testEquals	753	1	replace
374	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Hh:mm:ss  a ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Hh:mm:ss  a ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "hh:mm:ss    a   ");    	compilable	  [FE]  AssertionFailedError  testEquals	753	1	replace
375	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Hh:mm:ss  a ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Hh:mm:ss  a ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Hh:mm:ss  a ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "hh:mm:ss    a   ");    	compilable	  [FE]  AssertionFailedError  testEquals	753	1	replace
382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }      [BUGGY]  return  cs.length()  ==  3;  [BUGGY]      }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	add	return  cs.length()  ==  3;	  return    cs.length()!=    3;    	compilable	  [FE]  AssertionFailedError  testEquals	345	1	replace
383	[BUG]  [BUGGY]  return  cs.length()  ==  3;  [FE]  AssertionFailedError  testEquals  [CONTEXT]      public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }      [BUGGY]  return  cs.length()  ==  3;  [BUGGY]      }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	replace	return  cs.length()  ==  3;	  return    cs.length()!=    3;    	compilable	  [FE]  AssertionFailedError  testEquals	345	1	replace
404	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s* ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s* ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	235	1	replace
405	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s* ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s* ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s* ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "s+1   ");    	compilable	  [FE]  AssertionFailedError  testEquals	235	1	replace
462	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "HWHITESPACE_BLOCK ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "HWHITESPACE_BLOCK ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "WhoseSPACE_BLOCK   ");    	compilable	  [FE]  AssertionFailedError  testEquals	4	1	replace
463	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "HWHITESPACE_BLOCK ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "HWHITESPACE_BLOCK ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "HWHITESPACE_BLOCK ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "WhoseSPACE_BLOCK   ");    	compilable	  [FE]  AssertionFailedError  testEquals	4	1	replace
463	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "PhoseSPACE_BLOCK ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "PhoseSPACE_BLOCK ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "WhoseSPACE_BLOCK   ");    	compilable	  [FE]  AssertionFailedError  testEquals	4	1	replace
464	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "PhoseSPACE_BLOCK ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "PhoseSPACE_BLOCK ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "PhoseSPACE_BLOCK ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "WhoseSPACE_BLOCK   ");    	compilable	  [FE]  AssertionFailedError  testEquals	4	1	replace
472	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Width+1 ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Width+1 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "Width+4   ");    	compilable	  [FE]  AssertionFailedError  testEquals	234	1	replace
473	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Width+1 ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]        [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Width+1 ");  [BUGGY]        [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "Width+1 ");	  private    static    final    Pattern    WHITESPACE_BLOCK    =    Pattern.compile(   "Width+4   ");    	compilable	  [FE]  AssertionFailedError  testEquals	234	1	replace
484	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]      public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {      [BUGGY]  throw  new  UnsupportedOperationException( "String  ' ");  [BUGGY]      }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	229	229	1	add	throw  new  UnsupportedOperationException( "String  ' ");	  throw    new    UnsupportedOperationException(   "   ");    	compilable	  [FE]  AssertionFailedError  testEquals	95	1	replace
485	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "String  ' ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]      public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {      [BUGGY]  throw  new  UnsupportedOperationException( "String  ' ");  [BUGGY]      }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	229	229	1	replace	throw  new  UnsupportedOperationException( "String  ' ");	  throw    new    UnsupportedOperationException(   "   ");    	compilable	  [FE]  AssertionFailedError  testEquals	95	1	replace
