bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=    cs2)    {    if(cs2    ==    cs1)    {    return    true;    }    if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
2	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  >=  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  >=  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=    cs2)    {    if(cs2    ==    cs1)    {    return    true;    }    if(cs1  >=  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
3	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=    cs2)    {    if(cs2    ==    cs1)    {    return    true;    }    if(cs1  ==  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
4	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  >>  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  >>  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=    cs2)    {    if(cs2    ==    cs1)    {    return    true;    }    if(cs1  >>  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
5	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)return  false;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)return  false;  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1  ==  null  ||  cs2  ==  null)return  false;	  if(cs1    ==    null    ||    cs2    ==    null)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
6	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=  null  ||  cs2  ==  null)return  false;  }	  if(cs1    ==    null    ||    cs2    ==    null)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
7	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1  ==  null  ||  cs2!=  null)return  false;  }	  if(cs1    ==    null    ||    cs2    ==    null)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
8	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs2  ==  null)  {  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	if(cs2  ==  null)  {  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  if(cs1    ==    null)    {    if(cs2    ==    null)    {    return    false;    }    	compilable	  [FE]  NullPointerException  	35	2	replace
9	[BUG]  [BUGGY]  if(cs2  ==  null)  {  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs2  ==  null)  {  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs2  ==  null)  {  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  if(cs1    ==    null)    {    if(cs2    ==    null)    {    return    false;    }    	compilable	  [FE]  NullPointerException  	35	2	replace
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	74	2	add
11	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	74	2	add
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	74	2	add
13	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	74	2	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	74	2	add
15	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	74	2	add
16	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
17	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false	  	non-compiled	[CE]  ';'  expected	74	None	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
19	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
21	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
23	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
25	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
27	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	20	2	add
29	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	20	2	add
30	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	20	2	add
32	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	20	2	add
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	20	2	add
34	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	20	2	add
35	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs2!=  cs1)  {  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	if(cs2!=  cs1)  {  if(cs1!=  cs2)  {  return  false;  }	  if(cs1!=    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	69	2	replace
37	[BUG]  [BUGGY]  if(cs2!=  cs1)  {  if(cs1!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs2!=  cs1)  {  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs2!=  cs1)  {  if(cs1!=  cs2)  {  return  false;  }	  if(cs1!=    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	69	2	replace
38	[BUG]  [BUGGY]  if(cs1  ==  null)  {  if(cs2  ==  null)  {  return  false;  }  if(cs1  ==  null)  {  if(cs2  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  null)  {  if(cs2  ==  null)  {  return  false;  }  if(cs1  ==  null)  {  if(cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    null)    {    if(cs2    ==    null)    {    return    false;    }    if(cs1  ==  null)  {  if(cs2  ==  null)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
39	[BUG]  [BUGGY]  if(cs1  ==  null)  {  if(cs2  ==  null)  {  return  false;  }  if(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  null)  {  if(cs2  ==  null)  {  return  false;  }  if(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    null)    {    if(cs2    ==    null)    {    return    false;    }    if(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
40	[BUG]  [BUGGY]  if(cs1  ==  null)  {  if(cs2  ==  null)  {  return  false;  }  if(cs1!=  null)  {  if(cs2  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  null)  {  if(cs2  ==  null)  {  return  false;  }  if(cs1!=  null)  {  if(cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    null)    {    if(cs2    ==    null)    {    return    false;    }    if(cs1!=  null)  {  if(cs2  ==  null)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
41	[BUG]  [BUGGY]  if(cs1  ==  null)  {  if(cs2  ==  null)  {  return  false;  }  if(cs2  ==  null)  {  if(cs1  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  null)  {  if(cs2  ==  null)  {  return  false;  }  if(cs2  ==  null)  {  if(cs1  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    null)    {    if(cs2    ==    null)    {    return    false;    }    if(cs2  ==  null)  {  if(cs1  ==  null)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
42	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(!java6NormalizerFormNFD.equals(cs1))  {  return  true;  }  [CE]  cannot  find  symbol  java6NormalizerFormNFD  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(!java6NormalizerFormNFD.equals(cs1))  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1  ==  cs2)  {  if(!java6NormalizerFormNFD.equals(cs1))  {  return  true;  }	  if(cs1!=    cs2)    {    if(!java6NormalizerFormNFD.equals(cs1))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  java6NormalizerFormNFD	72	None	replace
43	[BUG]  [BUGGY]  if(!java6NormalizerFormNFD.equals(cs1))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(!java6NormalizerFormNFD.equals(cs1))  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(!java6NormalizerFormNFD.equals(cs1))  {  return  true;  }	  if(cs1!=    cs2)    {    if(!java6NormalizerFormNFD.equals(cs1))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
44	[BUG]  [BUGGY]  if(cs2!=  cs1)  {  if(!java6NormalizerFormNFD.equals(cs1))  {  return  true;  }  [CE]  cannot  find  symbol  java6NormalizerFormNFD  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs2!=  cs1)  {  if(!java6NormalizerFormNFD.equals(cs1))  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs2!=  cs1)  {  if(!java6NormalizerFormNFD.equals(cs1))  {  return  true;  }	  if(cs1!=    cs2)    {    if(!java6NormalizerFormNFD.equals(cs1))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  java6NormalizerFormNFD	72	None	replace
45	[BUG]  [BUGGY]  if(!java6NormalizeMethod.equals(cs1,  cs2))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(!java6NormalizeMethod.equals(cs1,  cs2))  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(!java6NormalizeMethod.equals(cs1,  cs2))  {  return  false;  }	  if(cs1!=    cs2)    {    if(!java6NormalizeMethod.equals(cs1,    cs2))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
46	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(!java6NormalizeMethod.equals(cs1,  cs2))  {  return  false;  }  [CE]  cannot  find  symbol  java6NormalizeMethod  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(!java6NormalizeMethod.equals(cs1,  cs2))  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1  ==  cs2)  {  if(!java6NormalizeMethod.equals(cs1,  cs2))  {  return  false;  }	  if(cs1!=    cs2)    {    if(!java6NormalizeMethod.equals(cs1,    cs2))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  java6NormalizeMethod	71	None	replace
47	[BUG]  [BUGGY]  if(cs2!=  cs1)  {  if(!java6NormalizeMethod.equals(cs1,  cs2))  {  return  false;  }  [CE]  cannot  find  symbol  java6NormalizeMethod  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs2!=  cs1)  {  if(!java6NormalizeMethod.equals(cs1,  cs2))  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs2!=  cs1)  {  if(!java6NormalizeMethod.equals(cs1,  cs2))  {  return  false;  }	  if(cs1!=    cs2)    {    if(!java6NormalizeMethod.equals(cs1,    cs2))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  java6NormalizeMethod	71	None	replace
48	[BUG]  [BUGGY]  if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }	          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2!=    null    ||    cs1    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
49	[BUG]  [BUGGY]  cs2  =  cs2.equals(cs1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  cs2  =  cs2.equals(cs1);  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	cs2  =  cs2.equals(cs1);	  cs2    =    cs1.equals(cs2);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
50	[BUG]  [BUGGY]  cs2  =  cs1.equals(cs2.equals(cs1));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  cs2  =  cs1.equals(cs2.equals(cs1));  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	cs2  =  cs1.equals(cs2.equals(cs1));	  cs2    =    cs1.equals(cs2);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
51	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  null  ||  cs2)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1  ==  null  ||  cs2)  {  return  false;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1    ==    null    ||    cs2)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
52	[BUG]  [BUGGY]  cs1  =  cs1.equals(cs2.equals(cs1));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  cs1  =  cs1.equals(cs2.equals(cs1));  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	cs1  =  cs1.equals(cs2.equals(cs1));	  cs1    =    cs2.equals(cs1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
53	[BUG]  [BUGGY]  cs1  =  cs2.equals(cs1,  cs2);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  cs1  =  cs2.equals(cs1,  cs2);  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	cs1  =  cs2.equals(cs1,  cs2);	  cs1    =    cs2.equals(cs1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
54	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    true;    }    if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
55	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    true;    }    if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
56	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  if(cs2!=  cs1)  {  if(cs1!=  cs2)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  if(cs2!=  cs1)  {  if(cs1!=  cs2)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    true;    }    if(cs2!=  cs1)  {  if(cs1!=  cs2)  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
57	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  if(cs1  >=  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  if(cs1  >=  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    true;    }    if(cs1  >=  cs2)  {  if(cs2!=  cs1)  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
58	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    true;    }    if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
59	[BUG]  [BUGGY]  If  (cs1  ==  null  ||  cs2  ==  null)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  If  (cs1  ==  null  ||  cs2  ==  null)  {  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	If  (cs1  ==  null  ||  cs2  ==  null)  {	  if    (cs1!=    null    ||    cs2    ==    null)    {    If    (cs1!=    null    ||    cs2    ==    null)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
60	[BUG]  [BUGGY]  If  (cs1!=  null  ||  cs2  ==  null)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  If  (cs1!=  null  ||  cs2  ==  null)  {  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	If  (cs1!=  null  ||  cs2  ==  null)  {	  if    (cs1!=    null    ||    cs2    ==    null)    {    If    (cs1!=    null    ||    cs2    ==    null)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
61	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	if(cs1  ==  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }	  if(cs1!=    cs2)    {    if(cs2    ==    cs1)    {    return    true;    }    	compilable	  [FE]  NullPointerException  	46	2	replace
62	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1  ==  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }	  if(cs1!=    cs2)    {    if(cs2    ==    cs1)    {    return    true;    }    	compilable	  [FE]  NullPointerException  	46	2	replace
63	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	if(cs1  ==  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }	  if(cs1!=    cs2)    {    if(cs2    ==    cs1)    {    return    true;    }    	compilable	  [FE]  NullPointerException  	46	2	replace
64	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  [FE]  NullPointerException  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1  ==  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }	  if(cs1!=    cs2)    {    if(cs2    ==    cs1)    {    return    true;    }    	compilable	  [FE]  NullPointerException  	46	2	replace
65	[BUG]  [BUGGY]  If  (cs1  ==  null  ||  cs2!=  null)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  If  (cs1  ==  null  ||  cs2!=  null)  {  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	If  (cs1  ==  null  ||  cs2!=  null)  {	  if    (cs1    ==    null    ||    cs2!=    null)    {    If    (cs1    ==    null    ||    cs2!=    null)    {    	non-compiled	[CE]  ';'  expected	55	None	replace
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
67	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
68	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
69	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
71	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
72	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false	  	non-compiled	[CE]  ';'  expected	9	None	add
73	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  true;  }	  if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	50	2	replace
75	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  true;  }	  if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	50	2	replace
76	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	24	2	add
77	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	24	2	add
78	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
79	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	24	2	add
80	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	24	2	add
81	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	24	2	add
82	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	24	2	add
83	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	13	2	add
85	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	13	2	add
86	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	13	2	add
87	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	13	2	add
88	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	13	2	add
89	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	13	2	add
90	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	13	2	add
91	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	13	2	add
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	13	2	add
93	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	13	2	add
94	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	81	2	add
95	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	81	2	add
96	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	81	2	add
98	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	81	2	add
99	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	81	2	add
100	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	81	2	add
101	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
102	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=    cs2)    {    if(cs2    ==    cs1)    {    return    false;    }    if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
103	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  >=  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  >=  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=    cs2)    {    if(cs2    ==    cs1)    {    return    false;    }    if(cs1  >=  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
104	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=    cs2)    {    if(cs2    ==    cs1)    {    return    false;    }    if(cs1  ==  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
105	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  >>  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  >>  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=    cs2)    {    if(cs2    ==    cs1)    {    return    false;    }    if(cs1  >>  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
106	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	36	2	add
107	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	36	2	add
108	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	36	2	add
109	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	36	2	add
110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	36	2	add
111	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	36	2	add
112	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
113	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false	  	non-compiled	[CE]  ';'  expected	36	None	add
114	[BUG]  [BUGGY]  if(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }  if(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }  if(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    null)    {    if(cs2!=    null)    {    return    false;    }    if(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
115	[BUG]  [BUGGY]  if(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }  if(cs1!=  null)  {  if(cs2!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }  if(cs1!=  null)  {  if(cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    null)    {    if(cs2!=    null)    {    return    false;    }    if(cs1!=  null)  {  if(cs2!=  null)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
116	[BUG]  [BUGGY]  if(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }  if(cs1!=  null)  {  if(cs2  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }  if(cs1!=  null)  {  if(cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    null)    {    if(cs2!=    null)    {    return    false;    }    if(cs1!=  null)  {  if(cs2  ==  null)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
117	[BUG]  [BUGGY]  if(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }  if(cs1  ==  null)  {  if(cs2  >=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }  if(cs1  ==  null)  {  if(cs2  >=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    null)    {    if(cs2!=    null)    {    return    false;    }    if(cs1  ==  null)  {  if(cs2  >=  null)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
118	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1.equals(cs2))  {  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	if(cs1.equals(cs2))  {  if(cs2!=  cs1)  {  return  false;  }	  if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	48	2	replace
119	[BUG]  [BUGGY]  if(cs1.equals(cs2))  {  if(cs2!=  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1.equals(cs2))  {  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1.equals(cs2))  {  if(cs2!=  cs1)  {  return  false;  }	  if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	48	2	replace
120	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
121	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
123	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
124	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
125	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
126	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
127	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
128	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
129	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
130	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(!java6NormalizeMethod.equals(cs1))  {  return  false;  }  [CE]  cannot  find  symbol  java6NormalizeMethod  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(!java6NormalizeMethod.equals(cs1))  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1  ==  cs2)  {  if(!java6NormalizeMethod.equals(cs1))  {  return  false;  }	  if(cs1!=    cs2)    {    if(!java6NormalizeMethod.equals(cs1))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  java6NormalizeMethod	67	None	replace
131	[BUG]  [BUGGY]  if(!java6NormalizeMethod.equals(cs1))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(!java6NormalizeMethod.equals(cs1))  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(!java6NormalizeMethod.equals(cs1))  {  return  false;  }	  if(cs1!=    cs2)    {    if(!java6NormalizeMethod.equals(cs1))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
132	[BUG]  [BUGGY]  if(cs2!=  cs1)  {  if(!java6NormalizeMethod.equals(cs1))  {  return  false;  }  [CE]  cannot  find  symbol  java6NormalizeMethod  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs2!=  cs1)  {  if(!java6NormalizeMethod.equals(cs1))  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs2!=  cs1)  {  if(!java6NormalizeMethod.equals(cs1))  {  return  false;  }	  if(cs1!=    cs2)    {    if(!java6NormalizeMethod.equals(cs1))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  java6NormalizeMethod	67	None	replace
133	[BUG]  [BUGGY]  cs1  =  cs1.equals(cs1,  cs2);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  cs1  =  cs1.equals(cs1,  cs2);  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	cs1  =  cs1.equals(cs1,  cs2);	  cs1    =    cs1.equals(cs2,    cs2);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
134	[BUG]  [BUGGY]  if(cs2  ==  cs1)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs2  ==  cs1)  {  return  false;  }	  if(cs1!=    cs2)    {    if(cs2    ==    cs1)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
135	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2!=    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	79	2	add
136	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2!=    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	79	2	add
137	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2!=    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	79	2	add
138	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2!=    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	79	2	add
139	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2!=    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	79	2	add
140	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2!=    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	79	2	add
141	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2!=    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false	  	non-compiled	[CE]  ';'  expected	79	None	add
142	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2!=    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
143	[BUG]  [BUGGY]  if(cs2!=  null  ||  cs1!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs2!=  null  ||  cs1!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs2!=  null  ||  cs1!=  null)  {  return  false;  }	          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1    >=    null    ||    cs2!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
145	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
146	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
147	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
148	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
149	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
150	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
151	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
153	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
154	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
155	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
156	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs2!=  cs1)  {  if(cs1!=  cs2)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs2!=  cs1)  {  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    if(cs2!=  cs1)  {  if(cs1!=  cs2)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
157	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  if(cs1!=  cs2)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    if(cs2  ==  cs1)  {  if(cs1!=  cs2)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
158	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs1  >=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs1  >=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    if(cs1  >=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
159	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  null  ||  cs2)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=  null  ||  cs2)  {  return  false;  }	          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=    null    ||    cs2)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
160	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
161	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	38	2	add
162	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	38	2	add
163	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	38	2	add
164	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	38	2	add
165	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	38	2	add
166	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	38	2	add
167	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	38	2	add
168	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	38	2	add
169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	38	2	add
170	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	38	2	add
171	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
172	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
173	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
174	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
176	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
177	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
178	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
179	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
180	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
181	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(!java6NormalizerFormNFD.equals(cs1))  {  return  false;  }  [CE]  cannot  find  symbol  java6NormalizerFormNFD  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(!java6NormalizerFormNFD.equals(cs1))  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1  ==  cs2)  {  if(!java6NormalizerFormNFD.equals(cs1))  {  return  false;  }	  if(cs1!=    cs2)    {    if(!java6NormalizerFormNFD.equals(cs1))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  java6NormalizerFormNFD	70	None	replace
182	[BUG]  [BUGGY]  if(!java6NormalizerFormNFD.equals(cs1))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(!java6NormalizerFormNFD.equals(cs1))  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(!java6NormalizerFormNFD.equals(cs1))  {  return  false;  }	  if(cs1!=    cs2)    {    if(!java6NormalizerFormNFD.equals(cs1))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
183	[BUG]  [BUGGY]  if(cs2!=  cs1)  {  if(!java6NormalizerFormNFD.equals(cs1))  {  return  false;  }  [CE]  cannot  find  symbol  java6NormalizerFormNFD  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs2!=  cs1)  {  if(!java6NormalizerFormNFD.equals(cs1))  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs2!=  cs1)  {  if(!java6NormalizerFormNFD.equals(cs1))  {  return  false;  }	  if(cs1!=    cs2)    {    if(!java6NormalizerFormNFD.equals(cs1))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  java6NormalizerFormNFD	70	None	replace
184	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	76	1	add
185	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	76	1	add
186	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	76	1	add
187	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	76	1	add
188	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	76	2	add
189	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	76	2	add
190	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	76	1	add
191	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	76	1	add
192	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
193	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
194	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    if(cs1!=  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
195	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs1  >=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs1  >=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    if(cs1  >=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
196	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  if(cs2  >=  cs1)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  if(cs2  >=  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    if(cs1!=  cs2)  {  if(cs2  >=  cs1)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
197	[BUG]  [BUGGY]  cs1  =  cs2.equals(cs1,  cs1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  cs1  =  cs2.equals(cs1,  cs1);  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	cs1  =  cs2.equals(cs1,  cs1);	  cs1    =    cs1.equals(cs2,    cs1);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
198	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
199	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
200	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
201	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
202	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
204	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
205	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
206	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
207	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	7	2	add
208	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	7	2	add
209	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	7	2	add
210	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	7	2	add
211	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
212	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false	  	non-compiled	[CE]  ';'  expected	7	None	add
213	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
215	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
216	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
217	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
218	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
219	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
220	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
221	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
222	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
223	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
224	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	22	2	add
225	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	22	2	add
226	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	22	2	add
227	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	22	2	add
228	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
229	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
230	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	22	2	add
231	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	22	2	add
232	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
233	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
234	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
235	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
236	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
237	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
238	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
239	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
240	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
241	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
242	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	7	2	add
243	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	7	2	add
244	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  cs1  =  cs2.equals(cs1);  }  else  {  return  cs1.equals(cs2);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  cs2)  {  cs1  =  cs2.equals(cs1);  }  else  {  return  cs1.equals(cs2);  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=  cs2)  {  cs1  =  cs2.equals(cs1);  }  else  {  return  cs1.equals(cs2);  }	  cs1    =    cs2.equals(cs1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
245	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  cs1  =  cs2.equals(cs1);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  cs2)  {  cs1  =  cs2.equals(cs1);  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=  cs2)  {  cs1  =  cs2.equals(cs1);  }	  cs1    =    cs2.equals(cs1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
246	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	36	2	add
247	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	36	2	add
248	[BUG]  [BUGGY]  if(cs1!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=  null)  {  return  false;  }	          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
249	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
250	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
251	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
252	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
253	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
254	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false	  	non-compiled	[CE]  ';'  expected	76	None	add
255	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
256	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs2!=  cs1)  {  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	if(cs2!=  cs1)  {  if(cs2!=  cs1)  {  return  false;  }	  if(cs1!=    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	69	2	replace
257	[BUG]  [BUGGY]  if(cs2!=  cs1)  {  if(cs2!=  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs2!=  cs1)  {  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs2!=  cs1)  {  if(cs2!=  cs1)  {  return  false;  }	  if(cs1!=    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	69	2	replace
258	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
259	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    if(cs2  ==  cs1)  {  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
260	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  if(cs3!=  cs1)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  if(cs3!=  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    if(cs1  ==  cs2)  {  if(cs3!=  cs1)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
261	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  null)  {  if(cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	if(cs1!=  null)  {  if(cs2!=  null)  {  return  false;  }	  if(cs1    ==    null)    {    if(cs2    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	35	2	replace
262	[BUG]  [BUGGY]  if(cs1!=  null)  {  if(cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  null)  {  if(cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=  null)  {  if(cs2!=  null)  {  return  false;  }	  if(cs1    ==    null)    {    if(cs2    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	35	2	replace
263	[BUG]  [BUGGY]  if(cs1  ==  null)  {  if(cs2  ==  null)  {  return  false;  }  If(cs1  ==  null)  {  if(cs2  ==  null)  {  return  false;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  null)  {  if(cs2  ==  null)  {  return  false;  }  If(cs1  ==  null)  {  if(cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    null)    {    if(cs2    ==    null)    {    return    false;    }    If(cs1  ==  null)  {  if(cs2  ==  null)  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	34	None	add
264	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
265	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
266	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
267	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
268	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  cs1  =  cs1.equals(cs1);  }  else  {  cs2  =  cs2.equals(cs2);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  cs2)  {  cs1  =  cs1.equals(cs1);  }  else  {  cs2  =  cs2.equals(cs2);  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=  cs2)  {  cs1  =  cs1.equals(cs1);  }  else  {  cs2  =  cs2.equals(cs2);  }	  cs1    =    cs1.equals(cs1);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
269	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  cs1  =  cs1.equals(cs1);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  cs2)  {  cs1  =  cs1.equals(cs1);  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=  cs2)  {  cs1  =  cs1.equals(cs1);  }	  cs1    =    cs1.equals(cs1);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
270	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
271	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
272	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
273	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
274	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
275	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
276	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
277	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
278	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
279	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
280	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
281	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
282	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
283	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
284	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
285	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
286	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
287	[BUG]  [BUGGY]  if(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }  if(cs1)  {  null)  {  if(cs2!=  null)  {  return  false;  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }  if(cs1)  {  null)  {  if(cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    null)    {    if(cs2!=    null)    {    return    false;    }    if(cs1)  {  null)  {  if(cs2!=  null)  {  return  false;  }	  	non-compiled	[CE]  not  a  statement	64	None	add
288	[BUG]  [BUGGY]  if(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }  If(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }  If(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    null)    {    if(cs2!=    null)    {    return    false;    }    If(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	64	None	add
289	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
290	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
291	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
292	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
293	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
294	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
295	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
296	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
297	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	13	2	add
298	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	13	2	add
299	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	13	2	add
300	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	13	2	add
301	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	13	2	add
302	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	13	2	add
303	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	13	None	add
304	[BUG]  [BUGGY]  if(java6NormalizerFormNFD!=  cs1)  {  if(!java6NormalizerFormNFD.equals(cs2))  {  return  true;  }  [CE]  cannot  find  symbol  java6NormalizerFormNFD  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(java6NormalizerFormNFD!=  cs1)  {  if(!java6NormalizerFormNFD.equals(cs2))  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(java6NormalizerFormNFD!=  cs1)  {  if(!java6NormalizerFormNFD.equals(cs2))  {  return  true;  }	  if(cs1!=    cs2)    {    if(!java6NormalizerFormNFD.equals(cs1))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  java6NormalizerFormNFD	72	None	replace
305	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
306	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
307	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
308	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
309	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
310	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
311	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
312	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
313	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
314	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
315	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2!=    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
316	[BUG]  [BUGGY]  if(cs2  ==  null  ||  cs2  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs2  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs2  ==  null  ||  cs2  ==  null)  {  return  false;  }	  if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
317	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
318	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	38	2	add
319	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	38	2	add
320	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	38	2	add
321	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	38	2	add
322	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false	  	non-compiled	[CE]  ';'  expected	38	None	add
323	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
324	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	38	2	add
325	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	38	2	add
326	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	22	2	add
327	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	22	2	add
328	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	22	2	add
329	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	22	2	add
330	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	22	2	add
331	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	22	2	add
332	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	22	2	add
333	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	22	2	add
334	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	81	2	add
335	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	81	2	add
336	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	81	2	add
337	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	81	2	add
338	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
339	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	81	2	add
340	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	81	2	add
341	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
342	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
343	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
344	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
345	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
346	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
347	[BUG]  [BUGGY]  if(cs1  >=  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  >=  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1  >=  cs2)  {  if(cs2  ==  cs1)  {  return  false;  }	  if(cs1!=    cs2)    {    if(cs2    ==    cs1)    {    return    false;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	44	None	replace
348	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
349	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	20	2	add
350	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	20	2	add
351	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	20	2	add
352	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	20	2	add
353	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	20	2	add
354	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	20	2	add
355	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	20	2	add
356	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	20	2	add
357	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  null)  {  if(cs2!=  null)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	if(cs1!=  null)  {  if(cs2!=  null)  {  return  true;  }	  if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	50	2	replace
358	[BUG]  [BUGGY]  if(cs1!=  null)  {  if(cs2!=  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  null)  {  if(cs2!=  null)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=  null)  {  if(cs2!=  null)  {  return  true;  }	  if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	50	2	replace
359	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs1  >>  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs1  >>  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    if(cs1  >>  cs2)  {  if(cs2!=  cs1)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
360	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
361	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)return  false;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)return  false;  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=  null  ||  cs2  ==  null)return  false;	  if(cs1    ==    null    ||    cs2    ==    null)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
362	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)return  false;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)return  false;  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1  ==  null  ||  cs2!=  null)return  false;	  if(cs1    ==    null    ||    cs2    ==    null)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
363	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	24	2	add
364	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	24	2	add
365	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	24	2	add
366	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	24	2	add
367	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	24	2	add
368	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	24	2	add
369	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	24	2	add
370	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	24	2	add
371	[BUG]  [BUGGY]  if(cs1  >=  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  >=  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1  >=  cs2)  {  if(cs2  ==  cs1)  {  return  true;  }	  if(cs1!=    cs2)    {    if(cs2    ==    cs1)    {    return    true;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	46	None	replace
372	[BUG]  [BUGGY]  cs2  =  cs1.equals(cs2)&&  cs2.equals(cs1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  cs2  =  cs1.equals(cs2)&&  cs2.equals(cs1);  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	cs2  =  cs1.equals(cs2)&&  cs2.equals(cs1);	  cs2    =    cs1.equals(cs2);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
373	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
374	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
375	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
376	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
377	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
378	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
379	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
380	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
381	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  if(cs2!=  cs1)  {  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  if(cs2!=  cs1)  {  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    true;    }    if(cs2!=  cs1)  {  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
382	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(!java6NormalizeMethod.equals(cs2,  cs1))  {  return  false;  }  [CE]  cannot  find  symbol  java6NormalizeMethod  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  cs2)  {  if(!java6NormalizeMethod.equals(cs2,  cs1))  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=  cs2)  {  if(!java6NormalizeMethod.equals(cs2,  cs1))  {  return  false;  }	  if(cs1!=    cs2)    {    if(!java6NormalizeMethod.equals(cs1,    cs2))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  java6NormalizeMethod	71	None	replace
383	[BUG]  [BUGGY]  if(cs1!=  null  &&  cs2!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  null  &&  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=  null  &&  cs2!=  null)  {  return  false;  }	          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1    >=    null    ||    cs2!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
384	[BUG]  [BUGGY]  if(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }  if(cs2  ==  null)  {  if(cs1!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  null)  {  if(cs2!=  null)  {  return  false;  }  if(cs2  ==  null)  {  if(cs1!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    null)    {    if(cs2!=    null)    {    return    false;    }    if(cs2  ==  null)  {  if(cs1!=  null)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
385	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
386	[BUG]  [BUGGY]  if(cs2  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs2  ==  null)  {  return  false;  }	          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1    ==    null    ||    cs2)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
387	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
388	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
389	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
390	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
391	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
392	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	40	2	add
393	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false	  	non-compiled	[CE]  ';'  expected	1	None	add
394	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
395	[BUG]  [BUGGY]  cs2  =  cs1.equals(cs2.equals(cs1);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  cs2  =  cs1.equals(cs2.equals(cs1);  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	cs2  =  cs1.equals(cs2.equals(cs1);	  cs2    =    cs1.equals(cs2);    	non-compiled	[CE]  ')'  expected	60	None	replace
396	[BUG]  [BUGGY]  if(cs1  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1  ==  null)  {  return  false;  }	          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
397	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  if(cs2!=  cs1)  {  if(cs2!=  cs1)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  if(cs2!=  cs1)  {  if(cs2!=  cs1)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    true;    }    if(cs2!=  cs1)  {  if(cs2!=  cs1)  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
398	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false	  	non-compiled	[CE]  ';'  expected	13	None	add
399	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
400	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1!=        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
401	[BUG]  [BUGGY]  if(cs2  ==  cs1)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs2  ==  cs1)  {  return  true;  }	  if(cs1!=    cs2)    {    if(cs2    ==    cs1)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
402	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  null)  {  if(cs2  ==  null)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	if(cs1!=  null)  {  if(cs2  ==  null)  {  return  true;  }	  if(cs1!=    cs2)    {    if(cs2    ==    cs1)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	46	2	replace
403	[BUG]  [BUGGY]  if(cs1!=  null)  {  if(cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  null)  {  if(cs2  ==  null)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=  null)  {  if(cs2  ==  null)  {  return  true;  }	  if(cs1!=    cs2)    {    if(cs2    ==    cs1)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	46	2	replace
404	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  null  &&  cs2!=  null)  {  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	if(cs1!=  null  &&  cs2!=  null)  {	  if    (cs1!=    null    ||    cs2!=    null)    {    if    (cs1!=    null    ||    cs2!=    null)    {    	compilable	  [FE]  AssertionFailedError  	56	2	replace
405	[BUG]  [BUGGY]  if(cs1!=  null  &&  cs2!=  null)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  null  &&  cs2!=  null)  {  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=  null  &&  cs2!=  null)  {	  if    (cs1!=    null    ||    cs2!=    null)    {    if    (cs1!=    null    ||    cs2!=    null)    {    	compilable	  [FE]  AssertionFailedError  	56	2	replace
406	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	24	2	add
407	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	24	2	add
408	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
409	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs2!=  cs1)  {  if(cs2!=  cs1)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs2!=  cs1)  {  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    if(cs2!=  cs1)  {  if(cs2!=  cs1)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
410	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs1  >>  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  if(cs1  >>  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    if(cs1  >>  cs2)  {  if(cs2!=  cs1)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
411	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	81	2	add
412	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	81	2	add
413	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
414	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
415	[BUG]  [BUGGY]  if(cs1!=  null)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1!=  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1!=  null)  {  return  true;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
416	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
417	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
418	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
419	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1.equals(cs2))  {  if(cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	if(cs1.equals(cs2))  {  if(cs2!=  null)  {  return  false;  }	  if(cs1    ==    null)    {    if(cs2!=    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	65	2	replace
420	[BUG]  [BUGGY]  if(cs1.equals(cs2))  {  if(cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1.equals(cs2))  {  if(cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1.equals(cs2))  {  if(cs2!=  null)  {  return  false;  }	  if(cs1    ==    null)    {    if(cs2!=    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	65	2	replace
421	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  cs1  =  cs2.equals(cs1);  }  else  {  return  cs1.equals(cs2);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  cs1  =  cs2.equals(cs1);  }  else  {  return  cs1.equals(cs2);  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1  ==  cs2)  {  cs1  =  cs2.equals(cs1);  }  else  {  return  cs1.equals(cs2);  }	  cs1    =    cs2.equals(cs1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
422	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  cs1  =  cs2.equals(cs1);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  cs1  =  cs2.equals(cs1);  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1  ==  cs2)  {  cs1  =  cs2.equals(cs1);  }	  cs1    =    cs2.equals(cs1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
423	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1.equals(cs2))  {  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	if(cs1.equals(cs2))  {  if(cs2  ==  cs1)  {  return  false;  }	  if(cs1!=    cs2)    {    if(cs2    ==    cs1)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	44	2	replace
424	[BUG]  [BUGGY]  if(cs1.equals(cs2))  {  if(cs2  ==  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1.equals(cs2))  {  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1.equals(cs2))  {  if(cs2  ==  cs1)  {  return  false;  }	  if(cs1!=    cs2)    {    if(cs2    ==    cs1)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	44	2	replace
425	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(cs1!=  cs2)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	if(cs1  ==  cs2)  {  if(cs1!=  cs2)  {  return  true;  }	  if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    true;    }    	compilable	  [FE]  NullPointerException  	50	2	replace
426	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(cs1!=  cs2)  {  return  true;  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1  ==  cs2)  {  if(cs1!=  cs2)  {  return  true;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1  ==  cs2)  {  if(cs1!=  cs2)  {  return  true;  }	  if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    true;    }    	compilable	  [FE]  NullPointerException  	50	2	replace
427	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
428	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	20	2	add
429	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	20	2	add
430	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	20	2	add
431	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	20	2	add
432	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1.equals(cs2))  {  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	if(cs1.equals(cs2))  {  if(cs2!=  cs2)  {  return  false;  }	  if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	48	2	replace
433	[BUG]  [BUGGY]  if(cs1.equals(cs2))  {  if(cs2!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  if(cs1.equals(cs2))  {  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1.equals(cs2))  {  if(cs2!=  cs2)  {  return  false;  }	  if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	48	2	replace
434	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
435	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
436	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
437	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
438	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false	  	non-compiled	[CE]  ';'  expected	9	None	add
439	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
440	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
441	[BUG]  [BUGGY]  cs1  =  cs1.equals(cs1,  cs1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]  cs1  =  cs1.equals(cs1,  cs1);  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	cs1  =  cs1.equals(cs1,  cs1);	  cs1    =    cs1.equals(cs2,    cs1);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
442	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  [BUGGY]      if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
