bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2!=  cs2)||(cs1!=  cs2)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs2  ==  cs1)||(cs2!=  cs2)||(cs1!=  cs2)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	156	1	replace
2	[BUG]  [BUGGY]  return(cs2  ==  cs1)||(cs2!=  cs2)||(cs1!=  cs2)||(cs2.equals(cs2));  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2!=  cs2)||(cs1!=  cs2)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs2  ==  cs1)||(cs2!=  cs2)||(cs1!=  cs2)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	156	1	replace
3	[BUG]  [BUGGY]  return  cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    	non-compiled	[CE]  ';'  expected	156	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs1));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs3.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	62	1	replace
5	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs1));  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs1));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs3.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	62	1	replace
6	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1.equals(cs2))  {  return  false;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1.equals(cs2))  {  return  false;  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    if(cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2))    return    false;    	compilable	  [FE]  NullPointerException  	91	2	replace
7	[BUG]  [BUGGY]  if(cs1.equals(cs2))  {  return  false;  }  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1.equals(cs2))  {  return  false;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1.equals(cs2))  {  return  false;  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    if(cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2))    return    false;    	compilable	  [FE]  NullPointerException  	91	2	replace
8	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2)||  cs2.equals(cs1);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  cs2)  {  return  cs1.equals(cs2)||  cs2.equals(cs1);  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    if(cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2))    return    false;    	compilable	  [FE]  NullPointerException  	91	2	replace
9	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2)||  cs2.equals(cs1);  }  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2)||  cs2.equals(cs1);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  cs1.equals(cs2)||  cs2.equals(cs1);  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    if(cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2))    return    false;    	compilable	  [FE]  NullPointerException  	91	2	replace
10	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1.equals(cs1))  {  return  cs2.equals(cs2)||  cs1.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1.equals(cs1))  {  return  cs2.equals(cs2)||  cs1.equals(cs2);  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    if(cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2))    return    false;    	compilable	  [FE]  NullPointerException  	91	2	replace
11	[BUG]  [BUGGY]  if(cs1.equals(cs1))  {  return  cs2.equals(cs2)||  cs1.equals(cs2);  }  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1.equals(cs1))  {  return  cs2.equals(cs2)||  cs1.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1.equals(cs1))  {  return  cs2.equals(cs2)||  cs1.equals(cs2);  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    if(cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2))    return    false;    	compilable	  [FE]  NullPointerException  	91	2	replace
12	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs1)||  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  cs2)  {  return  cs1.equals(cs1)||  cs2.equals(cs2);  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    if(cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2))    return    false;    	compilable	  [FE]  NullPointerException  	91	2	replace
13	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs1)||  cs2.equals(cs2);  }  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs1)||  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  cs1.equals(cs1)||  cs2.equals(cs2);  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    if(cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2))    return    false;    	compilable	  [FE]  NullPointerException  	91	2	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
15	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
17	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
19	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
21	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
23	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
24	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)||  cs1.equals(cs2);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return  cs1.equals(cs2)||  cs1.equals(cs2);	  return    cs1.equals(cs2)&&    cs1.equals(cs2);    	compilable	  [FE]  NullPointerException  	148	2	replace
25	[BUG]  [BUGGY]  return  cs1.equals(cs2)||  cs1.equals(cs2);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)||  cs1.equals(cs2);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1.equals(cs2)||  cs1.equals(cs2);	  return    cs1.equals(cs2)&&    cs1.equals(cs2);    	compilable	  [FE]  NullPointerException  	148	2	replace
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	98	2	add
27	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	98	2	add
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	98	2	add
29	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	98	2	add
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	98	2	add
31	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	98	2	add
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	98	2	add
33	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	98	2	add
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	98	2	add
35	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	98	2	add
36	[BUG]  [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2);  if(cs1  ==  cs2)  {  return(cs2  ==  cs1)||(cs2.equals(cs2));  }  [CE]  unreachable  statement  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2);  if(cs1  ==  cs2)  {  return(cs2  ==  cs1)||(cs2.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs2  ==  cs1)||(cs2  ==  cs2);  if(cs1  ==  cs2)  {  return(cs2  ==  cs1)||(cs2.equals(cs2));  }	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    if(cs1    ==    cs2)    {    return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    }    	non-compiled	[CE]  unreachable  statement	31	None	replace
37	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||  cs2  ==  cs1)||  cs2.equals(cs2);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||  cs2  ==  cs1)||  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||  cs2  ==  cs1)||  cs2.equals(cs2);  }	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    if(cs1    ==    cs2)    {    return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    }    	non-compiled	[CE]  ';'  expected	31	None	replace
38	[BUG]  [BUGGY]  return  cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    if(cs1    ==    cs2)    {    return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    }    	non-compiled	[CE]  ';'  expected	31	None	replace
39	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs1)||  cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return  cs1.equals(cs2.equals(cs1)||  cs2.equals(cs2));	  return    cs1.equals(cs2.equals(cs1)&&    cs2.equals(cs2));    	compilable	  [FE]  NullPointerException  	186	2	replace
40	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs1)||  cs2.equals(cs2));  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs1)||  cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1.equals(cs2.equals(cs1)||  cs2.equals(cs2));	  return    cs1.equals(cs2.equals(cs1)&&    cs2.equals(cs2));    	compilable	  [FE]  NullPointerException  	186	2	replace
41	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1.equals(cs2)&&  cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return  cs1.equals(cs1.equals(cs2)&&  cs2.equals(cs2));	  return    cs1.equals(cs2.equals(cs1)&&    cs2.equals(cs2));    	compilable	  [FE]  NullPointerException  	186	2	replace
42	[BUG]  [BUGGY]  return  cs1.equals(cs1.equals(cs2)&&  cs2.equals(cs2));  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1.equals(cs2)&&  cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1.equals(cs1.equals(cs2)&&  cs2.equals(cs2));	  return    cs1.equals(cs2.equals(cs1)&&    cs2.equals(cs2));    	compilable	  [FE]  NullPointerException  	186	2	replace
43	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2.equals(cs1.equals(cs2)&&  cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return  cs2.equals(cs1.equals(cs2)&&  cs2.equals(cs2));	  return    cs1.equals(cs2.equals(cs1)&&    cs2.equals(cs2));    	compilable	  [FE]  NullPointerException  	186	2	replace
44	[BUG]  [BUGGY]  return  cs2.equals(cs1.equals(cs2)&&  cs2.equals(cs2));  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2.equals(cs1.equals(cs2)&&  cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs2.equals(cs1.equals(cs2)&&  cs2.equals(cs2));	  return    cs1.equals(cs2.equals(cs1)&&    cs2.equals(cs2));    	compilable	  [FE]  NullPointerException  	186	2	replace
45	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1)||  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return  cs1.equals(cs1)||  cs2.equals(cs2);	  return    cs1.equals(cs1.equals(cs2))    ||    cs2.equals(cs2);    	compilable	  [FE]  NullPointerException  	169	2	replace
46	[BUG]  [BUGGY]  return  cs1.equals(cs1)||  cs2.equals(cs2);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1)||  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1.equals(cs1)||  cs2.equals(cs2);	  return    cs1.equals(cs1.equals(cs2))    ||    cs2.equals(cs2);    	compilable	  [FE]  NullPointerException  	169	2	replace
47	[BUG]  [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs1);  return  cs1.equals(cs2)&&  cs2.equals(cs1);  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs1);  return  cs1.equals(cs2)&&  cs2.equals(cs1);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2)&&    cs2.equals(cs1);    return  cs1.equals(cs2)&&  cs2.equals(cs1);	  	non-compiled	[CE]  unreachable  statement	81	None	add
48	[BUG]  [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs1);  cs1.equals(cs2)&&  cs2.equals(cs1);  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs1);  cs1.equals(cs2)&&  cs2.equals(cs1);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2)&&    cs2.equals(cs1);    cs1.equals(cs2)&&  cs2.equals(cs1);	  	non-compiled	[CE]  not  a  statement	81	None	add
49	[BUG]  [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs1);  if(cs1  ==  cs2)  {  return  cs1.equals(cs2)&&  cs2.equals(cs1);  }  [CE]  unreachable  statement  [FE]        NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs1);  if(cs1  ==  cs2)  {  return  cs1.equals(cs2)&&  cs2.equals(cs1);  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2)&&    cs2.equals(cs1);    if(cs1  ==  cs2)  {  return  cs1.equals(cs2)&&  cs2.equals(cs1);  }	  	non-compiled	[CE]  unreachable  statement	81	None	add
50	[BUG]  [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs1);  cs1  ==  cs2)&&  cs2.equals(cs1);  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs1);  cs1  ==  cs2)&&  cs2.equals(cs1);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2)&&    cs2.equals(cs1);    cs1  ==  cs2)&&  cs2.equals(cs1);	  	non-compiled	[CE]  not  a  statement	81	None	add
51	[BUG]  [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs1);  cs1  =  cs1.equals(cs2)&&  cs2.equals(cs1);  [CE]  incompatible  types  [FE]            NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs1);  cs1  =  cs1.equals(cs2)&&  cs2.equals(cs1);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2)&&    cs2.equals(cs1);    cs1  =  cs1.equals(cs2)&&  cs2.equals(cs1);	  	non-compiled	[CE]  incompatible  types	81	None	add
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2!=  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2!=  null;  }	  if(cs1    ==    null    ||    cs2    ==    null)    {    return    cs2    ==    null;    }    	compilable	  [FE]  AssertionFailedError  	52	2	replace
53	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2!=  null;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2!=  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2!=  null;  }	  if(cs1    ==    null    ||    cs2    ==    null)    {    return    cs2    ==    null;    }    	compilable	  [FE]  AssertionFailedError  	52	2	replace
54	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs2));  return  cs1.equals(cs2.equals(cs1));  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs2));  return  cs1.equals(cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs2));    return  cs1.equals(cs2.equals(cs1));	  	non-compiled	[CE]  unreachable  statement	111	None	add
55	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs2));  return  cs1.equals(cs2.equals(cs2));  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs2));  return  cs1.equals(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs2));    return  cs1.equals(cs2.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	111	None	add
56	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs2));  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs2));  }  [CE]  unreachable  statement  [FE]        NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs2));  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs2));    if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs2));  }	  	non-compiled	[CE]  unreachable  statement	111	None	add
57	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs2));  cs1.equals(cs2.equals(cs1));  [CE]  unreachable  statement  [FE]          NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs2));  cs1.equals(cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs2));    cs1.equals(cs2.equals(cs1));	  	non-compiled	[CE]  unreachable  statement	111	None	add
58	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs2));  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  [CE]  unreachable  statement  [FE]            NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs2));  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs2));    if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }	  	non-compiled	[CE]  unreachable  statement	111	None	add
59	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  true;  }	  if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
60	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs2    ==    cs1)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	115	2	add
61	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs2    ==    cs1)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	115	2	add
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs2    ==    cs1)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	115	2	add
63	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs2    ==    cs1)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	115	2	add
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs2    ==    cs1)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	115	2	add
65	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs2    ==    cs1)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	115	2	add
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs2    ==    cs1)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	115	2	add
67	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs2    ==    cs1)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	115	2	add
68	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs2    ==    cs1)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
69	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2))  {  return  false;  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2))  {  return  false;  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2))  {  return  false;	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2    ==    cs2))    {    return    true;    	non-compiled	[CE]  ';'  expected	167	None	replace
70	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2  ==  cs2))  {  return  false;  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2  ==  cs2))  {  return  false;  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2  ==  cs2))  {  return  false;	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2    ==    cs2))    {    return    true;    	non-compiled	[CE]  ';'  expected	167	None	replace
71	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2  ==  cs2))  {  return  true;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2  ==  cs2))  {  return  true;  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2  ==  cs2))  {  return  true;	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2    ==    cs2))    {    return    true;    	non-compiled	[CE]  ';'  expected	167	None	replace
72	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs3))  {  return  false;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs3))  {  return  false;  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs3))  {  return  false;	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2    ==    cs2))    {    return    true;    	non-compiled	[CE]  ';'  expected	167	None	replace
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs1  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs1  ==  null;  }	          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=    null)    {    return    cs2    ==    null;    }    	compilable	  [FE]  AssertionFailedError  	76	1	replace
74	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs1  ==  null;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs1  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs1  ==  null;  }	          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=    null)    {    return    cs2    ==    null;    }    	compilable	  [FE]  AssertionFailedError  	76	1	replace
75	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  cs2  ==  null;  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null  ||  cs2  ==  null)  {  cs2  ==  null;  }	  cs2    ==    null;    	non-compiled	[CE]  not  a  statement	141	None	replace
76	[BUG]  [BUGGY]  cs2  ==  null  ||  cs1.equals(cs2);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  cs2  ==  null  ||  cs1.equals(cs2);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	cs2  ==  null  ||  cs1.equals(cs2);	  cs2    ==    null;    	non-compiled	[CE]  not  a  statement	141	None	replace
77	[BUG]  [BUGGY]  cs2  ==  null  ||  cs1.equals(cs2.equals(cs1));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  cs2  ==  null  ||  cs1.equals(cs2.equals(cs1));  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	cs2  ==  null  ||  cs1.equals(cs2.equals(cs1));	  cs2    ==    null;    	non-compiled	[CE]  not  a  statement	141	None	replace
78	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	42	2	add
79	[BUG]  [BUGGY]  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	42	2	add
80	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	42	2	add
81	[BUG]  [BUGGY]  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	42	2	add
82	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	42	2	add
83	[BUG]  [BUGGY]  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	42	2	add
84	[BUG]  [BUGGY]  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  If(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  If(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    If(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	42	None	add
85	[BUG]  [BUGGY]  while(cs1!=  null  &&  cs2!=  null)  {  return  false;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  while(cs1!=  null  &&  cs2!=  null)  {  return  false;  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	while(cs1!=  null  &&  cs2!=  null)  {  return  false;	  return    false;    if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
86	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2));  if(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2));  if(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2));  if(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    if(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    	non-compiled	[CE]  ';'  expected	32	None	replace
87	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    if(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    	non-compiled	[CE]  ';'  expected	32	None	replace
88	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs2    ==    cs1)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	39	1	add
89	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs2    ==    cs1)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	39	1	add
90	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs2    ==    cs1)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	39	1	add
91	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs2    ==    cs1)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	39	1	add
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs2    ==    cs1)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	39	1	add
93	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs2    ==    cs1)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	39	1	add
94	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs2    ==    cs1)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	39	1	add
95	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs2    ==    cs1)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	39	1	add
96	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs2    ==    cs1)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
97	[BUG]  [BUGGY]  cs1.equals(cs1)||  cs2.equals(cs2);  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  cs1.equals(cs1)||  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	cs1.equals(cs1)||  cs2.equals(cs2);	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    	non-compiled	[CE]  not  a  statement	88	None	replace
98	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1.equals(cs2))  {  return  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1.equals(cs2))  {  return  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    	compilable	  [FE]  NullPointerException  	88	2	replace
99	[BUG]  [BUGGY]  if(cs1.equals(cs2))  {  return  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  }  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1.equals(cs2))  {  return  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1.equals(cs2))  {  return  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    	compilable	  [FE]  NullPointerException  	88	2	replace
100	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1.equals(cs2))  {  return  cs1.equals(cs1)||  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1.equals(cs2))  {  return  cs1.equals(cs1)||  cs2.equals(cs2);  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    	compilable	  [FE]  NullPointerException  	88	2	replace
101	[BUG]  [BUGGY]  if(cs1.equals(cs2))  {  return  cs1.equals(cs1)||  cs2.equals(cs2);  }  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1.equals(cs2))  {  return  cs1.equals(cs1)||  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1.equals(cs2))  {  return  cs1.equals(cs1)||  cs2.equals(cs2);  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    	compilable	  [FE]  NullPointerException  	88	2	replace
102	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    	compilable	  [FE]  NullPointerException  	88	2	replace
103	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  }  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    	compilable	  [FE]  NullPointerException  	88	2	replace
104	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2.equals(cs2));  [CE]  incomparable  types:  CharSequence  and  boolean  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2.equals(cs2));	  return(cs2    ==    cs1)||(cs1    ==    cs2)||(cs2    ==    cs1.equals(cs2));    	non-compiled	[CE]  incomparable  types:  CharSequence  and  boolean	164	None	replace
105	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1.equals(cs2));  [CE]  incomparable  types:  CharSequence  and  boolean  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1.equals(cs2));	  return(cs2    ==    cs1)||(cs1    ==    cs2)||(cs2    ==    cs1.equals(cs2));    	non-compiled	[CE]  incomparable  types:  CharSequence  and  boolean	164	None	replace
106	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs2);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return  cs1.equals(cs2)&&  cs2.equals(cs2);	  return    cs1.equals(cs2)&&    cs2.equals(cs1);    	compilable	  [FE]  NullPointerException  	82	2	replace
107	[BUG]  [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs2);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs2);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1.equals(cs2)&&  cs2.equals(cs2);	  return    cs1.equals(cs2)&&    cs2.equals(cs1);    	compilable	  [FE]  NullPointerException  	82	2	replace
108	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
109	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
111	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
112	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
113	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
114	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
115	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
116	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false	  	non-compiled	[CE]  ';'  expected	17	None	add
117	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2!=    null);    return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);	  	non-compiled	[CE]  unreachable  statement	127	None	add
118	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  }  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2!=    null);    if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  }	  	non-compiled	[CE]  unreachable  statement	127	None	add
119	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  return(cs1  ==  cs2)||(cs2!=  null)||(cs1!=  null  &&  cs2!=  null);  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  return(cs1  ==  cs2)||(cs2!=  null)||(cs1!=  null  &&  cs2!=  null);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2!=    null);    return(cs1  ==  cs2)||(cs2!=  null)||(cs1!=  null  &&  cs2!=  null);	  	non-compiled	[CE]  unreachable  statement	127	None	add
120	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  }  else  {  return  false;  }  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  }  else  {  return  false;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2!=    null);    if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  }  else  {  return  false;  }	  	non-compiled	[CE]  unreachable  statement	127	None	add
121	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  ||(cs1  ==  null)||(cs1!=  null  &&  cs2!=  null);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  ||(cs1  ==  null)||(cs1!=  null  &&  cs2!=  null);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2!=    null);    ||(cs1  ==  null)||(cs1!=  null  &&  cs2!=  null);	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
122	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }	  return    cs1.equals(cs2.equals(cs1));    if(cs1    ==    cs2)    {    return    cs1.equals(cs2.equals(cs1));    }    	compilable	  [FE]  NullPointerException  	47	2	replace
123	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }	  return    cs1.equals(cs2.equals(cs1));    if(cs1    ==    cs2)    {    return    cs1.equals(cs2.equals(cs1));    }    	compilable	  [FE]  NullPointerException  	47	2	replace
124	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs2.equals(cs1);  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  cs2)  {  return  cs2.equals(cs1);  }	  return    cs2.equals(cs1);    	compilable	  [FE]  NullPointerException  	84	2	replace
125	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  cs2.equals(cs1);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs2.equals(cs1);  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  cs2.equals(cs1);  }	  return    cs2.equals(cs1);    	compilable	  [FE]  NullPointerException  	84	2	replace
126	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2!=  cs1)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs2!=    cs1)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	133	1	add
127	[BUG]  [BUGGY]  if(cs2!=  cs1)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2!=  cs1)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2!=    cs1)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	133	1	add
128	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2!=  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs2!=    cs1)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	133	2	add
129	[BUG]  [BUGGY]  if(cs2!=  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2!=  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2!=    cs1)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	133	2	add
130	[BUG]  [BUGGY]  if(cs2!=  cs1)  {  return  false;  }  if(cs2  >=  cs1)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2!=  cs1)  {  return  false;  }  if(cs2  >=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2!=    cs1)    {    return    false;    }    if(cs2  >=  cs1)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	133	None	add
131	[BUG]  [BUGGY]  if(cs2!=  cs1)  {  return  false;  }  if(cs2  >>  cs1)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2!=  cs1)  {  return  false;  }  if(cs2  >>  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2!=    cs1)    {    return    false;    }    if(cs2  >>  cs1)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	133	None	add
132	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2);  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  cs2)  {  return  cs1.equals(cs2);  }	  return    cs1.equals(cs1);    	compilable	  [FE]  NullPointerException  	172	2	replace
133	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2);  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  cs1.equals(cs2);  }	  return    cs1.equals(cs1);    	compilable	  [FE]  NullPointerException  	172	2	replace
134	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2);  }  else  {  return  cs2.equals(cs1);  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  cs2)  {  return  cs1.equals(cs2);  }  else  {  return  cs2.equals(cs1);  }	  return    cs1.equals(cs1);    	compilable	  [FE]  NullPointerException  	172	2	replace
135	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2);  }  else  {  return  cs2.equals(cs1);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2);  }  else  {  return  cs2.equals(cs1);  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  cs1.equals(cs2);  }  else  {  return  cs2.equals(cs1);  }	  return    cs1.equals(cs1);    	compilable	  [FE]  NullPointerException  	172	2	replace
136	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null)        {        return        cs2        ==        null;        }        if(cs1    ==    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	77	2	add
137	[BUG]  [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null)        {        return        cs2        ==        null;        }        if(cs1    ==    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	77	2	add
138	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null)        {        return        cs2        ==        null;        }        if(cs1    ==    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	77	2	add
139	[BUG]  [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null)        {        return        cs2        ==        null;        }        if(cs1    ==    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	77	2	add
140	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null)        {        return        cs2        ==        null;        }        if(cs1    ==    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	77	2	add
141	[BUG]  [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null)        {        return        cs2        ==        null;        }        if(cs1    ==    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	77	2	add
142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null)        {        return        cs2        ==        null;        }        if(cs1    ==    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	77	2	add
143	[BUG]  [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null)        {        return        cs2        ==        null;        }        if(cs1    ==    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	77	2	add
144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs1.equals(cs2))  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs2  ==  null  ||  cs1.equals(cs2))  {  return  false;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    If(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	102	2	replace
145	[BUG]  [BUGGY]  if(cs2  ==  null  ||  cs1.equals(cs2))  {  return  false;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs1.equals(cs2))  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2  ==  null  ||  cs1.equals(cs2))  {  return  false;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    If(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	102	2	replace
146	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2!=  cs1)  {  return  true;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs2!=  cs1)  {  return  true;  }	  if(cs1!=    cs2)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	16	2	replace
147	[BUG]  [BUGGY]  if(cs2!=  cs1)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2!=  cs1)  {  return  true;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2!=  cs1)  {  return  true;  }	  if(cs1!=    cs2)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	16	2	replace
148	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2)  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null  ||  cs2)  {  return  true;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1    ==    null    ||    cs2)    {    return    true;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	150	None	replace
149	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	33	1	replace
150	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	33	1	replace
151	[BUG]  [BUGGY]  cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    	non-compiled	[CE]  not  a  statement	33	None	replace
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	33	1	replace
153	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2.equals(cs2));  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	33	1	replace
154	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	174	2	add
155	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	174	2	add
156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	174	2	add
157	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	174	2	add
158	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	174	2	add
159	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	174	2	add
160	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	174	2	add
161	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	174	2	add
162	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	174	2	add
163	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	174	2	add
164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=    null    ||    cs2    ==    null)    {    return    cs2    ==    null;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	53	2	add
165	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=    null    ||    cs2    ==    null)    {    return    cs2    ==    null;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	53	2	add
166	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=    null    ||    cs2    ==    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	53	2	add
167	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=    null    ||    cs2    ==    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	53	2	add
168	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=    null    ||    cs2    ==    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	53	2	add
169	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=    null    ||    cs2    ==    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	53	2	add
170	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1  >=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1  >=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=    null    ||    cs2    ==    null)    {    return    cs2    ==    null;    }    if(cs1  >=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	53	None	add
171	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2  ==  cs2.equals(cs2)));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2  ==  cs2.equals(cs2)));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2  ==  cs2.equals(cs2)));	  return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2    ==    cs2.equals(cs1)));    	non-compiled	[CE]  ';'  expected	104	None	replace
172	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2!=  cs2.equals(cs2)));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2!=  cs2.equals(cs2)));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2!=  cs2.equals(cs2)));	  return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2    ==    cs2.equals(cs1)));    	non-compiled	[CE]  ';'  expected	104	None	replace
173	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  cs1)&&(cs2  ==  cs2.equals(cs2)));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  cs1)&&(cs2  ==  cs2.equals(cs2)));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2!=  cs1)&&(cs2  ==  cs2.equals(cs2)));	  return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2    ==    cs2.equals(cs1)));    	non-compiled	[CE]  ';'  expected	104	None	replace
174	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs1.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs1.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	34	1	replace
175	[BUG]  [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs1.equals(cs2));  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs1.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs1.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	34	1	replace
176	[BUG]  [BUGGY]  return  cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs1.equals(cs2));    	non-compiled	[CE]  ';'  expected	34	None	replace
177	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs2    ==    cs1)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	85	2	add
178	[BUG]  [BUGGY]  if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2    ==    cs1)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	85	2	add
179	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  cs1)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs2    ==    cs1)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	85	2	add
180	[BUG]  [BUGGY]  if(cs2  ==  cs1)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  cs1)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2    ==    cs1)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	85	2	add
181	[BUG]  [BUGGY]  if(cs2  ==  cs1)  {  return  false;  }  if(cs2  >=  cs1)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  cs1)  {  return  false;  }  if(cs2  >=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2    ==    cs1)    {    return    false;    }    if(cs2  >=  cs1)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	85	None	add
182	[BUG]  [BUGGY]  if(cs2  ==  cs1)  {  return  false;  }  If(cs2  ==  cs1)  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  cs1)  {  return  false;  }  If(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2    ==    cs1)    {    return    false;    }    If(cs2  ==  cs1)  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	85	None	add
183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	179	1	add
184	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	179	1	add
185	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	179	1	add
186	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	179	1	add
187	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	179	1	add
188	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	179	1	add
189	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1);  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1);  }	  return    cs1.equals(cs2.equals(cs2);    	non-compiled	[CE]  ')'  expected	28	None	replace
190	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1);  }  else  {  return  cs2.equals(cs2);  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1);  }  else  {  return  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1);  }  else  {  return  cs2.equals(cs2);  }	  return    cs1.equals(cs2.equals(cs2);    	non-compiled	[CE]  ')'  expected	28	None	replace
191	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
192	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
193	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
194	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
195	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
196	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
197	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
198	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
199	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
200	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
201	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	175	2	replace
202	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	175	2	replace
203	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2  ==  cs2.equals(cs2));  [CE]  incomparable  types:  CharSequence  and  boolean  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2  ==  cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2  ==  cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2    ==    cs2.equals(cs1));    	non-compiled	[CE]  incomparable  types:  CharSequence  and  boolean	23	None	replace
204	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	121	2	add
205	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	121	2	add
206	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	121	2	add
207	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	121	2	add
208	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	121	2	add
209	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	121	2	add
210	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  >=  null  ||  cs2!=  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  >=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  >=  null  ||  cs2!=  null)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	121	None	add
211	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  cs1.equals(cs2.equals(cs1));  }  [CE]  unreachable  statement  [FE]            NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  cs1.equals(cs2.equals(cs1));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  cs1.equals(cs2.equals(cs1));  }	  return    cs1.equals(cs2.equals(cs1));    cs1.equals(cs2.equals(cs1));    	non-compiled	[CE]  unreachable  statement	46	None	replace
212	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs1));  cs1.equals(cs2.equals(cs2));  [CE]  unreachable  statement  [FE]              NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs1));  cs1.equals(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1.equals(cs2.equals(cs1));  cs1.equals(cs2.equals(cs2));	  return    cs1.equals(cs2.equals(cs1));    cs1.equals(cs2.equals(cs1));    	non-compiled	[CE]  unreachable  statement	46	None	replace
213	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  return  cs1.equals(cs2.equals(cs1));  cs1.equals(cs2.equals(cs1));  }  [CE]  unreachable  statement  [FE]                NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  return  cs1.equals(cs2.equals(cs1));  cs1.equals(cs2.equals(cs1));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  cs2)  {  return  cs1.equals(cs2.equals(cs1));  cs1.equals(cs2.equals(cs1));  }	  return    cs1.equals(cs2.equals(cs1));    cs1.equals(cs2.equals(cs1));    	non-compiled	[CE]  unreachable  statement	46	None	replace
214	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  cs1.equals(cs2.equals(cs2));  }  [CE]  unreachable  statement  [FE]                  NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  cs1.equals(cs2.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  cs1.equals(cs2.equals(cs2));  }	  return    cs1.equals(cs2.equals(cs1));    cs1.equals(cs2.equals(cs1));    	non-compiled	[CE]  unreachable  statement	46	None	replace
215	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }	  return    cs1.equals(cs2.equals(cs1));    if(cs1.equals(cs2.equals(cs1))    {    return    cs1.equals(cs2.equals(cs1));    }    	compilable	  [FE]  AssertionFailedError  	45	2	replace
216	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  [FE]  AssertionFailedError  [FE]          NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }	  return    cs1.equals(cs2.equals(cs1));    if(cs1.equals(cs2.equals(cs1))    {    return    cs1.equals(cs2.equals(cs1));    }    	compilable	  [FE]  AssertionFailedError  	45	2	replace
217	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
218	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
219	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
220	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
221	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
222	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
223	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
224	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
225	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
226	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs1.equals(cs2));	  return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2.equals(cs2));    	compilable	  [FE]  NullPointerException  	61	2	replace
227	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs1.equals(cs2));  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs1.equals(cs2));	  return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2.equals(cs2));    	compilable	  [FE]  NullPointerException  	61	2	replace
228	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)&&(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)||(cs2  ==  cs1)&&(cs2.equals(cs2));	  return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	61	1	replace
229	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)&&(cs2.equals(cs2));  [FE]  AssertionFailedError  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)&&(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)&&(cs2.equals(cs2));	  return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	61	1	replace
230	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs3.equals(cs2));  [CE]  cannot  find  symbol  cs3  [FE]        NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs3.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs3.equals(cs2));	  return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2.equals(cs2));    	non-compiled	[CE]  cannot  find  symbol  cs3	61	None	replace
231	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs1.equals(cs2));    return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	25	None	add
232	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  }  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs1.equals(cs2));    if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  }	  	non-compiled	[CE]  unreachable  statement	25	None	add
233	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  if(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  if(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs1.equals(cs2));    if(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
234	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs1.equals(cs2));    cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));	  	non-compiled	[CE]  not  a  statement	25	None	add
235	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  if(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  if(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs1.equals(cs2));    if(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  }	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
236	[BUG]  [BUGGY]  return  cs1.equals(cs1.equals(cs2)&&  cs2.equals(cs2);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1.equals(cs2)&&  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1.equals(cs1.equals(cs2)&&  cs2.equals(cs2);	  return    cs1.equals(cs2.equals(cs1)&&    cs2.equals(cs2);    	non-compiled	[CE]  ')'  expected	29	None	replace
237	[BUG]  [BUGGY]  return  cs2.equals(cs1.equals(cs2)&&  cs2.equals(cs2);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2.equals(cs1.equals(cs2)&&  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs2.equals(cs1.equals(cs2)&&  cs2.equals(cs2);	  return    cs1.equals(cs2.equals(cs1)&&    cs2.equals(cs2);    	non-compiled	[CE]  ')'  expected	29	None	replace
238	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  if(cs1  ==  cs2)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null  ||  cs2  ==  null)  {  if(cs1  ==  cs2)  {  return  false;  }	  if(cs1!=    null    ||    cs2    ==    null)    {    if(cs1    ==    cs2)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
239	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  if(cs1  ==  cs2)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null  ||  cs2!=  null)  {  if(cs1  ==  cs2)  {  return  false;  }	  if(cs1!=    null    ||    cs2    ==    null)    {    if(cs1    ==    cs2)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
240	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null  ||  cs2  ==  null)  {  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  if(cs1!=    null    ||    cs2    ==    null)    {    if(cs1    ==    cs2)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
241	[BUG]  [BUGGY]  return  cs1.equals(cs1);  return  cs1.equals(cs1);  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1);  return  cs1.equals(cs1);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1);    return  cs1.equals(cs1);	  	non-compiled	[CE]  unreachable  statement	171	None	add
242	[BUG]  [BUGGY]  return  cs1.equals(cs1);  cs1.equals(cs1);  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1);  cs1.equals(cs1);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1);    cs1.equals(cs1);	  	non-compiled	[CE]  unreachable  statement	171	None	add
243	[BUG]  [BUGGY]  return  cs1.equals(cs1);  if(cs1  ==  cs2)  {  return  cs1.equals(cs1);  }  [CE]  unreachable  statement  [FE]        NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1);  if(cs1  ==  cs2)  {  return  cs1.equals(cs1);  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1);    if(cs1  ==  cs2)  {  return  cs1.equals(cs1);  }	  	non-compiled	[CE]  unreachable  statement	171	None	add
244	[BUG]  [BUGGY]  return  cs1.equals(cs1);  if(cs1.equals(cs1))  {  return  cs1.equals(cs1);  }  [CE]  unreachable  statement  [FE]          NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1);  if(cs1.equals(cs1))  {  return  cs1.equals(cs1);  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1);    if(cs1.equals(cs1))  {  return  cs1.equals(cs1);  }	  	non-compiled	[CE]  unreachable  statement	171	None	add
245	[BUG]  [BUGGY]  return  cs1.equals(cs1);  if(cs1.equals(cs1))  {  return  cs1.equals(cs2);  }  [CE]  unreachable  statement  [FE]            NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1);  if(cs1.equals(cs1))  {  return  cs1.equals(cs2);  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1);    if(cs1.equals(cs1))  {  return  cs1.equals(cs2);  }	  	non-compiled	[CE]  unreachable  statement	171	None	add
246	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)&&(cs2  ==  cs1)&&  cs2.equals(cs2);	  return(cs1    ==    cs2)||(cs2    ==    cs1)||    cs2.equals(cs2);    	compilable	  [FE]  NullPointerException  	166	2	replace
247	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&  cs2.equals(cs2);  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2  ==  cs1)&&  cs2.equals(cs2);	  return(cs1    ==    cs2)||(cs2    ==    cs1)||    cs2.equals(cs2);    	compilable	  [FE]  NullPointerException  	166	2	replace
248	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs1.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs1.equals(cs2);	  return(cs1    ==    cs2)||(cs2    ==    cs1)||    cs2.equals(cs2);    	compilable	  [FE]  AssertionFailedError  	166	1	replace
249	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs1.equals(cs2);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs1.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs1.equals(cs2);	  return(cs1    ==    cs2)||(cs2    ==    cs1)||    cs2.equals(cs2);    	compilable	  [FE]  AssertionFailedError  	166	1	replace
250	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2,  cs1);  [CE]  method  equals  in  class  Object  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2,  cs1);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2,  cs1);	  return(cs1    ==    cs2)||(cs2    ==    cs1)||    cs2.equals(cs2);    	non-compiled	[CE]  method  equals  in  class  Object  cannot  be  applied  to  given  types;	166	None	replace
251	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  null  ||  cs2)  {  return  false;  }	          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=    null    ||    cs2)    {    return    false;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	143	None	replace
252	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null  ||  cs2)  {  return  false;  }	          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=    null    ||    cs2)    {    return    false;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	143	None	replace
253	[BUG]  [BUGGY]  if(cs1  >=  cs2)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  >=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  >=  cs2)  {  return  false;  }	          if(cs1!=    cs2)    {    return    false;    }    if(cs1    >=    cs2)    {    return    false;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	5	None	replace
254	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {	  if(cs1!=    cs2)    {    if(cs1    ==    cs2)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
255	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	67	2	add
256	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	67	2	add
257	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	67	2	add
258	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	67	2	add
259	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
260	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false	  	non-compiled	[CE]  ';'  expected	67	None	add
261	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
262	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)||  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return  cs1.equals(cs2)||  cs2.equals(cs2);	  return    cs1.equals(cs2)||    cs2.equals(cs1);    	compilable	  [FE]  NullPointerException  	93	2	replace
263	[BUG]  [BUGGY]  return  cs1.equals(cs2)||  cs2.equals(cs2);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)||  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1.equals(cs2)||  cs2.equals(cs2);	  return    cs1.equals(cs2)||    cs2.equals(cs1);    	compilable	  [FE]  NullPointerException  	93	2	replace
264	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
265	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
266	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
267	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
268	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
269	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
270	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
271	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
272	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
273	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
274	[BUG]  [BUGGY]  parent  ==  cs1  {  return  true;  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  parent  ==  cs1  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	parent  ==  cs1  {  return  true;  }	  if(cs2    ==    cs1)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	58	None	replace
275	[BUG]  [BUGGY]  return(cs1!=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1!=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1!=    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	181	None	add
276	[BUG]  [BUGGY]  return(cs1!=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  return(cs1!=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1!=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  return(cs1!=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1!=    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1!=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	181	None	add
277	[BUG]  [BUGGY]  return(cs1!=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  }  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1!=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1!=    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  }	  	non-compiled	[CE]  unreachable  statement	181	None	add
278	[BUG]  [BUGGY]  return(cs1!=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  if(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1!=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  if(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1!=    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    if(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));	  	non-compiled	[CE]  illegal  start  of  expression	181	None	add
279	[BUG]  [BUGGY]  return(cs1!=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  [CE]  unreachable  statement  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1!=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1!=    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	181	None	add
280	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null)        {        return        cs2        ==        null;        }        if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	75	2	add
281	[BUG]  [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null)        {        return        cs2        ==        null;        }        if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	75	2	add
282	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null)        {        return        cs2        ==        null;        }        if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	75	2	add
283	[BUG]  [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null)        {        return        cs2        ==        null;        }        if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	75	2	add
284	[BUG]  [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1  >=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1  >=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null)        {        return        cs2        ==        null;        }        if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  >=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	75	None	add
285	[BUG]  [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1  >=  null)  {  return  cs2  ==  null;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1  >=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null)        {        return        cs2        ==        null;        }        if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1  >=  null)  {  return  cs2  ==  null;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	75	None	add
286	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    cs1)||    cs2.equals(cs2);    return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);	  	non-compiled	[CE]  unreachable  statement	165	None	add
287	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  }  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    cs1)||    cs2.equals(cs2);    if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  }	  	non-compiled	[CE]  unreachable  statement	165	None	add
288	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs1);  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs1);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    cs1)||    cs2.equals(cs2);    return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs1);	  	non-compiled	[CE]  unreachable  statement	165	None	add
289	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  if(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  if(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    cs1)||    cs2.equals(cs2);    if(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);	  	non-compiled	[CE]  illegal  start  of  expression	165	None	add
290	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  if(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  if(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2))  {  return  false;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    cs1)||    cs2.equals(cs2);    if(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	165	None	add
291	[BUG]  [BUGGY]  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs1);  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs1);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1.equals(cs2))    ||    cs2.equals(cs2);    return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs1);	  	non-compiled	[CE]  unreachable  statement	168	None	add
292	[BUG]  [BUGGY]  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1.equals(cs2))    ||    cs2.equals(cs2);    return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);	  	non-compiled	[CE]  unreachable  statement	168	None	add
293	[BUG]  [BUGGY]  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  cs1.equals(cs2))  ||  cs2.equals(cs1);  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  cs1.equals(cs2))  ||  cs2.equals(cs1);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1.equals(cs2))    ||    cs2.equals(cs2);    cs1.equals(cs2))  ||  cs2.equals(cs1);	  	non-compiled	[CE]  ';'  expected	168	None	add
294	[BUG]  [BUGGY]  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  return  cs1.equals(cs1)  ||  cs2.equals(cs2);  [CE]  unreachable  statement  [FE]          NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  return  cs1.equals(cs1)  ||  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1.equals(cs2))    ||    cs2.equals(cs2);    return  cs1.equals(cs1)  ||  cs2.equals(cs2);	  	non-compiled	[CE]  unreachable  statement	168	None	add
295	[BUG]  [BUGGY]  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  return  cs1.equals(cs1  ||  cs2))  ||  cs2.equals(cs2);  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  return  cs1.equals(cs1  ||  cs2))  ||  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1.equals(cs2))    ||    cs2.equals(cs2);    return  cs1.equals(cs1  ||  cs2))  ||  cs2.equals(cs2);	  	non-compiled	[CE]  ';'  expected	168	None	add
296	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
297	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
298	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
299	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
300	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
301	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
302	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
303	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
304	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
305	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs2)  {  return  true;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
306	[BUG]  [BUGGY]  return  cs1.equals(cs1.equals(cs2)||  cs2.equals(cs2);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1.equals(cs2)||  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1.equals(cs1.equals(cs2)||  cs2.equals(cs2);	  return    cs1.equals(cs2.equals(cs1)||    cs2.equals(cs2);    	non-compiled	[CE]  ')'  expected	123	None	replace
307	[BUG]  [BUGGY]  return  cs1.equals(cs1.equals(cs2)||  cs2.equals(cs1);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1.equals(cs2)||  cs2.equals(cs1);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1.equals(cs1.equals(cs2)||  cs2.equals(cs1);	  return    cs1.equals(cs2.equals(cs1)||    cs2.equals(cs2);    	non-compiled	[CE]  ')'  expected	123	None	replace
308	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs2    ==    null    ||    cs1!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	73	2	add
309	[BUG]  [BUGGY]  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2    ==    null    ||    cs1!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	73	2	add
310	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs2!=  null  ||  cs1!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs2    ==    null    ||    cs1!=    null)    {    return    false;    }    if(cs2!=  null  ||  cs1!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	73	2	add
311	[BUG]  [BUGGY]  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs2!=  null  ||  cs1!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs2!=  null  ||  cs1!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2    ==    null    ||    cs1!=    null)    {    return    false;    }    if(cs2!=  null  ||  cs1!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	73	2	add
312	[BUG]  [BUGGY]  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  >=  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  >=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2    ==    null    ||    cs1!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  >=  null)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	73	None	add
313	[BUG]  [BUGGY]  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  If(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  If(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2    ==    null    ||    cs1!=    null)    {    return    false;    }    If(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	73	None	add
314	[BUG]  [BUGGY]  while(cs1  ==  cs2)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  while(cs1  ==  cs2)  {  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	while(cs1  ==  cs2)  {	  while(cs1!=    cs2)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
315	[BUG]  [BUGGY]  while(cs1!=  cs2  ||  cs1.equals(cs2))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  while(cs1!=  cs2  ||  cs1.equals(cs2))  {  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	while(cs1!=  cs2  ||  cs1.equals(cs2))  {	  while(cs1!=    cs2)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
316	[BUG]  [BUGGY]  while(cs2!=  cs1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  while(cs2!=  cs1)  {  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	while(cs2!=  cs1)  {	  while(cs1!=    cs2)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
317	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	151	None	add
318	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  }  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  }	  	non-compiled	[CE]  unreachable  statement	151	None	add
319	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  if(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  if(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    if(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));	  	non-compiled	[CE]  illegal  start  of  expression	151	None	add
320	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  return(cs1!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  return(cs1!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    return(cs1!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	151	None	add
321	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs1.equals(cs2));  [CE]  unreachable  statement  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    return(cs1  ==  cs2)||(cs2!=  cs1)||(cs1.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	151	None	add
322	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	163	1	replace
323	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	163	1	replace
324	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  cs1.equals(cs2.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  cs1.equals(cs2.equals(cs2));  }	  return    cs1.equals(cs2.equals(cs1));    return    cs1.equals(cs2.equals(cs1));    	compilable	  [FE]  NullPointerException  	44	2	replace
325	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  cs1.equals(cs2.equals(cs2));  }  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  cs1.equals(cs2.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  cs1.equals(cs2.equals(cs2));  }	  return    cs1.equals(cs2.equals(cs1));    return    cs1.equals(cs2.equals(cs1));    	compilable	  [FE]  NullPointerException  	44	2	replace
326	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  cs1.equals(cs2.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  cs1.equals(cs2.equals(cs2));  }	  return    cs1.equals(cs2.equals(cs1));    return    cs1.equals(cs2.equals(cs1));    	compilable	  [FE]  NullPointerException  	44	2	replace
327	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  cs1.equals(cs2.equals(cs2));  }  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  cs1.equals(cs2.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  cs1.equals(cs2.equals(cs2));  }	  return    cs1.equals(cs2.equals(cs1));    return    cs1.equals(cs2.equals(cs1));    	compilable	  [FE]  NullPointerException  	44	2	replace
328	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
329	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
330	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
331	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
332	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
333	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
334	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
335	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
336	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
337	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
338	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	30	1	replace
339	[BUG]  [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2.equals(cs2));  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	30	1	replace
340	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2);	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	30	1	replace
341	[BUG]  [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2);	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	30	1	replace
342	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
343	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
344	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
345	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
346	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
347	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
348	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
349	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
350	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
351	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
352	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	11	1	replace
353	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	11	1	replace
354	[BUG]  [BUGGY]  return  cs1.equals(cs2)||  cs2.equals(cs1);  return  cs1.equals(cs2)||  cs2.equals(cs1);  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)||  cs2.equals(cs1);  return  cs1.equals(cs2)||  cs2.equals(cs1);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2)||    cs2.equals(cs1);    return  cs1.equals(cs2)||  cs2.equals(cs1);	  	non-compiled	[CE]  unreachable  statement	92	None	add
355	[BUG]  [BUGGY]  return  cs1.equals(cs2)||  cs2.equals(cs1);  cs1.equals(cs2)||  cs2.equals(cs1);  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)||  cs2.equals(cs1);  cs1.equals(cs2)||  cs2.equals(cs1);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2)||    cs2.equals(cs1);    cs1.equals(cs2)||  cs2.equals(cs1);	  	non-compiled	[CE]  not  a  statement	92	None	add
356	[BUG]  [BUGGY]  return  cs1.equals(cs2)||  cs2.equals(cs1);  if(cs1  ==  cs2)  {  return  cs1.equals(cs2)||  cs2.equals(cs1);  }  [CE]  unreachable  statement  [FE]        NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)||  cs2.equals(cs1);  if(cs1  ==  cs2)  {  return  cs1.equals(cs2)||  cs2.equals(cs1);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2)||    cs2.equals(cs1);    if(cs1  ==  cs2)  {  return  cs1.equals(cs2)||  cs2.equals(cs1);  }	  	non-compiled	[CE]  unreachable  statement	92	None	add
357	[BUG]  [BUGGY]  return  cs1.equals(cs2)||  cs2.equals(cs1);  if(cs1.equals(cs2)||  cs2.equals(cs1))  {  return  false;  }  [CE]  unreachable  statement  [FE]          NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)||  cs2.equals(cs1);  if(cs1.equals(cs2)||  cs2.equals(cs1))  {  return  false;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2)||    cs2.equals(cs1);    if(cs1.equals(cs2)||  cs2.equals(cs1))  {  return  false;  }	  	non-compiled	[CE]  unreachable  statement	92	None	add
358	[BUG]  [BUGGY]  return  cs1.equals(cs2)||  cs2.equals(cs1);  cs1  ==  cs2)||  cs2.equals(cs1);  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)||  cs2.equals(cs1);  cs1  ==  cs2)||  cs2.equals(cs1);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2)||    cs2.equals(cs1);    cs1  ==  cs2)||  cs2.equals(cs1);	  	non-compiled	[CE]  not  a  statement	92	None	add
359	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
360	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
361	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
362	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
363	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
364	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
365	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
366	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
367	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
368	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1  ==  null;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return  cs1  ==  null;	          if(cs1!=    null)    {    return    cs2    ==    null;    }    If(cs1!=    null)    {    return    cs2    ==    null;    }    	compilable	  [FE]  AssertionFailedError  	80	2	replace
369	[BUG]  [BUGGY]  return  cs1  ==  null;  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1  ==  null;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1  ==  null;	          if(cs1!=    null)    {    return    cs2    ==    null;    }    If(cs1!=    null)    {    return    cs2    ==    null;    }    	compilable	  [FE]  AssertionFailedError  	80	2	replace
370	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	162	1	add
371	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	162	1	add
372	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	162	1	add
373	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	162	1	add
374	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	162	1	add
375	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	162	1	add
376	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
377	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
378	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2.equals(cs2)));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2.equals(cs2)));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2.equals(cs2)));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2    ==    cs2.equals(cs1)));    	non-compiled	[CE]  ';'  expected	103	None	replace
379	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	69	2	add
380	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	69	2	add
381	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	69	2	add
382	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	69	2	add
383	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	69	2	add
384	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	69	2	add
385	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
386	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false	  	non-compiled	[CE]  ';'  expected	69	None	add
387	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)&&(cs2  ==  cs1.equals(cs2)));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)&&(cs2  ==  cs1.equals(cs2)));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)&&(cs2  ==  cs1.equals(cs2)));	  return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2    ==    cs1.equals(cs2)));    	non-compiled	[CE]  ';'  expected	105	None	replace
388	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2!=  cs2.equals(cs1)));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2!=  cs2.equals(cs1)));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2!=  cs2.equals(cs1)));	  return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2    ==    cs1.equals(cs2)));    	non-compiled	[CE]  ';'  expected	105	None	replace
389	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  false;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  false;  }	  return    cs1.equals(cs2.equals(cs1));    if(cs1.equals(cs2.equals(cs1))    {    return    cs1.equals(cs2.equals(cs1));    }    else    {    return    false;    }    	compilable	  [FE]  NullPointerException  	176	2	replace
390	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  false;  }  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  false;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  false;  }	  return    cs1.equals(cs2.equals(cs1));    if(cs1.equals(cs2.equals(cs1))    {    return    cs1.equals(cs2.equals(cs1));    }    else    {    return    false;    }    	compilable	  [FE]  NullPointerException  	176	2	replace
391	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2);  }  else  {  return  false;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  cs2)  {  return  cs1.equals(cs2);  }  else  {  return  false;  }	  return    cs1.equals(cs2.equals(cs1));    if(cs1.equals(cs2.equals(cs1))    {    return    cs1.equals(cs2.equals(cs1));    }    else    {    return    false;    }    	compilable	  [FE]  NullPointerException  	176	2	replace
392	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2);  }  else  {  return  false;  }  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2);  }  else  {  return  false;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  cs1.equals(cs2);  }  else  {  return  false;  }	  return    cs1.equals(cs2.equals(cs1));    if(cs1.equals(cs2.equals(cs1))    {    return    cs1.equals(cs2.equals(cs1));    }    else    {    return    false;    }    	compilable	  [FE]  NullPointerException  	176	2	replace
393	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	19	2	add
394	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	19	2	add
395	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	19	2	add
396	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	19	2	add
397	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	19	2	add
398	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	19	2	add
399	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	19	2	add
400	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	19	2	add
401	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	19	2	add
402	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	19	2	add
403	[BUG]  [BUGGY]  Aleger  <?>  cs1  ==  cs2)  {  return  true;  }  else  if(cs2  ==  cs1)  {  return  false;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  Aleger  <?>  cs1  ==  cs2)  {  return  true;  }  else  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	Aleger  <?>  cs1  ==  cs2)  {  return  true;  }  else  if(cs2  ==  cs1)  {  return  false;  }	          if(cs1    ==    cs2)    {    return    true;    }    if(cs2    ==    cs1)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
404	[BUG]  [BUGGY]  Aleger  <?>  cs1  ==  cs2)  {  return  true;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  Aleger  <?>  cs1  ==  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	Aleger  <?>  cs1  ==  cs2)  {  return  true;  }	          if(cs1    ==    cs2)    {    return    true;    }    if(cs2    ==    cs1)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
405	[BUG]  [BUGGY]  vice.equals(cs1,  cs2);  [CE]  cannot  find  symbol  vice  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  vice.equals(cs1,  cs2);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	vice.equals(cs1,  cs2);	          if(cs1    ==    cs2)    {    return    true;    }    if(cs2    ==    cs1)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  vice	40	None	replace
406	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1));  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2.equals(cs2));    return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1));	  	non-compiled	[CE]  unreachable  statement	131	None	add
407	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1));  }  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2.equals(cs2));    if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1));  }	  	non-compiled	[CE]  unreachable  statement	131	None	add
408	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  return(cs1  ==  cs2)||(cs2!=  null)||(cs1!=  null  &&  cs2.equals(cs1));  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  return(cs1  ==  cs2)||(cs2!=  null)||(cs1!=  null  &&  cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2.equals(cs2));    return(cs1  ==  cs2)||(cs2!=  null)||(cs1!=  null  &&  cs2.equals(cs1));	  	non-compiled	[CE]  unreachable  statement	131	None	add
409	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs1.equals(cs2));  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2.equals(cs2));    return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs1.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	131	None	add
410	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  ||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  ||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2.equals(cs2));    ||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1));	  	non-compiled	[CE]  illegal  start  of  expression	131	None	add
411	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
412	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
413	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
414	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
415	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  return  true;  }  if(cs1  >=  cs2)  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  return  true;  }  if(cs1  >=  cs2)  {  return  true;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=    cs2)    {    return    true;    }    if(cs1  >=  cs2)  {  return  true;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	15	None	add
416	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=    cs2)    {    return    true;    }    if(cs2!=  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
417	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=    cs2)    {    return    true;    }    if(cs2!=  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
418	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1    ==    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	139	1	add
419	[BUG]  [BUGGY]  if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1    ==    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	139	1	add
420	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1    ==    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	139	2	add
421	[BUG]  [BUGGY]  if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1    ==    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	139	2	add
422	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2!=  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1    ==    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2!=  null;  }	  	compilable	  [FE]  AssertionFailedError  	139	1	add
423	[BUG]  [BUGGY]  if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2!=  null;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2!=  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1    ==    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2!=  null;  }	  	compilable	  [FE]  AssertionFailedError  	139	1	add
424	[BUG]  [BUGGY]  if(cs1  ==  null)  {  return  cs2  ==  null;  }  If(cs1  ==  null)  {  return  cs2  ==  null;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null)  {  return  cs2  ==  null;  }  If(cs1  ==  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1    ==    null)    {    return    cs2    ==    null;    }    If(cs1  ==  null)  {  return  cs2  ==  null;  }	  	non-compiled	[CE]  ';'  expected	139	None	add
425	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1.equals(cs2))  {  return  cs1.equals(cs2)||  cs2.equals(cs1);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1.equals(cs2))  {  return  cs1.equals(cs2)||  cs2.equals(cs1);  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    if(cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2))    {    return    false;    }    	compilable	  [FE]  NullPointerException  	89	2	replace
426	[BUG]  [BUGGY]  if(cs1.equals(cs2))  {  return  cs1.equals(cs2)||  cs2.equals(cs1);  }  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1.equals(cs2))  {  return  cs1.equals(cs2)||  cs2.equals(cs1);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1.equals(cs2))  {  return  cs1.equals(cs2)||  cs2.equals(cs1);  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    if(cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2))    {    return    false;    }    	compilable	  [FE]  NullPointerException  	89	2	replace
427	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs1)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
428	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs1)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
429	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs1)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
430	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs1)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
431	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs1)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
432	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs1)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
433	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs1)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
434	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs1)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
435	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs1)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
436	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs1)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
437	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1.equals(cs2));  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1.equals(cs2));  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1.equals(cs2));  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    null)||(cs1.equals(cs2));    return(cs1  ==  cs2)||(cs2  ==  null)||(cs1.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	129	None	add
438	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1.equals(cs2));  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1.equals(cs2));  }  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1.equals(cs2));  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    null)||(cs1.equals(cs2));    if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1.equals(cs2));  }	  	non-compiled	[CE]  unreachable  statement	129	None	add
439	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1.equals(cs2));  if(cs1  ==  cs2)||(cs2  ==  null)||(cs1.equals(cs2));  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1.equals(cs2));  if(cs1  ==  cs2)||(cs2  ==  null)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    null)||(cs1.equals(cs2));    if(cs1  ==  cs2)||(cs2  ==  null)||(cs1.equals(cs2));	  	non-compiled	[CE]  illegal  start  of  expression	129	None	add
440	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1.equals(cs2));  return(cs1  ==  cs2)||(cs2!=  null)||(cs1.equals(cs2));  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1.equals(cs2));  return(cs1  ==  cs2)||(cs2!=  null)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    null)||(cs1.equals(cs2));    return(cs1  ==  cs2)||(cs2!=  null)||(cs1.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	129	None	add
441	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1.equals(cs2));  return(cs1  ==  cs2)||(cs2  ==  null)||(cs2.equals(cs1));  [CE]  unreachable  statement  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1.equals(cs2));  return(cs1  ==  cs2)||(cs2  ==  null)||(cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    null)||(cs1.equals(cs2));    return(cs1  ==  cs2)||(cs2  ==  null)||(cs2.equals(cs1));	  	non-compiled	[CE]  unreachable  statement	129	None	add
442	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  cs2)  {  return  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    false;    if(cs1    ==    cs2)    {    return    false;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  AssertionFailedError  	110	1	replace
443	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    false;    if(cs1    ==    cs2)    {    return    false;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  AssertionFailedError  	110	1	replace
444	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  cs2)  {  return  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    false;    if(cs1    ==    cs2)    {    return    false;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  AssertionFailedError  	110	2	replace
445	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    false;    if(cs1    ==    cs2)    {    return    false;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  AssertionFailedError  	110	2	replace
446	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  return  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=  cs2)  {  return  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    false;    if(cs1    ==    cs2)    {    return    false;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	110	2	replace
447	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  return  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  return  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  cs2)  {  return  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    false;    if(cs1    ==    cs2)    {    return    false;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	110	2	replace
448	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  return  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  return  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs1))    &&    cs2.equals(cs2);    return  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);	  	non-compiled	[CE]  unreachable  statement	94	None	add
449	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs1))    &&    cs2.equals(cs2);    cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);	  	non-compiled	[CE]  not  a  statement	94	None	add
450	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  if(cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2))  {  return  false;  }  [CE]  unreachable  statement  [FE]        NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  if(cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2))  {  return  false;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs1))    &&    cs2.equals(cs2);    if(cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2))  {  return  false;  }	  	non-compiled	[CE]  unreachable  statement	94	None	add
451	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  if(cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2))  return  false;  [CE]  unreachable  statement  [FE]          NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  if(cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2))  return  false;  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs1))    &&    cs2.equals(cs2);    if(cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2))  return  false;	  	non-compiled	[CE]  unreachable  statement	94	None	add
452	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  cs1  =  cs2.equals(cs1))  &&  cs2.equals(cs2);  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  cs1  =  cs2.equals(cs1))  &&  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs1))    &&    cs2.equals(cs2);    cs1  =  cs2.equals(cs1))  &&  cs2.equals(cs2);	  	non-compiled	[CE]  ';'  expected	94	None	add
453	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  null)&&(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)&&(cs2  ==  null)&&(cs1.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1.equals(cs2));    	compilable	  [FE]  NullPointerException  	130	2	replace
454	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  null)&&(cs1.equals(cs2));  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  null)&&(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2  ==  null)&&(cs1.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1.equals(cs2));    	compilable	  [FE]  NullPointerException  	130	2	replace
455	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2!=  null)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)||(cs2!=  null)||(cs1.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	130	1	replace
456	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2!=  null)||(cs1.equals(cs2));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2!=  null)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2!=  null)||(cs1.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	130	1	replace
457	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  null)&&(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)&&(cs2!=  null)&&(cs1.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	130	2	replace
458	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  null)&&(cs1.equals(cs2));  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  null)&&(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2!=  null)&&(cs1.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	130	2	replace
459	[BUG]  [BUGGY]  return  cs2.equals(cs1);  return  cs2.equals(cs1);  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2.equals(cs1);  return  cs2.equals(cs1);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs2.equals(cs1);    return  cs2.equals(cs1);	  	non-compiled	[CE]  unreachable  statement	83	None	add
460	[BUG]  [BUGGY]  return  cs2.equals(cs1);  cs2.equals(cs1);  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2.equals(cs1);  cs2.equals(cs1);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs2.equals(cs1);    cs2.equals(cs1);	  	non-compiled	[CE]  unreachable  statement	83	None	add
461	[BUG]  [BUGGY]  return  cs2.equals(cs1);  if(cs2.equals(cs1))  {  return  cs2.equals(cs1);  }  [CE]  unreachable  statement  [FE]        NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2.equals(cs1);  if(cs2.equals(cs1))  {  return  cs2.equals(cs1);  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs2.equals(cs1);    if(cs2.equals(cs1))  {  return  cs2.equals(cs1);  }	  	non-compiled	[CE]  unreachable  statement	83	None	add
462	[BUG]  [BUGGY]  return  cs2.equals(cs1);  if(cs2.equals(cs1))  {  return  cs1.equals(cs2);  }  [CE]  unreachable  statement  [FE]          NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2.equals(cs1);  if(cs2.equals(cs1))  {  return  cs1.equals(cs2);  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs2.equals(cs1);    if(cs2.equals(cs1))  {  return  cs1.equals(cs2);  }	  	non-compiled	[CE]  unreachable  statement	83	None	add
463	[BUG]  [BUGGY]  return  cs2.equals(cs1);  if(cs2.equals(cs1))  {  return  cs2.equals(cs2);  }  [CE]  unreachable  statement  [FE]            NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2.equals(cs1);  if(cs2.equals(cs1))  {  return  cs2.equals(cs2);  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs2.equals(cs1);    if(cs2.equals(cs1))  {  return  cs2.equals(cs2);  }	  	non-compiled	[CE]  unreachable  statement	83	None	add
464	[BUG]  [BUGGY]  return  cs1.equals(cs1)&&  cs2.equals(cs2);  return  cs1.equals(cs1)&&  cs2.equals(cs2);  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1)&&  cs2.equals(cs2);  return  cs1.equals(cs1)&&  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1)&&    cs2.equals(cs2);    return  cs1.equals(cs1)&&  cs2.equals(cs2);	  	non-compiled	[CE]  unreachable  statement	177	None	add
465	[BUG]  [BUGGY]  return  cs1.equals(cs1)&&  cs2.equals(cs2);  cs1.equals(cs1)&&  cs2.equals(cs2);  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1)&&  cs2.equals(cs2);  cs1.equals(cs1)&&  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1)&&    cs2.equals(cs2);    cs1.equals(cs1)&&  cs2.equals(cs2);	  	non-compiled	[CE]  not  a  statement	177	None	add
466	[BUG]  [BUGGY]  return  cs1.equals(cs1)&&  cs2.equals(cs2);  cs1  =  cs1.equals(cs1)&&  cs2.equals(cs2);  [CE]  incompatible  types  [FE]        NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1)&&  cs2.equals(cs2);  cs1  =  cs1.equals(cs1)&&  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1)&&    cs2.equals(cs2);    cs1  =  cs1.equals(cs1)&&  cs2.equals(cs2);	  	non-compiled	[CE]  incompatible  types	177	None	add
467	[BUG]  [BUGGY]  return  cs1.equals(cs1)&&  cs2.equals(cs2);  if(cs1  ==  cs2)  {  return  cs1.equals(cs1)&&  cs2.equals(cs2);  }  [CE]  unreachable  statement  [FE]          NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1)&&  cs2.equals(cs2);  if(cs1  ==  cs2)  {  return  cs1.equals(cs1)&&  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1)&&    cs2.equals(cs2);    if(cs1  ==  cs2)  {  return  cs1.equals(cs1)&&  cs2.equals(cs2);  }	  	non-compiled	[CE]  unreachable  statement	177	None	add
468	[BUG]  [BUGGY]  return  cs1.equals(cs1)&&  cs2.equals(cs2);  cs1  =  cs1.equals(cs2)&&  cs2.equals(cs2);  [CE]  incompatible  types  [FE]            NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1)&&  cs2.equals(cs2);  cs1  =  cs1.equals(cs2)&&  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1)&&    cs2.equals(cs2);    cs1  =  cs1.equals(cs2)&&  cs2.equals(cs2);	  	non-compiled	[CE]  incompatible  types	177	None	add
469	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	96	2	add
470	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	96	2	add
471	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	96	2	add
472	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	96	2	add
473	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	96	2	add
474	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	96	2	add
475	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
476	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false	  	non-compiled	[CE]  ';'  expected	96	None	add
477	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1    ==    null    ||    cs2!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	55	2	add
478	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1    ==    null    ||    cs2!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	55	2	add
479	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1    ==    null    ||    cs2!=    null)    {    return    cs2    ==    null;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	55	2	add
480	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1    ==    null    ||    cs2!=    null)    {    return    cs2    ==    null;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	55	2	add
481	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null  ||  cs2  >=  null)  {  return  cs2  ==  null;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null  ||  cs2  >=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1    ==    null    ||    cs2!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null  ||  cs2  >=  null)  {  return  cs2  ==  null;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	55	None	add
482	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  If(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  If(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1    ==    null    ||    cs2!=    null)    {    return    cs2    ==    null;    }    If(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }	  	non-compiled	[CE]  ';'  expected	55	None	add
483	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1    ==    null    ||    cs2    ==    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	51	1	add
484	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1    ==    null    ||    cs2    ==    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	51	1	add
485	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1    ==    null    ||    cs2    ==    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	51	2	add
486	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1    ==    null    ||    cs2    ==    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	51	2	add
487	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2!=  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1    ==    null    ||    cs2    ==    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2!=  null;  }	  	compilable	  [FE]  AssertionFailedError  	51	1	add
488	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2!=  null;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2!=  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1    ==    null    ||    cs2    ==    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2!=  null;  }	  	compilable	  [FE]  AssertionFailedError  	51	1	add
489	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1    ==    null    ||    cs2    ==    null)    {    return    cs2    ==    null;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	51	2	add
490	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1    ==    null    ||    cs2    ==    null)    {    return    cs2    ==    null;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	51	2	add
491	[BUG]  [BUGGY]  return  cs2  ==  null;  return  cs2  ==  null;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2  ==  null;  return  cs2  ==  null;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs2    ==    null;    return  cs2  ==  null;	  	non-compiled	[CE]  unreachable  statement	49	None	add
492	[BUG]  [BUGGY]  return  cs2  ==  null;  cs2  ==  null;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2  ==  null;  cs2  ==  null;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs2    ==    null;    cs2  ==  null;	  	non-compiled	[CE]  not  a  statement	49	None	add
493	[BUG]  [BUGGY]  return  cs2  ==  null;  return  cs2!=  null;  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2  ==  null;  return  cs2!=  null;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs2    ==    null;    return  cs2!=  null;	  	non-compiled	[CE]  unreachable  statement	49	None	add
494	[BUG]  [BUGGY]  return  cs2  ==  null;  result  =  cs2  ==  null;  [CE]  cannot  find  symbol  result  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2  ==  null;  result  =  cs2  ==  null;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs2    ==    null;    result  =  cs2  ==  null;	  	non-compiled	[CE]  cannot  find  symbol  result	49	None	add
495	[BUG]  [BUGGY]  return  cs2  ==  null;  int  cs2  ==  null;  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2  ==  null;  int  cs2  ==  null;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs2    ==    null;    int  cs2  ==  null;	  	non-compiled	[CE]  ';'  expected	49	None	add
496	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
497	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
498	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
499	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
500	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
501	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true	  	non-compiled	[CE]  ';'  expected	8	None	add
502	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
503	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  return  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  return  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs1)&&    cs2.equals(cs2));    return  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	185	None	add
504	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  }  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs1)&&    cs2.equals(cs2));    if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  }	  	non-compiled	[CE]  unreachable  statement	185	None	add
505	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  [CE]  unreachable  statement  [FE]        NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs1)&&    cs2.equals(cs2));    cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	185	None	add
506	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  return  cs1.equals(cs1.equals(cs1)&&  cs2.equals(cs2));  [CE]  unreachable  statement  [FE]          NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  return  cs1.equals(cs1.equals(cs1)&&  cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs1)&&    cs2.equals(cs2));    return  cs1.equals(cs1.equals(cs1)&&  cs2.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	185	None	add
507	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  if(cs1.equals(cs1)&&  cs2.equals(cs2))  {  return  false;  }  [CE]  unreachable  statement  [FE]            NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  if(cs1.equals(cs1)&&  cs2.equals(cs2))  {  return  false;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs1)&&    cs2.equals(cs2));    if(cs1.equals(cs1)&&  cs2.equals(cs2))  {  return  false;  }	  	non-compiled	[CE]  unreachable  statement	185	None	add
508	[BUG]  [BUGGY]  return  cs1.equals(cs2)&&  cs1.equals(cs2);  return  cs1.equals(cs2)&&  cs1.equals(cs2);  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)&&  cs1.equals(cs2);  return  cs1.equals(cs2)&&  cs1.equals(cs2);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2)&&    cs1.equals(cs2);    return  cs1.equals(cs2)&&  cs1.equals(cs2);	  	non-compiled	[CE]  unreachable  statement	147	None	add
509	[BUG]  [BUGGY]  return  cs1.equals(cs2)&&  cs1.equals(cs2);  return  cs1.equals(cs2)&&  cs2.equals(cs1);  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)&&  cs1.equals(cs2);  return  cs1.equals(cs2)&&  cs2.equals(cs1);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2)&&    cs1.equals(cs2);    return  cs1.equals(cs2)&&  cs2.equals(cs1);	  	non-compiled	[CE]  unreachable  statement	147	None	add
510	[BUG]  [BUGGY]  return  cs1.equals(cs2)&&  cs1.equals(cs2);  cs1  ==  cs2)&&  cs1.equals(cs2);  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)&&  cs1.equals(cs2);  cs1  ==  cs2)&&  cs1.equals(cs2);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2)&&    cs1.equals(cs2);    cs1  ==  cs2)&&  cs1.equals(cs2);	  	non-compiled	[CE]  not  a  statement	147	None	add
511	[BUG]  [BUGGY]  return  cs1.equals(cs2)&&  cs1.equals(cs2);  cs1.equals(cs2)&&  cs1.equals(cs2);  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)&&  cs1.equals(cs2);  cs1.equals(cs2)&&  cs1.equals(cs2);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2)&&    cs1.equals(cs2);    cs1.equals(cs2)&&  cs1.equals(cs2);	  	non-compiled	[CE]  not  a  statement	147	None	add
512	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1));	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	132	1	replace
513	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1));	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	132	1	replace
514	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2!=  null)||(cs1!=  null  &&  cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)||(cs2!=  null)||(cs1!=  null  &&  cs2.equals(cs1));	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	132	1	replace
515	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2!=  null)||(cs1!=  null  &&  cs2.equals(cs1));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2!=  null)||(cs1!=  null  &&  cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2!=  null)||(cs1!=  null  &&  cs2.equals(cs1));	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	132	1	replace
516	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  null)&&(cs1!=  null  &&  cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)&&(cs2  ==  null)&&(cs1!=  null  &&  cs2.equals(cs1));	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	132	2	replace
517	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  null)&&(cs1!=  null  &&  cs2.equals(cs1));  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  null)&&(cs1!=  null  &&  cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2  ==  null)&&(cs1!=  null  &&  cs2.equals(cs1));	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	132	2	replace
518	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)&&(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1));	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	132	1	replace
519	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1));  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1));	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	132	1	replace
520	[BUG]  [BUGGY]  Return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  Return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	Return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    Return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    	non-compiled	[CE]  not  a  statement	159	None	replace
521	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  cs1)&&(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)&&(cs2!=  cs1)&&(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	152	2	replace
522	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  cs1)&&(cs2.equals(cs2));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  cs1)&&(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2!=  cs1)&&(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	152	2	replace
523	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)||(cs2!=  cs1)||(cs1.equals(cs2));	  return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	152	1	replace
524	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs1.equals(cs2));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2!=  cs1)||(cs1.equals(cs2));	  return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	152	1	replace
525	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
526	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
527	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
528	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
529	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
530	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
531	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
532	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
533	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
534	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
535	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2.equals(cs2));    return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	60	None	add
536	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  }  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2.equals(cs2));    if(cs1  ==  cs2)  {  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  }	  	non-compiled	[CE]  unreachable  statement	60	None	add
537	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  if(cs1!=  cs2)  {  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  }  [CE]  unreachable  statement  [FE]        NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  if(cs1!=  cs2)  {  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2.equals(cs2));    if(cs1!=  cs2)  {  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  }	  	non-compiled	[CE]  unreachable  statement	60	None	add
538	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  if(cs1  ==  cs2)  {  return(cs2  ==  cs1)&&(cs2.equals(cs2));  }  [CE]  unreachable  statement  [FE]          NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  if(cs1  ==  cs2)  {  return(cs2  ==  cs1)&&(cs2.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2.equals(cs2));    if(cs1  ==  cs2)  {  return(cs2  ==  cs1)&&(cs2.equals(cs2));  }	  	non-compiled	[CE]  unreachable  statement	60	None	add
539	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs1.equals(cs2));  [CE]  unreachable  statement  [FE]            NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2.equals(cs2));    return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs1.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	60	None	add
540	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs3  ==  cs1.equals(cs2));  [CE]  cannot  find  symbol  cs3  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs3  ==  cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs3  ==  cs1.equals(cs2));	  return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2    ==    cs1.equals(cs2));    	non-compiled	[CE]  cannot  find  symbol  cs3	24	None	replace
541	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs2    ==    cs1)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	155	1	replace
542	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs1)||(cs2.equals(cs2));  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs2    ==    cs1)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	155	1	replace
543	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs2  ==  cs1)||(cs2  ==  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs2    ==    cs1)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	155	1	replace
544	[BUG]  [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs1)||(cs2.equals(cs2));  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs2  ==  cs1)||(cs2  ==  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs2    ==    cs1)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	155	1	replace
545	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2);	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs2    ==    cs1)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	155	1	replace
546	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2);	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs2    ==    cs1)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	155	1	replace
547	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
548	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
549	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
550	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
551	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
552	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
553	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
554	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
555	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
556	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
557	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  null)&&(cs1!=  null  &&  cs2!=  null);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)&&(cs2  ==  null)&&(cs1!=  null  &&  cs2!=  null);	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2!=    null);    	compilable	  [FE]  AssertionFailedError  	128	2	replace
558	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  null)&&(cs1!=  null  &&  cs2!=  null);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  null)&&(cs1!=  null  &&  cs2!=  null);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2  ==  null)&&(cs1!=  null  &&  cs2!=  null);	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2!=    null);    	compilable	  [FE]  AssertionFailedError  	128	2	replace
559	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2!=  null)||(cs1!=  null  &&  cs2!=  null);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)||(cs2!=  null)||(cs1!=  null  &&  cs2!=  null);	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2!=    null);    	compilable	  [FE]  AssertionFailedError  	128	1	replace
560	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2!=  null)||(cs1!=  null  &&  cs2!=  null);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2!=  null)||(cs1!=  null  &&  cs2!=  null);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2!=  null)||(cs1!=  null  &&  cs2!=  null);	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2!=    null);    	compilable	  [FE]  AssertionFailedError  	128	1	replace
561	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  null)&&(cs1!=  null  &&  cs2!=  null);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)&&(cs2!=  null)&&(cs1!=  null  &&  cs2!=  null);	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2!=    null);    	compilable	  [FE]  AssertionFailedError  	128	2	replace
562	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  null)&&(cs1!=  null  &&  cs2!=  null);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  null)&&(cs1!=  null  &&  cs2!=  null);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2!=  null)&&(cs1!=  null  &&  cs2!=  null);	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2!=    null);    	compilable	  [FE]  AssertionFailedError  	128	2	replace
563	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)return  false;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  null  ||  cs2  ==  null)return  false;	  if(cs1    ==    null    ||    cs2    ==    null)return    false;    }    	compilable	  [FE]  AssertionFailedError  	160	2	replace
564	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)return  false;  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)return  false;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null  ||  cs2  ==  null)return  false;	  if(cs1    ==    null    ||    cs2    ==    null)return    false;    }    	compilable	  [FE]  AssertionFailedError  	160	2	replace
565	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null  ||  cs2!=  null)return  false;  }	  if(cs1    ==    null    ||    cs2    ==    null)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
566	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  if(cs1.equals(cs2))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  if(cs1.equals(cs2))  {  return  false;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  if(cs1.equals(cs2))  {  return  false;  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    if(cs1.equals(cs2))    ||    cs2.equals(cs1))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
567	[BUG]  [BUGGY]  if(cs1.equals(cs2))  {  return  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  if(cs1.equals(cs2))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1.equals(cs2))  {  return  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  if(cs1.equals(cs2))  {  return  false;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1.equals(cs2))  {  return  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  if(cs1.equals(cs2))  {  return  false;  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    if(cs1.equals(cs2))    ||    cs2.equals(cs1))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
568	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  cs1)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs2    ==    cs1)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	57	1	add
569	[BUG]  [BUGGY]  if(cs2  ==  cs1)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  cs1)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2    ==    cs1)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	57	1	add
570	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  cs1)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs2    ==    cs1)    {    return    true;    }    if(cs2!=  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	57	1	add
571	[BUG]  [BUGGY]  if(cs2  ==  cs1)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  cs1)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2    ==    cs1)    {    return    true;    }    if(cs2!=  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	57	1	add
572	[BUG]  [BUGGY]  if(cs2  ==  cs1)  {  return  true;  }  if(cs2  >=  cs1)  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  cs1)  {  return  true;  }  if(cs2  >=  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2    ==    cs1)    {    return    true;    }    if(cs2  >=  cs1)  {  return  true;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	57	None	add
573	[BUG]  [BUGGY]  if(cs2  ==  cs1)  {  return  true;  }  If(cs2  ==  cs1)  {  return  true;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  cs1)  {  return  true;  }  If(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2    ==    cs1)    {    return    true;    }    If(cs2  ==  cs1)  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	57	None	add
574	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  cs2)  {  if(cs2!=  cs1)  {  return  false;  }	  if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
575	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	183	1	add
576	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	183	1	add
577	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	183	1	add
578	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	183	1	add
579	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	183	1	add
580	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	183	1	add
581	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	183	1	add
582	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	183	1	add
583	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	183	1	add
584	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	183	1	add
585	[BUG]  [BUGGY]  return  cs2.equals(cs1,  cs2);  [CE]  method  equals  in  class  Object  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2.equals(cs1,  cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs2.equals(cs1,  cs2);	          return    super.equals(cs1,    cs2);    	non-compiled	[CE]  method  equals  in  class  Object  cannot  be  applied  to  given  types;	27	None	replace
586	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1  ==  null  ||  cs2  ==  null;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return  cs1  ==  null  ||  cs2  ==  null;	  return    cs2    ==    null;    	compilable	  [FE]  AssertionFailedError  	50	2	replace
587	[BUG]  [BUGGY]  return  cs1  ==  null  ||  cs2  ==  null;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1  ==  null  ||  cs2  ==  null;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1  ==  null  ||  cs2  ==  null;	  return    cs2    ==    null;    	compilable	  [FE]  AssertionFailedError  	50	2	replace
588	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1!=  null;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return  cs1!=  null;	  return    cs2    ==    null;    	compilable	  [FE]  AssertionFailedError  	50	2	replace
589	[BUG]  [BUGGY]  return  cs1!=  null;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1!=  null;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1!=  null;	  return    cs2    ==    null;    	compilable	  [FE]  AssertionFailedError  	50	2	replace
590	[BUG]  [BUGGY]  if(cs1!=  null)  {  if(cs2  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null)  {  if(cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  null)  {  if(cs2  ==  null)  {  return  false;  }	  if(cs1    ==    cs2)    {    if(cs1    ==    cs2)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
591	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  cs2)  {	  if(cs1    ==    cs2)    {    if(cs1    ==    cs2)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
592	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  cs2  ==  null;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  cs2  ==  null;  }	  return    cs1.equals(cs2.equals(cs1));    return    cs1.equals(cs2.equals(cs1));    	compilable	  [FE]  NullPointerException  	44	2	replace
593	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  cs2  ==  null;  }  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  cs2  ==  null;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  cs2  ==  null;  }	  return    cs1.equals(cs2.equals(cs1));    return    cs1.equals(cs2.equals(cs1));    	compilable	  [FE]  NullPointerException  	44	2	replace
594	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  return  cs1.equals(cs2.equals(cs1));  cs1.equals(cs2.equals(cs2));  }  [CE]  unreachable  statement  [FE]            NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  return  cs1.equals(cs2.equals(cs1));  cs1.equals(cs2.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  cs2)  {  return  cs1.equals(cs2.equals(cs1));  cs1.equals(cs2.equals(cs2));  }	  return    cs1.equals(cs2.equals(cs1));    cs1.equals(cs2.equals(cs1));    	non-compiled	[CE]  unreachable  statement	46	None	replace
595	[BUG]  [BUGGY]  if(cs2  ==  cs1)  {  return  cs1.equals(cs2.equals(cs1));  cs1.equals(cs2.equals(cs2));  }  [CE]  unreachable  statement  [FE]              NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  cs1)  {  return  cs1.equals(cs2.equals(cs1));  cs1.equals(cs2.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2  ==  cs1)  {  return  cs1.equals(cs2.equals(cs1));  cs1.equals(cs2.equals(cs2));  }	  return    cs1.equals(cs2.equals(cs1));    cs1.equals(cs2.equals(cs1));    	non-compiled	[CE]  unreachable  statement	46	None	replace
596	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1  >>  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  if(cs1  >>  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=    null    ||    cs2    ==    null)    {    return    cs2    ==    null;    }    if(cs1  >>  null  ||  cs2  ==  null)  {  return  cs2  ==  null;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	53	None	add
597	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	69	2	add
598	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	69	2	add
599	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	69	2	add
600	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	69	2	add
601	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	69	2	add
602	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	69	2	add
603	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
604	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs2  ==  null)  {  return  false;  }	          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1    >=    null    ||    cs2    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	142	2	replace
605	[BUG]  [BUGGY]  if(cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2  ==  null)  {  return  false;  }	          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1    >=    null    ||    cs2    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	142	2	replace
606	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
607	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  >=  null  ||  cs2  ==  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  >=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  >=  null  ||  cs2  ==  null)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	17	None	add
608	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=  null)  {  return  false;  }	          if(cs1!=    cs2)    {    return    false;    }    if(cs1    >>    cs2)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	154	2	replace
609	[BUG]  [BUGGY]  if(cs1!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  null)  {  return  false;  }	          if(cs1!=    cs2)    {    return    false;    }    if(cs1    >>    cs2)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	154	2	replace
610	[BUG]  [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs3  ==  null;  }  [CE]  cannot  find  symbol  cs3  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs3  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null)        {        return        cs2        ==        null;        }        if(cs1    ==    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs3  ==  null;  }	  	non-compiled	[CE]  cannot  find  symbol  cs3	77	None	add
611	[BUG]  [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1  >=  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1  >=  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null)        {        return        cs2        ==        null;        }        if(cs1    ==    null)    {    return    cs2    ==    null;    }    if(cs1  >=  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null)  {  return  cs2  ==  null;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	77	None	add
612	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true	  	non-compiled	[CE]  ';'  expected	162	None	add
613	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	162	1	add
614	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	162	1	add
615	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
616	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	162	None	add
617	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2!=  cs2.equals(cs2));  [CE]  incomparable  types:  CharSequence  and  boolean  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2!=  cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2!=  cs2.equals(cs2));	  return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2    ==    cs2.equals(cs1));    	non-compiled	[CE]  incomparable  types:  CharSequence  and  boolean	149	None	replace
618	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  cs1)&&(cs2  ==  cs2.equals(cs2));  [CE]  incomparable  types:  CharSequence  and  boolean  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  cs1)&&(cs2  ==  cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2!=  cs1)&&(cs2  ==  cs2.equals(cs2));	  return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2    ==    cs2.equals(cs1));    	non-compiled	[CE]  incomparable  types:  CharSequence  and  boolean	149	None	replace
619	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2  ==  cs2.equals(cs3));  [CE]  cannot  find  symbol  cs3  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2  ==  cs2.equals(cs3));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2  ==  cs2.equals(cs3));	  return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2    ==    cs2.equals(cs1));    	non-compiled	[CE]  cannot  find  symbol  cs3	149	None	replace
620	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs1.equals(cs2);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs1.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    cs1)||    cs2.equals(cs2);    return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs1.equals(cs2);	  	non-compiled	[CE]  unreachable  statement	165	None	add
621	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs3);  [CE]  cannot  find  symbol  cs3  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs3);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    cs1)||    cs2.equals(cs2);    return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs3);	  	non-compiled	[CE]  cannot  find  symbol  cs3	165	None	add
622	[BUG]  [BUGGY]  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	42	None	add
623	[BUG]  [BUGGY]  return  cs1.equals(cs2)||  cs2.equals(cs1);  return  cs2.equals(cs1)||  cs2.equals(cs2);  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)||  cs2.equals(cs1);  return  cs2.equals(cs1)||  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2)||    cs2.equals(cs1);    return  cs2.equals(cs1)||  cs2.equals(cs2);	  	non-compiled	[CE]  unreachable  statement	92	None	add
624	[BUG]  [BUGGY]  return  cs1.equals(cs2)||  cs2.equals(cs1);  return  cs1.equals(cs2)||  cs2.equals(cs3);  [CE]  cannot  find  symbol  cs3  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)||  cs2.equals(cs1);  return  cs1.equals(cs2)||  cs2.equals(cs3);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2)||    cs2.equals(cs1);    return  cs1.equals(cs2)||  cs2.equals(cs3);	  	non-compiled	[CE]  cannot  find  symbol  cs3	92	None	add
625	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }	          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=    cs1)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	7	2	replace
626	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }	          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=    cs1)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	7	2	replace
627	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1!=  cs2)&&(cs2!=  cs1)&&(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1!=  cs2)&&(cs2!=  cs1)&&(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	152	2	replace
628	[BUG]  [BUGGY]  return(cs1!=  cs2)&&(cs2!=  cs1)&&(cs2.equals(cs2));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1!=  cs2)&&(cs2!=  cs1)&&(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1!=  cs2)&&(cs2!=  cs1)&&(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	152	2	replace
629	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)&&(cs2  ==  cs2.equals(cs2)));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)&&(cs2  ==  cs2.equals(cs2)));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)&&(cs2  ==  cs2.equals(cs2)));	  return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2    ==    cs2.equals(cs1)));    	non-compiled	[CE]  ';'  expected	104	None	replace
630	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  cs1  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=  null  ||  cs2  ==  null)  {  return  cs1  ==  null;  }	          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1    >>    null)    {    return    cs2    ==    null;    }    	compilable	  [FE]  AssertionFailedError  	135	2	replace
631	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  cs1  ==  null;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  cs1  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  null  ||  cs2  ==  null)  {  return  cs1  ==  null;  }	          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1    >>    null)    {    return    cs2    ==    null;    }    	compilable	  [FE]  AssertionFailedError  	135	2	replace
632	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	33	1	replace
633	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	33	1	replace
634	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
635	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
636	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
637	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
638	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=  null)  {  return  true;  }	          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=    cs2)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	38	2	replace
639	[BUG]  [BUGGY]  if(cs1!=  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  null)  {  return  true;  }	          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=    cs2)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	38	2	replace
640	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2.equals(cs1)&&  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return  cs2.equals(cs1)&&  cs2.equals(cs2);	  return    cs1.equals(cs2.equals(cs1)&&    cs2.equals(cs2));    	compilable	  [FE]  NullPointerException  	186	2	replace
641	[BUG]  [BUGGY]  return  cs2.equals(cs1)&&  cs2.equals(cs2);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2.equals(cs1)&&  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs2.equals(cs1)&&  cs2.equals(cs2);	  return    cs1.equals(cs2.equals(cs1)&&    cs2.equals(cs2));    	compilable	  [FE]  NullPointerException  	186	2	replace
642	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2);	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs2    ==    cs1)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	155	1	replace
643	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2);	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs2    ==    cs1)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	155	1	replace
644	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs2    ==    cs1)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	39	1	add
645	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs2    ==    cs1)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	39	1	add
646	[BUG]  [BUGGY]  if(cs1!=  null)  {  if(cs2!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null)  {  if(cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  null)  {  if(cs2!=  null)  {  return  false;  }	  if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
647	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs1!=  cs2)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  cs2)  {  if(cs1!=  cs2)  {  return  false;  }	  if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
648	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
649	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
650	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
651	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
652	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
653	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
654	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
655	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2!=  cs2.equals(cs1));  [CE]  incomparable  types:  CharSequence  and  boolean  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2!=  cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2!=  cs2.equals(cs1));	  return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2    ==    cs1.equals(cs2));    	non-compiled	[CE]  incomparable  types:  CharSequence  and  boolean	24	None	replace
656	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  cs1)&&(cs2  ==  cs2.equals(cs1));  [CE]  incomparable  types:  CharSequence  and  boolean  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  cs1)&&(cs2  ==  cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2!=  cs1)&&(cs2  ==  cs2.equals(cs1));	  return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2    ==    cs1.equals(cs2));    	non-compiled	[CE]  incomparable  types:  CharSequence  and  boolean	24	None	replace
657	[BUG]  [BUGGY]  return  cs1.equals(cs1);  return  cs1.equals(cs2);  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1);  return  cs1.equals(cs2);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1);    return  cs1.equals(cs2);	  	non-compiled	[CE]  unreachable  statement	171	None	add
658	[BUG]  [BUGGY]  return  cs1.equals(cs1);  if(cs1.equals(cs2))  {  return  cs1.equals(cs1);  }  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1);  if(cs1.equals(cs2))  {  return  cs1.equals(cs1);  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1);    if(cs1.equals(cs2))  {  return  cs1.equals(cs1);  }	  	non-compiled	[CE]  unreachable  statement	171	None	add
659	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  return(cs2  ==  cs1)&&(cs1  ==  cs2)&&(cs2.equals(cs2));  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  return(cs2  ==  cs1)&&(cs1  ==  cs2)&&(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2.equals(cs2));    return(cs2  ==  cs1)&&(cs1  ==  cs2)&&(cs2.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	60	None	add
660	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  return(cs1!=  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  return(cs1!=  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2.equals(cs2));    return(cs1!=  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	60	None	add
661	[BUG]  [BUGGY]  parent  ==  cs1  {  cs2  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  parent  ==  cs1  {  cs2  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	parent  ==  cs1  {  cs2  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }	          if(cs1    ==    cs2)    {    return    true;    }    if(cs2    ==    cs1)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	40	None	replace
662	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  true;  }	          if(cs1    ==    cs2)    {    return    true;    }    if(cs2    ==    cs1)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	40	2	replace
663	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  true;  }	          if(cs1    ==    cs2)    {    return    true;    }    if(cs2    ==    cs1)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	40	2	replace
664	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  false;  }	          if(cs1    ==    cs2)    {    return    false;    }    if(cs2    ==    cs1)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	116	1	replace
665	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  false;  }	          if(cs1    ==    cs2)    {    return    false;    }    if(cs2    ==    cs1)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	116	1	replace
666	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    if(cs1    ==    cs2)    {    return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    }    	compilable	  [FE]  AssertionFailedError  	31	1	replace
667	[BUG]  [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    if(cs1    ==    cs2)    {    return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    }    	compilable	  [FE]  AssertionFailedError  	31	1	replace
668	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	156	1	replace
669	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	156	1	replace
670	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2!=  cs2)||(cs1!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2!=  cs2)||(cs1!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	156	1	replace
671	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2!=  cs2)||(cs1!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2!=  cs2)||(cs1!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2!=  cs2)||(cs1!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	156	1	replace
672	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	156	1	replace
673	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	156	1	replace
674	[BUG]  [BUGGY]  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  return  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  return  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1.equals(cs2))    ||    cs2.equals(cs2);    return  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);	  	non-compiled	[CE]  unreachable  statement	168	None	add
675	[BUG]  [BUGGY]  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs3);  [CE]  cannot  find  symbol  cs3  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs3);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1.equals(cs2))    ||    cs2.equals(cs2);    return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs3);	  	non-compiled	[CE]  cannot  find  symbol  cs3	168	None	add
676	[BUG]  [BUGGY]  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs);  [CE]  cannot  find  symbol  cs  [FE]        NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1.equals(cs2))    ||    cs2.equals(cs2);    return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs);	  	non-compiled	[CE]  cannot  find  symbol  cs	168	None	add
677	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
678	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
679	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
680	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
681	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
682	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)return  false;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=  null  ||  cs2  ==  null)return  false;	  if(cs1    ==    null    ||    cs2    ==    null)return    false;    }    	compilable	  [FE]  AssertionFailedError  	160	2	replace
683	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)return  false;  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)return  false;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  null  ||  cs2  ==  null)return  false;	  if(cs1    ==    null    ||    cs2    ==    null)return    false;    }    	compilable	  [FE]  AssertionFailedError  	160	2	replace
684	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)return  false;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  null  ||  cs2!=  null)return  false;	  if(cs1    ==    null    ||    cs2    ==    null)return    false;    }    	compilable	  [FE]  AssertionFailedError  	160	2	replace
685	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)return  false;  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)return  false;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null  ||  cs2!=  null)return  false;	  if(cs1    ==    null    ||    cs2    ==    null)return    false;    }    	compilable	  [FE]  AssertionFailedError  	160	2	replace
686	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	163	1	replace
687	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	163	1	replace
688	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	163	2	replace
689	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	163	2	replace
690	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  return  cs1.equals(cs2.equals(cs2))  &&  cs2.equals(cs2);  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  return  cs1.equals(cs2.equals(cs2))  &&  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs1))    &&    cs2.equals(cs2);    return  cs1.equals(cs2.equals(cs2))  &&  cs2.equals(cs2);	  	non-compiled	[CE]  unreachable  statement	94	None	add
691	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  if(cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2))  {  return  true;  }  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  if(cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2))  {  return  true;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs1))    &&    cs2.equals(cs2);    if(cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2))  {  return  true;  }	  	non-compiled	[CE]  unreachable  statement	94	None	add
692	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	96	2	add
693	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	96	2	add
694	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	96	2	add
695	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	96	2	add
696	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	96	2	add
697	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	96	2	add
698	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	96	None	add
699	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
700	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
701	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
702	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
703	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
704	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
705	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
706	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
707	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
708	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
709	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
710	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null)  {  return  false;  }  if(cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=  null)  {  return  false;  }  if(cs2  ==  null)  {  return  false;  }	          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	18	2	replace
711	[BUG]  [BUGGY]  if(cs1!=  null)  {  return  false;  }  if(cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null)  {  return  false;  }  if(cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  null)  {  return  false;  }  if(cs2  ==  null)  {  return  false;  }	          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	18	2	replace
712	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  cs1)&&(cs2  ==  cs2.equals(cs1)));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  cs1)&&(cs2  ==  cs2.equals(cs1)));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2!=  cs1)&&(cs2  ==  cs2.equals(cs1)));	  return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2    ==    cs1.equals(cs2)));    	non-compiled	[CE]  ';'  expected	105	None	replace
713	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	67	2	add
714	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	67	2	add
715	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
716	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	67	2	add
717	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	67	2	add
718	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2!=  null;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return  cs2!=  null;	  return    cs2    ==    null;    	compilable	  [FE]  AssertionFailedError  	50	2	replace
719	[BUG]  [BUGGY]  return  cs2!=  null;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2!=  null;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs2!=  null;	  return    cs2    ==    null;    	compilable	  [FE]  AssertionFailedError  	50	2	replace
720	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
721	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
722	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
723	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
724	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
725	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
726	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
727	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
728	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  null)||(cs1!=  null  &&  cs2!=  null);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)&&(cs2!=  null)||(cs1!=  null  &&  cs2!=  null);	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2!=    null);    	compilable	  [FE]  AssertionFailedError  	128	2	replace
729	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  null)||(cs1!=  null  &&  cs2!=  null);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  null)||(cs1!=  null  &&  cs2!=  null);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2!=  null)||(cs1!=  null  &&  cs2!=  null);	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2!=    null);    	compilable	  [FE]  AssertionFailedError  	128	2	replace
730	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs1)||  cs2.equals(cs2);  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  }  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs1)||  cs2.equals(cs2);  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  cs1.equals(cs1)||  cs2.equals(cs2);  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    	non-compiled	[CE]  not  a  statement	88	None	replace
731	[BUG]  [BUGGY]  cs1.equals(cs1)&&  cs2.equals(cs2);  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2);  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  cs1.equals(cs1)&&  cs2.equals(cs2);  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	cs1.equals(cs1)&&  cs2.equals(cs2);  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2);	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    	non-compiled	[CE]  not  a  statement	88	None	replace
732	[BUG]  [BUGGY]  cs1.equals(cs1)&&  cs2.equals(cs2);  cs1.equals(cs2.equals(cs1))&&  cs2.equals(cs2);  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  cs1.equals(cs1)&&  cs2.equals(cs2);  cs1.equals(cs2.equals(cs1))&&  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	cs1.equals(cs1)&&  cs2.equals(cs2);  cs1.equals(cs2.equals(cs1))&&  cs2.equals(cs2);	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    	non-compiled	[CE]  not  a  statement	88	None	replace
733	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)||(cs2  ==  cs2.equals(cs2));  [CE]  incomparable  types:  CharSequence  and  boolean  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)||(cs2  ==  cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2  ==  cs1)||(cs2  ==  cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2    ==    cs2.equals(cs1));    	non-compiled	[CE]  incomparable  types:  CharSequence  and  boolean	23	None	replace
734	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2  ==  cs2.equals(cs2));  [CE]  incomparable  types:  CharSequence  and  boolean  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2  ==  cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2  ==  cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2    ==    cs2.equals(cs1));    	non-compiled	[CE]  incomparable  types:  CharSequence  and  boolean	23	None	replace
735	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
736	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
737	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
738	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
739	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2  ==  cs2.equals(cs2)));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2  ==  cs2.equals(cs2)));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2  ==  cs2.equals(cs2)));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2    ==    cs2.equals(cs1)));    	non-compiled	[CE]  ';'  expected	103	None	replace
740	[BUG]  [BUGGY]  cs1  ==  null;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  cs1  ==  null;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	cs1  ==  null;	  cs2    ==    null;    	non-compiled	[CE]  not  a  statement	141	None	replace
741	[BUG]  [BUGGY]  cs2  ==  null  ||  cs2.equals(cs1);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  cs2  ==  null  ||  cs2.equals(cs1);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	cs2  ==  null  ||  cs2.equals(cs1);	  cs2    ==    null;    	non-compiled	[CE]  not  a  statement	141	None	replace
742	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null)  {  return  cs1  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs2  ==  null)  {  return  cs1  ==  null;  }	          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=    null)    {    return    cs2    ==    null;    }    	compilable	  [FE]  AssertionFailedError  	76	1	replace
743	[BUG]  [BUGGY]  if(cs2  ==  null)  {  return  cs1  ==  null;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null)  {  return  cs1  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2  ==  null)  {  return  cs1  ==  null;  }	          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=    null)    {    return    cs2    ==    null;    }    	compilable	  [FE]  AssertionFailedError  	76	1	replace
744	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null)  {  return  cs2!=  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  null)  {  return  cs2!=  null;  }	          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=    null)    {    return    cs2    ==    null;    }    	compilable	  [FE]  AssertionFailedError  	76	2	replace
745	[BUG]  [BUGGY]  if(cs1  ==  null)  {  return  cs2!=  null;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null)  {  return  cs2!=  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null)  {  return  cs2!=  null;  }	          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=    null)    {    return    cs2    ==    null;    }    	compilable	  [FE]  AssertionFailedError  	76	2	replace
746	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1);  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2.equals(cs2));    return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1);	  	non-compiled	[CE]  ')'  expected	131	None	add
747	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  Return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1));  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  Return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2.equals(cs2));    Return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs1));	  	non-compiled	[CE]  not  a  statement	131	None	add
748	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  if(cs1  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  if(cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null  ||  cs2  ==  null)  {  if(cs1  ==  null)  {  return  false;  }	  if(cs1!=    null    ||    cs2    ==    null)    {    if(cs1    ==    cs2)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
749	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
750	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
751	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
752	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
753	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
754	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
755	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
756	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
757	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
758	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
759	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  false;  }	          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=    cs2)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	184	2	replace
760	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  false;  }	          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=    cs2)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	184	2	replace
761	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
762	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
763	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
764	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
765	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
766	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
767	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	19	2	add
768	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	19	2	add
769	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	19	2	add
770	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	19	2	add
771	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
772	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  >=  null  ||  cs2  ==  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  >=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  >=  null  ||  cs2  ==  null)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	19	None	add
773	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs1)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
774	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs1)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
775	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return  cs1.equals(cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    if(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  NullPointerException  	32	2	replace
776	[BUG]  [BUGGY]  return  cs1.equals(cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [FE]  NullPointerException  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1.equals(cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    if(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  NullPointerException  	32	2	replace
777	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  >=  null  ||  cs2  ==  null)  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  >=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  >=  null  ||  cs2  ==  null)  {  return  true;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	179	None	add
778	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2)  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2)  {  return  true;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	179	None	add
779	[BUG]  [BUGGY]  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2    ==    null    ||    cs1!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	73	None	add
780	[BUG]  [BUGGY]  return  cs1.equals(cs1)&&  cs2.equals(cs2);  if(cs1.equals(cs2))  {  return  false;  }  [CE]  unreachable  statement  [FE]              NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1)&&  cs2.equals(cs2);  if(cs1.equals(cs2))  {  return  false;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1.equals(cs1)&&  cs2.equals(cs2);  if(cs1.equals(cs2))  {  return  false;  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    if(cs1.equals(cs2))    ||    cs2.equals(cs1))    {    return    false;    }    	non-compiled	[CE]  unreachable  statement	90	None	replace
781	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  if(cs1.equals(cs2))  {  return  false;  }  [CE]  unreachable  statement  [FE]                NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  if(cs1.equals(cs2))  {  return  false;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  if(cs1.equals(cs2))  {  return  false;  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    if(cs1.equals(cs2))    ||    cs2.equals(cs1))    {    return    false;    }    	non-compiled	[CE]  unreachable  statement	90	None	replace
782	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2)  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2)  {  return  true;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1    ==    null    ||    cs2)    {    return    true;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	150	None	replace
783	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  return(cs1  ==  cs2)||(cs2  >>  cs1)||(cs2.equals(cs2));  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  return(cs1  ==  cs2)||(cs2  >>  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    return(cs1  ==  cs2)||(cs2  >>  cs1)||(cs2.equals(cs2));	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	151	None	add
784	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  null)&&(cs1!=  null  &&  cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)&&(cs2!=  null)&&(cs1!=  null  &&  cs2.equals(cs1));	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	132	2	replace
785	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  null)&&(cs1!=  null  &&  cs2.equals(cs1));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2!=  null)&&(cs1!=  null  &&  cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2!=  null)&&(cs1!=  null  &&  cs2.equals(cs1));	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	132	2	replace
786	[BUG]  [BUGGY]  return(cs1!=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  return(cs1  >>  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1!=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  return(cs1  >>  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1!=    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1  >>  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	181	None	add
787	[BUG]  [BUGGY]  return(cs1!=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  return(cs1  >=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1!=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  return(cs1  >=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1!=    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1  >=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	181	None	add
788	[BUG]  [BUGGY]  return(cs1!=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  return(cs1!=  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1!=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  return(cs1!=  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1!=    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1!=  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	181	None	add
789	[BUG]  [BUGGY]  return  cs2  ==  null;  Return  cs2  ==  null;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2  ==  null;  Return  cs2  ==  null;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs2    ==    null;    Return  cs2  ==  null;	  	non-compiled	[CE]  ';'  expected	49	None	add
790	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  cs2.equals(cs2);  }	  return    cs1.equals(cs2.equals(cs1));    return    cs1.equals(cs2.equals(cs2));    	compilable	  [FE]  NullPointerException  	137	2	replace
791	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  cs2.equals(cs2);  }  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs1));  }  else  {  return  cs2.equals(cs2);  }	  return    cs1.equals(cs2.equals(cs1));    return    cs1.equals(cs2.equals(cs2));    	compilable	  [FE]  NullPointerException  	137	2	replace
792	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
793	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
794	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
795	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
796	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
797	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
798	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
799	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
800	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	174	2	add
801	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	174	2	add
802	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	174	None	add
803	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  return  cs1.equals(cs1.equals(cs2)&&  cs2.equals(cs2));  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  return  cs1.equals(cs1.equals(cs2)&&  cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs1)&&    cs2.equals(cs2));    return  cs1.equals(cs1.equals(cs2)&&  cs2.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	185	None	add
804	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  return  cs1.equals(cs1.equals(cs2)&&  cs2.equals(cs1));  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  return  cs1.equals(cs1.equals(cs2)&&  cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs1)&&    cs2.equals(cs2));    return  cs1.equals(cs1.equals(cs2)&&  cs2.equals(cs1));	  	non-compiled	[CE]  unreachable  statement	185	None	add
805	[BUG]  [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs3  ==  null;  }  [CE]  cannot  find  symbol  cs3  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs3  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null)        {        return        cs2        ==        null;        }        if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs3  ==  null;  }	  	non-compiled	[CE]  cannot  find  symbol  cs3	75	None	add
806	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1!=  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1!=  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));	  return(cs1!=    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	182	2	replace
807	[BUG]  [BUGGY]  return(cs1!=  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1!=  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1!=  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));	  return(cs1!=    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	182	2	replace
808	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs1.equals(cs2));  [CE]  incomparable  types:  CharSequence  and  boolean  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs1.equals(cs2));	  return(cs2    ==    cs1)||(cs1    ==    cs2)||(cs2    ==    cs1.equals(cs2));    	non-compiled	[CE]  incomparable  types:  CharSequence  and  boolean	164	None	replace
809	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs2.equals(cs1));  [CE]  incomparable  types:  CharSequence  and  boolean  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs2.equals(cs1));	  return(cs2    ==    cs1)||(cs1    ==    cs2)||(cs2    ==    cs1.equals(cs2));    	non-compiled	[CE]  incomparable  types:  CharSequence  and  boolean	164	None	replace
810	[BUG]  [BUGGY]  return  cs2.equals(cs1);  return  cs2.equals(cs2);  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2.equals(cs1);  return  cs2.equals(cs2);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs2.equals(cs1);    return  cs2.equals(cs2);	  	non-compiled	[CE]  unreachable  statement	83	None	add
811	[BUG]  [BUGGY]  return  cs2.equals(cs1);  Return  cs2.equals(cs1);  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2.equals(cs1);  Return  cs2.equals(cs1);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs2.equals(cs1);    Return  cs2.equals(cs1);	  	non-compiled	[CE]  ';'  expected	83	None	add
812	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	98	2	add
813	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	98	2	add
814	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	98	2	add
815	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	98	2	add
816	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	98	None	add
817	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	175	2	replace
818	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	175	2	replace
819	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	175	2	replace
820	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	175	2	replace
821	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs3  ==  null  ||  cs3  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  cs3  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs3  ==  null  ||  cs3  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs3  ==  null  ||  cs3  ==  null)  {  return  false;  }	          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  cs3	175	None	replace
822	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
823	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
824	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
825	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
826	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs1.equals(cs2));    return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	25	None	add
827	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs1));  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs1.equals(cs2));    return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs1));	  	non-compiled	[CE]  unreachable  statement	25	None	add
828	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  return  true;  }  if(cs1  >>  cs2)  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  return  true;  }  if(cs1  >>  cs2)  {  return  true;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=    cs2)    {    return    true;    }    if(cs1  >>  cs2)  {  return  true;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	15	None	add
829	[BUG]  [BUGGY]  return  cs1.equals(cs2)&&  cs1.equals(cs2);  return  cs2.equals(cs1)&&  cs2.equals(cs2);  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)&&  cs1.equals(cs2);  return  cs2.equals(cs1)&&  cs2.equals(cs2);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2)&&    cs1.equals(cs2);    return  cs2.equals(cs1)&&  cs2.equals(cs2);	  	non-compiled	[CE]  unreachable  statement	147	None	add
830	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs1.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	34	1	replace
831	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs1.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	34	1	replace
832	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs1.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	34	1	replace
833	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs1.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	34	1	replace
834	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs3  ==  cs1)||(cs1.equals(cs2));  [CE]  cannot  find  symbol  cs3  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs3  ==  cs1)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs3  ==  cs1)||(cs1.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs1.equals(cs2));    	non-compiled	[CE]  cannot  find  symbol  cs3	34	None	replace
835	[BUG]  [BUGGY]  return  cs3.equals(cs1);  [CE]  cannot  find  symbol  cs3  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs3.equals(cs1);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs3.equals(cs1);	  return    cs2.equals(cs1);    	non-compiled	[CE]  cannot  find  symbol  cs3	84	None	replace
836	[BUG]  [BUGGY]  if(cs1!=  null)  {  if(cs2!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null)  {  if(cs2!=  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  null)  {  if(cs2!=  null)  {  return  true;  }	  if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
837	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  Return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  Return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2!=    null);    Return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);	  	non-compiled	[CE]  not  a  statement	127	None	add
838	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return  cs1.equals(cs1.equals(cs2));	  return    cs1.equals(cs2.equals(cs1));    cs1.equals(cs2.equals(cs1));    	compilable	  [FE]  NullPointerException  	46	2	replace
839	[BUG]  [BUGGY]  return  cs1.equals(cs1.equals(cs2));  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1.equals(cs1.equals(cs2));	  return    cs1.equals(cs2.equals(cs1));    cs1.equals(cs2.equals(cs1));    	compilable	  [FE]  NullPointerException  	46	2	replace
840	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
841	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
842	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
843	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
844	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	21	None	add
845	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }	  if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	180	1	replace
846	[BUG]  [BUGGY]  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }	  if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	180	1	replace
847	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
848	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
849	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
850	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
851	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1.equals(cs1))  {  return  cs1.equals(cs2)||  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1.equals(cs1))  {  return  cs1.equals(cs2)||  cs2.equals(cs2);  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    if(cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2))    return    false;    	compilable	  [FE]  NullPointerException  	91	2	replace
852	[BUG]  [BUGGY]  if(cs1.equals(cs1))  {  return  cs1.equals(cs2)||  cs2.equals(cs2);  }  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1.equals(cs1))  {  return  cs1.equals(cs2)||  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1.equals(cs1))  {  return  cs1.equals(cs2)||  cs2.equals(cs2);  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    if(cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2))    return    false;    	compilable	  [FE]  NullPointerException  	91	2	replace
853	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1.equals(cs1)||  cs2.equals(cs2))return  false;  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1.equals(cs1)||  cs2.equals(cs2))return  false;	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    if(cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2))    return    false;    	compilable	  [FE]  NullPointerException  	91	2	replace
854	[BUG]  [BUGGY]  if(cs1.equals(cs1)||  cs2.equals(cs2))return  false;  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1.equals(cs1)||  cs2.equals(cs2))return  false;  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1.equals(cs1)||  cs2.equals(cs2))return  false;	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    if(cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2))    return    false;    	compilable	  [FE]  NullPointerException  	91	2	replace
855	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  return  cs1.equals(cs2);  }  else  {  return  false;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=  cs2)  {  return  cs1.equals(cs2);  }  else  {  return  false;  }	  return    cs1.equals(cs2.equals(cs1));    if(cs1.equals(cs2.equals(cs1))    {    return    cs1.equals(cs2.equals(cs1));    }    else    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	176	2	replace
856	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  return  cs1.equals(cs2);  }  else  {  return  false;  }  [FE]  AssertionFailedError  [FE]        NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  return  cs1.equals(cs2);  }  else  {  return  false;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  cs2)  {  return  cs1.equals(cs2);  }  else  {  return  false;  }	  return    cs1.equals(cs2.equals(cs1));    if(cs1.equals(cs2.equals(cs1))    {    return    cs1.equals(cs2.equals(cs1));    }    else    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	176	2	replace
857	[BUG]  [BUGGY]  return  cs2.equals(cs1);  if(cs2.equals(cs1))  {  return  cs2.equals(cs1);  }  else  {  return  cs1.equals(cs2);  }  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2.equals(cs1);  if(cs2.equals(cs1))  {  return  cs2.equals(cs1);  }  else  {  return  cs1.equals(cs2);  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs2.equals(cs1);    if(cs2.equals(cs1))  {  return  cs2.equals(cs1);  }  else  {  return  cs1.equals(cs2);  }	  	non-compiled	[CE]  unreachable  statement	83	None	add
858	[BUG]  [BUGGY]  cs1.equals(cs1.equals(cs2));  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  cs1.equals(cs1.equals(cs2));  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	cs1.equals(cs1.equals(cs2));  cs1.equals(cs2.equals(cs1))  ||  cs2.equals(cs2);	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    	non-compiled	[CE]  not  a  statement	88	None	replace
859	[BUG]  [BUGGY]  return  cs1.equals(cs1);  if(cs1.equals(cs1))  {  return  cs1.equals(cs1);  }  else  {  return  cs2.equals(cs2);  }  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1);  if(cs1.equals(cs1))  {  return  cs1.equals(cs1);  }  else  {  return  cs2.equals(cs2);  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1);    if(cs1.equals(cs1))  {  return  cs1.equals(cs1);  }  else  {  return  cs2.equals(cs2);  }	  	non-compiled	[CE]  unreachable  statement	171	None	add
860	[BUG]  [BUGGY]  return  cs1.equals(cs1);  if(cs1.equals(cs1))  {  return  cs1.equals(cs1);  }  else  {  return  cs2  ==  null;  }  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1);  if(cs1.equals(cs1))  {  return  cs1.equals(cs1);  }  else  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1);    if(cs1.equals(cs1))  {  return  cs1.equals(cs1);  }  else  {  return  cs2  ==  null;  }	  	non-compiled	[CE]  unreachable  statement	171	None	add
861	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs1  ==  cs2)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  if(cs1  ==  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  cs2)  {  if(cs1  ==  cs2)  {  return  true;  }	  if(cs1!=    cs2)    {    if(cs2    ==    cs1)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
862	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	17	None	add
863	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
864	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2!=  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
865	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs2  ==  cs1  ||  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  cs2)  {  return  cs2  ==  cs1  ||  cs2.equals(cs2);  }	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    if(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	32	1	replace
866	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  cs2  ==  cs1  ||  cs2.equals(cs2);  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs2  ==  cs1  ||  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  cs2  ==  cs1  ||  cs2.equals(cs2);  }	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    if(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	32	1	replace
867	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
868	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
869	[BUG]  [BUGGY]  return(cs2  ==  cs1)&&(cs1  ==  cs2)&&(cs2  ==  cs2.equals(cs1));  [CE]  incomparable  types:  CharSequence  and  boolean  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)&&(cs1  ==  cs2)&&(cs2  ==  cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs2  ==  cs1)&&(cs1  ==  cs2)&&(cs2  ==  cs2.equals(cs1));	  return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2    ==    cs2.equals(cs1));    	non-compiled	[CE]  incomparable  types:  CharSequence  and  boolean	149	None	replace
870	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  if(cs1.equals(cs1)&&  cs2.equals(cs2))  {  return  cs1.equals(cs1.equals(cs1)&&  cs2.equals(cs2));  }  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs1)&&  cs2.equals(cs2));  if(cs1.equals(cs1)&&  cs2.equals(cs2))  {  return  cs1.equals(cs1.equals(cs1)&&  cs2.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs1)&&    cs2.equals(cs2));    if(cs1.equals(cs1)&&  cs2.equals(cs2))  {  return  cs1.equals(cs1.equals(cs1)&&  cs2.equals(cs2));  }	  	non-compiled	[CE]  unreachable  statement	185	None	add
871	[BUG]  [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	19	None	add
872	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  null)  {  return  false;  }	          if(cs1    ==    cs2)    {    return    false;    }    if(cs1    ==    cs2)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	114	2	replace
873	[BUG]  [BUGGY]  if(cs1  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null)  {  return  false;  }	          if(cs1    ==    cs2)    {    return    false;    }    if(cs1    ==    cs2)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	114	2	replace
874	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	96	2	add
875	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	96	2	add
876	[BUG]  [BUGGY]  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  if(cs1  ==  cs2)  {  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  }  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  if(cs1  ==  cs2)  {  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1.equals(cs2))    ||    cs2.equals(cs2);    if(cs1  ==  cs2)  {  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  }	  	non-compiled	[CE]  unreachable  statement	168	None	add
877	[BUG]  [BUGGY]  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  return  cs2.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  return  cs2.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1.equals(cs2))    ||    cs2.equals(cs2);    return  cs2.equals(cs1.equals(cs2))  ||  cs2.equals(cs2);	  	non-compiled	[CE]  unreachable  statement	168	None	add
878	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
879	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
880	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	100	None	add
881	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
882	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
883	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
884	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
885	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2!=  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2!=  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
886	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2!=  cs2)  {  return  true;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2!=  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2!=  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
887	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
888	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
889	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
890	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs2)  {  return  true;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1!=    cs2)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs2!=  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
891	[BUG]  [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2.equals(cs2)));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2.equals(cs2)));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2.equals(cs2)));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2    ==    cs2.equals(cs1)));    	non-compiled	[CE]  ';'  expected	103	None	replace
892	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(cs1!=  cs2)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  if(cs1!=  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  if(cs1!=  cs2)  {  return  true;  }	  if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
893	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs1!=  cs2)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2)  {  if(cs1!=  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  cs2)  {  if(cs1!=  cs2)  {  return  true;  }	  if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
894	[BUG]  [BUGGY]  return  cs2  ==  null;  int  cs2  =  cs1.equals(cs2.equals(cs1));  [CE]  variable  cs2  is  already  defined  in  method  equals(CharSequence,CharSequence)  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2  ==  null;  int  cs2  =  cs1.equals(cs2.equals(cs1));  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs2    ==    null;    int  cs2  =  cs1.equals(cs2.equals(cs1));	  	non-compiled	[CE]  variable  cs2  is  already  defined  in  method  equals(CharSequence,CharSequence)	49	None	add
895	[BUG]  [BUGGY]  return  cs2  ==  null;  int  cs2  =  cs1.equals(cs2);  [CE]  variable  cs2  is  already  defined  in  method  equals(CharSequence,CharSequence)  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2  ==  null;  int  cs2  =  cs1.equals(cs2);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs2    ==    null;    int  cs2  =  cs1.equals(cs2);	  	non-compiled	[CE]  variable  cs2  is  already  defined  in  method  equals(CharSequence,CharSequence)	49	None	add
896	[BUG]  [BUGGY]  return  cs2  ==  null;  int  cs2  =  cs1.equals(cs2.equals(cs2));  [CE]  variable  cs2  is  already  defined  in  method  equals(CharSequence,CharSequence)  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2  ==  null;  int  cs2  =  cs1.equals(cs2.equals(cs2));  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs2    ==    null;    int  cs2  =  cs1.equals(cs2.equals(cs2));	  	non-compiled	[CE]  variable  cs2  is  already  defined  in  method  equals(CharSequence,CharSequence)	49	None	add
897	[BUG]  [BUGGY]  return  cs2  ==  null;  int  cs2  =  cs1  ==  null;  [CE]  variable  cs2  is  already  defined  in  method  equals(CharSequence,CharSequence)  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2  ==  null;  int  cs2  =  cs1  ==  null;  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs2    ==    null;    int  cs2  =  cs1  ==  null;	  	non-compiled	[CE]  variable  cs2  is  already  defined  in  method  equals(CharSequence,CharSequence)	49	None	add
898	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	183	1	add
899	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	183	1	add
900	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	183	2	add
901	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	183	2	add
902	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	183	2	add
903	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	183	2	add
904	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs2  ==  cs1)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	132	1	replace
905	[BUG]  [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs2  ==  cs1)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	132	1	replace
906	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs2  ==  null  ||  cs2  ==  null)  {  return  false;  }	  if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	43	2	replace
907	[BUG]  [BUGGY]  if(cs2  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2  ==  null  ||  cs2  ==  null)  {  return  false;  }	  if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	43	2	replace
908	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs2  ==  null  ||  cs2!=  null)  {  return  false;  }	  if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	43	2	replace
909	[BUG]  [BUGGY]  if(cs2  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2  ==  null  ||  cs2!=  null)  {  return  false;  }	  if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	43	2	replace
910	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2!=  null)  {  return  cs1  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs2!=  null)  {  return  cs1  ==  null;  }	          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1    >=    null)    {    return    cs2    ==    null;    }    	compilable	  [FE]  AssertionFailedError  	79	2	replace
911	[BUG]  [BUGGY]  if(cs2!=  null)  {  return  cs1  ==  null;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2!=  null)  {  return  cs1  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2!=  null)  {  return  cs1  ==  null;  }	          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1    >=    null)    {    return    cs2    ==    null;    }    	compilable	  [FE]  AssertionFailedError  	79	2	replace
912	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2))  {  return  false;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2))  {  return  false;  }	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2    ==    cs2))    {    return    true;    	non-compiled	[CE]  ';'  expected	167	None	replace
913	[BUG]  [BUGGY]  return  cs1.equals(cs2).equals(cs1);  [CE]  boolean  cannot  be  dereferenced  [FE]                NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2).equals(cs1);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1.equals(cs2).equals(cs1);	  return    cs1.equals(cs2.equals(cs1));    if(cs1.equals(cs2.equals(cs1))    {    return    cs1.equals(cs2.equals(cs2));    }    	non-compiled	[CE]  boolean  cannot  be  dereferenced	48	None	replace
914	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null  ||  cs2  >>  null)  {  return  cs2  ==  null;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  return  cs2  ==  null;  }  if(cs1  ==  null  ||  cs2  >>  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1    ==    null    ||    cs2!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null  ||  cs2  >>  null)  {  return  cs2  ==  null;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	55	None	add
915	[BUG]  [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs3!=  null)  {  return  cs2  ==  null;  }  [CE]  cannot  find  symbol  cs3  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs3!=  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null)        {        return        cs2        ==        null;        }        if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs3!=  null)  {  return  cs2  ==  null;  }	  	non-compiled	[CE]  cannot  find  symbol  cs3	75	None	add
916	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	174	2	add
917	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	174	2	add
918	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	174	2	add
919	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	174	2	add
920	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	174	2	add
921	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	174	2	add
922	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs1)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
923	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs1)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
924	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs1)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
925	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs1)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
926	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs1)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
927	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs2!=    cs1)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
928	[BUG]  [BUGGY]  while(cs1!=  cs2  ||  cs1!=  cs2)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  while(cs1!=  cs2  ||  cs1!=  cs2)  {  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	while(cs1!=  cs2  ||  cs1!=  cs2)  {	  while(cs1!=    cs2)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
929	[BUG]  [BUGGY]  while(cs1!=  cs2  ||  cs1!=  cs1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  while(cs1!=  cs2  ||  cs1!=  cs1)  {  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	while(cs1!=  cs2  ||  cs1!=  cs1)  {	  while(cs1!=    cs2)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
930	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  if(cs1.equals(cs2))  {  return  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  }  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  if(cs1.equals(cs2))  {  return  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs1))    &&    cs2.equals(cs2);    if(cs1.equals(cs2))  {  return  cs1.equals(cs2.equals(cs1))  &&  cs2.equals(cs2);  }	  	non-compiled	[CE]  unreachable  statement	94	None	add
931	[BUG]  [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  }	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    if(cs1    ==    cs2)    {    return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
932	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2  ||  cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1!=  cs2  ||  cs1!=  cs2)  {  return  false;  }	          if(cs1!=    cs2)    {    return    false;    }    if(cs1    >>    cs2)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	154	2	replace
933	[BUG]  [BUGGY]  if(cs1!=  cs2  ||  cs1!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  cs2  ||  cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=  cs2  ||  cs1!=  cs2)  {  return  false;  }	          if(cs1!=    cs2)    {    return    false;    }    if(cs1    >>    cs2)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	154	2	replace
934	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1)&&  cs1.equals(cs2);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return  cs1.equals(cs1)&&  cs1.equals(cs2);	  return    cs1.equals(cs2)&&    cs1.equals(cs2);    	compilable	  [FE]  NullPointerException  	148	2	replace
935	[BUG]  [BUGGY]  return  cs1.equals(cs1)&&  cs1.equals(cs2);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1)&&  cs1.equals(cs2);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1.equals(cs1)&&  cs1.equals(cs2);	  return    cs1.equals(cs2)&&    cs1.equals(cs2);    	compilable	  [FE]  NullPointerException  	148	2	replace
936	[BUG]  [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs1);  if(cs1.equals(cs2)&&  cs2.equals(cs1))  {  return  cs1.equals(cs2)&&  cs2.equals(cs1);  }  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs1);  if(cs1.equals(cs2)&&  cs2.equals(cs1))  {  return  cs1.equals(cs2)&&  cs2.equals(cs1);  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2)&&    cs2.equals(cs1);    if(cs1.equals(cs2)&&  cs2.equals(cs1))  {  return  cs1.equals(cs2)&&  cs2.equals(cs1);  }	  	non-compiled	[CE]  unreachable  statement	81	None	add
937	[BUG]  [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs1);  if(cs1  ==  cs2)  {  return  cs1.equals(cs2)&&  cs2.equals(cs1);  }  else  {  return  cs1.equals(cs2);  }  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs1);  if(cs1  ==  cs2)  {  return  cs1.equals(cs2)&&  cs2.equals(cs1);  }  else  {  return  cs1.equals(cs2);  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2)&&    cs2.equals(cs1);    if(cs1  ==  cs2)  {  return  cs1.equals(cs2)&&  cs2.equals(cs1);  }  else  {  return  cs1.equals(cs2);  }	  	non-compiled	[CE]  unreachable  statement	81	None	add
938	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1.equals(cs2));  return(cs2  ==  cs1)||(cs2  ==  null)||(cs1.equals(cs2));  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1.equals(cs2));  return(cs2  ==  cs1)||(cs2  ==  null)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    null)||(cs1.equals(cs2));    return(cs2  ==  cs1)||(cs2  ==  null)||(cs1.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	129	None	add
939	[BUG]  [BUGGY]  return(cs1!=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  if(cs1!=  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  }  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1!=  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  if(cs1!=  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1!=    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    if(cs1!=  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2.equals(cs2));  }	  	non-compiled	[CE]  unreachable  statement	181	None	add
940	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||  cs1.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs2  ==  cs1)||(cs2  ==  cs2)||  cs1.equals(cs2);	  return(cs1    ==    cs2)||(cs2    ==    cs1)||    cs2.equals(cs2);    	compilable	  [FE]  AssertionFailedError  	166	1	replace
941	[BUG]  [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||  cs1.equals(cs2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||  cs1.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs2  ==  cs1)||(cs2  ==  cs2)||  cs1.equals(cs2);	  return(cs1    ==    cs2)||(cs2    ==    cs1)||    cs2.equals(cs2);    	compilable	  [FE]  AssertionFailedError  	166	1	replace
942	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
943	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
944	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
945	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
946	[BUG]  [BUGGY]  return  cs1.equals(cs1)&&  cs2.equals(cs2);  if(cs1.equals(cs1)&&  cs2.equals(cs2))  {  return  cs1.equals(cs1)&&  cs2.equals(cs2);  }  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1)&&  cs2.equals(cs2);  if(cs1.equals(cs1)&&  cs2.equals(cs2))  {  return  cs1.equals(cs1)&&  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1)&&    cs2.equals(cs2);    if(cs1.equals(cs1)&&  cs2.equals(cs2))  {  return  cs1.equals(cs1)&&  cs2.equals(cs2);  }	  	non-compiled	[CE]  unreachable  statement	177	None	add
947	[BUG]  [BUGGY]  return  cs1.equals(cs1)&&  cs2.equals(cs2);  if(cs1  ==  cs2)  {  return  cs1.equals(cs1)&&  cs2.equals(cs2);  }  else  {  return  cs1.equals(cs1)&&  cs2.equals(cs2);  }  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1)&&  cs2.equals(cs2);  if(cs1  ==  cs2)  {  return  cs1.equals(cs1)&&  cs2.equals(cs2);  }  else  {  return  cs1.equals(cs1)&&  cs2.equals(cs2);  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs1)&&    cs2.equals(cs2);    if(cs1  ==  cs2)  {  return  cs1.equals(cs1)&&  cs2.equals(cs2);  }  else  {  return  cs1.equals(cs1)&&  cs2.equals(cs2);  }	  	non-compiled	[CE]  unreachable  statement	177	None	add
948	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2  ||  cs1  ==  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  cs2  ||  cs1  ==  cs2)  {  return  true;  }	          if(cs1    ==    cs2)    {    return    true;    }    if(cs1    >=    cs2)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	41	1	replace
949	[BUG]  [BUGGY]  if(cs1  ==  cs2  ||  cs1  ==  cs2)  {  return  true;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2  ||  cs1  ==  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2  ||  cs1  ==  cs2)  {  return  true;  }	          if(cs1    ==    cs2)    {    return    true;    }    if(cs1    >=    cs2)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	41	1	replace
950	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
951	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs2)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
952	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
953	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
954	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
955	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs2)  {  return  true;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs2)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2  ==  cs2)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
956	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2  ==  null  ||  cs1.equals(cs2);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return  cs2  ==  null  ||  cs1.equals(cs2);	  return    cs2    ==    null;    	compilable	  [FE]  AssertionFailedError  	50	1	replace
957	[BUG]  [BUGGY]  return  cs2  ==  null  ||  cs1.equals(cs2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2  ==  null  ||  cs1.equals(cs2);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs2  ==  null  ||  cs1.equals(cs2);	  return    cs2    ==    null;    	compilable	  [FE]  AssertionFailedError  	50	1	replace
958	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2  ==  null  ||  cs2.equals(cs1);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return  cs2  ==  null  ||  cs2.equals(cs1);	  return    cs2    ==    null;    	compilable	  [FE]  AssertionFailedError  	50	1	replace
959	[BUG]  [BUGGY]  return  cs2  ==  null  ||  cs2.equals(cs1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs2  ==  null  ||  cs2.equals(cs1);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs2  ==  null  ||  cs2.equals(cs1);	  return    cs2    ==    null;    	compilable	  [FE]  AssertionFailedError  	50	1	replace
960	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs3  ==  null  ||  cs2!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  cs3  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs3  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs3  ==  null  ||  cs2!=  null)  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  cs3	69	None	add
961	[BUG]  [BUGGY]  if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs1))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs1))  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2    ==    cs1)    {    return    false;    }    if(cs2  ==  cs1))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
962	[BUG]  [BUGGY]  return  cs1.equals(cs2)&&  cs1.equals(cs2);  if(cs1  ==  cs2)  {  return  cs1.equals(cs2)&&  cs1.equals(cs2);  }  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)&&  cs1.equals(cs2);  if(cs1  ==  cs2)  {  return  cs1.equals(cs2)&&  cs1.equals(cs2);  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2)&&    cs1.equals(cs2);    if(cs1  ==  cs2)  {  return  cs1.equals(cs2)&&  cs1.equals(cs2);  }	  	non-compiled	[CE]  unreachable  statement	147	None	add
963	[BUG]  [BUGGY]  return  cs1.equals(cs2)&&  cs1.equals(cs2);  return  cs1.equals(cs2)&&  cs2.equals(cs2);  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2)&&  cs1.equals(cs2);  return  cs1.equals(cs2)&&  cs2.equals(cs2);  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2)&&    cs1.equals(cs2);    return  cs1.equals(cs2)&&  cs2.equals(cs2);	  	non-compiled	[CE]  unreachable  statement	147	None	add
964	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2.equals(cs2));    return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	131	None	add
965	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  }  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2.equals(cs2));    if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  null)||(cs1!=  null  &&  cs2.equals(cs2));  }	  	non-compiled	[CE]  unreachable  statement	131	None	add
966	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs2    ==    cs1)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	115	2	add
967	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs2    ==    cs1)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	115	2	add
968	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs2    ==    cs1)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	115	2	add
969	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs2    ==    cs1)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	115	2	add
970	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs2    ==    cs1)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	115	2	add
971	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs2    ==    cs1)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs2  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	115	2	add
972	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
973	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
974	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  return(cs2  ==  cs1)||(cs2  ==  cs1)||  cs2.equals(cs2);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||  cs2.equals(cs2);  return(cs2  ==  cs1)||(cs2  ==  cs1)||  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    cs1)||    cs2.equals(cs2);    return(cs2  ==  cs1)||(cs2  ==  cs1)||  cs2.equals(cs2);	  	non-compiled	[CE]  unreachable  statement	165	None	add
975	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)return  true;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null  ||  cs2  ==  null)return  true;  }	  if(cs1    ==    null    ||    cs2    ==    null)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
976	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs1  ==  cs2)||(cs2  ==  cs2.equals(cs1));  [CE]  incomparable  types:  CharSequence  and  boolean  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs1  ==  cs2)||(cs2  ==  cs2.equals(cs1));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs1  ==  cs2)||(cs2  ==  cs2.equals(cs1));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2    ==    cs2.equals(cs1));    	non-compiled	[CE]  incomparable  types:  CharSequence  and  boolean	23	None	replace
977	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs2    ==    cs1)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	155	1	replace
978	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1.equals(cs2));  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs2    ==    cs1)||(cs2    ==    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	155	1	replace
979	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs0  ==  null  ||  cs0!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  cs0  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs0  ==  null  ||  cs0!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2!=        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs0  ==  null  ||  cs0!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  cs0	67	None	add
980	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	162	1	add
981	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	162	1	add
982	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	162	1	add
983	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	162	1	add
984	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	162	1	add
985	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	162	1	add
986	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	162	1	add
987	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs2    ==    null    ||    cs1    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	162	1	add
988	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  null)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)&&(cs2  ==  null)||(cs1.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	130	1	replace
989	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  null)||(cs1.equals(cs2));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  null)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2  ==  null)||(cs1.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	130	1	replace
990	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  null)  {  return  true;  }	          if(cs1    ==    cs2)    {    return    true;    }    if(cs1    ==    cs2)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	36	1	replace
991	[BUG]  [BUGGY]  if(cs1  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  null)  {  return  true;  }	          if(cs1    ==    cs2)    {    return    true;    }    if(cs1    ==    cs2)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError  	36	1	replace
992	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs1  ==  cs2)&&(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2!=    null);    	compilable	  [FE]  AssertionFailedError  	128	1	replace
993	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs2  ==  null)||(cs1!=  null  &&  cs2!=  null);	  return(cs1    ==    cs2)||(cs2    ==    null)||(cs1!=    null    &&    cs2!=    null);    	compilable	  [FE]  AssertionFailedError  	128	1	replace
994	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs2    ==    cs1)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	39	1	add
995	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs2    ==    cs1)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	39	1	add
996	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs2    ==    cs1)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	39	1	add
997	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1!=  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs2    ==    cs1)    {    return    true;    }    if(cs1!=  cs2)  {  return  true;  }  if(cs2  ==  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	39	1	add
998	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        true;        }        if(cs2    ==    cs1)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	39	1	add
999	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    true;    }    if(cs2  ==  cs1)  {  return  true;  }  if(cs1  ==  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        true;        }        if(cs2    ==    cs1)    {    return    true;    }    if(cs1  ==  cs2)  {  return  true;  }  if(cs2!=  cs1)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	39	1	add
1000	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs1)||  cs2.equals(cs2);  if(cs1.equals(cs2))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  cs1.equals(cs1)||  cs2.equals(cs2);  if(cs1.equals(cs2))  {  return  false;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  cs1.equals(cs1)||  cs2.equals(cs2);  if(cs1.equals(cs2))  {  return  false;  }	  return    cs1.equals(cs2.equals(cs1))    ||    cs2.equals(cs2);    if(cs1.equals(cs2))    ||    cs2.equals(cs1))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1001	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs2!=  null)  {  return  cs1  ==  null;  }  if(cs2  ==  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        null)        {        return        cs2        ==        null;        }        if(cs1    ==    null)    {    return    cs2    ==    null;    }    if(cs2!=  null)  {  return  cs1  ==  null;  }  if(cs2  ==  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	77	2	add
1002	[BUG]  [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs2!=  null)  {  return  cs1  ==  null;  }  if(cs2  ==  null)  {  return  cs2  ==  null;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs2!=  null)  {  return  cs1  ==  null;  }  if(cs2  ==  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null)        {        return        cs2        ==        null;        }        if(cs1    ==    null)    {    return    cs2    ==    null;    }    if(cs2!=  null)  {  return  cs1  ==  null;  }  if(cs2  ==  null)  {  return  cs2  ==  null;  }	  	compilable	  [FE]  AssertionFailedError  	77	2	add
1003	[BUG]  [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs3  ==  null)  {  return  cs2  ==  null;  }  [CE]  cannot  find  symbol  cs3  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    null)    {    return    cs2    ==    null;    }    if(cs1  ==  null)  {  return  cs2  ==  null;  }  if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs3  ==  null)  {  return  cs2  ==  null;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        null)        {        return        cs2        ==        null;        }        if(cs1    ==    null)    {    return    cs2    ==    null;    }    if(cs1!=  null)  {  return  cs2  ==  null;  }  if(cs3  ==  null)  {  return  cs2  ==  null;  }	  	non-compiled	[CE]  cannot  find  symbol  cs3	77	None	add
1004	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs1.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	26	1	replace
1005	[BUG]  [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1.equals(cs2));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs1.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	26	1	replace
1006	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2  ||  cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  cs2  ||  cs1  ==  cs2)  {  return  false;  }	          if(cs1    ==    cs2)    {    return    false;    }    if(cs1    >=    cs2)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	119	2	replace
1007	[BUG]  [BUGGY]  if(cs1  ==  cs2  ||  cs1  ==  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2  ||  cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2  ||  cs1  ==  cs2)  {  return  false;  }	          if(cs1    ==    cs2)    {    return    false;    }    if(cs1    >=    cs2)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	119	2	replace
1008	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1.equals(cs2))&&  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return  cs1.equals(cs1.equals(cs2))&&  cs2.equals(cs2);	  return    cs1.equals(cs2.equals(cs1))    &&    cs2.equals(cs2);    	compilable	  [FE]  NullPointerException  	95	2	replace
1009	[BUG]  [BUGGY]  return  cs1.equals(cs1.equals(cs2))&&  cs2.equals(cs2);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1.equals(cs2))&&  cs2.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1.equals(cs1.equals(cs2))&&  cs2.equals(cs2);	  return    cs1.equals(cs2.equals(cs1))    &&    cs2.equals(cs2);    	compilable	  [FE]  NullPointerException  	95	2	replace
1010	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
1011	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
1012	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
1013	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
1014	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
1015	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
1016	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
1017	[BUG]  [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        cs2)        {        return        false;        }        if(cs1!=    cs2)    {    return    false;    }    if(cs2  ==  cs1)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	117	2	add
1018	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
1019	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
1020	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
1021	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        true;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
1022	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	98	2	add
1023	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	98	2	add
1024	[BUG]  [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs0  ==  null  ||  cs0  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  cs0  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs0  ==  null  ||  cs0  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1        ==        null        ||        cs2        ==        null)        {        return        false;        }        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs0  ==  null  ||  cs0  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  cs0	98	None	add
1025	[BUG]  [BUGGY]  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  >>  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  >>  null)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs2    ==    null    ||    cs1!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  >>  null)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	73	None	add
1026	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  return(cs2  ==  cs1)&&(cs2.equals(cs2));  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  return(cs2  ==  cs1)&&(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2.equals(cs2));    return(cs2  ==  cs1)&&(cs2.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	60	None	add
1027	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  return(cs1  ==  cs1)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  return(cs1  ==  cs1)&&(cs2  ==  cs1)&&(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2.equals(cs2));    return(cs1  ==  cs1)&&(cs2  ==  cs1)&&(cs2.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	60	None	add
1028	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  }  else  {  return  false;  }  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  }  else  {  return  false;  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs1.equals(cs2));    if(cs1  ==  cs2)  {  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  }  else  {  return  false;  }	  	non-compiled	[CE]  unreachable  statement	25	None	add
1029	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  return(cs2  ==  cs1)||(cs1  ==  cs2)||(cs1.equals(cs2));  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2  ==  cs1)||(cs1.equals(cs2));  return(cs2  ==  cs1)||(cs1  ==  cs2)||(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs1.equals(cs2));    return(cs2  ==  cs1)||(cs1  ==  cs2)||(cs1.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	25	None	add
1030	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  if(cs1!=  cs2)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  if(cs1!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  if(cs1!=  cs2)  {  return  false;  }	  if(cs1    ==    cs2)    {    if(cs2!=    cs1)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
1031	[BUG]  [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  return(cs2  ==  cs1)||(cs2!=  cs1)||(cs2.equals(cs2));  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  return(cs2  ==  cs1)||(cs2!=  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    return(cs2  ==  cs1)||(cs2!=  cs1)||(cs2.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	151	None	add
1032	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
1033	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs2!=  cs1)  {  return  false;  }  if(cs1  ==  cs2)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
1034	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	                if(cs1!=        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
1035	[BUG]  [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]          if(cs1!=    cs2)    {    return    false;    }    if(cs1  ==  cs2)  {  return  false;  }  if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	                if(cs1!=        cs2)        {        return        false;        }        if(cs1    ==    cs2)    {    return    false;    }    if(cs1!=  cs2)  {  return  false;  }  if(cs2  ==  cs1)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
1036	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs2));  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs2));  }  else  {  return  cs1.equals(cs1.equals(cs2));  }  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs2));  if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs2));  }  else  {  return  cs1.equals(cs1.equals(cs2));  }  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs2));    if(cs1  ==  cs2)  {  return  cs1.equals(cs2.equals(cs2));  }  else  {  return  cs1.equals(cs1.equals(cs2));  }	  	non-compiled	[CE]  unreachable  statement	111	None	add
1037	[BUG]  [BUGGY]  return  cs1.equals(cs2.equals(cs2));  return  cs2.equals(cs1.equals(cs2));  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs2.equals(cs2));  return  cs2.equals(cs1.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return    cs1.equals(cs2.equals(cs2));    return  cs2.equals(cs1.equals(cs2));	  	non-compiled	[CE]  unreachable  statement	111	None	add
1038	[BUG]  [BUGGY]  return(cs1  ==  cs2)&&(cs1  ==  cs2)&&(cs2  ==  cs2.equals(cs1)));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs1  ==  cs2)&&(cs1  ==  cs2)&&(cs2  ==  cs2.equals(cs1)));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs1  ==  cs2)&&(cs1  ==  cs2)&&(cs2  ==  cs2.equals(cs1)));	  return(cs1    ==    cs2)&&(cs2    ==    cs1)&&(cs2    ==    cs2.equals(cs1)));    	non-compiled	[CE]  ';'  expected	104	None	replace
1039	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }	          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=    cs2)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	184	2	replace
1040	[BUG]  [BUGGY]  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1  ==  cs2)  {  return  false;  }  if(cs2!=  cs2)  {  return  false;  }	          if(cs1!=    cs2)    {    return    false;    }    if(cs2!=    cs2)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	184	2	replace
1041	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  >>  null  ||  cs2  ==  null)  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  >>  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]      return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  >>  null  ||  cs2  ==  null)  {  return  true;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	179	None	add
1042	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	add	return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	156	1	replace
1043	[BUG]  [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return(cs2  ==  cs1)||(cs2  ==  cs2)||(cs1!=  cs2)||(cs2!=  cs1)||(cs2.equals(cs2));	  return(cs1    ==    cs2)||(cs2    ==    cs1)||(cs2.equals(cs2));    return(cs1    ==    cs2)||(cs2!=    cs1)||(cs2.equals(cs2));    	compilable	  [FE]  AssertionFailedError  	156	1	replace
1044	[BUG]  [BUGGY]  return  cs1.equals(cs1.equals(cs2);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {      [BUGGY]  return  cs1.equals(cs1.equals(cs2);  [BUGGY]      }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	783	783	1	replace	return  cs1.equals(cs1.equals(cs2);	  return    cs1.equals(cs2.equals(cs2);    	non-compiled	[CE]  ')'  expected	28	None	replace
