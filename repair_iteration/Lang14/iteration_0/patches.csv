bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  [BUGGY]  return  false;  [BUGGY]  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	add	return  false;	return  true;  	compilable	  [FE]  AssertionFailedError  testEquals	29	1	replace
12	[BUG]  [BUGGY]  return  false;  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  [BUGGY]  return  false;  [BUGGY]  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	replace	return  false;	return  true;  	compilable	  [FE]  AssertionFailedError  testEquals	29	1	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isNotEmpty(CharSequence  cs)  {  [BUGGY]  return!StringUtils.isEmpty(cs)||!StringUtils.isEmpty(cs);  [BUGGY]  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isNotEmpty  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	203	203	1	add	return!StringUtils.isEmpty(cs)||!StringUtils.isEmpty(cs);	return  !StringUtils.isEmpty(cs);  	compilable	  [FE]  AssertionFailedError  testEquals	17	1	replace
23	[BUG]  [BUGGY]  return!StringUtils.isEmpty(cs)||!StringUtils.isEmpty(cs);  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isNotEmpty(CharSequence  cs)  {  [BUGGY]  return!StringUtils.isEmpty(cs)||!StringUtils.isEmpty(cs);  [BUGGY]  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isNotEmpty  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	203	203	1	replace	return!StringUtils.isEmpty(cs)||!StringUtils.isEmpty(cs);	return  !StringUtils.isEmpty(cs);  	compilable	  [FE]  AssertionFailedError  testEquals	17	1	replace
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isNotEmpty(CharSequence  cs)  {  [BUGGY]  return!StringUtils.isEmpty(cs)&&!StringUtils.isEmpty(cs);  [BUGGY]  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isNotEmpty  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	203	203	1	add	return!StringUtils.isEmpty(cs)&&!StringUtils.isEmpty(cs);	return  !StringUtils.isEmpty(cs);  	compilable	  [FE]  AssertionFailedError  testEquals	17	1	replace
24	[BUG]  [BUGGY]  return!StringUtils.isEmpty(cs)&&!StringUtils.isEmpty(cs);  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isNotEmpty(CharSequence  cs)  {  [BUGGY]  return!StringUtils.isEmpty(cs)&&!StringUtils.isEmpty(cs);  [BUGGY]  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isNotEmpty  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	203	203	1	replace	return!StringUtils.isEmpty(cs)&&!StringUtils.isEmpty(cs);	return  !StringUtils.isEmpty(cs);  	compilable	  [FE]  AssertionFailedError  testEquals	17	1	replace
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }  [BUGGY]  if(cs1  ==  null  &&  cs2!=  null)  {  [BUGGY]  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	add	if(cs1  ==  null  &&  cs2!=  null)  {	if  (cs1  ==  null  ||  cs2  ==  null)  {  	compilable	  [FE]  AssertionFailedError  testEquals	5	1	replace
34	[BUG]  [BUGGY]  if(cs1  ==  null  &&  cs2!=  null)  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }  [BUGGY]  if(cs1  ==  null  &&  cs2!=  null)  {  [BUGGY]  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	785	785	1	replace	if(cs1  ==  null  &&  cs2!=  null)  {	if  (cs1  ==  null  ||  cs2  ==  null)  {  	compilable	  [FE]  AssertionFailedError  testEquals	5	1	replace
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  [BUGGY]  if(cs1  ==  cs2  ||  cs2  ==  cs1)  {  [BUGGY]  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	if(cs1  ==  cs2  ||  cs2  ==  cs1)  {	if  (cs1  ==  cs2)  {  	compilable	  [FE]  AssertionFailedError  testEquals	1	1	replace
53	[BUG]  [BUGGY]  if(cs1  ==  cs2  ||  cs2  ==  cs1)  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  [BUGGY]  if(cs1  ==  cs2  ||  cs2  ==  cs1)  {  [BUGGY]  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1  ==  cs2  ||  cs2  ==  cs1)  {	if  (cs1  ==  cs2)  {  	compilable	  [FE]  AssertionFailedError  testEquals	1	1	replace
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  [BUGGY]  for(int  i  =  1;  i  <  strLen;  i++)  {  [BUGGY]  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	227	227	1	add	for(int  i  =  1;  i  <  strLen;  i++)  {	for  (int  i  =  0;  i  <  strLen;  i++)  {  	compilable	  [FE]  AssertionFailedError  testEquals	23	1	replace
63	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  strLen;  i++)  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  [BUGGY]  for(int  i  =  1;  i  <  strLen;  i++)  {  [BUGGY]  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	227	227	1	replace	for(int  i  =  1;  i  <  strLen;  i++)  {	for  (int  i  =  0;  i  <  strLen;  i++)  {  	compilable	  [FE]  AssertionFailedError  testEquals	23	1	replace
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  [BUGGY]  for(int  i  =  0;  i  <=  strLen;  i++)  {  [BUGGY]  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	227	227	1	add	for(int  i  =  0;  i  <=  strLen;  i++)  {	for  (int  i  =  0;  i  <  strLen;  i++)  {  	compilable	  [FE]  AssertionFailedError  testEquals	23	1	replace
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <=  strLen;  i++)  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  [BUGGY]  for(int  i  =  0;  i  <=  strLen;  i++)  {  [BUGGY]  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	227	227	1	replace	for(int  i  =  0;  i  <=  strLen;  i++)  {	for  (int  i  =  0;  i  <  strLen;  i++)  {  	compilable	  [FE]  AssertionFailedError  testEquals	23	1	replace
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  [BUGGY]  return  true;  [BUGGY]  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	229	229	1	add	return  true;	return  false;  	compilable	  [FE]  AssertionFailedError  testEquals	27	1	replace
102	[BUG]  [BUGGY]  return  true;  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  [BUGGY]  return  true;  [BUGGY]  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	229	229	1	replace	return  true;	return  false;  	compilable	  [FE]  AssertionFailedError  testEquals	27	1	replace
151	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  [BUGGY]  return  false;  [BUGGY]  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	add	return  false;	return  true;  	compilable	  [FE]  AssertionFailedError  testEquals	21	1	replace
152	[BUG]  [BUGGY]  return  false;  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  [BUGGY]  return  false;  [BUGGY]  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	replace	return  false;	return  true;  	compilable	  [FE]  AssertionFailedError  testEquals	21	1	replace
161	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s+ ");  [BUGGY]    [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s+ ");	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "\\s+ ");  	compilable	  [FE]  AssertionFailedError  testEquals	9	1	replace
162	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s+ ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]    [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s+ ");  [BUGGY]    [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s+ ");	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "\\s+ ");  	compilable	  [FE]  AssertionFailedError  testEquals	9	1	replace
162	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s- ");  [BUGGY]    [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s- ");	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "\\s+ ");  	compilable	  [FE]  AssertionFailedError  testEquals	9	1	replace
163	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s- ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]    [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s- ");  [BUGGY]    [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s- ");	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "\\s+ ");  	compilable	  [FE]  AssertionFailedError  testEquals	9	1	replace
163	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s-1 ");  [BUGGY]    [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s-1 ");	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "\\s+ ");  	compilable	  [FE]  AssertionFailedError  testEquals	9	1	replace
164	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s-1 ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]    [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s-1 ");  [BUGGY]    [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s-1 ");	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "\\s+ ");  	compilable	  [FE]  AssertionFailedError  testEquals	9	1	replace
164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s+4 ");  [BUGGY]    [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s+4 ");	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "\\s+ ");  	compilable	  [FE]  AssertionFailedError  testEquals	9	1	replace
165	[BUG]  [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s+4 ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]    [BUGGY]  private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s+4 ");  [BUGGY]    [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s+4 ");	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "\\s+ ");  	compilable	  [FE]  AssertionFailedError  testEquals	9	1	replace
182	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  [BUGGY]  if(cs  ==  null  ||(strLen  =  cs.length())!=  0)  {  [BUGGY]  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	224	224	1	add	if(cs  ==  null  ||(strLen  =  cs.length())!=  0)  {	if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  	compilable	  [FE]  AssertionFailedError  testEquals	19	1	replace
183	[BUG]  [BUGGY]  if(cs  ==  null  ||(strLen  =  cs.length())!=  0)  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  [BUGGY]  if(cs  ==  null  ||(strLen  =  cs.length())!=  0)  {  [BUGGY]  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	224	224	1	replace	if(cs  ==  null  ||(strLen  =  cs.length())!=  0)  {	if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  	compilable	  [FE]  AssertionFailedError  testEquals	19	1	replace
191	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  [BUGGY]  if(Character.isWhitespace(cs.charAt(i)))  {  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	add	if(Character.isWhitespace(cs.charAt(i)))  {	if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  	compilable	  [FE]  AssertionFailedError  testEquals	25	1	replace
192	[BUG]  [BUGGY]  if(Character.isWhitespace(cs.charAt(i)))  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  [BUGGY]  if(Character.isWhitespace(cs.charAt(i)))  {  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	replace	if(Character.isWhitespace(cs.charAt(i)))  {	if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  	compilable	  [FE]  AssertionFailedError  testEquals	25	1	replace
192	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  [BUGGY]  if(!Character.isWhitespace(cs.charAt(i)))  {  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	add	if(!Character.isWhitespace(cs.charAt(i)))  {	if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  	compilable	  [FE]  AssertionFailedError  testEquals	25	1	replace
193	[BUG]  [BUGGY]  if(!Character.isWhitespace(cs.charAt(i)))  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  [BUGGY]  if(!Character.isWhitespace(cs.charAt(i)))  {  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	replace	if(!Character.isWhitespace(cs.charAt(i)))  {	if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  	compilable	  [FE]  AssertionFailedError  testEquals	25	1	replace
194	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  [BUGGY]  if(Character.isWhitespace(cs.charAt(i))!=  false)  {  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	add	if(Character.isWhitespace(cs.charAt(i))!=  false)  {	if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  	compilable	  [FE]  AssertionFailedError  testEquals	25	1	replace
195	[BUG]  [BUGGY]  if(Character.isWhitespace(cs.charAt(i))!=  false)  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  [BUGGY]  if(Character.isWhitespace(cs.charAt(i))!=  false)  {  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	replace	if(Character.isWhitespace(cs.charAt(i))!=  false)  {	if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  	compilable	  [FE]  AssertionFailedError  testEquals	25	1	replace
282	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs1);  [BUGGY]  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	788	788	1	add	return  cs1.equals(cs2)&&  cs2.equals(cs1);	return  cs1.equals(cs2);  	compilable	  [FE]  AssertionFailedError  testEquals	7	1	replace
283	[BUG]  [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs1);  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]  return  cs1.equals(cs2)&&  cs2.equals(cs1);  [BUGGY]  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	788	788	1	replace	return  cs1.equals(cs2)&&  cs2.equals(cs1);	return  cs1.equals(cs2);  	compilable	  [FE]  AssertionFailedError  testEquals	7	1	replace
284	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]  return  cs1.equals(cs2)&&  cs2!=  cs1;  [BUGGY]  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	788	788	1	add	return  cs1.equals(cs2)&&  cs2!=  cs1;	return  cs1.equals(cs2);  	compilable	  [FE]  AssertionFailedError  testEquals	7	1	replace
285	[BUG]  [BUGGY]  return  cs1.equals(cs2)&&  cs2!=  cs1;  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]  return  cs1.equals(cs2)&&  cs2!=  cs1;  [BUGGY]  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	788	788	1	replace	return  cs1.equals(cs2)&&  cs2!=  cs1;	return  cs1.equals(cs2);  	compilable	  [FE]  AssertionFailedError  testEquals	7	1	replace
202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	add	throw  new  IllegalArgumentException( " ");	return  true;  	compilable	  [FE]  AssertionFailedError  testEquals	21	1	replace
203	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	replace	throw  new  IllegalArgumentException( " ");	return  true;  	compilable	  [FE]  AssertionFailedError  testEquals	21	1	replace
302	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  [BUGGY]  if((  Character.isWhitespace(cs.charAt(i))  ==  false))  {  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	add	if((  Character.isWhitespace(cs.charAt(i))  ==  false))  {	if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  	compilable	  [FE]  AssertionFailedError  testEquals	25	1	replace
303	[BUG]  [BUGGY]  if((  Character.isWhitespace(cs.charAt(i))  ==  false))  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  [BUGGY]  if((  Character.isWhitespace(cs.charAt(i))  ==  false))  {  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	replace	if((  Character.isWhitespace(cs.charAt(i))  ==  false))  {	if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  	compilable	  [FE]  AssertionFailedError  testEquals	25	1	replace
304	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  [BUGGY]  if((  Character.isWhitespace(cs.charAt(i))!=  false))  {  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	add	if((  Character.isWhitespace(cs.charAt(i))!=  false))  {	if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  	compilable	  [FE]  AssertionFailedError  testEquals	25	1	replace
305	[BUG]  [BUGGY]  if((  Character.isWhitespace(cs.charAt(i))!=  false))  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  [BUGGY]  if((  Character.isWhitespace(cs.charAt(i))!=  false))  {  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	replace	if((  Character.isWhitespace(cs.charAt(i))!=  false))  {	if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  	compilable	  [FE]  AssertionFailedError  testEquals	25	1	replace
322	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	add	throw  new  IllegalArgumentException( " ");	return  true;  	compilable	  [FE]  AssertionFailedError  testEquals	29	1	replace
323	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	replace	throw  new  IllegalArgumentException( " ");	return  true;  	compilable	  [FE]  AssertionFailedError  testEquals	29	1	replace
462	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  [BUGGY]  if(cs1  ==  cs2  ||  cs1  ==  cs2)  {  [BUGGY]  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	if(cs1  ==  cs2  ||  cs1  ==  cs2)  {	if  (cs1  ==  cs2)  {  	compilable	  [FE]  AssertionFailedError  testEquals	1	1	replace
463	[BUG]  [BUGGY]  if(cs1  ==  cs2  ||  cs1  ==  cs2)  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  [BUGGY]  if(cs1  ==  cs2  ||  cs1  ==  cs2)  {  [BUGGY]  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1  ==  cs2  ||  cs1  ==  cs2)  {	if  (cs1  ==  cs2)  {  	compilable	  [FE]  AssertionFailedError  testEquals	1	1	replace
543	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]    [BUGGY]  public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s+ ");  [BUGGY]    [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	add	public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s+ ");	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "\\s+ ");  	compilable	  [FE]  AssertionFailedError  testEquals	9	1	replace
544	[BUG]  [BUGGY]  public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s+ ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]    [BUGGY]  public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s+ ");  [BUGGY]    [CLASS]  StringUtils  InitStripAccents  [VARIABLES]  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.14433756729740646	148	148	1	replace	public  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "s+ ");	private  static  final  Pattern  WHITESPACE_BLOCK  =  Pattern.compile( "\\s+ ");  	compilable	  [FE]  AssertionFailedError  testEquals	9	1	replace
562	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	229	229	1	add	throw  new  IllegalArgumentException( " ");	return  false;  	compilable	  [FE]  AssertionFailedError  testEquals	27	1	replace
563	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	229	229	1	replace	throw  new  IllegalArgumentException( " ");	return  false;  	compilable	  [FE]  AssertionFailedError  testEquals	27	1	replace
563	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	229	229	1	add	throw  new  IllegalStateException( " ");	return  false;  	compilable	  [FE]  AssertionFailedError  testEquals	27	1	replace
564	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	229	229	1	replace	throw  new  IllegalStateException( " ");	return  false;  	compilable	  [FE]  AssertionFailedError  testEquals	27	1	replace
153	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]  return  cs1  ==  cs2  ||  cs1.equals(cs2);  [BUGGY]  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	788	788	1	add	return  cs1  ==  cs2  ||  cs1.equals(cs2);	return  cs1.equals(cs2);  	compilable	  [FE]  AssertionFailedError  testEquals	7	1	replace
154	[BUG]  [BUGGY]  return  cs1  ==  cs2  ||  cs1.equals(cs2);  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {  if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]  return  cs1  ==  cs2  ||  cs1.equals(cs2);  [BUGGY]  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	788	788	1	replace	return  cs1  ==  cs2  ||  cs1.equals(cs2);	return  cs1.equals(cs2);  	compilable	  [FE]  AssertionFailedError  testEquals	7	1	replace
182	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  [BUGGY]  return  cs.length()!=  0;  [BUGGY]  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	add	return  cs.length()!=  0;	return  true;  	compilable	  [FE]  AssertionFailedError  testEquals	29	1	replace
183	[BUG]  [BUGGY]  return  cs.length()!=  0;  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  [BUGGY]  return  cs.length()!=  0;  [BUGGY]  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	replace	return  cs.length()!=  0;	return  true;  	compilable	  [FE]  AssertionFailedError  testEquals	29	1	replace
183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  [BUGGY]  return  cs.length()  ==  0;  [BUGGY]  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	add	return  cs.length()  ==  0;	return  true;  	compilable	  [FE]  AssertionFailedError  testEquals	29	1	replace
184	[BUG]  [BUGGY]  return  cs.length()  ==  0;  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  [BUGGY]  return  cs.length()  ==  0;  [BUGGY]  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	232	232	1	replace	return  cs.length()  ==  0;	return  true;  	compilable	  [FE]  AssertionFailedError  testEquals	29	1	replace
212	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  [BUGGY]  return  cs.length()  ==  0;  [BUGGY]  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	add	return  cs.length()  ==  0;	return  true;  	compilable	  [FE]  AssertionFailedError  testEquals	21	1	replace
213	[BUG]  [BUGGY]  return  cs.length()  ==  0;  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  [BUGGY]  return  cs.length()  ==  0;  [BUGGY]  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	replace	return  cs.length()  ==  0;	return  true;  	compilable	  [FE]  AssertionFailedError  testEquals	21	1	replace
214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	add	throw  new  IllegalStateException( " ");	return  true;  	compilable	  [FE]  AssertionFailedError  testEquals	21	1	replace
215	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	225	225	1	replace	throw  new  IllegalStateException( " ");	return  true;  	compilable	  [FE]  AssertionFailedError  testEquals	21	1	replace
544	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  [BUGGY]  if(cs  ==  null  ||(strLen  =  cs.length())  <  0)  {  [BUGGY]  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	224	224	1	add	if(cs  ==  null  ||(strLen  =  cs.length())  <  0)  {	if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  	compilable	  [FE]  AssertionFailedError  testEquals	19	1	replace
545	[BUG]  [BUGGY]  if(cs  ==  null  ||(strLen  =  cs.length())  <  0)  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  [BUGGY]  if(cs  ==  null  ||(strLen  =  cs.length())  <  0)  {  [BUGGY]  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	224	224	1	replace	if(cs  ==  null  ||(strLen  =  cs.length())  <  0)  {	if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  	compilable	  [FE]  AssertionFailedError  testEquals	19	1	replace
572	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  [BUGGY]  if(Character.isWhitespace(cs.charAt(i))  ==  true)  {  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	add	if(Character.isWhitespace(cs.charAt(i))  ==  true)  {	if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  	compilable	  [FE]  AssertionFailedError  testEquals	25	1	replace
573	[BUG]  [BUGGY]  if(Character.isWhitespace(cs.charAt(i))  ==  true)  {  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  [BUGGY]  if(Character.isWhitespace(cs.charAt(i))  ==  true)  {  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	228	228	1	replace	if(Character.isWhitespace(cs.charAt(i))  ==  true)  {	if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  	compilable	  [FE]  AssertionFailedError  testEquals	25	1	replace
632	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  [BUGGY]    cs  =  cs.toString();  [BUGGY]  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	224	224	1	add	    cs  =  cs.toString();		compilable	  [FE]  AssertionFailedError  testEquals	20	1	add
633	[BUG]  [BUGGY]    cs  =  cs.toString();  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  [BUGGY]    cs  =  cs.toString();  [BUGGY]  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	224	224	1	replace	    cs  =  cs.toString();		compilable	  [FE]  AssertionFailedError  testEquals	20	1	add
633	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  [BUGGY]    strLen  =  cs.length();  [BUGGY]  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	224	224	1	add	    strLen  =  cs.length();		compilable	  [FE]  AssertionFailedError  testEquals	20	1	add
634	[BUG]  [BUGGY]    strLen  =  cs.length();  [FE]  AssertionFailedError  testEquals  [CONTEXT]  public  static  boolean  isBlank(CharSequence  cs)  {  int  strLen;  [BUGGY]    strLen  =  cs.length();  [BUGGY]  if  (cs  ==  null  ||  (strLen  =  cs.length())  ==  0)  {  return  true;  }  for  (int  i  =  0;  i  <  strLen;  i++)  {  if  (Character.isWhitespace(cs.charAt(i))  ==  false)  {  return  false;  }  }  return  true;  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  isBlank  [RETURN_TYPE]  boolean  CharSequence  cs  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.0	224	224	1	replace	    strLen  =  cs.length();		compilable	  [FE]  AssertionFailedError  testEquals	20	1	add
