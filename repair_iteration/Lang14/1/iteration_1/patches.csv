bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
2	[BUG]  [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
4	[BUG]  [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
6	[BUG]  [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
7	[BUG]  [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  If(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  If(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    If(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	1	None	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
9	[BUG]  [BUGGY]      if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
11	[BUG]  [BUGGY]      if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
13	[BUG]  [BUGGY]      if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
14	[BUG]  [BUGGY]      if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  >=  null  ||  cs2!=  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  >=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1!=    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  >=  null  ||  cs2!=  null)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	15	None	add
15	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1  ==  null  ||  cs2  ==  null)return  false;  }	      if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
17	[BUG]  [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
19	[BUG]  [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
21	[BUG]  [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
22	[BUG]  [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  >=  null  ||  cs2  ==  null)  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  >=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  >=  null  ||  cs2  ==  null)  {  return  true;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	9	None	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs2!=  cs1)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	if(cs2!=  cs1)  {	  if(cs1!=    cs2)    {    	compilable	  [FE]  AssertionFailedError  	14	2	replace
24	[BUG]  [BUGGY]  if(cs2!=  cs1)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs2!=  cs1)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs2!=  cs1)  {	  if(cs1!=    cs2)    {    	compilable	  [FE]  AssertionFailedError  	14	2	replace
25	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1.equals(cs2))  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	if(cs1.equals(cs2))  {	  if(cs1!=    cs2)    {    	compilable	  [FE]  NullPointerException  	14	2	replace
26	[BUG]  [BUGGY]  if(cs1.equals(cs2))  {  [FE]  NullPointerException  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1.equals(cs2))  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1.equals(cs2))  {	  if(cs1!=    cs2)    {    	compilable	  [FE]  NullPointerException  	14	2	replace
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	7	2	add
28	[BUG]  [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	7	2	add
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	7	2	add
30	[BUG]  [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	7	2	add
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	7	2	add
32	[BUG]  [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	7	2	add
33	[BUG]  [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  If(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  If(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    If(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
34	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs1!=  cs2)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1!=  cs2)  {  if(cs1!=  cs2)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1!=    cs2)    {    if(cs1!=  cs2)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
35	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs1  >=  cs2)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1!=  cs2)  {  if(cs1  >=  cs2)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1!=    cs2)    {    if(cs1  >=  cs2)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
36	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs1  ==  cs2)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1!=  cs2)  {  if(cs1  ==  cs2)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1!=    cs2)    {    if(cs1  ==  cs2)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
37	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  if(cs1  >>  cs2)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1!=  cs2)  {  if(cs1  >>  cs2)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1!=    cs2)    {    if(cs1  >>  cs2)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
39	[BUG]  [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
41	[BUG]  [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
42	[BUG]  [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  >=  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  >=  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  >=  null)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	5	None	add
43	[BUG]  [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  If(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  If(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    If(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	5	None	add
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1  ==  null)  {  if(cs2  ==  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	if(cs1  ==  null)  {  if(cs2  ==  null)  {  return  false;  }	      if(cs1!=    null)    {    if(cs2    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	19	2	replace
45	[BUG]  [BUGGY]  if(cs1  ==  null)  {  if(cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1  ==  null)  {  if(cs2  ==  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1  ==  null)  {  if(cs2  ==  null)  {  return  false;  }	      if(cs1!=    null)    {    if(cs2    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError  	19	2	replace
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
47	[BUG]  [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
49	[BUG]  [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1!=  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1!=  null  ||  cs2!=  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	17	2	add
50	[BUG]  [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  >=  null)  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  >=  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  >=  null)  {  return  true;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	17	None	add
51	[BUG]  [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  If(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  If(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    If(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	17	None	add
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
53	[BUG]  [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
55	[BUG]  [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
57	[BUG]  [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
58	[BUG]  [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  >=  null  ||  cs2  ==  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  >=  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  >=  null  ||  cs2  ==  null)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	3	None	add
59	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	if(cs1  ==  null  ||  cs2!=  null)  {	  if(cs1    ==    null    ||    cs2    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	12	2	replace
60	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1  ==  null  ||  cs2!=  null)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1  ==  null  ||  cs2!=  null)  {	  if(cs1    ==    null    ||    cs2    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	12	2	replace
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	if(cs1!=  null  ||  cs2  ==  null)  {	  if(cs1    ==    null    ||    cs2    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	12	2	replace
62	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1!=  null  ||  cs2  ==  null)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1!=  null  ||  cs2  ==  null)  {	  if(cs1    ==    null    ||    cs2    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	12	2	replace
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs2  ==  null  ||  cs1  ==  null)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	if(cs2  ==  null  ||  cs1  ==  null)  {	  if(cs1    ==    null    ||    cs2    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	12	2	replace
64	[BUG]  [BUGGY]  if(cs2  ==  null  ||  cs1  ==  null)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs2  ==  null  ||  cs1  ==  null)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs2  ==  null  ||  cs1  ==  null)  {	  if(cs1    ==    null    ||    cs2    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	12	2	replace
65	[BUG]  [BUGGY]  if(cs1  ==  cs2  ==  cs2)  {  [CE]  incomparable  types:  boolean  and  CharSequence  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1  ==  cs2  ==  cs2)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1  ==  cs2  ==  cs2)  {	  if(cs1    ==    cs2    ==    cs1)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  CharSequence	20	None	replace
66	[BUG]  [BUGGY]  if(cs1  ==  cs2!=  cs1)  {  [CE]  incomparable  types:  boolean  and  CharSequence  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1  ==  cs2!=  cs1)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1  ==  cs2!=  cs1)  {	  if(cs1    ==    cs2    ==    cs1)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  CharSequence	20	None	replace
67	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  if(cs1  ==  null  ||  cs2  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  if(cs1  ==  null  ||  cs2  ==  null)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1    ==    null    ||    cs2    ==    null)    {    if(cs1  ==  null  ||  cs2  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
68	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  if(cs1  ==  null  ||  cs2!=  null)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  if(cs1  ==  null  ||  cs2!=  null)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1    ==    null    ||    cs2    ==    null)    {    if(cs1  ==  null  ||  cs2!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
69	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  if(cs1!=  null  ||  cs2  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  if(cs1!=  null  ||  cs2  ==  null)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1    ==    null    ||    cs2    ==    null)    {    if(cs1!=  null  ||  cs2  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
70	[BUG]  [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  If(cs1  ==  null  ||  cs2  ==  null)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1  ==  null  ||  cs2  ==  null)  {  If(cs1  ==  null  ||  cs2  ==  null)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1    ==    null    ||    cs2    ==    null)    {    If(cs1  ==  null  ||  cs2  ==  null)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
71	[BUG]  [BUGGY]  if(cs1!=  cs2)  {  If(cs1!=  cs2)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1!=  cs2)  {  If(cs1!=  cs2)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1!=    cs2)    {    If(cs1!=  cs2)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
72	[BUG]  [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2)  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1!=  null  ||  cs2)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1!=  null  ||  cs2)  {  return  true;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	9	None	add
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1!=  null  ||  cs2!=  null)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	if(cs1!=  null  ||  cs2!=  null)  {	  if(cs1!=    cs2)    {    	compilable	  [FE]  AssertionFailedError  	14	2	replace
74	[BUG]  [BUGGY]  if(cs1!=  null  ||  cs2!=  null)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1!=  null  ||  cs2!=  null)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1!=  null  ||  cs2!=  null)  {	  if(cs1!=    cs2)    {    	compilable	  [FE]  AssertionFailedError  	14	2	replace
75	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1!=  cs2  ||  cs1.equals(cs2))  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	if(cs1!=  cs2  ||  cs1.equals(cs2))  {	  if(cs1!=    cs2)    {    	compilable	  [FE]  NullPointerException  	14	2	replace
76	[BUG]  [BUGGY]  if(cs1!=  cs2  ||  cs1.equals(cs2))  {  [FE]  NullPointerException  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1!=  cs2  ||  cs1.equals(cs2))  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1!=  cs2  ||  cs1.equals(cs2))  {	  if(cs1!=    cs2)    {    	compilable	  [FE]  NullPointerException  	14	2	replace
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1  ==  cs2  ||  cs1!=  cs2)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	if(cs1  ==  cs2  ||  cs1!=  cs2)  {	  if(cs1    ==    cs2    ==    cs1)    {    	compilable	  [FE]  AssertionFailedError  	20	2	replace
78	[BUG]  [BUGGY]  if(cs1  ==  cs2  ||  cs1!=  cs2)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1  ==  cs2  ||  cs1!=  cs2)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1  ==  cs2  ||  cs1!=  cs2)  {	  if(cs1    ==    cs2    ==    cs1)    {    	compilable	  [FE]  AssertionFailedError  	20	2	replace
79	[BUG]  [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1!=  null  ||  cs2)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1!=  null  ||  cs2)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	3	None	add
80	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1  ==  cs2  ||  cs1  ==  cs2)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	if(cs1  ==  cs2  ||  cs1  ==  cs2)  {	  if(cs1    ==    cs2    ==    cs1)    {    	compilable	  [FE]  AssertionFailedError  	20	1	replace
81	[BUG]  [BUGGY]  if(cs1  ==  cs2  ||  cs1  ==  cs2)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1  ==  cs2  ||  cs1  ==  cs2)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1  ==  cs2  ||  cs1  ==  cs2)  {	  if(cs1    ==    cs2    ==    cs1)    {    	compilable	  [FE]  AssertionFailedError  	20	1	replace
82	[BUG]  [BUGGY]  if(cs1  ==  cs2,  cs1)  {  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1  ==  cs2,  cs1)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1  ==  cs2,  cs1)  {	  if(cs1    ==    cs2    ==    cs1)    {    	non-compiled	[CE]  ')'  expected	20	None	replace
83	[BUG]  [BUGGY]  if(cs1  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1  ==  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1  ==  null)  {  return  false;  }	      if(cs1!=    null)    {    if(cs2    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	7	2	add
85	[BUG]  [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  true;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1    ==    null    ||    cs2    ==    null)    {    return    true;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	7	2	add
86	[BUG]  [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  >>  null  ||  cs2  ==  null)  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  true;  }  if(cs1  >>  null  ||  cs2  ==  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1!=    null    ||    cs2    ==    null)    {    return    true;    }    if(cs1  >>  null  ||  cs2  ==  null)  {  return  true;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	9	None	add
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
88	[BUG]  [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1    ==    null    ||    cs2    ==    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
89	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
90	[BUG]  [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  false;  }  if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1    ==    null    ||    cs2!=    null)    {    return    false;    }    if(cs2  ==  null  ||  cs1!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
91	[BUG]  [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  >>  null)  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1  ==  null  ||  cs2!=  null)  {  return  true;  }  if(cs1  ==  null  ||  cs2  >>  null)  {  return  true;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1    ==    null    ||    cs2!=    null)    {    return    true;    }    if(cs1  ==  null  ||  cs2  >>  null)  {  return  true;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	17	None	add
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1!=  cs2  ||  cs1!=  cs2)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	add	if(cs1!=  cs2  ||  cs1!=  cs2)  {	  if(cs1!=    cs2)    {    	compilable	  [FE]  AssertionFailedError  	14	2	replace
93	[BUG]  [BUGGY]  if(cs1!=  cs2  ||  cs1!=  cs2)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]  if(cs1!=  cs2  ||  cs1!=  cs2)  {  [BUGGY]    return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	if(cs1!=  cs2  ||  cs1!=  cs2)  {	  if(cs1!=    cs2)    {    	compilable	  [FE]  AssertionFailedError  	14	2	replace
94	[BUG]  [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  >>  null  ||  cs2  ==  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(CharSequence  cs1,  CharSequence  cs2)  {    [BUGGY]      if(cs1!=  null  ||  cs2  ==  null)  {  return  false;  }  if(cs1  >>  null  ||  cs2  ==  null)  {  return  false;  }  [BUGGY]    if  (cs1  ==  cs2)  {  return  true;  }  if  (cs1  ==  null  ||  cs2  ==  null)  {  return  false;  }  return  cs1.equals(cs2);  }  [CLASS]  StringUtils  InitStripAccents  [METHOD]  equals  [RETURN_TYPE]  boolean  CharSequence  cs1  CharSequence  cs2  [VARIABLES]  Pattern  WHITESPACE_BLOCK  java6Pattern  sunPattern  boolean  CharSequence  cs1  cs2  Throwable  java6Exception  sunException  Object  java6NormalizerFormNFD  String  EMPTY  input  result  str  stripChars  ts  Method  java6NormalizeMethod  sunDecomposeMethod  int  INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  	projects/Lang14/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	782	782	1	replace	        if(cs1!=    null    ||    cs2    ==    null)    {    return    false;    }    if(cs1  >>  null  ||  cs2  ==  null)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	3	None	add
