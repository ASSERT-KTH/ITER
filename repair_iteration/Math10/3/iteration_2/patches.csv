bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||(x  >  0  &&  x  <  =  0  &&  x  <  =  0));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  >  0  &&  x  <  =  0  &&  x  <  =  0));  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  >  0  &&  x  <  =  0  &&  x  <  =  0));	  ||(x    >    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
2	[BUG]  [BUGGY]  ||(x  <  0  &&  x  <  =  0  &&  x  <  =  0));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  0  &&  x  <  =  0  &&  x  <  =  0));  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  0  &&  x  <  =  0  &&  x  <  =  0));	  ||(x    >    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
3	[BUG]  [BUGGY]  ||(x  <  resultOffset  &&  x  <  =  xOffset));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  resultOffset  &&  x  <  =  xOffset));  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  resultOffset  &&  x  <  =  xOffset));	  ||(x    <    xOffset    &&    x    <    =    xOffset));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
4	[BUG]  [BUGGY]  ||(x  <  xOffset  &&  x  <  =  resultOffset));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  xOffset  &&  x  <  =  resultOffset));  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  xOffset  &&  x  <  =  resultOffset));	  ||(x    <    xOffset    &&    x    <    =    xOffset));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
5	[BUG]  [BUGGY]  ||(x  <  0  &&  x  <  2)||(x  >  xOffset  &&  x  <  2)||(x  >  xOffset  &&  x  <  1))  {  return;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  0  &&  x  <  2)||(x  >  xOffset  &&  x  <  2)||(x  >  xOffset  &&  x  <  1))  {  return;  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  0  &&  x  <  2)||(x  >  xOffset  &&  x  <  2)||(x  >  xOffset  &&  x  <  1))  {  return;	  ||(x    <    0    &&    x    <    2)||(x    >    xOffset    &&    x    <    2)||(x    >    xOffset    &&    x    <    2))    {    return;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
6	[BUG]  [BUGGY]  ||(x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&	  ||(x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
7	[BUG]  [BUGGY]  ||(x  <  =  xOffset  &&  x  <  =  yOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  =  xOffset  &&  x  <  =  yOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  =  xOffset  &&  x  <  =  yOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&	  ||(x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
8	[BUG]  [BUGGY]  x  =  Math.min(result,  xOffset,  resultOffset);  [CE]  no  suitable  method  found  for  min(double[],int,int)  [FE]            AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  x  =  Math.min(result,  xOffset,  resultOffset);  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	x  =  Math.min(result,  xOffset,  resultOffset);	  x    =    Math.min(resultOffset,    xOffset);    	non-compiled	[CE]  no  suitable  method  found  for  min(double[],int,int)	26	None	replace
9	[BUG]  [BUGGY]  x  =  Math.min(result1,  xOffset);  [CE]  cannot  find  symbol  result1  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  x  =  Math.min(result1,  xOffset);  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	x  =  Math.min(result1,  xOffset);	  x    =    Math.min(resultOffset,    xOffset);    	non-compiled	[CE]  cannot  find  symbol  result1	26	None	replace
10	[BUG]  [BUGGY]  ||(x  <  0  &&  x  <  2)||(x  >  0  &&  x  <  1))  {  return;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  0  &&  x  <  2)||(x  >  0  &&  x  <  1))  {  return;  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  0  &&  x  <  2)||(x  >  0  &&  x  <  1))  {  return;	  ||(x    <    0    &&    x    <    2)||(x    >    0    &&    x    <    2)||(x    >    0    &&    x    <    2))    {    return;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
11	[BUG]  [BUGGY]  ||(x  <  1  &&  x  <  2)||(x  >  1  &&  x  <  2)||(x  >  1  &&  x  <  2))  {  return;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  1  &&  x  <  2)||(x  >  1  &&  x  <  2)||(x  >  1  &&  x  <  2))  {  return;  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  1  &&  x  <  2)||(x  >  1  &&  x  <  2)||(x  >  1  &&  x  <  2))  {  return;	  ||(x    <    0    &&    x    <    2)||(x    >    0    &&    x    <    2)||(x    >    0    &&    x    <    2))    {    return;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
12	[BUG]  [BUGGY]  ||(x  <  =  xOffset  &&  x  <  =  xOffset));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  =  xOffset  &&  x  <  =  xOffset));  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  =  xOffset  &&  x  <  =  xOffset));	  ||(x    >    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset));    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
13	[BUG]  [BUGGY]  ||(x  >  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  >  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  >  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&	  ||(x    >    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0    &&    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
14	[BUG]  [BUGGY]  ||(x  <  0  &&  x  <  2)||(x  >  0  &&  x  <  1)||(x  >=  0  &&  x  <  2))  {  return;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  0  &&  x  <  2)||(x  >  0  &&  x  <  1)||(x  >=  0  &&  x  <  2))  {  return;  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  0  &&  x  <  2)||(x  >  0  &&  x  <  1)||(x  >=  0  &&  x  <  2))  {  return;	  ||(x    >    0    &&    x    <    2)||(x    >    0    &&    x    <    1)||(x    >    0    &&    x    <    2))    {    return;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
15	[BUG]  [BUGGY]  ||(x  <  0  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  0  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset));  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  0  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset));	  ||(x    >    0    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
16	[BUG]  [BUGGY]  ||(x  >=  0  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  >=  0  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset));  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  >=  0  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset));	  ||(x    >    0    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
17	[BUG]  [BUGGY]  ||(x  <  0  &&  x  <  2)||(x  >  resultOffset  &&  x  <  2))  {  return;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  0  &&  x  <  2)||(x  >  resultOffset  &&  x  <  2))  {  return;  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  0  &&  x  <  2)||(x  >  resultOffset  &&  x  <  2))  {  return;	  ||(x    <    0    &&    x    <    2)||(x    >    xOffset    &&    x    <    2))    {    return;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
18	[BUG]  [BUGGY]  ||(x  <  0  &&  x  <  2)||(x  >  tmp1  &&  x  <  2))  {  return;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  0  &&  x  <  2)||(x  >  tmp1  &&  x  <  2))  {  return;  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  0  &&  x  <  2)||(x  >  tmp1  &&  x  <  2))  {  return;	  ||(x    <    0    &&    x    <    2)||(x    >    xOffset    &&    x    <    2))    {    return;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
19	[BUG]  [BUGGY]  ||(x  >  0  &&  x  <  =  xOffset));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  >  0  &&  x  <  =  xOffset));  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  >  0  &&  x  <  =  xOffset));	  ||(x    >    resultOffset    &&    x    <    =    xOffset));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
20	[BUG]  [BUGGY]  ||(x  <  =  xOffset  &&  x  <  =  yOffset  &&  x  <  =  xOffset));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  =  xOffset  &&  x  <  =  yOffset  &&  x  <  =  xOffset));  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  =  xOffset  &&  x  <  =  yOffset  &&  x  <  =  xOffset));	  ||(x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
21	[BUG]  [BUGGY]  x  =  Math.min(result1,  resultOffset)/  xOffset;  [CE]  cannot  find  symbol  result1  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  x  =  Math.min(result1,  resultOffset)/  xOffset;  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	x  =  Math.min(result1,  resultOffset)/  xOffset;	  x    =    Math.min(resultOffset,    resultOffset)/    xOffset;    	non-compiled	[CE]  cannot  find  symbol  result1	9	None	replace
22	[BUG]  [BUGGY]  ||(x  >=  resultOffset  &&  x  <  =  xOffset));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  >=  resultOffset  &&  x  <  =  xOffset));  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  >=  resultOffset  &&  x  <  =  xOffset));	  ||(x    >=    xOffset    &&    x    <    =    xOffset));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
23	[BUG]  [BUGGY]  ||(x  >=  xOffset  &&  x  <  =  resultOffset));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  >=  xOffset  &&  x  <  =  resultOffset));  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  >=  xOffset  &&  x  <  =  resultOffset));	  ||(x    >=    xOffset    &&    x    <    =    xOffset));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
24	[BUG]  [BUGGY]  ||(x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&	  ||(x    >    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
25	[BUG]  [BUGGY]  ||(x  <  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0));  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0));	  ||(x    >    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
26	[BUG]  [BUGGY]  x  =  Math.min(resultOffset,  xOffset,  resultOffset);  [CE]  no  suitable  method  found  for  min(int,int,int)  [FE]            AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  x  =  Math.min(resultOffset,  xOffset,  resultOffset);  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	x  =  Math.min(resultOffset,  xOffset,  resultOffset);	  x    =    Math.min(resultOffset,    resultOffset,    xOffset);    	non-compiled	[CE]  no  suitable  method  found  for  min(int,int,int)	23	None	replace
27	[BUG]  [BUGGY]  ||(x  <  0  &&  x  <  2)||(x  >  0  &&  x  <  2))  {  return;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  0  &&  x  <  2)||(x  >  0  &&  x  <  2))  {  return;  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  0  &&  x  <  2)||(x  >  0  &&  x  <  2))  {  return;	  ||(x    >    0    &&    x    <    2)||(x    >    0    &&    x    <    2)||(x    >    0    &&    x    <    2))    {    return;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
28	[BUG]  [BUGGY]  ||(x  >  0  &&  x  <  2)||(x  >  0  &&  x  <  1))  {  return;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  >  0  &&  x  <  2)||(x  >  0  &&  x  <  1))  {  return;  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  >  0  &&  x  <  2)||(x  >  0  &&  x  <  1))  {  return;	  ||(x    >    0    &&    x    <    2)||(x    >    0    &&    x    <    2)||(x    >    0    &&    x    <    2))    {    return;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
29	[BUG]  [BUGGY]  x  =  Math.min(result1,  resultOffset)/  2;  [CE]  cannot  find  symbol  result1  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  x  =  Math.min(result1,  resultOffset)/  2;  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	x  =  Math.min(result1,  resultOffset)/  2;	  x    =    Math.min(resultOffset,    resultOffset)/    2;    	non-compiled	[CE]  cannot  find  symbol  result1	24	None	replace
30	[BUG]  [BUGGY]  x  =  Math.min(resultOffset,  xOffset)/  2;  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  x  =  Math.min(resultOffset,  xOffset)/  2;  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	x  =  Math.min(resultOffset,  xOffset)/  2;	  x    =    Math.min(resultOffset,    resultOffset)/    2;    	non-compiled	[CE]  incompatible  types	24	None	replace
31	[BUG]  [BUGGY]  ||(x  >  resultOffset  &&  x  <  xOffset));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  >  resultOffset  &&  x  <  xOffset));  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  >  resultOffset  &&  x  <  xOffset));	  ||(x    >    xOffset    &&    x    <    resultOffset));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
32	[BUG]  [BUGGY]  ||(x  <  xOffset  &&  x  <  resultOffset));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  xOffset  &&  x  <  resultOffset));  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  xOffset  &&  x  <  resultOffset));	  ||(x    >    xOffset    &&    x    <    resultOffset));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
33	[BUG]  [BUGGY]  ||(x  <  0  &&  x  <  =  xOffset  &&  x  <  =  xOffset));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  0  &&  x  <  =  xOffset  &&  x  <  =  xOffset));  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  0  &&  x  <  =  xOffset  &&  x  <  =  xOffset));	  ||(x    >    0    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
34	[BUG]  [BUGGY]  x  =  Math.min(result1,  xOffset)/  resultOffset;  [CE]  cannot  find  symbol  result1  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  x  =  Math.min(result1,  xOffset)/  resultOffset;  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	x  =  Math.min(result1,  xOffset)/  resultOffset;	  x    =    Math.min(resultOffset,    xOffset)/    resultOffset;    	non-compiled	[CE]  cannot  find  symbol  result1	8	None	replace
35	[BUG]  [BUGGY]  x  =  Math.min(result,  xOffset)/  resultOffset;  [CE]  no  suitable  method  found  for  min(double[],int)  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  x  =  Math.min(result,  xOffset)/  resultOffset;  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	x  =  Math.min(result,  xOffset)/  resultOffset;	  x    =    Math.min(resultOffset,    xOffset)/    resultOffset;    	non-compiled	[CE]  no  suitable  method  found  for  min(double[],int)	8	None	replace
36	[BUG]  [BUGGY]  ||(x  >  0  &&  x  <  2)||(x  >  0  &&  x  <  2))  {  return;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  >  0  &&  x  <  2)||(x  >  0  &&  x  <  2))  {  return;  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  >  0  &&  x  <  2)||(x  >  0  &&  x  <  2))  {  return;	  ||(x    >    xOffset    &&    x    <    2)||(x    >    xOffset    &&    x    <    2))    {    return;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
37	[BUG]  [BUGGY]  x  =  Math.min(result,  xOffset,  tmp1);  [CE]  no  suitable  method  found  for  min(double[],int,double[])  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  x  =  Math.min(result,  xOffset,  tmp1);  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	x  =  Math.min(result,  xOffset,  tmp1);	  x    =    Math.min(result,    xOffset);    	non-compiled	[CE]  no  suitable  method  found  for  min(double[],int,double[])	6	None	replace
38	[BUG]  [BUGGY]  ||(x  >  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  >  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  >  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =	  ||(x    >    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
39	[BUG]  [BUGGY]  ||(x  <  =  xOffset  &&  x  <  2)||(x  >  xOffset  &&  x  <  1))  {  return;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  =  xOffset  &&  x  <  2)||(x  >  xOffset  &&  x  <  1))  {  return;  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  =  xOffset  &&  x  <  2)||(x  >  xOffset  &&  x  <  1))  {  return;	  ||(x    >    xOffset    &&    x    <    2)||(x    >    xOffset    &&    x    <    1))    {    return;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
40	[BUG]  [BUGGY]  ||(x  >=  0  &&  x  <  =  0  &&  x  <  =  0));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  >=  0  &&  x  <  =  0  &&  x  <  =  0));  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  >=  0  &&  x  <  =  0  &&  x  <  =  0));	  ||(x    >    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
41	[BUG]  [BUGGY]  ||(x  >  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  >  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  >  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&	  ||(x    >    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
42	[BUG]  [BUGGY]  ||(x  >  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  >  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  >  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <	  ||(x    >    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
43	[BUG]  [BUGGY]  ||(x  <  0  &&  x  <  2)||(x  >  xOffset  &&  x  <  1))  {  return;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  0  &&  x  <  2)||(x  >  xOffset  &&  x  <  1))  {  return;  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  0  &&  x  <  2)||(x  >  xOffset  &&  x  <  1))  {  return;	  ||(x    <    0    &&    x    <    2)||(x    >    xOffset    &&    x    <    2))    {    return;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
44	[BUG]  [BUGGY]  x  =  Math.min(result,  resultOffset,  x);  [CE]  no  suitable  method  found  for  min(double[],int,double[])  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  x  =  Math.min(result,  resultOffset,  x);  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	x  =  Math.min(result,  resultOffset,  x);	  x    =    Math.min(result,    xOffset);    	non-compiled	[CE]  no  suitable  method  found  for  min(double[],int,double[])	6	None	replace
45	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  double[]  tmp2  =  new  double[getSize()  +  1];  [BUGGY]      multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	add	double[]  tmp2  =  new  double[getSize()  +  1];	  double[]    tmp2    =    new    double[getOffset()    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	3	replace
46	[BUG]  [BUGGY]  double[]  tmp2  =  new  double[getSize()  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  double[]  tmp2  =  new  double[getSize()  +  1];  [BUGGY]      multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	double[]  tmp2  =  new  double[getSize()  +  1];	  double[]    tmp2    =    new    double[getOffset()    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	3	replace
47	[BUG]  [BUGGY]  x  =  Math.min(resultOffset,  resultOffset)/  2  +  1;  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  x  =  Math.min(resultOffset,  resultOffset)/  2  +  1;  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	x  =  Math.min(resultOffset,  resultOffset)/  2  +  1;	  x    =    Math.min(resultOffset,    resultOffset)/    2;    	non-compiled	[CE]  incompatible  types	24	None	replace
48	[BUG]  [BUGGY]  ||(x  >  xOffset  &&  x  <  1)||(x  >  xOffset  &&  x  <  2))  {  return;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  >  xOffset  &&  x  <  1)||(x  >  xOffset  &&  x  <  2))  {  return;  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  >  xOffset  &&  x  <  1)||(x  >  xOffset  &&  x  <  2))  {  return;	  ||(x    >    xOffset    &&    x    <    2)||(x    >    xOffset    &&    x    <    2))    {    return;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
49	[BUG]  [BUGGY]  ||(x  >  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  >  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  >  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =	  ||(x    >    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
50	[BUG]  [BUGGY]  ||(x  >  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  >  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  >  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <	  ||(x    >    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
51	[BUG]  [BUGGY]  ||(x  <  0  &&  x  <  2)||(x  >  0  &&  x  >=  1)||(x  >  0  &&  x  <  2))  {  return;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  0  &&  x  <  2)||(x  >  0  &&  x  >=  1)||(x  >  0  &&  x  <  2))  {  return;  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  0  &&  x  <  2)||(x  >  0  &&  x  >=  1)||(x  >  0  &&  x  <  2))  {  return;	  ||(x    <    0    &&    x    <    2)||(x    >    0    &&    x    <    1)||(x    >    0    &&    x    <    2))    {    return;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
52	[BUG]  [BUGGY]  ||(x  >=  0  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  >=  0  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset));  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  >=  0  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset));	  ||(x    >    0    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
53	[BUG]  [BUGGY]  ||(x  >  0  &&  x  <  resultOffset));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  >  0  &&  x  <  resultOffset));  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  >  0  &&  x  <  resultOffset));	  ||(x    >    xOffset    &&    x    <    resultOffset));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
54	[BUG]  [BUGGY]  ||(x  >=  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  >=  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0));  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  >=  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0));	  ||(x    >    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
55	[BUG]  [BUGGY]  ||(x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  yOffset  &&  x  <  =  xOffset  &&  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  yOffset  &&  x  <  =  xOffset  &&  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  yOffset  &&  x  <  =  xOffset  &&	  ||(x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
56	[BUG]  [BUGGY]  ||(x  <  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =	  ||(x    >    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
57	[BUG]  [BUGGY]  ||(x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =  xOffset  &&  x  <  =	  ||(x    >    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
58	[BUG]  [BUGGY]  ||(x  <  xOffset  &&  x  <  2)||(x  >  xOffset  &&  x  <  2))  {  return;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  xOffset  &&  x  <  2)||(x  >  xOffset  &&  x  <  2))  {  return;  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  xOffset  &&  x  <  2)||(x  >  xOffset  &&  x  <  2))  {  return;	  ||(x    >    xOffset    &&    x    <    2)||(x    >    xOffset    &&    x    <    2))    {    return;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
59	[BUG]  [BUGGY]  ||(x  <  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  <  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  <  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&  x  <  =  0  &&	  ||(x    >    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0    &&    x    <    =    0    &&    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
60	[BUG]  [BUGGY]  ||(x  >  0  &&  x  <  =  xOffset  &&  x  <  =  xOffset));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  >  0  &&  x  <  =  xOffset  &&  x  <  =  xOffset));  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  >  0  &&  x  <  =  xOffset  &&  x  <  =  xOffset));	  ||(x    >    0    &&    x    <    =    xOffset    &&    x    <    =    xOffset    &&    x    <    =    xOffset));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
61	[BUG]  [BUGGY]  ||(x  >  xOffset  &&  x  <  1))  {  return;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];  multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2      [BUGGY]  ||(x  >  xOffset  &&  x  <  1))  {  return;  [BUGGY]      double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  atan(tmp1,  0,  tmp2,  0);  //  atan(y  /  (r  +  x))  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1389	1389	1	replace	||(x  >  xOffset  &&  x  <  1))  {  return;	  ||(x    >    xOffset    &&    x    <    2)||(x    >    xOffset    &&    x    <    1))    {    return;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
