bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  lhsOffset  =  getLowerSize()  +  1;  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  int  lhsOffset  =  getLowerSize()  +  1;  [BUGGY]      final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	int  lhsOffset  =  getLowerSize()  +  1;	  int    lhsOffset    =    getLowerSize();    	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	5	None	replace
2	[BUG]  [BUGGY]  final  double[]  reciprocal  =  new  double[lhsOffset.getSize()  +  1];  [CE]  int  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  final  double[]  reciprocal  =  new  double[lhsOffset.getSize()  +  1];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	final  double[]  reciprocal  =  new  double[lhsOffset.getSize()  +  1];	  final    double[]    reciprocal    =    new    double[lhsOffset.getSize()    ];    	non-compiled	[CE]  int  cannot  be  dereferenced	4	None	replace
3	[BUG]  [BUGGY]  final  double[]  reciprocal  =  new  double[resultOffset()  +  1];  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  final  double[]  reciprocal  =  new  double[resultOffset()  +  1];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	final  double[]  reciprocal  =  new  double[resultOffset()  +  1];	  final    double[]    reciprocal    =    new    double[resultOffset()    ];    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
4	[BUG]  [BUGGY]  final  double[]  reciprocal  =  new  double[lhs.length()  ];  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  final  double[]  reciprocal  =  new  double[lhs.length()  ];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	final  double[]  reciprocal  =  new  double[lhs.length()  ];	  final    double[]    reciprocal    =    new    double[resultOffset()    ];    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
5	[BUG]  [BUGGY]  int  lhsOffset  =  getLowerBound()  +  1;  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  int  lhsOffset  =  getLowerBound()  +  1;  [BUGGY]      final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	int  lhsOffset  =  getLowerBound()  +  1;	  int    lhsOffset    =    getLowerBound();    	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	6	None	replace
6	[BUG]  [BUGGY]  final  double[]  reciprocal  =  new  double[getColumnSize()  +  1];  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  final  double[]  reciprocal  =  new  double[getColumnSize()  +  1];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	final  double[]  reciprocal  =  new  double[getColumnSize()  +  1];	  final    double[]    reciprocal    =    new    double[getColumnSize()    ];    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
7	[BUG]  [BUGGY]  Pow(lhs,  lhsOffset,  -1,  result,  resultOffset);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  Pow(lhs,  lhsOffset,  -1,  result,  resultOffset);  [BUGGY]      final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	Pow(lhs,  lhsOffset,  -1,  result,  resultOffset);	  Pow(lhs,    rhsOffset,    -1,    result,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
8	[BUG]  [BUGGY]  final  double[]  reciprocal  =  new  double[lhs.getSize()  +  1];  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  final  double[]  reciprocal  =  new  double[lhs.getSize()  +  1];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	final  double[]  reciprocal  =  new  double[lhs.getSize()  +  1];	  final    double[]    reciprocal    =    new    double[lhs.getSize()    ];    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
9	[BUG]  [BUGGY]  final  double[]  reciprocal  =  new  double[lhs.length  ];  final  double[]  reciprocal  =  new  double[lhs.length  ];  [CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  final  double[]  reciprocal  =  new  double[lhs.length  ];  final  double[]  reciprocal  =  new  double[lhs.length  ];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	final    double[]    reciprocal    =    new    double[lhs.length    ];    final  double[]  reciprocal  =  new  double[lhs.length  ];	  	non-compiled	[CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	15	None	add
10	[BUG]  [BUGGY]  final  double[]  reciprocal  =  new  double[lhs.length  ];  Final  double[]  reciprocal  =  new  double[lhs.length  ];  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  final  double[]  reciprocal  =  new  double[lhs.length  ];  Final  double[]  reciprocal  =  new  double[lhs.length  ];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	final    double[]    reciprocal    =    new    double[lhs.length    ];    Final  double[]  reciprocal  =  new  double[lhs.length  ];	  	non-compiled	[CE]  not  a  statement	15	None	add
11	[BUG]  [BUGGY]  final  double[]  reciprocal  =  new  double[lhs.getReal()  ];  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  final  double[]  reciprocal  =  new  double[lhs.getReal()  ];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	final  double[]  reciprocal  =  new  double[lhs.getReal()  ];	  final    double[]    reciprocal    =    new    double[resultOffset.getReal()    ];    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
12	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  final  double[]  reciprocal  =  new  double[lhs.length  -  1];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	add	final  double[]  reciprocal  =  new  double[lhs.length  -  1];	  final    double[]    reciprocal    =    new    double[lhs.length    ];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	8	replace
13	[BUG]  [BUGGY]  final  double[]  reciprocal  =  new  double[lhs.length  -  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  final  double[]  reciprocal  =  new  double[lhs.length  -  1];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	final  double[]  reciprocal  =  new  double[lhs.length  -  1];	  final    double[]    reciprocal    =    new    double[lhs.length    ];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	8	replace
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  final  double[]  reciprocal  =  new  double[lhs.length  +  1];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	add	final  double[]  reciprocal  =  new  double[lhs.length  +  1];	  final    double[]    reciprocal    =    new    double[lhs.length    ];    	compilable	  [FE]  AssertionError  	16	1	replace
15	[BUG]  [BUGGY]  final  double[]  reciprocal  =  new  double[lhs.length  +  1];  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  final  double[]  reciprocal  =  new  double[lhs.length  +  1];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	final  double[]  reciprocal  =  new  double[lhs.length  +  1];	  final    double[]    reciprocal    =    new    double[lhs.length    ];    	compilable	  [FE]  AssertionError  	16	1	replace
16	[BUG]  [BUGGY]  int  lhsOffset  =  getLength()  +  1;  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  int  lhsOffset  =  getLength()  +  1;  [BUGGY]      final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	int  lhsOffset  =  getLength()  +  1;	  int    lhsOffset    =    getLength();    	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	22	None	replace
17	[BUG]  [BUGGY]  Pow(lhs,  rhsOffset,  0,  result,  lhsOffset);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  Pow(lhs,  rhsOffset,  0,  result,  lhsOffset);  [BUGGY]      final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	Pow(lhs,  rhsOffset,  0,  result,  lhsOffset);	  Pow(lhs,    lhsOffset,    0,    result,    rhsOffset);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
18	[BUG]  [BUGGY]  Pow(rhs,  lhsOffset,  0,  result,  rhsOffset);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  Pow(rhs,  lhsOffset,  0,  result,  rhsOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	Pow(rhs,  lhsOffset,  0,  result,  rhsOffset);	  Pow(rhs,    lhsOffset,    0,    result,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
19	[BUG]  [BUGGY]  Pow(lhs,  lhsOffset,  rhs,  resultOffset,  0);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  Pow(lhs,  lhsOffset,  rhs,  resultOffset,  0);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	Pow(lhs,  lhsOffset,  rhs,  resultOffset,  0);	  Pow(lhs,    lhsOffset,    rhs,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
20	[BUG]  [BUGGY]  Pow(lhs,  rhs,  lhsOffset,  resultOffset);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  Pow(lhs,  rhs,  lhsOffset,  resultOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	Pow(lhs,  rhs,  lhsOffset,  resultOffset);	  Pow(lhs,    lhsOffset,    rhs,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
21	[BUG]  [BUGGY]  final  double[]  reciprocal  =  new  double[getRowSize()  /  1];  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  final  double[]  reciprocal  =  new  double[getRowSize()  /  1];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	final  double[]  reciprocal  =  new  double[getRowSize()  /  1];	  final    double[]    reciprocal    =    new    double[getRowSize()    +    1];    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
22	[BUG]  [BUGGY]  int[][]  lhs  =  getLeftCase();  [CE]  variable  lhs  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  int[][]  lhs  =  getLeftCase();  [BUGGY]      final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	int[][]  lhs  =  getLeftCase();	  int[][]    lhs    =    getUpperCase();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	9	None	replace
23	[BUG]  [BUGGY]  Pow(lhs,  lhsOffset,  rhs,  result,  resultOffset  +  1);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  Pow(lhs,  lhsOffset,  rhs,  result,  resultOffset  +  1);  [BUGGY]      final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	Pow(lhs,  lhsOffset,  rhs,  result,  resultOffset  +  1);	  Pow(lhs,    lhsOffset,    rhs,    result,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
24	[BUG]  [BUGGY]  final  double[]  reciprocal  =  new  double[getReal()  /  1];  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  final  double[]  reciprocal  =  new  double[getReal()  /  1];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	final  double[]  reciprocal  =  new  double[getReal()  /  1];	  final    double[]    reciprocal    =    new    double[getReal()    +    1];    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
25	[BUG]  [BUGGY]  Pow(lhs,  rhs,  0,  resultOffset);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  Pow(lhs,  rhs,  0,  resultOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	Pow(lhs,  rhs,  0,  resultOffset);	  Pow(lhs,    lhsOffset,    0,    result);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
26	[BUG]  [BUGGY]  Pow(lhs,  rhsOffset,  0,  result);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  Pow(lhs,  rhsOffset,  0,  result);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	Pow(lhs,  rhsOffset,  0,  result);	  Pow(lhs,    lhsOffset,    0,    result);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
27	[BUG]  [BUGGY]  int  lhsOffset  =  getUpperBound();  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  int  lhsOffset  =  getUpperBound();  [BUGGY]      final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	int  lhsOffset  =  getUpperBound();	  int    lhsOffset    =    getLowerBound();    	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	6	None	replace
28	[BUG]  [BUGGY]  final  double[]  reciprocal  =  new  double[resultOffset()  +  lhs.length  ];  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  final  double[]  reciprocal  =  new  double[resultOffset()  +  lhs.length  ];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	final  double[]  reciprocal  =  new  double[resultOffset()  +  lhs.length  ];	  final    double[]    reciprocal    =    new    double[resultOffset()    ];    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
29	[BUG]  [BUGGY]  final  double[]  reciprocal  =  new  double[lhsOffset.getReal()  ];  [CE]  int  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  final  double[]  reciprocal  =  new  double[lhsOffset.getReal()  ];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	final  double[]  reciprocal  =  new  double[lhsOffset.getReal()  ];	  final    double[]    reciprocal    =    new    double[resultOffset.getReal()    ];    	non-compiled	[CE]  int  cannot  be  dereferenced	20	None	replace
30	[BUG]  [BUGGY]  Pow(lhs,  rhsOffset,  rhs,  result,  rhsOffset);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  Pow(lhs,  rhsOffset,  rhs,  result,  rhsOffset);  [BUGGY]      final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	Pow(lhs,  rhsOffset,  rhs,  result,  rhsOffset);	  Pow(lhs,    rhsOffset,    lhs,    result,    rhsOffset);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
31	[BUG]  [BUGGY]  Pow(lhs,  rhsOffset,  0,  result,  rhsOffset);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  Pow(lhs,  rhsOffset,  0,  result,  rhsOffset);  [BUGGY]      final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	Pow(lhs,  rhsOffset,  0,  result,  rhsOffset);	  Pow(lhs,    rhsOffset,    lhs,    result,    rhsOffset);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
32	[BUG]  [BUGGY]  Pow(lhs,  lhsOffset,  rhs,  result,  0,  resultOffset);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  Pow(lhs,  lhsOffset,  rhs,  result,  0,  resultOffset);  [BUGGY]      final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	Pow(lhs,  lhsOffset,  rhs,  result,  0,  resultOffset);	  Pow(lhs,    lhsOffset,    rhs,    result,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
33	[BUG]  [BUGGY]  final  double[]  reciprocal  =  new  double[lhsOffset()  ];  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  final  double[]  reciprocal  =  new  double[lhsOffset()  ];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	final  double[]  reciprocal  =  new  double[lhsOffset()  ];	  final    double[]    reciprocal    =    new    double[resultOffset()    ];    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
34	[BUG]  [BUGGY]  Pow(lhs,  lhsOffset,  -1,  rhsOffset);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {      [BUGGY]  Pow(lhs,  lhsOffset,  -1,  rhsOffset);  [BUGGY]      final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	796	796	1	replace	Pow(lhs,  lhsOffset,  -1,  rhsOffset);	  Pow(lhs,    rhs,    -1,    lhsOffset,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
