bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  [BUGGY]  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	798	798	1	add	    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);		compilable	  [FE]  AssertionError  	77	1	add
2	[BUG]  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  [BUGGY]  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	798	798	1	replace	    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);		compilable	  [FE]  AssertionError  	77	1	add
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  [BUGGY]    pow(rhs,  lhsOffset,  0,  result,  resultOffset);  [BUGGY]  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	798	798	1	add	    pow(rhs,  lhsOffset,  0,  result,  resultOffset);		compilable	  [FE]  AssertionError  	77	1	add
4	[BUG]  [BUGGY]    pow(rhs,  lhsOffset,  0,  result,  resultOffset);  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  [BUGGY]    pow(rhs,  lhsOffset,  0,  result,  resultOffset);  [BUGGY]  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	798	798	1	replace	    pow(rhs,  lhsOffset,  0,  result,  resultOffset);		compilable	  [FE]  AssertionError  	77	1	add
5	[BUG]  [BUGGY]    Pow(rhs,  lhsOffset,  0,  result,  resultOffset);  [CE]  cannot  find  symbol  [FE]        AssertionError  [CONTEXT]  public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  [BUGGY]    Pow(rhs,  lhsOffset,  0,  result,  resultOffset);  [BUGGY]  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	798	798	1	replace	    Pow(rhs,  lhsOffset,  0,  result,  resultOffset);		non-compiled	[CE]  cannot  find  symbol	77	None	add
6	[BUG]  [BUGGY]  multiply(lhs,  rhs,  lhsOffset,  0,  result,  resultOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]    AssertionError  [CONTEXT]  public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  [BUGGY]  multiply(lhs,  rhs,  lhsOffset,  0,  result,  resultOffset);  [BUGGY]  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	798	798	1	replace	multiply(lhs,  rhs,  lhsOffset,  0,  result,  resultOffset);	multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	76	None	replace
7	[BUG]  [BUGGY]  multiply(lhs,  rhs,  lhsOffset,  0,  resultOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]      AssertionError  [CONTEXT]  public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  [BUGGY]  multiply(lhs,  rhs,  lhsOffset,  0,  resultOffset);  [BUGGY]  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	798	798	1	replace	multiply(lhs,  rhs,  lhsOffset,  0,  resultOffset);	multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	76	None	replace
8	[BUG]  [BUGGY]    double[]  reciprocal  =  new  double[getSize()  ];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  [CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]    AssertionError  [CONTEXT]  public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  [BUGGY]    double[]  reciprocal  =  new  double[getSize()  ];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  [BUGGY]  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	798	798	1	replace	    double[]  reciprocal  =  new  double[getSize()  ];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);		non-compiled	[CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	77	None	add
9	[BUG]  [BUGGY]    double[]  reciprocal  =  new  double[getSize()  ];  pow(rhs,  lhsOffset,  0,  result);  [CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]      AssertionError  [CONTEXT]  public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  [BUGGY]    double[]  reciprocal  =  new  double[getSize()  ];  pow(rhs,  lhsOffset,  0,  result);  [BUGGY]  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	798	798	1	replace	    double[]  reciprocal  =  new  double[getSize()  ];  pow(rhs,  lhsOffset,  0,  result);		non-compiled	[CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	77	None	add
10	[BUG]  [BUGGY]    double[]  reciprocal  =  new  double[getSize()  ];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0,  0);  [CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]        AssertionError  [CONTEXT]  public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  [BUGGY]    double[]  reciprocal  =  new  double[getSize()  ];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0,  0);  [BUGGY]  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	798	798	1	replace	    double[]  reciprocal  =  new  double[getSize()  ];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0,  0);		non-compiled	[CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	77	None	add
11	[BUG]  [BUGGY]  multiply(lhs,  rhsOffset,  0,  result,  lhsOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]    AssertionError  [CONTEXT]  public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  [BUGGY]  multiply(lhs,  rhsOffset,  0,  result,  lhsOffset);  [BUGGY]  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	798	798	1	replace	multiply(lhs,  rhsOffset,  0,  result,  lhsOffset);	multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	76	None	replace
12	[BUG]  [BUGGY]    if(relativeOrder  ==  null)  {  for(int  i  =  0;  i  <  lhs.length;  ++i)  {  multiplie(lhs[i],  rhs[i],  rhs[i]);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  [BUGGY]    if(relativeOrder  ==  null)  {  for(int  i  =  0;  i  <  lhs.length;  ++i)  {  multiplie(lhs[i],  rhs[i],  rhs[i]);  }  [BUGGY]  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	798	798	1	replace	    if(relativeOrder  ==  null)  {  for(int  i  =  0;  i  <  lhs.length;  ++i)  {  multiplie(lhs[i],  rhs[i],  rhs[i]);  }		non-compiled	[CE]  illegal  start  of  expression	77	None	add
13	[BUG]  [BUGGY]    if(relativeOrder  ==  null)  {  for(int  i  =  0;  i  <  lhsOffset;  ++i)  {  multiplie(lhs,  lhsOffset,  rhs,  result);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  [BUGGY]    if(relativeOrder  ==  null)  {  for(int  i  =  0;  i  <  lhsOffset;  ++i)  {  multiplie(lhs,  lhsOffset,  rhs,  result);  }  [BUGGY]  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	798	798	1	replace	    if(relativeOrder  ==  null)  {  for(int  i  =  0;  i  <  lhsOffset;  ++i)  {  multiplie(lhs,  lhsOffset,  rhs,  result);  }		non-compiled	[CE]  illegal  start  of  expression	77	None	add
14	[BUG]  [BUGGY]    if(relativeOrder  ==  null)  {  for(int  i  =  0;  i  <  lhs.length;  ++i)  {  multiplie(lhs[i],  rhs[i],  rhs[i],  rhs[i]  [CE]  ')'  expected  [FE]        AssertionError  [CONTEXT]  public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  [BUGGY]    if(relativeOrder  ==  null)  {  for(int  i  =  0;  i  <  lhs.length;  ++i)  {  multiplie(lhs[i],  rhs[i],  rhs[i],  rhs[i]  [BUGGY]  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	798	798	1	replace	    if(relativeOrder  ==  null)  {  for(int  i  =  0;  i  <  lhs.length;  ++i)  {  multiplie(lhs[i],  rhs[i],  rhs[i],  rhs[i]		non-compiled	[CE]  ')'  expected	77	None	add
15	[BUG]  [BUGGY]  multiply(lhs,  rhsOffset,  0,  result,  resultOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]    AssertionError  [CONTEXT]  public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  [BUGGY]  multiply(lhs,  rhsOffset,  0,  result,  resultOffset);  [BUGGY]  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	798	798	1	replace	multiply(lhs,  rhsOffset,  0,  result,  resultOffset);	multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	76	None	replace
16	[BUG]  [BUGGY]  multiply(lhs,  rhsOffset,  result,  0,  lhsOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]      AssertionError  [CONTEXT]  public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  [BUGGY]  multiply(lhs,  rhsOffset,  result,  0,  lhsOffset);  [BUGGY]  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	798	798	1	replace	multiply(lhs,  rhsOffset,  result,  0,  lhsOffset);	multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	76	None	replace
