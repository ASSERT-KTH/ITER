bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]      double[]  x1  =  new  double[getSize()  +  1];  double[]  x1  =  new  double[getSize()  +  1];  [CE]  variable  x1  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]      double[]  x1  =  new  double[getSize()  +  1];  double[]  x1  =  new  double[getSize()  +  1];  [BUGGY]    multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	        double[]    x1    =    new    double[getSize()    +    1];    double[]  x1  =  new  double[getSize()  +  1];	  	non-compiled	[CE]  variable  x1  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	7	None	add
2	[BUG]  [BUGGY]      double[]  x1  =  new  double[getSize()  +  1];  Double[]  x1  =  new  double[getSize()  +  1];  [CE]  variable  x1  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]      AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]      double[]  x1  =  new  double[getSize()  +  1];  Double[]  x1  =  new  double[getSize()  +  1];  [BUGGY]    multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	        double[]    x1    =    new    double[getSize()    +    1];    Double[]  x1  =  new  double[getSize()  +  1];	  	non-compiled	[CE]  variable  x1  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	7	None	add
3	[BUG]  [BUGGY]      double[]  x1  =  new  double[getSize()  +  1];  []  x1  =  new  double[getSize()  +  1];  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]      double[]  x1  =  new  double[getSize()  +  1];  []  x1  =  new  double[getSize()  +  1];  [BUGGY]    multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	        double[]    x1    =    new    double[getSize()    +    1];    []  x1  =  new  double[getSize()  +  1];	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
4	[BUG]  [BUGGY]  double[]  x  =  new  double[getOffset()  ];  [CE]  variable  x  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]        AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  x  =  new  double[getOffset()  ];  [BUGGY]    double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]  x  =  new  double[getOffset()  ];	  double[]    x    =    new    double[getSize()    ];    	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	9	None	replace
5	[BUG]  [BUGGY]      double[]  x1  =  new  double[getSize()  ];  double[]  x1  =  new  double[getSize()  ];  [CE]  variable  x1  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]      double[]  x1  =  new  double[getSize()  ];  double[]  x1  =  new  double[getSize()  ];  [BUGGY]    multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	        double[]    x1    =    new    double[getSize()    ];    double[]  x1  =  new  double[getSize()  ];	  	non-compiled	[CE]  variable  x1  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	5	None	add
6	[BUG]  [BUGGY]      double[]  x1  =  new  double[getSize()  ];  Double[]  x1  =  new  double[getSize()  ];  [CE]  variable  x1  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]      AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]      double[]  x1  =  new  double[getSize()  ];  Double[]  x1  =  new  double[getSize()  ];  [BUGGY]    multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	        double[]    x1    =    new    double[getSize()    ];    Double[]  x1  =  new  double[getSize()  ];	  	non-compiled	[CE]  variable  x1  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	5	None	add
7	[BUG]  [BUGGY]      double[]  x1  =  new  double[getSize()  ];  []  x1  =  new  double[getSize()  ];  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]      double[]  x1  =  new  double[getSize()  ];  []  x1  =  new  double[getSize()  ];  [BUGGY]    multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	        double[]    x1    =    new    double[getSize()    ];    []  x1  =  new  double[getSize()  ];	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
8	[BUG]  [BUGGY]  double[]  tmp1  =  new  double[resultOffset()];  [CE]  variable  tmp1  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]        AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  tmp1  =  new  double[resultOffset()];  [BUGGY]    double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]  tmp1  =  new  double[resultOffset()];	  double[]    tmp1    =    new    double[getSize()];    	non-compiled	[CE]  variable  tmp1  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	14	None	replace
9	[BUG]  [BUGGY]  double[]  tmp1  =  new  double[getOffset()];  [CE]  variable  tmp1  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]          AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  tmp1  =  new  double[getOffset()];  [BUGGY]    double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]  tmp1  =  new  double[getOffset()];	  double[]    tmp1    =    new    double[getSize()];    	non-compiled	[CE]  variable  tmp1  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	14	None	replace
10	[BUG]  [BUGGY]  double[]  x1  =  new  double[getOffset()  ];  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  x1  =  new  double[getOffset()  ];  [BUGGY]    multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]  x1  =  new  double[getOffset()  ];	      double[]    x1    =    new    double[getSize()    ];    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
11	[BUG]  [BUGGY]  double[]  x1  =  new  double[getX()  ];  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  x1  =  new  double[getX()  ];  [BUGGY]    multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]  x1  =  new  double[getX()  ];	      double[]    x1    =    new    double[getSize()    ];    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
12	[BUG]  [BUGGY]  double[]  x  =  new  double[getSize()  +  getY()];  [CE]  variable  x  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]        AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  x  =  new  double[getSize()  +  getY()];  [BUGGY]    multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]  x  =  new  double[getSize()  +  getY()];	      double[]    x    =    new    double[getSize()    +    getX()];    	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	10	None	replace
13	[BUG]  [BUGGY]  double[]  x  =  new  double[getSize()  +  resultOffset];  [CE]  variable  x  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]          AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  x  =  new  double[getSize()  +  resultOffset];  [BUGGY]    multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]  x  =  new  double[getSize()  +  resultOffset];	      double[]    x    =    new    double[getSize()    +    getX()];    	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	10	None	replace
14	[BUG]  [BUGGY]  double[]  x  =  new  double[getX()  +  1];  [CE]  variable  x  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]          AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  x  =  new  double[getX()  +  1];  [BUGGY]    multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]  x  =  new  double[getX()  +  1];	      double[]    x    =    new    double[getX()    ];    	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	12	None	replace
15	[BUG]  [BUGGY]  int  x  =  getX()  +  resultOffset;  [CE]  variable  x  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]            AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  int  x  =  getX()  +  resultOffset;  [BUGGY]    multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	int  x  =  getX()  +  resultOffset;	      int    x    =    getX();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	13	None	replace
16	[BUG]  [BUGGY]  int  x  =  getX()  -  resultOffset;  [CE]  variable  x  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]              AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  int  x  =  getX()  -  resultOffset;  [BUGGY]    multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	int  x  =  getX()  -  resultOffset;	      int    x    =    getX();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	13	None	replace
17	[BUG]  [BUGGY]  double[]  x  =  new  double[getX()  +  resultOffset];  [CE]  variable  x  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]        AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  x  =  new  double[getX()  +  resultOffset];  [BUGGY]    multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]  x  =  new  double[getX()  +  resultOffset];	      double[]    x    =    new    double[getX()    +    getSize()];    	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	11	None	replace
18	[BUG]  [BUGGY]  double[]  x  =  new  double[getX()  +  getY()];  [CE]  variable  x  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]          AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  x  =  new  double[getX()  +  getY()];  [BUGGY]    multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]  x  =  new  double[getX()  +  getY()];	      double[]    x    =    new    double[getX()    +    getSize()];    	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	11	None	replace
19	[BUG]  [BUGGY]  double[]  tmp1  =  new  double[getSize()  +  1];  [CE]  variable  tmp1  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]          AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  tmp1  =  new  double[getSize()  +  1];  [BUGGY]    double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]  tmp1  =  new  double[getSize()  +  1];	      	non-compiled	[CE]  variable  tmp1  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	3	None	replace
20	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  tmp2  =  new  double[getSize()  +  1];  [BUGGY]    double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	add	double[]  tmp2  =  new  double[getSize()  +  1];	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	3	replace
21	[BUG]  [BUGGY]  double[]  tmp2  =  new  double[getSize()  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  tmp2  =  new  double[getSize()  +  1];  [BUGGY]    double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]  tmp2  =  new  double[getSize()  +  1];	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	3	replace
22	[BUG]  [BUGGY]  double[]  tmp2  =  new  double[getOffset()];  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  tmp2  =  new  double[getOffset()];  [BUGGY]    double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]  tmp2  =  new  double[getOffset()];	  double[]    tmp2    =    new    double[getSize()];    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  final  double[]  tmp2  =  new  double[getSize()];  [BUGGY]    double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	add	final  double[]  tmp2  =  new  double[getSize()];	  double[]    tmp2    =    new    double[getSize()];    	compilable	  [FE]  AssertionError  	2	3	replace
24	[BUG]  [BUGGY]  final  double[]  tmp2  =  new  double[getSize()];  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  final  double[]  tmp2  =  new  double[getSize()];  [BUGGY]    double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	final  double[]  tmp2  =  new  double[getSize()];	  double[]    tmp2    =    new    double[getSize()];    	compilable	  [FE]  AssertionError  	2	3	replace
25	[BUG]  [BUGGY]  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  [CE]  variable  tmp2  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  [BUGGY]    double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]    tmp2    =    new    double[getSize()];    double[]  tmp2  =  new  double[getSize()];	  	non-compiled	[CE]  variable  tmp2  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	1	None	add
26	[BUG]  [BUGGY]  double[]  tmp2  =  new  double[getSize()];  []  tmp2  =  new  double[getSize()];  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  tmp2  =  new  double[getSize()];  []  tmp2  =  new  double[getSize()];  [BUGGY]    double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]    tmp2    =    new    double[getSize()];    []  tmp2  =  new  double[getSize()];	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
27	[BUG]  [BUGGY]  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getOffset()];  [CE]  variable  tmp2  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]        AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getOffset()];  [BUGGY]    double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]    tmp2    =    new    double[getSize()];    double[]  tmp2  =  new  double[getOffset()];	  	non-compiled	[CE]  variable  tmp2  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	1	None	add
28	[BUG]  [BUGGY]  []  x1  =  new  double[getSize()];  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  []  x1  =  new  double[getSize()];  [BUGGY]    multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	[]  x1  =  new  double[getSize()];	      double[]    x1    =    new    double[getSize()    +    1];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  tmp2  =  new  double[resultOffset  +  getSize()];  [BUGGY]    double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	add	double[]  tmp2  =  new  double[resultOffset  +  getSize()];	  double[]    tmp2    =    new    double[getSize()];    	compilable	  [FE]  AssertionError  	2	3	replace
30	[BUG]  [BUGGY]  double[]  tmp2  =  new  double[resultOffset  +  getSize()];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  tmp2  =  new  double[resultOffset  +  getSize()];  [BUGGY]    double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]  tmp2  =  new  double[resultOffset  +  getSize()];	  double[]    tmp2    =    new    double[getSize()];    	compilable	  [FE]  AssertionError  	2	3	replace
31	[BUG]  [BUGGY]      double[]  x1  =  new  double[getSize()  +  1];  int  xOffset  =  getSize()  +  1;  [CE]  variable  xOffset  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]      double[]  x1  =  new  double[getSize()  +  1];  int  xOffset  =  getSize()  +  1;  [BUGGY]    multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	        double[]    x1    =    new    double[getSize()    +    1];    int  xOffset  =  getSize()  +  1;	  	non-compiled	[CE]  variable  xOffset  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	7	None	add
32	[BUG]  [BUGGY]  double[]  x  =  new  double[getX()  +  getX()];  [CE]  variable  x  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]        AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  x  =  new  double[getX()  +  getX()];  [BUGGY]    multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]  x  =  new  double[getX()  +  getX()];	      double[]    x    =    new    double[getSize()    +    getX()];    	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	10	None	replace
33	[BUG]  [BUGGY]  double[]  tmp2  =  new  double[getSize()];  Double[]  tmp2  =  new  double[getSize()];  [CE]  variable  tmp2  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  tmp2  =  new  double[getSize()];  Double[]  tmp2  =  new  double[getSize()];  [BUGGY]    double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]    tmp2    =    new    double[getSize()];    Double[]  tmp2  =  new  double[getSize()];	  	non-compiled	[CE]  variable  tmp2  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	1	None	add
34	[BUG]  [BUGGY]  double[]  tmp2  =  new  double[getSize()];  int[]  tmp2  =  new  double[getSize()];  [CE]  variable  tmp2  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]      AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  tmp2  =  new  double[getSize()];  int[]  tmp2  =  new  double[getSize()];  [BUGGY]    double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]    tmp2    =    new    double[getSize()];    int[]  tmp2  =  new  double[getSize()];	  	non-compiled	[CE]  variable  tmp2  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	1	None	add
35	[BUG]  [BUGGY]      double[]  x1  =  new  double[getSize()  ];  double[]  x1  =  new  double[getSize()  *  ];  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]      double[]  x1  =  new  double[getSize()  ];  double[]  x1  =  new  double[getSize()  *  ];  [BUGGY]    multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	        double[]    x1    =    new    double[getSize()    ];    double[]  x1  =  new  double[getSize()  *  ];	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
36	[BUG]  [BUGGY]  double[]  tmp1  =  new  double[getTicks()];  [CE]  variable  tmp1  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]        AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  tmp1  =  new  double[getTicks()];  [BUGGY]    double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]  tmp1  =  new  double[getTicks()];	  double[]    tmp1    =    new    double[getSize()];    	non-compiled	[CE]  variable  tmp1  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	14	None	replace
37	[BUG]  [BUGGY]      double[]  x1  =  new  double[getSize()  +  1];  double[]  x1  =  new  double[getSize()  +  2];  [CE]  variable  x1  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]      double[]  x1  =  new  double[getSize()  +  1];  double[]  x1  =  new  double[getSize()  +  2];  [BUGGY]    multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	        double[]    x1    =    new    double[getSize()    +    1];    double[]  x1  =  new  double[getSize()  +  2];	  	non-compiled	[CE]  variable  x1  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	7	None	add
38	[BUG]  [BUGGY]  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()  +  1];  [CE]  variable  tmp2  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()  +  1];  [BUGGY]    double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]    tmp2    =    new    double[getSize()];    double[]  tmp2  =  new  double[getSize()  +  1];	  	non-compiled	[CE]  variable  tmp2  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	1	None	add
39	[BUG]  [BUGGY]  double[]  x  =  new  double[getX()  +  getOffset()];  [CE]  variable  x  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]        AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  x  =  new  double[getX()  +  getOffset()];  [BUGGY]    multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]  x  =  new  double[getX()  +  getOffset()];	      double[]    x    =    new    double[getX()    +    getSize()];    	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	11	None	replace
40	[BUG]  [BUGGY]  double[]  x  =  new  double[getSize()  +  getXOffset()];  [CE]  variable  x  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)  [FE]        AssertionError    [CONTEXT]    final  double[]  result,  final  int  resultOffset)  {  double[]  tmp1  =  new  double[getSize()];    [BUGGY]  double[]  x  =  new  double[getSize()  +  getXOffset()];  [BUGGY]    multiply(x,  xOffset,  x,  xOffset,  tmp1,  0);//  x^2  double[]  tmp2  =  new  double[getSize()];  double[]  tmp2  =  new  double[getSize()];  multiply(y,  yOffset,  y,  yOffset,  tmp2,  0);//  y^2  add(tmp1,  0,  tmp2,  0,  tmp2,  0);  //  x^2  +  y^2  rootN(tmp2,  0,  2,  tmp1,  0);  //  r  =  sqrt(x^2  +  y^2)  if  (x[xOffset]  >=  0)  {  add(tmp1,  0,  x,  xOffset,  tmp2,  0);//  r  +  x  divide(y,  yOffset,  tmp2,  0,  tmp1,  0);  //  y  /(r  +  x)  [CLASS]  DSCompiler  [METHOD]  atan2  [RETURN_TYPE]  void  final  double[]  y  final  int  yOffset  final  double[]  x  final  int  xOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  result  tmp1  tmp2  x  y  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5773502691896258	1388	1389	1	replace	double[]  x  =  new  double[getSize()  +  getXOffset()];	      double[]    x    =    new    double[getSize()    +    getX()];    	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan2(double[],int,double[],int,double[],int)	10	None	replace
