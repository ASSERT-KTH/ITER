bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  int[][]  operands  =  new  int[resultOffset][1];  [CE]  cannot  find  symbol  function  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  int[][]  operands  =  new  int[resultOffset][1];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  int[][]  operands  =  new  int[resultOffset][1];	  final    int[][]    operands    =    new    int[resultOffset][0];    	non-compiled	[CE]  cannot  find  symbol  function	25	None	replace
2	[BUG]  [BUGGY]  final  int[][]  function  =  new  double[1  +  order];  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  int[][]  function  =  new  double[1  +  order];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  int[][]  function  =  new  double[1  +  order];	  final    double[]    function    =    new    double[1    +    order];    final    int[][]    function    =    new    double[1    +    order];    	non-compiled	[CE]  incompatible  types	27	None	replace
3	[BUG]  [BUGGY]  final  int[][]  function  =  new  int[1  +  order];  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  int[][]  function  =  new  int[1  +  order];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  int[][]  function  =  new  int[1  +  order];	  final    double[]    function    =    new    double[1    +    order];    final    int[][]    function    =    new    double[1    +    order];    	non-compiled	[CE]  incompatible  types	27	None	replace
4	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[]  function  =  new  double[2  +  resultOffset];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	add	final  double[]  function  =  new  double[2  +  resultOffset];	  final    double[]    function    =    new    double[1    +    resultOffset];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	4	replace
5	[BUG]  [BUGGY]  final  double[]  function  =  new  double[2  +  resultOffset];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[]  function  =  new  double[2  +  resultOffset];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[]  function  =  new  double[2  +  resultOffset];	  final    double[]    function    =    new    double[1    +    resultOffset];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	4	replace
6	[BUG]  [BUGGY]  int[][]  operand  =  new  int[2  +  resultOffset];  [CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]            AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  int[][]  operand  =  new  int[2  +  resultOffset];  [BUGGY]      double[]  function  =  new  double[1  +  order];  final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	int[][]  operand  =  new  int[2  +  resultOffset];	  int[][]    operand    =    new    int[1    +    resultOffset];    	non-compiled	[CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)	20	None	replace
7	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  double[]  function  =  new  double[2  *  resultOffset];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	add	double[]  function  =  new  double[2  *  resultOffset];	  double[]    function    =    new    double[2    +    resultOffset];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	24	4	replace
8	[BUG]  [BUGGY]  double[]  function  =  new  double[2  *  resultOffset];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  double[]  function  =  new  double[2  *  resultOffset];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	double[]  function  =  new  double[2  *  resultOffset];	  double[]    function    =    new    double[2    +    resultOffset];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	24	4	replace
9	[BUG]  [BUGGY]  final  double[][]  result  =  new  double[1  +  resultOffset];  [CE]  variable  result  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]            AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[][]  result  =  new  double[1  +  resultOffset];  [BUGGY]      double[]  function  =  new  double[1  +  order];  final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[][]  result  =  new  double[1  +  resultOffset];	  final    double[][]    result    =    new    double[1    +    order];    	non-compiled	[CE]  variable  result  is  already  defined  in  method  atan(double[],int,double[],int)	33	None	replace
10	[BUG]  [BUGGY]  final  double[][]  result  =  new  double[2  +  order];  [CE]  variable  result  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[][]  result  =  new  double[2  +  order];  [BUGGY]      double[]  function  =  new  double[1  +  order];  final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[][]  result  =  new  double[2  +  order];	  final    double[][]    result    =    new    double[1    +    order];    	non-compiled	[CE]  variable  result  is  already  defined  in  method  atan(double[],int,double[],int)	33	None	replace
11	[BUG]  [BUGGY]  final  double[]  operand  =  new  double[1  +  order];  [CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]        AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[]  operand  =  new  double[1  +  order];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[]  operand  =  new  double[1  +  order];	  final    double[]    function    =    new    double[1    +    order];    final    double[]    operand    =    new    double[1    +    order];    	non-compiled	[CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)	31	None	replace
12	[BUG]  [BUGGY]  final  double[]  operand  =  new  double[2  +  order];  [CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]          AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[]  operand  =  new  double[2  +  order];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[]  operand  =  new  double[2  +  order];	  final    double[]    function    =    new    double[1    +    order];    final    double[]    operand    =    new    double[1    +    order];    	non-compiled	[CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)	31	None	replace
13	[BUG]  [BUGGY]  final  int[][]  result  =  new  int[1  +  1];  [CE]  variable  result  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  int[][]  result  =  new  int[1  +  1];  [BUGGY]      double[]  function  =  new  double[1  +  order];  final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  int[][]  result  =  new  int[1  +  1];	  final    int[][]    result    =    new    int[1    +    0];    	non-compiled	[CE]  variable  result  is  already  defined  in  method  atan(double[],int,double[],int)	16	None	replace
14	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  double[]  function  =  new  double[1  +  resultOffset  *  1];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	add	double[]  function  =  new  double[1  +  resultOffset  *  1];	  double[]    function    =    new    double[1    +    resultOffset    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	30	4	replace
15	[BUG]  [BUGGY]  double[]  function  =  new  double[1  +  resultOffset  *  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  double[]  function  =  new  double[1  +  resultOffset  *  1];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	double[]  function  =  new  double[1  +  resultOffset  *  1];	  double[]    function    =    new    double[1    +    resultOffset    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	30	4	replace
16	[BUG]  [BUGGY]  int[][]  operands  =  new  int[2  +  resultOffset];  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  int[][]  operands  =  new  int[2  +  resultOffset];  [BUGGY]      double[]  function  =  new  double[1  +  order];  final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	int[][]  operands  =  new  int[2  +  resultOffset];	  int[][]    operands    =    new    int[1    +    resultOffset];    	non-compiled	[CE]  incompatible  types	12	None	replace
17	[BUG]  [BUGGY]  final  double[]  function  =  new  double[1  +  resultOffset];  final  double[]  function  =  new  double[1  +  resultOffset];  [CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[]  function  =  new  double[1  +  resultOffset];  final  double[]  function  =  new  double[1  +  resultOffset];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final    double[]    function    =    new    double[1    +    resultOffset];    final  double[]  function  =  new  double[1  +  resultOffset];	  	non-compiled	[CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)	1	None	add
18	[BUG]  [BUGGY]  final  double[]  function  =  new  double[1  +  resultOffset];  final  double[]  function  =  new  double[2  +  resultOffset];  [CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[]  function  =  new  double[1  +  resultOffset];  final  double[]  function  =  new  double[2  +  resultOffset];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final    double[]    function    =    new    double[1    +    resultOffset];    final  double[]  function  =  new  double[2  +  resultOffset];	  	non-compiled	[CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)	1	None	add
19	[BUG]  [BUGGY]  final  int[][]  operand  =  operand.toArray(resultOffset);  [CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  int[][]  operand  =  operand.toArray(resultOffset);  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  int[][]  operand  =  operand.toArray(resultOffset);	  final    int[][]    operand    =    result.toArray(resultOffset);    	non-compiled	[CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)	26	None	replace
20	[BUG]  [BUGGY]  final  int[][]  operand  =  resultOffset.toArray(result);  [CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]                    AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  int[][]  operand  =  resultOffset.toArray(result);  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  int[][]  operand  =  resultOffset.toArray(result);	  final    int[][]    operand    =    result.toArray(resultOffset);    	non-compiled	[CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)	26	None	replace
21	[BUG]  [BUGGY]  final  double[]  function  =  new  double[2  +  order];  final  double[]  function  =  new  double[2  +  order];  [CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[]  function  =  new  double[2  +  order];  final  double[]  function  =  new  double[2  +  order];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final    double[]    function    =    new    double[2    +    order];    final  double[]  function  =  new  double[2  +  order];	  	non-compiled	[CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)	3	None	add
22	[BUG]  [BUGGY]  final  double[]  function  =  new  double[2  +  order];  final  double[]  function  =  new  double[1  +  order];  [CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]      AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[]  function  =  new  double[2  +  order];  final  double[]  function  =  new  double[1  +  order];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final    double[]    function    =    new    double[2    +    order];    final  double[]  function  =  new  double[1  +  order];	  	non-compiled	[CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)	3	None	add
23	[BUG]  [BUGGY]  final  int[][]  operands  =  new  int[2  +  resultOffset];  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  int[][]  operands  =  new  int[2  +  resultOffset];  [BUGGY]      double[]  function  =  new  double[1  +  order];  final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  int[][]  operands  =  new  int[2  +  resultOffset];	  final    int[][]    operands    =    new    int[2    +    order];    	non-compiled	[CE]  incompatible  types	6	None	replace
24	[BUG]  [BUGGY]  final  double[][]  function  =  result.getMask();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[][]  function  =  result.getMask();  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[][]  function  =  result.getMask();	  final    double[][]    function    =    resultOffset.getMask();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
25	[BUG]  [BUGGY]  double[]  function  =  new  double[2  +  resultOffset];  double[]  function  =  new  double[2  +  resultOffset];  [CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  double[]  function  =  new  double[2  +  resultOffset];  double[]  function  =  new  double[2  +  resultOffset];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	double[]    function    =    new    double[2    +    resultOffset];    double[]  function  =  new  double[2  +  resultOffset];	  	non-compiled	[CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)	23	None	add
26	[BUG]  [BUGGY]  double[]  function  =  new  double[2  +  resultOffset];  final  double[]  function  =  new  double[2  +  resultOffset];  [CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  double[]  function  =  new  double[2  +  resultOffset];  final  double[]  function  =  new  double[2  +  resultOffset];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	double[]    function    =    new    double[2    +    resultOffset];    final  double[]  function  =  new  double[2  +  resultOffset];	  	non-compiled	[CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)	23	None	add
27	[BUG]  [BUGGY]  double[]  function  =  new  double[2  +  resultOffset];  Double[]  function  =  new  double[2  +  resultOffset];  [CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  double[]  function  =  new  double[2  +  resultOffset];  Double[]  function  =  new  double[2  +  resultOffset];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	double[]    function    =    new    double[2    +    resultOffset];    Double[]  function  =  new  double[2  +  resultOffset];	  	non-compiled	[CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)	23	None	add
28	[BUG]  [BUGGY]  final  double[]  function  =  result.get(resultOffset);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[]  function  =  result.get(resultOffset);  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[]  function  =  result.get(resultOffset);	  final    double[]    function    =    resultOffset.get(resultOffset);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
29	[BUG]  [BUGGY]  final  int[]  function  =  new  int[1  +  order];  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  int[]  function  =  new  int[1  +  order];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  int[]  function  =  new  int[1  +  order];	  final    double[]    function    =    new    double[1    +    order];    final    double[]    function    =    new    double[2    +    order];    	non-compiled	[CE]  possible  loss  of  precision	14	None	replace
30	[BUG]  [BUGGY]  int[][]  function  =  new  int[2  +  order];  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  int[][]  function  =  new  int[2  +  order];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	int[][]  function  =  new  int[2  +  order];	  double[]    function    =    new    double[2    +    order];    int[][]    function    =    new    double[2    +    order];    	non-compiled	[CE]  incompatible  types	32	None	replace
31	[BUG]  [BUGGY]  int[][]  function  =  new  int[1  +  order];  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  int[][]  function  =  new  int[1  +  order];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	int[][]  function  =  new  int[1  +  order];	  double[]    function    =    new    double[2    +    order];    int[][]    function    =    new    double[2    +    order];    	non-compiled	[CE]  incompatible  types	32	None	replace
32	[BUG]  [BUGGY]  final  double[][]  operands  =  derivedTermF.atan(result);  [CE]  cannot  find  symbol  derivedTermF  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[][]  operands  =  derivedTermF.atan(result);  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[][]  operands  =  derivedTermF.atan(result);	  final    double[][]    operands    =    derivedTermG.atan(result);    	non-compiled	[CE]  cannot  find  symbol  derivedTermF	37	None	replace
33	[BUG]  [BUGGY]  final  double[][]  operands  =  result.atan(result);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[][]  operands  =  result.atan(result);  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[][]  operands  =  result.atan(result);	  final    double[][]    operands    =    derivedTermG.atan(result);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
34	[BUG]  [BUGGY]  final  double[][]  operands  =  new  double[1  +  resultOffset];  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[][]  operands  =  new  double[1  +  resultOffset];  [BUGGY]      double[]  function  =  new  double[1  +  order];  final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[][]  operands  =  new  double[1  +  resultOffset];	  final    double[][]    operands    =    new    double[1    +    order];    	non-compiled	[CE]  incompatible  types	28	None	replace
35	[BUG]  [BUGGY]  final  double[][]  operands  =  new  double[2  +  order];  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[][]  operands  =  new  double[2  +  order];  [BUGGY]      double[]  function  =  new  double[1  +  order];  final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[][]  operands  =  new  double[2  +  order];	  final    double[][]    operands    =    new    double[1    +    order];    	non-compiled	[CE]  incompatible  types	28	None	replace
36	[BUG]  [BUGGY]  final  double[][]  operands  =  derivedTermF.atan(resultOffset);  [CE]  cannot  find  symbol  derivedTermF  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[][]  operands  =  derivedTermF.atan(resultOffset);  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[][]  operands  =  derivedTermF.atan(resultOffset);	  final    double[][]    operands    =    derivedTermG.atan(resultOffset);    	non-compiled	[CE]  cannot  find  symbol  derivedTermF	36	None	replace
37	[BUG]  [BUGGY]  final  double[][]  operands  =  method.atan(resultOffset);  [CE]  cannot  find  symbol  method  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[][]  operands  =  method.atan(resultOffset);  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[][]  operands  =  method.atan(resultOffset);	  final    double[][]    operands    =    derivedTermG.atan(resultOffset);    	non-compiled	[CE]  cannot  find  symbol  method	36	None	replace
38	[BUG]  [BUGGY]  double[]  function  =  new  double[1  +  resultOffset  -  1];  final  double[]  function  =  new  double[1  +  resultOffset  -  1];  [CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  double[]  function  =  new  double[1  +  resultOffset  -  1];  final  double[]  function  =  new  double[1  +  resultOffset  -  1];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	double[]    function    =    new    double[1    +    resultOffset    -    1];    final  double[]  function  =  new  double[1  +  resultOffset  -  1];	  	non-compiled	[CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)	29	None	add
39	[BUG]  [BUGGY]  double[]  function  =  new  double[1  +  resultOffset  -  1];  double[]  function  =  new  double[1  +  resultOffset  -  1];  [CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  double[]  function  =  new  double[1  +  resultOffset  -  1];  double[]  function  =  new  double[1  +  resultOffset  -  1];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	double[]    function    =    new    double[1    +    resultOffset    -    1];    double[]  function  =  new  double[1  +  resultOffset  -  1];	  	non-compiled	[CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)	29	None	add
40	[BUG]  [BUGGY]  double[]  function  =  new  double[1  +  resultOffset  -  1];  Double[]  function  =  new  double[1  +  resultOffset  -  1];  [CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  double[]  function  =  new  double[1  +  resultOffset  -  1];  Double[]  function  =  new  double[1  +  resultOffset  -  1];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	double[]    function    =    new    double[1    +    resultOffset    -    1];    Double[]  function  =  new  double[1  +  resultOffset  -  1];	  	non-compiled	[CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)	29	None	add
41	[BUG]  [BUGGY]  int[][]  function  =  new  int[1  +  resultOffset];  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  int[][]  function  =  new  int[1  +  resultOffset];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	int[][]  function  =  new  int[1  +  resultOffset];	  double[]    function    =    new    double[1    +    resultOffset];    int[][]    function    =    new    double[1    +    resultOffset];    	non-compiled	[CE]  incompatible  types	35	None	replace
42	[BUG]  [BUGGY]  final  double[][]  function  =  new  double[1  +  resultOffset];  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[][]  function  =  new  double[1  +  resultOffset];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[][]  function  =  new  double[1  +  resultOffset];	  double[]    function    =    new    double[1    +    resultOffset];    int[][]    function    =    new    double[1    +    resultOffset];    	non-compiled	[CE]  incompatible  types	35	None	replace
43	[BUG]  [BUGGY]  final  int[][]  result  =  new  int[2  +  1];  [CE]  variable  result  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]            AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  int[][]  result  =  new  int[2  +  1];  [BUGGY]      double[]  function  =  new  double[1  +  order];  final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  int[][]  result  =  new  int[2  +  1];	  final    int[][]    result    =    new    int[2    +    order];    	non-compiled	[CE]  variable  result  is  already  defined  in  method  atan(double[],int,double[],int)	15	None	replace
44	[BUG]  [BUGGY]  final  int[][]  result  =  new  int[1  +  resultOffset];  [CE]  variable  result  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  int[][]  result  =  new  int[1  +  resultOffset];  [BUGGY]      double[]  function  =  new  double[1  +  order];  final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  int[][]  result  =  new  int[1  +  resultOffset];	  final    int[][]    result    =    new    int[1    +    offset];    	non-compiled	[CE]  variable  result  is  already  defined  in  method  atan(double[],int,double[],int)	34	None	replace
45	[BUG]  [BUGGY]  final  int[][]  function  =  new  double[1  +  0];  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  int[][]  function  =  new  double[1  +  0];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  int[][]  function  =  new  double[1  +  0];	  final    double[]    function    =    new    double[1    +    order];    final    int[][]    function    =    new    double[1    +    order];    	non-compiled	[CE]  incompatible  types	27	None	replace
46	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[]  function  =  new  double[1  +  0];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	add	final  double[]  function  =  new  double[1  +  0];	  final    double[]    function    =    new    double[1    +    order];    final    double[]    function    =    new    double[1    +    order];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	4	replace
47	[BUG]  [BUGGY]  final  double[]  function  =  new  double[1  +  0];  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[]  function  =  new  double[1  +  0];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[]  function  =  new  double[1  +  0];	  final    double[]    function    =    new    double[1    +    order];    final    double[]    function    =    new    double[1    +    order];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	4	replace
48	[BUG]  [BUGGY]  final  double[][]  operands  =  compilers.atan(result);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[][]  operands  =  compilers.atan(result);  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[][]  operands  =  compilers.atan(result);	  final    double[][]    operands    =    derivedTermG.atan(result);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
49	[BUG]  [BUGGY]  final  int[][]  operand  =  function.toArray(resultOffset);  [CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  int[][]  operand  =  function.toArray(resultOffset);  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  int[][]  operand  =  function.toArray(resultOffset);	  final    int[][]    operand    =    result.toArray(resultOffset);    	non-compiled	[CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)	26	None	replace
50	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[]  function  =  new  double[2  +  0];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	add	final  double[]  function  =  new  double[2  +  0];	  final    double[]    function    =    new    double[1    +    order];    final    double[]    function    =    new    double[2    +    order];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	14	4	replace
51	[BUG]  [BUGGY]  final  double[]  function  =  new  double[2  +  0];  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[]  function  =  new  double[2  +  0];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[]  function  =  new  double[2  +  0];	  final    double[]    function    =    new    double[1    +    order];    final    double[]    function    =    new    double[2    +    order];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	14	4	replace
52	[BUG]  [BUGGY]  int[][]  function  =  new  double[2  +  order];  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  int[][]  function  =  new  double[2  +  order];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	int[][]  function  =  new  double[2  +  order];	  double[]    function    =    new    double[2    +    order];    int[][]    function    =    new    double[2    +    order];    	non-compiled	[CE]  incompatible  types	32	None	replace
53	[BUG]  [BUGGY]  int[][]  operand  =  new  int[1  +  operandOffset];  [CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]            AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  int[][]  operand  =  new  int[1  +  operandOffset];  [BUGGY]      double[]  function  =  new  double[1  +  order];  final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	int[][]  operand  =  new  int[1  +  operandOffset];	  int[][]    operand    =    new    int[1    +    resultOffset];    	non-compiled	[CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)	20	None	replace
54	[BUG]  [BUGGY]  final  double[]  function  =  results.get(resultOffset);  [CE]  cannot  find  symbol  results  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[]  function  =  results.get(resultOffset);  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[]  function  =  results.get(resultOffset);	  final    double[]    function    =    resultOffset.get(resultOffset);    	non-compiled	[CE]  cannot  find  symbol  results	8	None	replace
55	[BUG]  [BUGGY]  double[]  function  =  new  double[1  +  resultOffset  -  1];  final  int[]  function  =  new  double[1  +  resultOffset  -  1];  [CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  double[]  function  =  new  double[1  +  resultOffset  -  1];  final  int[]  function  =  new  double[1  +  resultOffset  -  1];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	double[]    function    =    new    double[1    +    resultOffset    -    1];    final  int[]  function  =  new  double[1  +  resultOffset  -  1];	  	non-compiled	[CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)	29	None	add
56	[BUG]  [BUGGY]  final  double[]  operand  =  new  double[1  +  resultOffset];  [CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]        AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[]  operand  =  new  double[1  +  resultOffset];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[]  operand  =  new  double[1  +  resultOffset];	  final    double[]    function    =    new    double[1    +    order];    final    double[]    operand    =    new    double[1    +    order];    	non-compiled	[CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)	31	None	replace
57	[BUG]  [BUGGY]  final  double[][]  operands  =  compilers.atan(resultOffset);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[][]  operands  =  compilers.atan(resultOffset);  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[][]  operands  =  compilers.atan(resultOffset);	  final    double[][]    operands    =    derivedTermG.atan(resultOffset);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
58	[BUG]  [BUGGY]  int[][]  function  =  new  double[1  +  resultOffset];  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  int[][]  function  =  new  double[1  +  resultOffset];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	int[][]  function  =  new  double[1  +  resultOffset];	  double[]    function    =    new    double[1    +    resultOffset];    int[][]    function    =    new    double[1    +    resultOffset];    	non-compiled	[CE]  incompatible  types	35	None	replace
59	[BUG]  [BUGGY]  final  int[][]  operands  =  new  int[1  +  operandOffset];  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  int[][]  operands  =  new  int[1  +  operandOffset];  [BUGGY]      double[]  function  =  new  double[1  +  order];  final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  int[][]  operands  =  new  int[1  +  operandOffset];	  final    int[][]    operands    =    new    int[1    +    resultOffset];    	non-compiled	[CE]  incompatible  types	5	None	replace
60	[BUG]  [BUGGY]  int[][]  operands  =  new  int[1  +  operandOffset];  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  int[][]  operands  =  new  int[1  +  operandOffset];  [BUGGY]      double[]  function  =  new  double[1  +  order];  final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	int[][]  operands  =  new  int[1  +  operandOffset];	  int[][]    operands    =    new    int[1    +    resultOffset];    	non-compiled	[CE]  incompatible  types	12	None	replace
61	[BUG]  [BUGGY]  final  double[]  function  =  new  double[2  +  order];  final  int[][]  function  =  new  double[2  +  order];  [CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[]  function  =  new  double[2  +  order];  final  int[][]  function  =  new  double[2  +  order];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final    double[]    function    =    new    double[2    +    order];    final  int[][]  function  =  new  double[2  +  order];	  	non-compiled	[CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)	3	None	add
62	[BUG]  [BUGGY]  final  double[]  function  =  new  double[1  +  resultOffset];  final  double[]  operand  =  new  double[1  +  resultOffset];  [CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[]  function  =  new  double[1  +  resultOffset];  final  double[]  operand  =  new  double[1  +  resultOffset];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final    double[]    function    =    new    double[1    +    resultOffset];    final  double[]  operand  =  new  double[1  +  resultOffset];	  	non-compiled	[CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)	1	None	add
63	[BUG]  [BUGGY]  final  double[][]  function  =  this.resultOffset.getMask();  [CE]  cannot  find  symbol  resultOffset  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[][]  function  =  this.resultOffset.getMask();  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[][]  function  =  this.resultOffset.getMask();	  final    double[][]    function    =    resultOffset.getMask();    	non-compiled	[CE]  cannot  find  symbol  resultOffset	7	None	replace
64	[BUG]  [BUGGY]  final  double[][]  operands  =  new  double[resultOffset][0];  [CE]  cannot  find  symbol  function  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[][]  operands  =  new  double[resultOffset][0];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[][]  operands  =  new  double[resultOffset][0];	  final    int[][]    operands    =    new    int[resultOffset][0];    	non-compiled	[CE]  cannot  find  symbol  function	25	None	replace
65	[BUG]  [BUGGY]  final  double[]  function  =  new  double[2  +  order];  final  double[]  operand  =  new  double[2  +  order];  [CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[]  function  =  new  double[2  +  order];  final  double[]  operand  =  new  double[2  +  order];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final    double[]    function    =    new    double[2    +    order];    final  double[]  operand  =  new  double[2  +  order];	  	non-compiled	[CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)	3	None	add
66	[BUG]  [BUGGY]  final  double[][]  operand  =  result.toArray(resultOffset);  [CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[][]  operand  =  result.toArray(resultOffset);  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[][]  operand  =  result.toArray(resultOffset);	  final    int[][]    operand    =    result.toArray(resultOffset);    	non-compiled	[CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)	26	None	replace
67	[BUG]  [BUGGY]  final  double[]  function  =  this.resultOffset.get(resultOffset);  [CE]  cannot  find  symbol  resultOffset  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  final  double[]  function  =  this.resultOffset.get(resultOffset);  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	final  double[]  function  =  this.resultOffset.get(resultOffset);	  final    double[]    function    =    resultOffset.get(resultOffset);    	non-compiled	[CE]  cannot  find  symbol  resultOffset	8	None	replace
68	[BUG]  [BUGGY]  double[]  function  =  new  double[1  +  resultOffset  -  1];  double[]  function  =  new  double[1  +  resultOffset  -  1);  [CE]  ']'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  double[]  function  =  new  double[1  +  resultOffset  -  1];  double[]  function  =  new  double[1  +  resultOffset  -  1);  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	double[]    function    =    new    double[1    +    resultOffset    -    1];    double[]  function  =  new  double[1  +  resultOffset  -  1);	  	non-compiled	[CE]  ']'  expected	29	None	add
69	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  double[]  function  =  new  double[1  +  resultOffset  /  1];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	add	double[]  function  =  new  double[1  +  resultOffset  /  1];	  double[]    function    =    new    double[1    +    resultOffset    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	30	4	replace
70	[BUG]  [BUGGY]  double[]  function  =  new  double[1  +  resultOffset  /  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {        [BUGGY]  double[]  function  =  new  double[1  +  resultOffset  /  1];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1327	1327	1	replace	double[]  function  =  new  double[1  +  resultOffset  /  1];	  double[]    function    =    new    double[1    +    resultOffset    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	30	4	replace
