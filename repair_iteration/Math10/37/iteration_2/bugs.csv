bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  pow(lhs,  rhsOffset,  0,  result,  0);  pow(lhs,  rhsOffset,  0,  result,  0);  [BUGGY]    multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	add	pow(lhs,    rhsOffset,    0,    result,    0);    pow(lhs,  rhsOffset,  0,  result,  0);	  	compilable	  [FE]  AssertionError  	1	1	add
2	[BUG]  [BUGGY]  pow(lhs,  rhsOffset,  0,  result,  0);  pow(lhs,  rhsOffset,  0,  result,  0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  pow(lhs,  rhsOffset,  0,  result,  0);  pow(lhs,  rhsOffset,  0,  result,  0);  [BUGGY]    multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pow(lhs,    rhsOffset,    0,    result,    0);    pow(lhs,  rhsOffset,  0,  result,  0);	  	compilable	  [FE]  AssertionError  	1	1	add
3	[BUG]  [BUGGY]  pow(lhs,  rhsOffset,  0,  result,  0);  Pow(lhs,  rhsOffset,  0,  result,  0);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  pow(lhs,  rhsOffset,  0,  result,  0);  Pow(lhs,  rhsOffset,  0,  result,  0);  [BUGGY]    multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pow(lhs,    rhsOffset,    0,    result,    0);    Pow(lhs,  rhsOffset,  0,  result,  0);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
4	[BUG]  [BUGGY]  pow(lhs,  rhsOffset,  0,  result,  0);  pokew(lhs,  rhsOffset,  0,  result,  0);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  pow(lhs,  rhsOffset,  0,  result,  0);  pokew(lhs,  rhsOffset,  0,  result,  0);  [BUGGY]    multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pow(lhs,    rhsOffset,    0,    result,    0);    pokew(lhs,  rhsOffset,  0,  result,  0);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
5	[BUG]  [BUGGY]  final  double[]  reciprocal  =  new  double[getSize()  ];  [CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]            AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  final  double[]  reciprocal  =  new  double[getSize()  ];  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	final  double[]  reciprocal  =  new  double[getSize()  ];	      double[]    reciprocal    =    new    double[getSize()    ];    	non-compiled	[CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	9	None	replace
6	[BUG]  [BUGGY]  double[]  reciprocal  =  new  double[getRowSize()  ];  [CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]              AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  double[]  reciprocal  =  new  double[getRowSize()  ];  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	double[]  reciprocal  =  new  double[getRowSize()  ];	      double[]    reciprocal    =    new    double[getSize()    ];    	non-compiled	[CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	9	None	replace
7	[BUG]  [BUGGY]  Pow(lhs,  rhsOffset,  0,  result,  resultOffset);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  Pow(lhs,  rhsOffset,  0,  result,  resultOffset);  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	Pow(lhs,  rhsOffset,  0,  result,  resultOffset);	      Pow(lhs,    lhsOffset,    0,    result,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
8	[BUG]  [BUGGY]  Pow(lhs,  rhs,  0,  result,  resultOffset);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  Pow(lhs,  rhs,  0,  result,  resultOffset);  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	Pow(lhs,  rhs,  0,  result,  resultOffset);	      Pow(lhs,    lhsOffset,    0,    result,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
9	[BUG]  [BUGGY]  Pow(lhs,  rhsOffset,  -1,  reciprocal,  0,  result,  lhsOffset);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  Pow(lhs,  rhsOffset,  -1,  reciprocal,  0,  result,  lhsOffset);  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	Pow(lhs,  rhsOffset,  -1,  reciprocal,  0,  result,  lhsOffset);	      Pow(lhs,    lhsOffset,    -1,    reciprocal,    0,    result,    rhsOffset);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
10	[BUG]  [BUGGY]  ((  double[])lhs[0]).doubleValue();  [CE]  inconvertible  types  [FE]    AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  ((  double[])lhs[0]).doubleValue();  [BUGGY]    multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	((  double[])lhs[0]).doubleValue();	      	non-compiled	[CE]  inconvertible  types	6	None	replace
11	[BUG]  [BUGGY]  multiply(lhs,  rhs,  lhsOffset,  0,  result,  resultOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  multiply(lhs,  rhs,  lhsOffset,  0,  result,  resultOffset);  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  rhs,  lhsOffset,  0,  result,  resultOffset);	      multiply(lhs,    lhsOffset,    0,    result,    resultOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	7	None	replace
12	[BUG]  [BUGGY]  multiply(lhs,  lhsOffset,  0,  result,  rhsOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  multiply(lhs,  lhsOffset,  0,  result,  rhsOffset);  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  lhsOffset,  0,  result,  rhsOffset);	      multiply(lhs,    lhsOffset,    0,    result,    resultOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	7	None	replace
13	[BUG]  [BUGGY]  Pow(lhs,  rhsOffset,  0,  result,  lhsOffset);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  Pow(lhs,  rhsOffset,  0,  result,  lhsOffset);  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	Pow(lhs,  rhsOffset,  0,  result,  lhsOffset);	      Pow(lhs,    lhsOffset,    0,    result,    rhsOffset);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  pow(lhs,  rhsOffset,  0,  reciprocal,  0);  pow(lhs,  rhsOffset,  0,  reciprocal,  0);  [BUGGY]    multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	add	pow(lhs,    rhsOffset,    0,    reciprocal,    0);    pow(lhs,  rhsOffset,  0,  reciprocal,  0);	  	compilable	  [FE]  AssertionError  	3	1	add
15	[BUG]  [BUGGY]  pow(lhs,  rhsOffset,  0,  reciprocal,  0);  pow(lhs,  rhsOffset,  0,  reciprocal,  0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  pow(lhs,  rhsOffset,  0,  reciprocal,  0);  pow(lhs,  rhsOffset,  0,  reciprocal,  0);  [BUGGY]    multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pow(lhs,    rhsOffset,    0,    reciprocal,    0);    pow(lhs,  rhsOffset,  0,  reciprocal,  0);	  	compilable	  [FE]  AssertionError  	3	1	add
16	[BUG]  [BUGGY]  pow(lhs,  rhsOffset,  0,  reciprocal,  0);  Pow(lhs,  rhsOffset,  0,  reciprocal,  0);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  pow(lhs,  rhsOffset,  0,  reciprocal,  0);  Pow(lhs,  rhsOffset,  0,  reciprocal,  0);  [BUGGY]    multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pow(lhs,    rhsOffset,    0,    reciprocal,    0);    Pow(lhs,  rhsOffset,  0,  reciprocal,  0);	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
17	[BUG]  [BUGGY]  pow(lhs,  rhsOffset,  0,  reciprocal,  0);  pokew(lhs,  rhsOffset,  0,  reciprocal,  0);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  pow(lhs,  rhsOffset,  0,  reciprocal,  0);  pokew(lhs,  rhsOffset,  0,  reciprocal,  0);  [BUGGY]    multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pow(lhs,    rhsOffset,    0,    reciprocal,    0);    pokew(lhs,  rhsOffset,  0,  reciprocal,  0);	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  pow(lhs,  lhsOffset,  0,  result,  0);  [BUGGY]    multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	add	pow(lhs,  lhsOffset,  0,  result,  0);	  pow(lhs,    rhsOffset,    0,    reciprocal,    0);    	compilable	  [FE]  AssertionError  	4	8	replace
19	[BUG]  [BUGGY]  pow(lhs,  lhsOffset,  0,  result,  0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  pow(lhs,  lhsOffset,  0,  result,  0);  [BUGGY]    multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pow(lhs,  lhsOffset,  0,  result,  0);	  pow(lhs,    rhsOffset,    0,    reciprocal,    0);    	compilable	  [FE]  AssertionError  	4	8	replace
20	[BUG]  [BUGGY]      ((  double[])lhs[0]).doubleValue());  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]      ((  double[])lhs[0]).doubleValue());  [BUGGY]    multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	        ((  double[])lhs[0]).doubleValue());	  	non-compiled	[CE]  ';'  expected	5	None	add
21	[BUG]  [BUGGY]  multiply(lhs,  rhs,  -1,  reciprocal,  0,  result,  resultOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  multiply(lhs,  rhs,  -1,  reciprocal,  0,  result,  resultOffset);  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  rhs,  -1,  reciprocal,  0,  result,  resultOffset);	      multiply(lhs,    lhsOffset,    -1,    reciprocal,    0,    result,    resultOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	8	None	replace
22	[BUG]  [BUGGY]  multiply(lhs,  lhsOffset,  -1,  rhs,  0,  result,  resultOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  multiply(lhs,  lhsOffset,  -1,  rhs,  0,  result,  resultOffset);  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  lhsOffset,  -1,  rhs,  0,  result,  resultOffset);	      multiply(lhs,    lhsOffset,    -1,    reciprocal,    0,    result,    resultOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	8	None	replace
23	[BUG]  [BUGGY]  Pow(lhs,  rhsOffset,  -1,  reciprocal,  0,  result,  resultOffset);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  Pow(lhs,  rhsOffset,  -1,  reciprocal,  0,  result,  resultOffset);  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	Pow(lhs,  rhsOffset,  -1,  reciprocal,  0,  result,  resultOffset);	      Pow(lhs,    lhsOffset,    -1,    reciprocal,    0,    result,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
24	[BUG]  [BUGGY]  poke(lhs,  rhsOffset,  0,  result,  0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  poke(lhs,  rhsOffset,  0,  result,  0);  [BUGGY]    multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	poke(lhs,  rhsOffset,  0,  result,  0);	  pow(lhs,    rhsOffset,    0,    result,    0);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
25	[BUG]  [BUGGY]  Pow(lhs,  rhsOffset,  0,  result,  rhsOffset);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  Pow(lhs,  rhsOffset,  0,  result,  rhsOffset);  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	Pow(lhs,  rhsOffset,  0,  result,  rhsOffset);	      Pow(lhs,    lhsOffset,    0,    result,    rhsOffset);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
26	[BUG]  [BUGGY]  Pow(lhs,  rhsOffset,  -1,  reciprocal,  0,  result,  rhsOffset);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  Pow(lhs,  rhsOffset,  -1,  reciprocal,  0,  result,  rhsOffset);  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	Pow(lhs,  rhsOffset,  -1,  reciprocal,  0,  result,  rhsOffset);	      Pow(lhs,    lhsOffset,    -1,    reciprocal,    0,    result,    rhsOffset);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
27	[BUG]  [BUGGY]      int  lhsOffset  =  Math.min(lhsOffset,  rhsOffset);  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]      int  lhsOffset  =  Math.min(lhsOffset,  rhsOffset);  [BUGGY]    multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	        int  lhsOffset  =  Math.min(lhsOffset,  rhsOffset);	  	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	5	None	add
28	[BUG]  [BUGGY]      int  lhsOffset  =  Math.min(lhsOffset,  lhsOffset);  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]      AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]      int  lhsOffset  =  Math.min(lhsOffset,  lhsOffset);  [BUGGY]    multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	        int  lhsOffset  =  Math.min(lhsOffset,  lhsOffset);	  	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	5	None	add
29	[BUG]  [BUGGY]  Pow(lhs,  rhsOffset,  -1,  result,  0,  resultOffset);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  Pow(lhs,  rhsOffset,  -1,  result,  0,  resultOffset);  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	Pow(lhs,  rhsOffset,  -1,  result,  0,  resultOffset);	      Pow(lhs,    lhsOffset,    -1,    reciprocal,    0,    result,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
30	[BUG]  [BUGGY]  multiply(lhs,  rhs,  -1,  result,  0,  lhsOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  multiply(lhs,  rhs,  -1,  result,  0,  lhsOffset);  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  rhs,  -1,  result,  0,  lhsOffset);	      multiply(lhs,    lhsOffset,    -1,    reciprocal,    0,    result,    resultOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	8	None	replace
31	[BUG]  [BUGGY]  multiply(lhs,  rhsOffset,  -1,  result,  0,  resultOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  multiply(lhs,  rhsOffset,  -1,  result,  0,  resultOffset);  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  rhsOffset,  -1,  result,  0,  resultOffset);	      multiply(lhs,    lhsOffset,    -1,    reciprocal,    0,    result,    resultOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	8	None	replace
32	[BUG]  [BUGGY]  multiply(lhs,  rhs,  0,  result,  resultOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  multiply(lhs,  rhs,  0,  result,  resultOffset);  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  rhs,  0,  result,  resultOffset);	      multiply(lhs,    lhsOffset,    0,    result,    resultOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	7	None	replace
33	[BUG]  [BUGGY]  multiplier(lhs,  rhs,  0,  result,  resultOffset);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  multiplier(lhs,  rhs,  0,  result,  resultOffset);  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiplier(lhs,  rhs,  0,  result,  resultOffset);	      multiply(lhs,    lhsOffset,    0,    result,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
34	[BUG]  [BUGGY]  double[]  reciprocal  =  new  double[getRawOffset()  ];  [CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]            AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  double[]  reciprocal  =  new  double[getRawOffset()  ];  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	double[]  reciprocal  =  new  double[getRawOffset()  ];	      double[]    reciprocal    =    new    double[getSize()    ];    	non-compiled	[CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	9	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	add	multiply(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);	      multiply(lhs,    lhsOffset,    0,    result,    resultOffset);    	compilable	  [FE]  AssertionError  	7	8	replace
36	[BUG]  [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);	      multiply(lhs,    lhsOffset,    0,    result,    resultOffset);    	compilable	  [FE]  AssertionError  	7	8	replace
37	[BUG]  [BUGGY]  multiply(lhs,  lhsOffset,  0,  result,  resultOffset,  rhsOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  multiply(lhs,  lhsOffset,  0,  result,  resultOffset,  rhsOffset);  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  lhsOffset,  0,  result,  resultOffset,  rhsOffset);	      multiply(lhs,    lhsOffset,    0,    result,    resultOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	7	None	replace
38	[BUG]  [BUGGY]  int  lhsOffset  =  Math.min(lhs.length,  rhs.length);  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  int  lhsOffset  =  Math.min(lhs.length,  rhs.length);  [BUGGY]    multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	int  lhsOffset  =  Math.min(lhs.length,  rhs.length);	      	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	6	None	replace
39	[BUG]  [BUGGY]  int  lhsOffset  =  Math.min(relativeOrder,  lhsOffset);  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]      AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  int  lhsOffset  =  Math.min(relativeOrder,  lhsOffset);  [BUGGY]    multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	int  lhsOffset  =  Math.min(relativeOrder,  lhsOffset);	      	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	6	None	replace
40	[BUG]  [BUGGY]  multiply(lhs,  lhsOffset,  0,  rhs,  resultOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  multiply(lhs,  lhsOffset,  0,  rhs,  resultOffset);  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  lhsOffset,  0,  rhs,  resultOffset);	      multiply(lhs,    lhsOffset,    -1,    reciprocal,    0,    result,    resultOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	8	None	replace
41	[BUG]  [BUGGY]  double[]  reciprocal  =  new  double[getReal()  ];  [CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]            AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]  double[]  reciprocal  =  new  double[getReal()  ];  [BUGGY]    pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	double[]  reciprocal  =  new  double[getReal()  ];	      double[]    reciprocal    =    new    double[getSize()    ];    	non-compiled	[CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	9	None	replace
42	[BUG]  [BUGGY]      int  lhsOffset  =  Math.min(lhs.length,  lhsOffset);  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]    public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];    [BUGGY]      int  lhsOffset  =  Math.min(lhs.length,  lhsOffset);  [BUGGY]    multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	        int  lhsOffset  =  Math.min(lhs.length,  lhsOffset);	  	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	5	None	add
