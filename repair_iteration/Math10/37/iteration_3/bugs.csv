bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  Pow(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  Pow(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,    lhsOffset,    rhs,    0,    result,    resultOffset);    Pow(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
2	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  pow(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	add	multiply(lhs,    lhsOffset,    rhs,    0,    result,    resultOffset);    pow(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);	  	compilable	  [FE]  AssertionError  	35	1	add
3	[BUG]  [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  pow(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  pow(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,    lhsOffset,    rhs,    0,    result,    resultOffset);    pow(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);	  	compilable	  [FE]  AssertionError  	35	1	add
4	[BUG]  [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  double[]  lhs  =  new  double[getSize()  ];  [CE]  variable  lhs  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]        AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  double[]  lhs  =  new  double[getSize()  ];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,    lhsOffset,    rhs,    0,    result,    resultOffset);    double[]  lhs  =  new  double[getSize()  ];	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	35	None	add
5	[BUG]  [BUGGY]  multiply(lhs,  rhsOffset,  0,  result,  lhsOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  rhsOffset,  0,  result,  lhsOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  rhsOffset,  0,  result,  lhsOffset);	  multiply(lhs,    lhsOffset,    0,    result,    rhsOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	12	None	replace
6	[BUG]  [BUGGY]  Pow(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  Pow(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	Pow(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);	  multiply(lhs,    lhsOffset,    rhs,    0,    result,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
7	[BUG]  [BUGGY]  final  double[]  reciprocal  =  new  double[getRawOffset()  ];  [CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  final  double[]  reciprocal  =  new  double[getRawOffset()  ];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	final  double[]  reciprocal  =  new  double[getRawOffset()  ];	  double[]    reciprocal    =    new    double[getRawOffset()    ];    	non-compiled	[CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	34	None	replace
8	[BUG]  [BUGGY]  double[]  reciprocal  =  new  double[getRawOffset()  +  1];  [CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]                  AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  double[]  reciprocal  =  new  double[getRawOffset()  +  1];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	double[]  reciprocal  =  new  double[getRawOffset()  +  1];	  double[]    reciprocal    =    new    double[getRawOffset()    ];    	non-compiled	[CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	34	None	replace
9	[BUG]  [BUGGY]  int  lhsOffset  =  Math.min(lhs,  rhsOffset);  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]          AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  int  lhsOffset  =  Math.min(lhs,  rhsOffset);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	int  lhsOffset  =  Math.min(lhs,  rhsOffset);	  int    lhsOffset    =    Math.min(relativeOrder,    lhsOffset);    	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	39	None	replace
10	[BUG]  [BUGGY]  multiply(lhs,  rhs,  lhsOffset,  0,  result,  resultOffset,  1);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  rhs,  lhsOffset,  0,  result,  resultOffset,  1);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  rhs,  lhsOffset,  0,  result,  resultOffset,  1);	  multiply(lhs,    rhs,    lhsOffset,    0,    result,    resultOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	11	None	replace
11	[BUG]  [BUGGY]  multiply(lhs,  lhsOffset,  0,  result,  rhsOffset,  resultOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  lhsOffset,  0,  result,  rhsOffset,  resultOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  lhsOffset,  0,  result,  rhsOffset,  resultOffset);	  multiply(lhs,    lhsOffset,    0,    result,    resultOffset,    rhsOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	37	None	replace
12	[BUG]  [BUGGY]  multiplier(lhs,  rhs,  0,  result,  resultOffset  +  1);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiplier(lhs,  rhs,  0,  result,  resultOffset  +  1);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiplier(lhs,  rhs,  0,  result,  resultOffset  +  1);	  multiplier(lhs,    rhs,    0,    result,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
13	[BUG]  [BUGGY]  poke(lhs,  rhs,  0,  result,  0);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  poke(lhs,  rhs,  0,  result,  0);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	poke(lhs,  rhs,  0,  result,  0);	  poke(lhs,    rhsOffset,    0,    result,    0);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
14	[BUG]  [BUGGY]  pokew(lhs,  rhsOffset,  0,  result,  0);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pokew(lhs,  rhsOffset,  0,  result,  0);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pokew(lhs,  rhsOffset,  0,  result,  0);	  pow(lhs,    rhsOffset,    0,    result,    0);    pokew(lhs,    rhsOffset,    0,    result,    0);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
15	[BUG]  [BUGGY]  pokew(lhs,  rhsOffset,  0,  resultOffset,  0);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pokew(lhs,  rhsOffset,  0,  resultOffset,  0);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pokew(lhs,  rhsOffset,  0,  resultOffset,  0);	  pow(lhs,    rhsOffset,    0,    result,    0);    pokew(lhs,    rhsOffset,    0,    result,    0);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
16	[BUG]  [BUGGY]  multiply(lhs,  rhs,  0,  result,  resultOffset,  1);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  rhs,  0,  result,  resultOffset,  1);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  rhs,  0,  result,  resultOffset,  1);	  multiply(lhs,    rhs,    0,    result,    resultOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	32	None	replace
17	[BUG]  [BUGGY]  Pow(lhs,  rhsOffset,  0,  result,  rhsOffset  +  1);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  Pow(lhs,  rhsOffset,  0,  result,  rhsOffset  +  1);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	Pow(lhs,  rhsOffset,  0,  result,  rhsOffset  +  1);	  Pow(lhs,    rhsOffset,    0,    result,    rhsOffset);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pow(lhs,  rhsOffset,  0,  result,  rhsOffset);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	add	pow(lhs,  rhsOffset,  0,  result,  rhsOffset);	  pow(lhs,    rhsOffset,    0,    reciprocal,    0);    pow(lhs,    rhsOffset,    0,    reciprocal,    0);    	compilable	  [FE]  AssertionError  	15	8	replace
19	[BUG]  [BUGGY]  pow(lhs,  rhsOffset,  0,  result,  rhsOffset);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pow(lhs,  rhsOffset,  0,  result,  rhsOffset);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pow(lhs,  rhsOffset,  0,  result,  rhsOffset);	  pow(lhs,    rhsOffset,    0,    reciprocal,    0);    pow(lhs,    rhsOffset,    0,    reciprocal,    0);    	compilable	  [FE]  AssertionError  	15	8	replace
20	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pow(lhs,  lhsOffset,  0,  result,  0);  pow(lhs,  lhsOffset,  0,  result,  0);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	add	pow(lhs,    lhsOffset,    0,    result,    0);    pow(lhs,  lhsOffset,  0,  result,  0);	  	compilable	  [FE]  AssertionError  	18	1	add
21	[BUG]  [BUGGY]  pow(lhs,  lhsOffset,  0,  result,  0);  pow(lhs,  lhsOffset,  0,  result,  0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pow(lhs,  lhsOffset,  0,  result,  0);  pow(lhs,  lhsOffset,  0,  result,  0);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pow(lhs,    lhsOffset,    0,    result,    0);    pow(lhs,  lhsOffset,  0,  result,  0);	  	compilable	  [FE]  AssertionError  	18	1	add
22	[BUG]  [BUGGY]  pow(lhs,  lhsOffset,  0,  result,  0);  Pow(lhs,  lhsOffset,  0,  result,  0);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pow(lhs,  lhsOffset,  0,  result,  0);  Pow(lhs,  lhsOffset,  0,  result,  0);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pow(lhs,    lhsOffset,    0,    result,    0);    Pow(lhs,  lhsOffset,  0,  result,  0);	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
23	[BUG]  [BUGGY]  pow(lhs,  lhsOffset,  0,  result,  0);  pokew(lhs,  lhsOffset,  0,  result,  0);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pow(lhs,  lhsOffset,  0,  result,  0);  pokew(lhs,  lhsOffset,  0,  result,  0);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pow(lhs,    lhsOffset,    0,    result,    0);    pokew(lhs,  lhsOffset,  0,  result,  0);	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
24	[BUG]  [BUGGY]  Pow(lhs,  lhsOffset,  -1,  reciprocal,  0,  result,  lhsOffset);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  Pow(lhs,  lhsOffset,  -1,  reciprocal,  0,  result,  lhsOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	Pow(lhs,  lhsOffset,  -1,  reciprocal,  0,  result,  lhsOffset);	  Pow(lhs,    rhsOffset,    -1,    reciprocal,    0,    result,    lhsOffset);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
25	[BUG]  [BUGGY]  multiply(lhs,  lhsOffset,  -1,  rhs,  0,  result,  resultOffset,  0);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  lhsOffset,  -1,  rhs,  0,  result,  resultOffset,  0);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  lhsOffset,  -1,  rhs,  0,  result,  resultOffset,  0);	  multiply(lhs,    lhsOffset,    -1,    rhs,    0,    result,    resultOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	22	None	replace
26	[BUG]  [BUGGY]  multiply(lhs,  lhsOffset,  -1,  rhs,  0,  result,  resultOffset,  1);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  lhsOffset,  -1,  rhs,  0,  result,  resultOffset,  1);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  lhsOffset,  -1,  rhs,  0,  result,  resultOffset,  1);	  multiply(lhs,    lhsOffset,    -1,    rhs,    0,    result,    resultOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	22	None	replace
27	[BUG]  [BUGGY]  multiply(lhs,  lhsOffset,  -1,  result,  0,  rhsOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  lhsOffset,  -1,  result,  0,  rhsOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  lhsOffset,  -1,  result,  0,  rhsOffset);	  multiply(lhs,    rhs,    -1,    result,    0,    lhsOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	30	None	replace
28	[BUG]  [BUGGY]  multiply(lhs,  rhs,  0,  result,  lhsOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  rhs,  0,  result,  lhsOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  rhs,  0,  result,  lhsOffset);	  multiply(lhs,    rhs,    -1,    result,    0,    lhsOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	30	None	replace
29	[BUG]  [BUGGY]  final  double[]  reciprocal  =  new  double[getRowSize()  ];  [CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  final  double[]  reciprocal  =  new  double[getRowSize()  ];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	final  double[]  reciprocal  =  new  double[getRowSize()  ];	  final    double[]    reciprocal    =    new    double[getSize()    ];    	non-compiled	[CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	5	None	replace
30	[BUG]  [BUGGY]  final  double[]  reciprocal  =  new  double[lhs.length  ];  [CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]                  AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  final  double[]  reciprocal  =  new  double[lhs.length  ];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	final  double[]  reciprocal  =  new  double[lhs.length  ];	  final    double[]    reciprocal    =    new    double[getSize()    ];    	non-compiled	[CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	5	None	replace
31	[BUG]  [BUGGY]  Pow(lhs,  rhsOffset,  0,  reciprocal,  0);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  Pow(lhs,  rhsOffset,  0,  reciprocal,  0);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	Pow(lhs,  rhsOffset,  0,  reciprocal,  0);	  pow(lhs,    rhsOffset,    0,    reciprocal,    0);    Pow(lhs,    rhsOffset,    0,    reciprocal,    0);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
32	[BUG]  [BUGGY]  Pow(lhs,  rhsOffset,  0,  result,  0);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  Pow(lhs,  rhsOffset,  0,  result,  0);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	Pow(lhs,  rhsOffset,  0,  result,  0);	  pow(lhs,    rhsOffset,    0,    reciprocal,    0);    Pow(lhs,    rhsOffset,    0,    reciprocal,    0);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
33	[BUG]  [BUGGY]  int  lhsOffset  =  Math.min(lhs.length,  reciprocal.length);  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]        AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  int  lhsOffset  =  Math.min(lhs.length,  reciprocal.length);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	int  lhsOffset  =  Math.min(lhs.length,  reciprocal.length);	          int    lhsOffset    =    Math.min(lhs.length,    lhsOffset);    	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	42	None	replace
34	[BUG]  [BUGGY]  Pow(lhs,  lhsOffset,  -1,  result,  0,  resultOffset);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  Pow(lhs,  lhsOffset,  -1,  result,  0,  resultOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	Pow(lhs,  lhsOffset,  -1,  result,  0,  resultOffset);	  Pow(lhs,    rhsOffset,    -1,    result,    0,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
35	[BUG]  [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  resultOffset,  false);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  resultOffset,  false);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  lhsOffset,  rhs,  resultOffset,  false);	  multiply(lhs,    lhsOffset,    0,    rhs,    resultOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	40	None	replace
36	[BUG]  [BUGGY]  ((  double[])lhs[1]).doubleValue();  [CE]  inconvertible  types  [FE]        AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  ((  double[])lhs[1]).doubleValue();  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	((  double[])lhs[1]).doubleValue();	  ((    double[])lhs[0]).doubleValue();    	non-compiled	[CE]  inconvertible  types	10	None	replace
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pow(lhs,    rhsOffset,    0,    result,    0);    pow(lhs,  rhsOffset,  0,  result,  0);  pow(lhs,  rhsOffset,  0,  result,  0);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	add	pow(lhs,        rhsOffset,        0,        result,        0);        pow(lhs,    rhsOffset,    0,    result,    0);    pow(lhs,  rhsOffset,  0,  result,  0);	  	compilable	  [FE]  AssertionError  	1	1	add
38	[BUG]  [BUGGY]  pow(lhs,    rhsOffset,    0,    result,    0);    pow(lhs,  rhsOffset,  0,  result,  0);  pow(lhs,  rhsOffset,  0,  result,  0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pow(lhs,    rhsOffset,    0,    result,    0);    pow(lhs,  rhsOffset,  0,  result,  0);  pow(lhs,  rhsOffset,  0,  result,  0);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pow(lhs,        rhsOffset,        0,        result,        0);        pow(lhs,    rhsOffset,    0,    result,    0);    pow(lhs,  rhsOffset,  0,  result,  0);	  	compilable	  [FE]  AssertionError  	1	1	add
39	[BUG]  [BUGGY]  pow(lhs,    rhsOffset,    0,    result,    0);    pow(lhs,  rhsOffset,  0,  result,  0);  Pow(lhs,  rhsOffset,  0,  result,  0);  pow(lhs,  rhsOffset,  0,  result,  0);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pow(lhs,    rhsOffset,    0,    result,    0);    pow(lhs,  rhsOffset,  0,  result,  0);  Pow(lhs,  rhsOffset,  0,  result,  0);  pow(lhs,  rhsOffset,  0,  result,  0);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pow(lhs,        rhsOffset,        0,        result,        0);        pow(lhs,    rhsOffset,    0,    result,    0);    Pow(lhs,  rhsOffset,  0,  result,  0);  pow(lhs,  rhsOffset,  0,  result,  0);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
40	[BUG]  [BUGGY]  pow(lhs,    rhsOffset,    0,    result,    0);    pow(lhs,  rhsOffset,  0,  result,  0);  Pow(lhs,  rhsOffset,  0,  result,  0);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pow(lhs,    rhsOffset,    0,    result,    0);    pow(lhs,  rhsOffset,  0,  result,  0);  Pow(lhs,  rhsOffset,  0,  result,  0);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pow(lhs,        rhsOffset,        0,        result,        0);        pow(lhs,    rhsOffset,    0,    result,    0);    Pow(lhs,  rhsOffset,  0,  result,  0);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
41	[BUG]  [BUGGY]  pow(lhs,  rhs,  0,  result,  0);  [CE]  no  suitable  method  found  for  pow(double[],double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pow(lhs,  rhs,  0,  result,  0);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pow(lhs,  rhs,  0,  result,  0);	  pow(lhs,    lhsOffset,    0,    result,    0);    	non-compiled	[CE]  no  suitable  method  found  for  pow(double[],double[],int,double[],int)	19	None	replace
42	[BUG]  [BUGGY]  Pow(lhs,  rhs,  0,  result,  lhsOffset);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  Pow(lhs,  rhs,  0,  result,  lhsOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	Pow(lhs,  rhs,  0,  result,  lhsOffset);	  Pow(lhs,    rhs,    0,    result,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
43	[BUG]  [BUGGY]  final  double[]  reciprocal  =  new  double[getReal()  ];  [CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  final  double[]  reciprocal  =  new  double[getReal()  ];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	final  double[]  reciprocal  =  new  double[getReal()  ];	  double[]    reciprocal    =    new    double[getReal()    ];    	non-compiled	[CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	41	None	replace
44	[BUG]  [BUGGY]  double[]  reciprocal  =  new  double[getReal()  +  1];  [CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]                  AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  double[]  reciprocal  =  new  double[getReal()  +  1];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	double[]  reciprocal  =  new  double[getReal()  +  1];	  double[]    reciprocal    =    new    double[getReal()    ];    	non-compiled	[CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	41	None	replace
45	[BUG]  [BUGGY]  pokew(lhs,  rhsOffset,  0,  reciprocal,  0);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pokew(lhs,  rhsOffset,  0,  reciprocal,  0);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pokew(lhs,  rhsOffset,  0,  reciprocal,  0);	  pow(lhs,    rhsOffset,    0,    reciprocal,    0);    pokew(lhs,    rhsOffset,    0,    reciprocal,    0);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
46	[BUG]  [BUGGY]  double[]  reciprocal  =  new  double[getRowSize()  +  1];  [CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]                  AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  double[]  reciprocal  =  new  double[getRowSize()  +  1];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	double[]  reciprocal  =  new  double[getRowSize()  +  1];	  double[]    reciprocal    =    new    double[getRowSize()    ];    	non-compiled	[CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	6	None	replace
47	[BUG]  [BUGGY]  multiply(lhs,  lhsOffset,  -1,  result,  0,  resultOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  lhsOffset,  -1,  result,  0,  resultOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  lhsOffset,  -1,  result,  0,  resultOffset);	  multiply(lhs,    rhsOffset,    -1,    result,    0,    resultOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	31	None	replace
48	[BUG]  [BUGGY]  multiply(lhs,  rhsOffset,  0,  result,  resultOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  rhsOffset,  0,  result,  resultOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  rhsOffset,  0,  result,  resultOffset);	  multiply(lhs,    rhsOffset,    -1,    result,    0,    resultOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	31	None	replace
49	[BUG]  [BUGGY]  int  lhsOffset  =  Math.min(lhs,  lhsOffset);  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]        AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  int  lhsOffset  =  Math.min(lhs,  lhsOffset);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	int  lhsOffset  =  Math.min(lhs,  lhsOffset);	          int    lhsOffset    =    Math.min(lhsOffset,    rhsOffset);    	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	27	None	replace
50	[BUG]  [BUGGY]  int  lhsOffset  =  Math.min(lhs,  rhs);  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]          AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  int  lhsOffset  =  Math.min(lhs,  rhs);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	int  lhsOffset  =  Math.min(lhs,  rhs);	          int    lhsOffset    =    Math.min(lhsOffset,    rhsOffset);    	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	27	None	replace
51	[BUG]  [BUGGY]  ((  double[])lhs[0]).doubleValue(),  resultOffset);  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  ((  double[])lhs[0]).doubleValue(),  resultOffset);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	((  double[])lhs[0]).doubleValue(),  resultOffset);	          ((    double[])lhs[0]).doubleValue());    	non-compiled	[CE]  ';'  expected	20	None	replace
52	[BUG]  [BUGGY]  int  lhsOffset  =  Math.min(lhs.length,  rhs.length  +  1);  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]        AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  int  lhsOffset  =  Math.min(lhs.length,  rhs.length  +  1);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	int  lhsOffset  =  Math.min(lhs.length,  rhs.length  +  1);	  int    lhsOffset    =    Math.min(lhs.length,    rhs.length);    	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	38	None	replace
53	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pow(lhs,    rhsOffset,    0,    reciprocal,    0);    pow(lhs,  rhsOffset,  0,  reciprocal,  0);  pow(lhs,  rhsOffset,  0,  reciprocal,  0);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	add	pow(lhs,        rhsOffset,        0,        reciprocal,        0);        pow(lhs,    rhsOffset,    0,    reciprocal,    0);    pow(lhs,  rhsOffset,  0,  reciprocal,  0);	  	compilable	  [FE]  AssertionError  	14	1	add
54	[BUG]  [BUGGY]  pow(lhs,    rhsOffset,    0,    reciprocal,    0);    pow(lhs,  rhsOffset,  0,  reciprocal,  0);  pow(lhs,  rhsOffset,  0,  reciprocal,  0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pow(lhs,    rhsOffset,    0,    reciprocal,    0);    pow(lhs,  rhsOffset,  0,  reciprocal,  0);  pow(lhs,  rhsOffset,  0,  reciprocal,  0);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pow(lhs,        rhsOffset,        0,        reciprocal,        0);        pow(lhs,    rhsOffset,    0,    reciprocal,    0);    pow(lhs,  rhsOffset,  0,  reciprocal,  0);	  	compilable	  [FE]  AssertionError  	14	1	add
55	[BUG]  [BUGGY]  pow(lhs,    rhsOffset,    0,    reciprocal,    0);    pow(lhs,  rhsOffset,  0,  reciprocal,  0);  Pow(lhs,  rhsOffset,  0,  reciprocal,  0);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pow(lhs,    rhsOffset,    0,    reciprocal,    0);    pow(lhs,  rhsOffset,  0,  reciprocal,  0);  Pow(lhs,  rhsOffset,  0,  reciprocal,  0);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pow(lhs,        rhsOffset,        0,        reciprocal,        0);        pow(lhs,    rhsOffset,    0,    reciprocal,    0);    Pow(lhs,  rhsOffset,  0,  reciprocal,  0);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
56	[BUG]  [BUGGY]  pow(lhs,    rhsOffset,    0,    reciprocal,    0);    pow(lhs,  rhsOffset,  0,  reciprocal,  0);  pom(lhs,  rhsOffset,  0,  reciprocal,  0);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pow(lhs,    rhsOffset,    0,    reciprocal,    0);    pow(lhs,  rhsOffset,  0,  reciprocal,  0);  pom(lhs,  rhsOffset,  0,  reciprocal,  0);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pow(lhs,        rhsOffset,        0,        reciprocal,        0);        pow(lhs,    rhsOffset,    0,    reciprocal,    0);    pom(lhs,  rhsOffset,  0,  reciprocal,  0);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
57	[BUG]  [BUGGY]  pow(lhs,    rhsOffset,    0,    reciprocal,    0);    pow(lhs,  rhsOffset,  0,  reciprocal,  0);  pokew(lhs,  rhsOffset,  0,  reciprocal,  0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pow(lhs,    rhsOffset,    0,    reciprocal,    0);    pow(lhs,  rhsOffset,  0,  reciprocal,  0);  pokew(lhs,  rhsOffset,  0,  reciprocal,  0);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pow(lhs,        rhsOffset,        0,        reciprocal,        0);        pow(lhs,    rhsOffset,    0,    reciprocal,    0);    pokew(lhs,  rhsOffset,  0,  reciprocal,  0);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
58	[BUG]  [BUGGY]  pokew(lhs,  rhsOffset,  0,  resultOffset);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pokew(lhs,  rhsOffset,  0,  resultOffset);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pokew(lhs,  rhsOffset,  0,  resultOffset);	  pow(lhs,    rhsOffset,    0,    reciprocal,    0);    pokew(lhs,    rhsOffset,    0,    reciprocal,    0);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
59	[BUG]  [BUGGY]  int  lhsOffset  =  Math.min(lhs.length,  rhsOffset);  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]        AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  int  lhsOffset  =  Math.min(lhs.length,  rhsOffset);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	int  lhsOffset  =  Math.min(lhs.length,  rhsOffset);	          int    lhsOffset    =    Math.min(lhs.length,    lhsOffset);    	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	42	None	replace
60	[BUG]  [BUGGY]  int  lhsOffset  =  Math.min(relatives.length,  lhsOffset);  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]          AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  int  lhsOffset  =  Math.min(relatives.length,  lhsOffset);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	int  lhsOffset  =  Math.min(relatives.length,  lhsOffset);	          int    lhsOffset    =    Math.min(lhs.length,    lhsOffset);    	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	42	None	replace
61	[BUG]  [BUGGY]  Pow(rhs,  lhsOffset,  0,  result,  rhsOffset);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  Pow(rhs,  lhsOffset,  0,  result,  rhsOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	Pow(rhs,  lhsOffset,  0,  result,  rhsOffset);	  Pow(lhs,    rhsOffset,    -1,    reciprocal,    0,    result,    rhsOffset);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
62	[BUG]  [BUGGY]  multiply(lhs,  rhsOffset,  0,  result,  rhsOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  rhsOffset,  0,  result,  rhsOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  rhsOffset,  0,  result,  rhsOffset);	  multiply(lhs,    rhsOffset,    -1,    result,    0,    resultOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	31	None	replace
63	[BUG]  [BUGGY]  pow(lhs,    rhsOffset,    0,    result,    0);    pow(lhs,  rhsOffset,  0,  result,  0);  pokew(lhs,  rhsOffset,  0,  result,  0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pow(lhs,    rhsOffset,    0,    result,    0);    pow(lhs,  rhsOffset,  0,  result,  0);  pokew(lhs,  rhsOffset,  0,  result,  0);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pow(lhs,        rhsOffset,        0,        result,        0);        pow(lhs,    rhsOffset,    0,    result,    0);    pokew(lhs,  rhsOffset,  0,  result,  0);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
64	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  0,  result,  rhsOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	add	multiply(lhs,  lhsOffset,  rhs,  0,  result,  rhsOffset);	  multiply(lhs,    lhsOffset,    rhs,    0,    result,    resultOffset);    	compilable	  [FE]  AssertionError  	36	8	replace
65	[BUG]  [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  0,  result,  rhsOffset);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  0,  result,  rhsOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  lhsOffset,  rhs,  0,  result,  rhsOffset);	  multiply(lhs,    lhsOffset,    rhs,    0,    result,    resultOffset);    	compilable	  [FE]  AssertionError  	36	8	replace
66	[BUG]  [BUGGY]  final  double[]  reciprocal  =  new  double[getRealSize()  ];  [CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  final  double[]  reciprocal  =  new  double[getRealSize()  ];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	final  double[]  reciprocal  =  new  double[getRealSize()  ];	  final    double[]    reciprocal    =    new    double[getSize()    ];    	non-compiled	[CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	5	None	replace
67	[BUG]  [BUGGY]  Pow(lhs,  rhs,  0,  result,  rhsOffset);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  Pow(lhs,  rhs,  0,  result,  rhsOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	Pow(lhs,  rhs,  0,  result,  rhsOffset);	  Pow(lhs,    rhs,    0,    result,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
68	[BUG]  [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  resultOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  resultOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  lhsOffset,  rhs,  resultOffset);	  multiply(lhs,    lhsOffset,    0,    rhs,    resultOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	40	None	replace
69	[BUG]  [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  Pow(lhs,  lhsOffset,  rhs,  0,  result);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  Pow(lhs,  lhsOffset,  rhs,  0,  result);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,    lhsOffset,    rhs,    0,    result,    resultOffset);    Pow(lhs,  lhsOffset,  rhs,  0,  result);	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
70	[BUG]  [BUGGY]  int  lhsOffset  =  Math.min(lhsOffset,  rhs);  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]        AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  int  lhsOffset  =  Math.min(lhsOffset,  rhs);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	int  lhsOffset  =  Math.min(lhsOffset,  rhs);	          int    lhsOffset    =    Math.min(lhsOffset,    rhsOffset);    	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	27	None	replace
71	[BUG]  [BUGGY]  int  lhsOffset  =  Math.min(relatives.length,  rhsOffset);  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]          AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  int  lhsOffset  =  Math.min(relatives.length,  rhsOffset);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	int  lhsOffset  =  Math.min(relatives.length,  rhsOffset);	          int    lhsOffset    =    Math.min(lhsOffset,    rhsOffset);    	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	27	None	replace
72	[BUG]  [BUGGY]  double[]  reciprocal  =  new  double[getColumnSize()  ];  [CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]                  AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  double[]  reciprocal  =  new  double[getColumnSize()  ];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	double[]  reciprocal  =  new  double[getColumnSize()  ];	  double[]    reciprocal    =    new    double[getRowSize()    ];    	non-compiled	[CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	6	None	replace
73	[BUG]  [BUGGY]  Pow(lhs,  rhsOffset,  0,  result);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  Pow(lhs,  rhsOffset,  0,  result);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	Pow(lhs,  rhsOffset,  0,  result);	  pow(lhs,    rhsOffset,    0,    result,    0);    Pow(lhs,    rhsOffset,    0,    result,    0);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
74	[BUG]  [BUGGY]  pow(lhs,  rhsOffset,  0,  result);  [CE]  no  suitable  method  found  for  pow(double[],int,int,double[])  [FE]    AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pow(lhs,  rhsOffset,  0,  result);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pow(lhs,  rhsOffset,  0,  result);	  pow(lhs,    rhsOffset,    0,    result,    0);    pow(lhs,    rhsOffset,    0,    result,    0);    	non-compiled	[CE]  no  suitable  method  found  for  pow(double[],int,int,double[])	2	None	replace
75	[BUG]  [BUGGY]  pokew(lhs,  rhsOffset,  0,  result);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pokew(lhs,  rhsOffset,  0,  result);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pokew(lhs,  rhsOffset,  0,  result);	  pow(lhs,    rhsOffset,    0,    result,    0);    pokew(lhs,    rhsOffset,    0,    result,    0);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
76	[BUG]  [BUGGY]  int  lhsOffset  =  Math.min(relatives.length,  rhs.length);  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]        AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  int  lhsOffset  =  Math.min(relatives.length,  rhs.length);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	int  lhsOffset  =  Math.min(relatives.length,  rhs.length);	  int    lhsOffset    =    Math.min(lhs.length,    rhs.length);    	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	38	None	replace
77	[BUG]  [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  resultOffset,  0,  result);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  resultOffset,  0,  result);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  lhsOffset,  rhs,  resultOffset,  0,  result);	  multiply(lhs,    rhs,    lhsOffset,    0,    result,    resultOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	11	None	replace
78	[BUG]  [BUGGY]  ((  double[])lhs[1]).doubleValue());  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  ((  double[])lhs[1]).doubleValue());  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	((  double[])lhs[1]).doubleValue());	          ((    double[])lhs[0]).doubleValue());    	non-compiled	[CE]  ';'  expected	20	None	replace
79	[BUG]  [BUGGY]  int  lhsOffset  =  Math.min(relativeOrder,  rhsOffset);  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]          AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  int  lhsOffset  =  Math.min(relativeOrder,  rhsOffset);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	int  lhsOffset  =  Math.min(relativeOrder,  rhsOffset);	  int    lhsOffset    =    Math.min(relativeOrder,    lhsOffset);    	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	39	None	replace
80	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  0,  result,  lhsOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	add	multiply(lhs,  lhsOffset,  rhs,  0,  result,  lhsOffset);	  multiply(lhs,    rhs,    -1,    result,    0,    lhsOffset);    	compilable	  [FE]  AssertionError  	30	8	replace
81	[BUG]  [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  0,  result,  lhsOffset);  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  0,  result,  lhsOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  lhsOffset,  rhs,  0,  result,  lhsOffset);	  multiply(lhs,    rhs,    -1,    result,    0,    lhsOffset);    	compilable	  [FE]  AssertionError  	30	8	replace
82	[BUG]  [BUGGY]  ((  double[])lhs[0],  rhs[0]).doubleValue();  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  ((  double[])lhs[0],  rhs[0]).doubleValue();  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	((  double[])lhs[0],  rhs[0]).doubleValue();	  ((    double[])lhs[0]).doubleValue();    	non-compiled	[CE]  ')'  expected	10	None	replace
83	[BUG]  [BUGGY]  int  lhsOffset  =  Math.min(relativeOffset,  rhs.length);  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]        AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  int  lhsOffset  =  Math.min(relativeOffset,  rhs.length);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	int  lhsOffset  =  Math.min(relativeOffset,  rhs.length);	  int    lhsOffset    =    Math.min(lhs.length,    rhs.length);    	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	38	None	replace
84	[BUG]  [BUGGY]  multiplier(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiplier(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiplier(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);	  multiply(lhs,    lhsOffset,    -1,    rhs,    0,    result,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
85	[BUG]  [BUGGY]  int  lhsOffset  =  Math.min(relativeOffset,  lhsOffset);  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]          AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  int  lhsOffset  =  Math.min(relativeOffset,  lhsOffset);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	int  lhsOffset  =  Math.min(relativeOffset,  lhsOffset);	          int    lhsOffset    =    Math.min(lhsOffset,    lhsOffset);    	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	28	None	replace
86	[BUG]  [BUGGY]  multiplier(lhs,  lhsOffset,  rhs,  resultOffset,  0,  result);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiplier(lhs,  lhsOffset,  rhs,  resultOffset,  0,  result);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiplier(lhs,  lhsOffset,  rhs,  resultOffset,  0,  result);	  multiply(lhs,    rhs,    lhsOffset,    0,    result,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
87	[BUG]  [BUGGY]  double[]  reciprocal  =  new  double[getRow()  ];  [CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  double[]  reciprocal  =  new  double[getRow()  ];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	double[]  reciprocal  =  new  double[getRow()  ];	  double[]    reciprocal    =    new    double[getReal()    ];    	non-compiled	[CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	41	None	replace
88	[BUG]  [BUGGY]  multiplier(lhs,  rhs,  1,  result,  resultOffset);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiplier(lhs,  rhs,  1,  result,  resultOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiplier(lhs,  rhs,  1,  result,  resultOffset);	  multiplier(lhs,    rhs,    0,    result,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
89	[BUG]  [BUGGY]  int  lhsOffset  =  Math.min(relativeOffset,  rhsOffset);  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]        AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  int  lhsOffset  =  Math.min(relativeOffset,  rhsOffset);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	int  lhsOffset  =  Math.min(relativeOffset,  rhsOffset);	          int    lhsOffset    =    Math.min(lhsOffset,    rhsOffset);    	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	27	None	replace
90	[BUG]  [BUGGY]  int  lhsOffset  =  Math.min(returnOffset,  lhsOffset);  [CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]          AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  int  lhsOffset  =  Math.min(returnOffset,  lhsOffset);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	int  lhsOffset  =  Math.min(returnOffset,  lhsOffset);	          int    lhsOffset    =    Math.min(lhsOffset,    rhsOffset);    	non-compiled	[CE]  variable  lhsOffset  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	27	None	replace
91	[BUG]  [BUGGY]  pow(lhs,    rhsOffset,    0,    result,    0);    pow(lhs,  rhsOffset,  0,  result,  0);  pom(lhs,  rhsOffset,  0,  result,  0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  pow(lhs,    rhsOffset,    0,    result,    0);    pow(lhs,  rhsOffset,  0,  result,  0);  pom(lhs,  rhsOffset,  0,  result,  0);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	pow(lhs,        rhsOffset,        0,        result,        0);        pow(lhs,    rhsOffset,    0,    result,    0);    pom(lhs,  rhsOffset,  0,  result,  0);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
92	[BUG]  [BUGGY]  multiply(lhs,  rhs,  0,  result,  resultOffset,  rhsOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  rhs,  0,  result,  resultOffset,  rhsOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  rhs,  0,  result,  resultOffset,  rhsOffset);	  multiply(lhs,    rhs,    0,    result,    resultOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	32	None	replace
93	[BUG]  [BUGGY]  double[]  reciprocal  =  new  double[getRawOffset()  +  lhs.length  ];  [CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  double[]  reciprocal  =  new  double[getRawOffset()  +  lhs.length  ];  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	double[]  reciprocal  =  new  double[getRawOffset()  +  lhs.length  ];	  double[]    reciprocal    =    new    double[getRawOffset()    ];    	non-compiled	[CE]  variable  reciprocal  is  already  defined  in  method  divide(double[],int,double[],int,double[],int)	34	None	replace
94	[BUG]  [BUGGY]  Pow(lhs,  rhsOffset,  0,  result,  rhsOffset,  rhsOffset);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  Pow(lhs,  rhsOffset,  0,  result,  rhsOffset,  rhsOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	Pow(lhs,  rhsOffset,  0,  result,  rhsOffset,  rhsOffset);	  Pow(lhs,    rhsOffset,    0,    result,    rhsOffset);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
95	[BUG]  [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  resultOffset,  rhsOffset);  [CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  multiply(lhs,  lhsOffset,  rhs,  resultOffset,  rhsOffset);  [BUGGY]      pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	multiply(lhs,  lhsOffset,  rhs,  resultOffset,  rhsOffset);	  multiply(lhs,    lhsOffset,    0,    result,    resultOffset,    rhsOffset);    	non-compiled	[CE]  method  multiply  in  class  DSCompiler  cannot  be  applied  to  given  types;	37	None	replace
96	[BUG]  [BUGGY]  poke(lhs,  rhsOffset,  0,  result,  1);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];      [BUGGY]  poke(lhs,  rhsOffset,  0,  result,  1);  [BUGGY]      multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	797	797	1	replace	poke(lhs,  rhsOffset,  0,  result,  1);	  poke(lhs,    rhsOffset,    0,    result,    0);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
