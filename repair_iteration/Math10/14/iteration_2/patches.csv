bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  x  =  resultOffset.length;  [CE]  int  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  resultOffset.length;  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  double  x  =  resultOffset.length;	  final    double    x    =    function.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	31	None	replace
2	[BUG]  [BUGGY]  final  double[][]  coeff  =  new  double[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double[][]  coeff  =  new  double[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  double[][]  coeff  =  new  double[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff	  final    double[][]    coeff    =    new    double[1    +    order];    for(int    i    =    0;    i    <    coeff;    ++i)    {    function[i]    =    FastMath.atan(coeff    >>    	non-compiled	[CE]  ')'  expected	32	None	replace
3	[BUG]  [BUGGY]  final  double[][]  coeff  =  new  double[2  +  order];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double[][]  coeff  =  new  double[2  +  order];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  double[][]  coeff  =  new  double[2  +  order];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff	  final    double[][]    coeff    =    new    double[1    +    order];    for(int    i    =    0;    i    <    coeff;    ++i)    {    function[i]    =    FastMath.atan(coeff    >>    	non-compiled	[CE]  ')'  expected	32	None	replace
4	[BUG]  [BUGGY]  final  double  x  =  result[0];  final  double  x  =  result[0];  [CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  result[0];  final  double  x  =  result[0];  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final    double    x    =    result[0];    final  double  x  =  result[0];	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)	14	None	add
5	[BUG]  [BUGGY]  final  double  x  =  result[0];  final  double  x  =  result[1];  [CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]      AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  result[0];  final  double  x  =  result[1];  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final    double    x    =    result[0];    final  double  x  =  result[1];	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)	14	None	add
6	[BUG]  [BUGGY]  final  int[][]  coeff  =  new  int[1  +  order];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(function[i]);  }  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  int[][]  coeff  =  new  int[1  +  order];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(function[i]);  }  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  int[][]  coeff  =  new  int[1  +  order];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(function[i]);  }	  final    double[][]    coeff    =    new    double[1    +    order];    for(int    i    =    0;    i    <    coeff;    ++i)    {    function[i]    =    FastMath.atan(function[i]);    }    	non-compiled	[CE]  incompatible  types	8	None	replace
7	[BUG]  [BUGGY]  final  double  x  =  result[1];  final  double  x  =  result[1];  [CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  result[1];  final  double  x  =  result[1];  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final    double    x    =    result[1];    final  double  x  =  result[1];	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)	16	None	add
8	[BUG]  [BUGGY]  final  double  x  =  result[1];  final  double  x  =  result[0];  [CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  result[1];  final  double  x  =  result[0];  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final    double    x    =    result[1];    final  double  x  =  result[0];	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)	16	None	add
9	[BUG]  [BUGGY]  final  double  x  =  result[1];  final  double  x  =  result[2];  [CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  result[1];  final  double  x  =  result[2];  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final    double    x    =    result[1];    final  double  x  =  result[2];	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)	16	None	add
10	[BUG]  [BUGGY]  final  double  x  =  operand[resultOffset];  final  double  x  =  operand[resultOffset];  [CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  operand[resultOffset];  final  double  x  =  operand[resultOffset];  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final    double    x    =    operand[resultOffset];    final  double  x  =  operand[resultOffset];	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)	28	None	add
11	[BUG]  [BUGGY]  final  double  x  =  operand[resultOffset];  Final  double  x  =  operand[resultOffset];  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  operand[resultOffset];  Final  double  x  =  operand[resultOffset];  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final    double    x    =    operand[resultOffset];    Final  double  x  =  operand[resultOffset];	  	non-compiled	[CE]  not  a  statement	28	None	add
12	[BUG]  [BUGGY]  final  double  x  =  function.length;  final  double  x  =  function.length;  [CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  function.length;  final  double  x  =  function.length;  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final    double    x    =    function.length;    final  double  x  =  function.length;	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)	30	None	add
13	[BUG]  [BUGGY]  final  double  x  =  function.length;  final  double  x  =  function.length);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  function.length;  final  double  x  =  function.length);  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final    double    x    =    function.length;    final  double  x  =  function.length);	  	non-compiled	[CE]  ';'  expected	30	None	add
14	[BUG]  [BUGGY]  final  double[]  operand  =  new  double[2];  [CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double[]  operand  =  new  double[2];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  double[]  operand  =  new  double[2];	  final    double[]    operand    =    new    double[1];    	non-compiled	[CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)	5	None	replace
15	[BUG]  [BUGGY]  final  double[][]  coeff  =  new  double[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff  >>  '  [CE]  illegal  line  end  in  character  literal  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double[][]  coeff  =  new  double[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff  >>  '  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  double[][]  coeff  =  new  double[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff  >>  '	  final    double[][]    coeff    =    new    double[1    +    order];    for(int    i    =    0;    i    <    coeff;    ++i)    {    function[i]    =    FastMath.atan(coeff    >>    '    	non-compiled	[CE]  illegal  line  end  in  character  literal	4	None	replace
16	[BUG]  [BUGGY]  final  double[][]  coeff  =  new  double[2  +  order];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff  >>  '  [CE]  illegal  line  end  in  character  literal  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double[][]  coeff  =  new  double[2  +  order];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff  >>  '  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  double[][]  coeff  =  new  double[2  +  order];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff  >>  '	  final    double[][]    coeff    =    new    double[1    +    order];    for(int    i    =    0;    i    <    coeff;    ++i)    {    function[i]    =    FastMath.atan(coeff    >>    '    	non-compiled	[CE]  illegal  line  end  in  character  literal	4	None	replace
17	[BUG]  [BUGGY]  final  double  x  =  result[opOffset];  [CE]  cannot  find  symbol  opOffset  [FE]          AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  result[opOffset];  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  double  x  =  result[opOffset];	  final    double    x    =    result[operandOffset];    final    double    x    =    result[opOffset];    	non-compiled	[CE]  cannot  find  symbol  opOffset	13	None	replace
18	[BUG]  [BUGGY]  final  double  x  =  resultOffset  +  1;  final  double  x  =  resultOffset  +  1;  [CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  resultOffset  +  1;  final  double  x  =  resultOffset  +  1;  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final    double    x    =    resultOffset    +    1;    final  double  x  =  resultOffset  +  1;	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)	19	None	add
19	[BUG]  [BUGGY]  final  double  x  =  resultOffset  +  1;  final  double  x  =  resultOffset  +  2;  [CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]      AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  resultOffset  +  1;  final  double  x  =  resultOffset  +  2;  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final    double    x    =    resultOffset    +    1;    final  double  x  =  resultOffset  +  2;	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)	19	None	add
20	[BUG]  [BUGGY]  final  int[][]  coeff  =  new  int[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff);  }  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  int[][]  coeff  =  new  int[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff);  }  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  int[][]  coeff  =  new  int[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff);  }	  final    double[][]    coeff    =    new    double[1    +    resultOffset];    for(int    i    =    0;    i    <    coeff;    ++i)    {    function[i]    =    FastMath.atan(coeff);    }    	non-compiled	[CE]  incompatible  types	2	None	replace
21	[BUG]  [BUGGY]  final  int[][]  coeff  =  new  int[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(function[i]);  }  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  int[][]  coeff  =  new  int[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(function[i]);  }  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  int[][]  coeff  =  new  int[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(function[i]);  }	  final    double[][]    coeff    =    new    double[1    +    resultOffset];    for(int    i    =    0;    i    <    coeff;    ++i)    {    function[i]    =    FastMath.atan(function[i]);    }    	non-compiled	[CE]  incompatible  types	9	None	replace
22	[BUG]  [BUGGY]  int  dSize  =  Math.min(function.length,  resultOffset);  [CE]  cannot  find  symbol  x  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  int  dSize  =  Math.min(function.length,  resultOffset);  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	int  dSize  =  Math.min(function.length,  resultOffset);	  int    dSize    =    Math.min(resultOffset,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  x	38	None	replace
23	[BUG]  [BUGGY]  int  dSize  =  Math.min(resultOffset,  resultOffset  +  1);  [CE]  cannot  find  symbol  x  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  int  dSize  =  Math.min(resultOffset,  resultOffset  +  1);  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	int  dSize  =  Math.min(resultOffset,  resultOffset  +  1);	  int    dSize    =    Math.min(resultOffset,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  x	38	None	replace
24	[BUG]  [BUGGY]  final  double  x  =  1;  final  double  x  =  1;  [CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  1;  final  double  x  =  1;  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final    double    x    =    1;    final  double  x  =  1;	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)	36	None	add
25	[BUG]  [BUGGY]  final  double  x  =  1;  final  double  x  =  2;  [CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]      AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  1;  final  double  x  =  2;  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final    double    x    =    1;    final  double  x  =  2;	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)	36	None	add
26	[BUG]  [BUGGY]  final  double  x  =  functionOffset;  [CE]  cannot  find  symbol  functionOffset  [FE]          AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  functionOffset;  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  double  x  =  functionOffset;	  final    double    x    =    resultOffset;    final    double    x    =    functionOffset;    	non-compiled	[CE]  cannot  find  symbol  functionOffset	11	None	replace
27	[BUG]  [BUGGY]  if(resultOffset  <  0)  {  for(int  x  =  0;  x  <  resultOffset;  ++x)  {  function[0]  =  FastMath.atan(x);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  if(resultOffset  <  0)  {  for(int  x  =  0;  x  <  resultOffset;  ++x)  {  function[0]  =  FastMath.atan(x);  }  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	if(resultOffset  <  0)  {  for(int  x  =  0;  x  <  resultOffset;  ++x)  {  function[0]  =  FastMath.atan(x);  }	  if(resultOffset    >    0)    {    for(int    x    =    0;    x    <    resultOffset;    ++x)    {    function[0]    =    FastMath.atan(x);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
28	[BUG]  [BUGGY]  if(resultOffset  <  0)  {  for(int  x  =  0;  x  <  resultOffset;  ++x)  {  function[1]  =  FastMath.atan(x);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  if(resultOffset  <  0)  {  for(int  x  =  0;  x  <  resultOffset;  ++x)  {  function[1]  =  FastMath.atan(x);  }  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	if(resultOffset  <  0)  {  for(int  x  =  0;  x  <  resultOffset;  ++x)  {  function[1]  =  FastMath.atan(x);  }	  if(resultOffset    >    0)    {    for(int    x    =    0;    x    <    resultOffset;    ++x)    {    function[0]    =    FastMath.atan(x);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  0;  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	add	final  double  x  =  0;	  final    double    x    =    1;    	compilable	  [FE]  AssertionError  	37	4	replace
30	[BUG]  [BUGGY]  final  double  x  =  0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  0;  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  double  x  =  0;	  final    double    x    =    1;    	compilable	  [FE]  AssertionError  	37	4	replace
31	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  2;  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	add	final  double  x  =  2;	  final    double    x    =    1;    	compilable	  [FE]  AssertionError  	37	4	replace
32	[BUG]  [BUGGY]  final  double  x  =  2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  2;  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  double  x  =  2;	  final    double    x    =    1;    	compilable	  [FE]  AssertionError  	37	4	replace
33	[BUG]  [BUGGY]  final  double[][]  coeff  =  new  double[2  +  order];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff);  }  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double[][]  coeff  =  new  double[2  +  order];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff);  }  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  double[][]  coeff  =  new  double[2  +  order];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff);  }	  final    double[][]    coeff    =    new    double[1    +    order];    for(int    i    =    0;    i    <    coeff;    ++i)    {    function[i]    =    FastMath.atan(coeff);    }    	non-compiled	[CE]  incompatible  types	1	None	replace
34	[BUG]  [BUGGY]  final  double  x  =  resultOffset  +  2;  final  double  x  =  resultOffset  +  2;  [CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  resultOffset  +  2;  final  double  x  =  resultOffset  +  2;  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final    double    x    =    resultOffset    +    2;    final  double  x  =  resultOffset  +  2;	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)	21	None	add
35	[BUG]  [BUGGY]  final  double  x  =  resultOffset  +  2;  final  double  x  =  resultOffset  +  3;  [CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]      AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  resultOffset  +  2;  final  double  x  =  resultOffset  +  3;  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final    double    x    =    resultOffset    +    2;    final  double  x  =  resultOffset  +  3;	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  atan(double[],int,double[],int)	21	None	add
36	[BUG]  [BUGGY]  function[0]  =  FastMath.atan(result,  resultOffset);  [CE]  no  suitable  method  found  for  atan(double[],int)  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  function[0]  =  FastMath.atan(result,  resultOffset);  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	function[0]  =  FastMath.atan(result,  resultOffset);	  function[0]    =    FastMath.atan(function);    	non-compiled	[CE]  no  suitable  method  found  for  atan(double[],int)	23	None	replace
37	[BUG]  [BUGGY]  function[0]  =  FastMath.atan(x,  resultOffset);  [CE]  cannot  find  symbol  x  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  function[0]  =  FastMath.atan(x,  resultOffset);  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	function[0]  =  FastMath.atan(x,  resultOffset);	  function[0]    =    FastMath.atan(function);    	non-compiled	[CE]  cannot  find  symbol  x	23	None	replace
38	[BUG]  [BUGGY]  final  double[]  function  =  new  double[2  +  resultOffset];  [CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double[]  function  =  new  double[2  +  resultOffset];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  double[]  function  =  new  double[2  +  resultOffset];	  final    double[]    function    =    new    double[2    +    order];    	non-compiled	[CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)	26	None	replace
39	[BUG]  [BUGGY]  if(resultOffset  >  1)  {  for(int  x  =  0;  x  <  resultOffset;  ++x)  {  function[0]  =  FastMath.atan(x);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  if(resultOffset  >  1)  {  for(int  x  =  0;  x  <  resultOffset;  ++x)  {  function[0]  =  FastMath.atan(x);  }  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	if(resultOffset  >  1)  {  for(int  x  =  0;  x  <  resultOffset;  ++x)  {  function[0]  =  FastMath.atan(x);  }	  if(resultOffset    >    0)    {    for(int    x    =    0;    x    <    resultOffset;    ++x)    {    function[0]    =    FastMath.atan(x);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
40	[BUG]  [BUGGY]  final  double[][]  coeff  =  new  double[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(result);  }  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double[][]  coeff  =  new  double[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(result);  }  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  double[][]  coeff  =  new  double[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(result);  }	  final    double[][]    coeff    =    new    double[1    +    resultOffset];    for(int    i    =    0;    i    <    coeff;    ++i)    {    function[i]    =    FastMath.atan(coeff);    }    	non-compiled	[CE]  incompatible  types	2	None	replace
41	[BUG]  [BUGGY]  final  double[][]  coeff  =  new  double[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff[i]);  }  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double[][]  coeff  =  new  double[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff[i]);  }  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  double[][]  coeff  =  new  double[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff[i]);  }	  final    double[][]    coeff    =    new    double[1    +    order];    for(int    i    =    0;    i    <    coeff;    ++i)    {    function[i]    =    FastMath.atan(function[i]);    }    	non-compiled	[CE]  incompatible  types	8	None	replace
42	[BUG]  [BUGGY]  final  double[]  function  =  new  double[2  +  1];  [CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double[]  function  =  new  double[2  +  1];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  double[]  function  =  new  double[2  +  1];	  final    double[]    function    =    new    double[2    +    order];    	non-compiled	[CE]  variable  function  is  already  defined  in  method  atan(double[],int,double[],int)	26	None	replace
43	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  function[0];  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	add	final  double  x  =  function[0];	  final    double    x    =    result[0];    	compilable	  [FE]  AssertionError  	15	4	replace
44	[BUG]  [BUGGY]  final  double  x  =  function[0];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  function[0];  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  double  x  =  function[0];	  final    double    x    =    result[0];    	compilable	  [FE]  AssertionError  	15	4	replace
45	[BUG]  [BUGGY]  final  int  coeff  =  new  double[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(function[i]);  }  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  int  coeff  =  new  double[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(function[i]);  }  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  int  coeff  =  new  double[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(function[i]);  }	  final    double[][]    coeff    =    new    double[1    +    resultOffset];    for(int    i    =    0;    i    <    coeff;    ++i)    {    function[i]    =    FastMath.atan(function[i]);    }    	non-compiled	[CE]  incompatible  types	9	None	replace
46	[BUG]  [BUGGY]  function[0]  =  FastMath.atan(result);  [CE]  no  suitable  method  found  for  atan(double[])  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  function[0]  =  FastMath.atan(result);  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	function[0]  =  FastMath.atan(result);	  function[0]    =    FastMath.atan(function);    	non-compiled	[CE]  no  suitable  method  found  for  atan(double[])	23	None	replace
47	[BUG]  [BUGGY]  final  double[][]  coeff  =  new  double[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff!=  '  [CE]  illegal  line  end  in  character  literal  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double[][]  coeff  =  new  double[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff!=  '  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  double[][]  coeff  =  new  double[1  +  resultOffset];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(coeff!=  '	  final    double[][]    coeff    =    new    double[1    +    order];    for(int    i    =    0;    i    <    coeff;    ++i)    {    function[i]    =    FastMath.atan(coeff    >>    '    	non-compiled	[CE]  illegal  line  end  in  character  literal	4	None	replace
48	[BUG]  [BUGGY]  function[0]  =  FastMath.atan(resultOffset,  resultOffset);  [CE]  no  suitable  method  found  for  atan(int,int)  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  function[0]  =  FastMath.atan(resultOffset,  resultOffset);  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	function[0]  =  FastMath.atan(resultOffset,  resultOffset);	  function[0]    =    FastMath.atan(function);    	non-compiled	[CE]  no  suitable  method  found  for  atan(int,int)	23	None	replace
49	[BUG]  [BUGGY]  final  double[][]  coeff  =  new  double[2  +  order];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(function[i]);  }  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double[][]  coeff  =  new  double[2  +  order];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(function[i]);  }  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  double[][]  coeff  =  new  double[2  +  order];  for(int  i  =  0;  i  <  coeff;  ++i)  {  function[i]  =  FastMath.atan(function[i]);  }	  final    double[][]    coeff    =    new    double[1    +    order];    for(int    i    =    0;    i    <    coeff;    ++i)    {    function[i]    =    FastMath.atan(function[i]);    }    	non-compiled	[CE]  incompatible  types	8	None	replace
50	[BUG]  [BUGGY]  final  double[]  operand  =  new  double[1  +  functionOffset];  [CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]              AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double[]  operand  =  new  double[1  +  functionOffset];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  double[]  operand  =  new  double[1  +  functionOffset];	  final    double[]    operand    =    new    double[1    +    resultOffset];    	non-compiled	[CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)	6	None	replace
51	[BUG]  [BUGGY]  final  double[]  operand  =  new  double[2  +  1];  [CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]                AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double[]  operand  =  new  double[2  +  1];  [BUGGY]      final  double  x  =  operand[operandOffset];  function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  double[]  operand  =  new  double[2  +  1];	  final    double[]    operand    =    new    double[2    +    order];    	non-compiled	[CE]  variable  operand  is  already  defined  in  method  atan(double[],int,double[],int)	7	None	replace
52	[BUG]  [BUGGY]  final  double  x  =  resultOffset  +  2;  Final  double  x  =  resultOffset  +  2;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  resultOffset  +  2;  Final  double  x  =  resultOffset  +  2;  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final    double    x    =    resultOffset    +    2;    Final  double  x  =  resultOffset  +  2;	  	non-compiled	[CE]  not  a  statement	21	None	add
53	[BUG]  [BUGGY]  for(int  x  =  0;  x  <  resultOffset;  ++x)  {  function[0]  =  FastMath.atan(x);  }  [CE]  cannot  find  symbol  x  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  for(int  x  =  0;  x  <  resultOffset;  ++x)  {  function[0]  =  FastMath.atan(x);  }  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	for(int  x  =  0;  x  <  resultOffset;  ++x)  {  function[0]  =  FastMath.atan(x);  }	  if(resultOffset    >    0)    {    for(int    x    =    0;    x    <    resultOffset;    ++x)    {    function[0]    =    FastMath.atan(x);    }    	non-compiled	[CE]  cannot  find  symbol  x	39	None	replace
54	[BUG]  [BUGGY]  final  double  x  =  result[offset];  [CE]  cannot  find  symbol  offset  [FE]        AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  result[offset];  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  double  x  =  result[offset];	  final    double    x    =    result[operandOffset];    final    double    x    =    result[optOffset];    	non-compiled	[CE]  cannot  find  symbol  offset	35	None	replace
55	[BUG]  [BUGGY]  function[0]  =  FastMath.atan(q);  [CE]  cannot  find  symbol  q  [FE]                  AssertionError      [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  function[0]  =  FastMath.atan(q);  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	function[0]  =  FastMath.atan(q);	  function[0]    =    FastMath.atan(resultOffset);    	non-compiled	[CE]  cannot  find  symbol  q	24	None	replace
56	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  function.length  -  1;  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	add	final  double  x  =  function.length  -  1;	  final    double    x    =    function.length;    	compilable	  [FE]  AssertionError  	31	4	replace
57	[BUG]  [BUGGY]  final  double  x  =  function.length  -  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double[]  result,  final  int  resultOffset)  {  double[]  function  =  new  double[1  +  order];      [BUGGY]  final  double  x  =  function.length  -  1;  [BUGGY]      function[0]  =  FastMath.atan(x);  if  (order  >  0)  {        final  double[]  q  =  new  double[order];  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1328	1328	1	replace	final  double  x  =  function.length  -  1;	  final    double    x    =    function.length;    	compilable	  [FE]  AssertionError  	31	4	replace
