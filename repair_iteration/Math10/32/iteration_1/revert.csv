projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361intf=(int)Math.rint(v);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361intf=(int)Math.floor(v);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361intf=(int)Math.rint(v,n);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361coeff*=f;
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361coeff*=v;
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361coeff*=x;
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361if(n>0){for(inti=0;i<n;i++){coeff*=x;}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361if(n>0){for(intk=0;k<q.length;k++){coeff*=x;}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361if(n>0){for(intk=0;k<q.length;k++){coeff*=v;}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361intf=Math.min(v,n);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361doublev=Math.abs(v*resultOffset);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361doublev=Math.abs(v);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361coeff*=x;coeff*=x;
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361coeff*=x;doublecoeff*=x;
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361coeff*=x;doublex=x;
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361for(intk=0;k<q.length;k++){coeff*=f;}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361for(intk=0;k<q.length;k++){coeff*=x;}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361coeff*=v;coeff*=v;
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361coeff*=v;if((n&0x1)==0){coeff*=v;}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361coeff*=v;doublecoeff*=v;
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361doublef=(double)Math.rint(v,n);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361intf=(int)Math.rint(n,v);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361for(intk=0;k<q.length;k++){coeff*=v;}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361intf=Math.min(coeff,n);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361intf=Math.min(v,n+1);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361doublev=Math.abs(f*resultOffset);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361doublev=Math.abs(x*resultOffset);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361coeff/=x;
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361for(inti=0;i<n;i++){coeff*=f;}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361for(inti=0;i<n;i++){coeff*=x;}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361doublef=(double)Math.floor(v);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361doublev=Math.abs(f);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361doublev=Math.abs(x);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361doublef=(double)Math.rint(v);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361floatf=(float)Math.floor(v);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361coeff*=x;if((n&0x1)==0){coeff*=x;}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361Coeff*=f;
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361Coeff*=x;
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361floatf=(float)Math.rint(v);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361floatf=(float)Math.rint(v,n);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361luate(operand,n,x,yOffset);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361coeff*=y;
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361intf=Math.min(v,n-1);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361coeff*=v;v*=v;
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361coeff*=x+1;
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361intf=Math.min(coeff,v);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1361if(n>0){for(intk=0;k<q.length;k++){coeff*=f;}
