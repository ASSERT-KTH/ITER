bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  operand[n]  =  Math.abs(v  -  1);  [CE]  cannot  find  symbol  n  [FE]          AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  operand[n]  =  Math.abs(v  -  1);  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	operand[n]  =  Math.abs(v  -  1);	      if(n    >    0)    {    function[n]    =    Math.abs(v    -    1);    }    else    {    operand[n]    =    Math.abs(v    -    1);    }    	non-compiled	[CE]  cannot  find  symbol  n	10	None	replace
2	[BUG]  [BUGGY]  function[n]  =  Math.abs(v  -  1);  [CE]  cannot  find  symbol  n  [FE]            AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  function[n]  =  Math.abs(v  -  1);  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	function[n]  =  Math.abs(v  -  1);	      if(n    >    0)    {    function[n]    =    Math.abs(v    -    1);    }    else    {    operand[n]    =    Math.abs(v    -    1);    }    	non-compiled	[CE]  cannot  find  symbol  n	10	None	replace
3	[BUG]  [BUGGY]  compose(result,  v,  function,  resultOffset,  resultOffset);  [CE]  cannot  find  symbol  v  [FE]        AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  compose(result,  v,  function,  resultOffset,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(result,  v,  function,  resultOffset,  resultOffset);	  compose(result,    n,    function,    operandOffset,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  v	12	None	replace
4	[BUG]  [BUGGY]  compose(result,  operandOffset,  function,  resultOffset);  [CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  compose(result,  operandOffset,  function,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(result,  operandOffset,  function,  resultOffset);	  compose(result,    n,    function,    operandOffset,    resultOffset);    	non-compiled	[CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;	12	None	replace
5	[BUG]  [BUGGY]  Opcodes.IS_OPTIONAL_COMPARATOR)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  function[i];  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  Opcodes.IS_OPTIONAL_COMPARATOR)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  function[i];  }  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IS_OPTIONAL_COMPARATOR)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  function[i];  }	      if(n    >    0)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    function[i];    }    	non-compiled	[CE]  not  a  statement	14	None	replace
6	[BUG]  [BUGGY]  Opcodes.IS_OPTIONAL_COMPONENT)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  function[i];  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  Opcodes.IS_OPTIONAL_COMPONENT)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  function[i];  }  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IS_OPTIONAL_COMPONENT)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  function[i];  }	      if(n    >    0)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    function[i];    }    	non-compiled	[CE]  not  a  statement	14	None	replace
7	[BUG]  [BUGGY]  operand[n]  =  Math.pow(1  +  i);  [CE]  cannot  find  symbol  n  [FE]            AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  operand[n]  =  Math.pow(1  +  i);  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	operand[n]  =  Math.pow(1  +  i);	      if(n    >    0)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    Math.pow(1    +    i);    }    	non-compiled	[CE]  cannot  find  symbol  n	16	None	replace
8	[BUG]  [BUGGY]  côtes[n]  =  Math.pow(1  +  i);  [CE]  cannot  find  symbol  c  [FE]              AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  côtes[n]  =  Math.pow(1  +  i);  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	côtes[n]  =  Math.pow(1  +  i);	      if(n    >    0)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    Math.pow(1    +    i);    }    	non-compiled	[CE]  cannot  find  symbol  c	16	None	replace
9	[BUG]  [BUGGY]  function[x]  =  function[x];  [CE]  possible  loss  of  precision  [FE]        AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  function[x]  =  function[x];  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	function[x]  =  function[x];	      function[n]    =    function[n];    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
10	[BUG]  [BUGGY]  function[q]  =  function[q];  [CE]  cannot  find  symbol  q  [FE]          AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  function[q]  =  function[q];  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	function[q]  =  function[q];	      function[n]    =    function[n];    	non-compiled	[CE]  cannot  find  symbol  q	9	None	replace
11	[BUG]  [BUGGY]  compose(resultOffset,  operandOffset,  function,  result,  v);  [CE]  cannot  find  symbol  v  [FE]        AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  compose(resultOffset,  operandOffset,  function,  result,  v);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(resultOffset,  operandOffset,  function,  result,  v);	  compose(resultOffset,    operandOffset,    function,    result,    n);    	non-compiled	[CE]  cannot  find  symbol  v	1	None	replace
12	[BUG]  [BUGGY]  compose(resultOffset,  resultOffset,  function,  coeff,  v);  [CE]  cannot  find  symbol  coeff  [FE]          AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  compose(resultOffset,  resultOffset,  function,  coeff,  v);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(resultOffset,  resultOffset,  function,  coeff,  v);	  compose(resultOffset,    operandOffset,    function,    result,    n);    	non-compiled	[CE]  cannot  find  symbol  coeff	1	None	replace
13	[BUG]  [BUGGY]  côtes[n]  =  Math.pow(10.0,  v);  [CE]  cannot  find  symbol  c  [FE]          AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  côtes[n]  =  Math.pow(10.0,  v);  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	côtes[n]  =  Math.pow(10.0,  v);	      if(n    >    0)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    Math.pow(10.0,    v);    }    	non-compiled	[CE]  cannot  find  symbol  c	15	None	replace
14	[BUG]  [BUGGY]  côtes[n]  =  v.doubleValue();  [CE]  cannot  find  symbol  c  [FE]            AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  côtes[n]  =  v.doubleValue();  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	côtes[n]  =  v.doubleValue();	      if(n    >    0)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    Math.pow(10.0,    v);    }    	non-compiled	[CE]  cannot  find  symbol  c	15	None	replace
15	[BUG]  [BUGGY]  n  =  Math.min(resultOffset,  coeff);  [CE]  cannot  find  symbol  n  [FE]        AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  n  =  Math.min(resultOffset,  coeff);  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	n  =  Math.min(resultOffset,  coeff);	      n    =    Math.min(resultOffset,    n);    	non-compiled	[CE]  cannot  find  symbol  n	5	None	replace
16	[BUG]  [BUGGY]  if(n  >  0)  {  for(int  i  =  0;  i  <  function.length;  i++)  {  operand[i]  =  function[i];  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  if(n  >  0)  {  for(int  i  =  0;  i  <  function.length;  i++)  {  operand[i]  =  function[i];  }  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	if(n  >  0)  {  for(int  i  =  0;  i  <  function.length;  i++)  {  operand[i]  =  function[i];  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
17	[BUG]  [BUGGY]  if(n  >  0)  {  for(int  i  =  0;  i  <  function.length;  i++)  {  operand[i]  =  result[i];  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  if(n  >  0)  {  for(int  i  =  0;  i  <  function.length;  i++)  {  operand[i]  =  result[i];  }  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	if(n  >  0)  {  for(int  i  =  0;  i  <  function.length;  i++)  {  operand[i]  =  result[i];  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
18	[BUG]  [BUGGY]  n  =  Math.min(v,  resultOffset);  [CE]  cannot  find  symbol  n  [FE]          AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  n  =  Math.min(v,  resultOffset);  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	n  =  Math.min(v,  resultOffset);	      n    =    Math.min(resultOffset,    v);    	non-compiled	[CE]  cannot  find  symbol  n	6	None	replace
19	[BUG]  [BUGGY]      if(n  >  0)  {  for(int  i  =  0;  i  <  function.length;  i++)  {  operand[i]  =  resultOffset[i];  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]      if(n  >  0)  {  for(int  i  =  0;  i  <  function.length;  i++)  {  operand[i]  =  resultOffset[i];  }  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	        if(n  >  0)  {  for(int  i  =  0;  i  <  function.length;  i++)  {  operand[i]  =  resultOffset[i];  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
20	[BUG]  [BUGGY]  operand[n]  =  Math.abs(v  *  f);  [CE]  cannot  find  symbol  n  [FE]            AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  operand[n]  =  Math.abs(v  *  f);  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	operand[n]  =  Math.abs(v  *  f);	      if(n    >    0)    {    function[n]    =    Math.abs(v    *    f);    }    else    {    operand[n]    =    Math.abs(v    *    f);    }    	non-compiled	[CE]  cannot  find  symbol  n	11	None	replace
21	[BUG]  [BUGGY]  function[n]  =  Math.abs(v  *  f);  [CE]  cannot  find  symbol  n  [FE]              AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  function[n]  =  Math.abs(v  *  f);  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	function[n]  =  Math.abs(v  *  f);	      if(n    >    0)    {    function[n]    =    Math.abs(v    *    f);    }    else    {    operand[n]    =    Math.abs(v    *    f);    }    	non-compiled	[CE]  cannot  find  symbol  n	11	None	replace
22	[BUG]  [BUGGY]  compose(resultOffset,  function,  operand,  n);  [CE]  cannot  find  symbol  n  [FE]        AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  compose(resultOffset,  function,  operand,  n);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(resultOffset,  function,  operand,  n);	  compose(resultOffset,    function,    operand,    offset);    	non-compiled	[CE]  cannot  find  symbol  n	8	None	replace
23	[BUG]  [BUGGY]  n  =  Math.max(resultOffset,  coeff);  [CE]  cannot  find  symbol  n  [FE]            AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  n  =  Math.max(resultOffset,  coeff);  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	n  =  Math.max(resultOffset,  coeff);	      n    =    Math.max(resultOffset,    v);    	non-compiled	[CE]  cannot  find  symbol  n	7	None	replace
24	[BUG]  [BUGGY]  n  =  Math.max(v,  resultOffset);  [CE]  cannot  find  symbol  n  [FE]              AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  n  =  Math.max(v,  resultOffset);  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	n  =  Math.max(v,  resultOffset);	      n    =    Math.max(resultOffset,    v);    	non-compiled	[CE]  cannot  find  symbol  n	7	None	replace
25	[BUG]  [BUGGY]  compose(resultOffset,  operandOffset,  function,  q,  resultOffset);  [CE]  cannot  find  symbol  q  [FE]          AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  compose(resultOffset,  operandOffset,  function,  q,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(resultOffset,  operandOffset,  function,  q,  resultOffset);	  compose(resultOffset,    operandOffset,    function,    n,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  q	2	None	replace
26	[BUG]  [BUGGY]  compose(resultOffset,  operandOffset,  function,  v,  resultOffset);  [CE]  cannot  find  symbol  v  [FE]            AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  compose(resultOffset,  operandOffset,  function,  v,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(resultOffset,  operandOffset,  function,  v,  resultOffset);	  compose(resultOffset,    operandOffset,    function,    n,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  v	2	None	replace
27	[BUG]  [BUGGY]  compose(operand,  resultOffset,  function,  v,  resultOffset);  [CE]  cannot  find  symbol  v  [FE]          AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  compose(operand,  resultOffset,  function,  v,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operand,  resultOffset,  function,  v,  resultOffset);	  compose(operand,    resultOffset,    function,    n,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  v	13	None	replace
28	[BUG]  [BUGGY]  compose(operand,  resultOffset,  function,  q,  resultOffset);  [CE]  cannot  find  symbol  q  [FE]            AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  compose(operand,  resultOffset,  function,  q,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operand,  resultOffset,  function,  q,  resultOffset);	  compose(operand,    resultOffset,    function,    n,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  q	13	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  System.arraycopy(function,  0,  result,  0,  function.length);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	add	System.arraycopy(function,  0,  result,  0,  function.length);	      	compilable	  [FE]  AssertionError  	4	4	replace
30	[BUG]  [BUGGY]  System.arraycopy(function,  0,  result,  0,  function.length);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  System.arraycopy(function,  0,  result,  0,  function.length);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	System.arraycopy(function,  0,  result,  0,  function.length);	      	compilable	  [FE]  AssertionError  	4	4	replace
31	[BUG]  [BUGGY]  System.arraycopy(function,  0,  result,  0,  n);  [CE]  cannot  find  symbol  n  [FE]      AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  System.arraycopy(function,  0,  result,  0,  n);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	System.arraycopy(function,  0,  result,  0,  n);	      	non-compiled	[CE]  cannot  find  symbol  n	4	None	replace
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  function[0]  =  function[0];  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	add	function[0]  =  function[0];	      function[n]    =    function[n];    	compilable	  [FE]  AssertionError  	9	4	replace
33	[BUG]  [BUGGY]  function[0]  =  function[0];  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  function[0]  =  function[0];  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	function[0]  =  function[0];	      function[n]    =    function[n];    	compilable	  [FE]  AssertionError  	9	4	replace
34	[BUG]  [BUGGY]  Opcodes.IASTORE_OPTIONAL_MILLIS  =  true;  [CE]  cannot  find  symbol  Opcodes  [FE]        AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  Opcodes.IASTORE_OPTIONAL_MILLIS  =  true;  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IASTORE_OPTIONAL_MILLIS  =  true;	      if(n    >    0)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    function[i];    }    	non-compiled	[CE]  cannot  find  symbol  Opcodes	14	None	replace
35	[BUG]  [BUGGY]  Opcodes.IASTORE_OPTIONAL_MILLIS  =  n  >  0;  [CE]  cannot  find  symbol  Opcodes  [FE]          AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  Opcodes.IASTORE_OPTIONAL_MILLIS  =  n  >  0;  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IASTORE_OPTIONAL_MILLIS  =  n  >  0;	      if(n    >    0)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    function[i];    }    	non-compiled	[CE]  cannot  find  symbol  Opcodes	14	None	replace
36	[BUG]  [BUGGY]  compose(resultOffset,  function,  operand,  null);  [CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  compose(resultOffset,  function,  operand,  null);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(resultOffset,  function,  operand,  null);	  compose(resultOffset,    function,    operand,    offset);    	non-compiled	[CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;	8	None	replace
37	[BUG]  [BUGGY]  compose(resultOffset,  operandOffset,  function,  coeff,  n);  [CE]  cannot  find  symbol  coeff  [FE]        AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  compose(resultOffset,  operandOffset,  function,  coeff,  n);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(resultOffset,  operandOffset,  function,  coeff,  n);	  compose(resultOffset,    operandOffset,    function,    result,    n);    	non-compiled	[CE]  cannot  find  symbol  coeff	1	None	replace
38	[BUG]  [BUGGY]      System.arraycopy(function,  0,  result,  0,  n,  function.length);  [CE]  cannot  find  symbol  n  [FE]    AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]      System.arraycopy(function,  0,  result,  0,  n,  function.length);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	        System.arraycopy(function,  0,  result,  0,  n,  function.length);	  	non-compiled	[CE]  cannot  find  symbol  n	3	None	add
39	[BUG]  [BUGGY]  Opcodes.IASTORE_OPCODES[n]  =  f;  [CE]  cannot  find  symbol  Opcodes  [FE]          AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  Opcodes.IASTORE_OPCODES[n]  =  f;  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IASTORE_OPCODES[n]  =  f;	      if(n    >    0)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    Math.pow(10.0,    v);    }    	non-compiled	[CE]  cannot  find  symbol  Opcodes	15	None	replace
40	[BUG]  [BUGGY]  compose(result,  x,  function,  operandOffset,  resultOffset);  [CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  compose(result,  x,  function,  operandOffset,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(result,  x,  function,  operandOffset,  resultOffset);	  compose(result,    n,    function,    operandOffset,    resultOffset);    	non-compiled	[CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;	12	None	replace
41	[BUG]  [BUGGY]  Opcodes.IASTORE_OPTIONAL_PARAM)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  Math.pow(1  +  i);  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  Opcodes.IASTORE_OPTIONAL_PARAM)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  Math.pow(1  +  i);  }  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IASTORE_OPTIONAL_PARAM)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  Math.pow(1  +  i);  }	      if(n    >    0)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    Math.pow(1    +    i);    }    	non-compiled	[CE]  not  a  statement	16	None	replace
42	[BUG]  [BUGGY]  operand[i]  =  Math.pow(1  +  i);  [CE]  cannot  find  symbol  i  [FE]              AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  operand[i]  =  Math.pow(1  +  i);  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	operand[i]  =  Math.pow(1  +  i);	      if(n    >    0)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    Math.pow(1    +    i);    }    	non-compiled	[CE]  cannot  find  symbol  i	16	None	replace
43	[BUG]  [BUGGY]  Opcodes.IASTORE_OPTIONAL_MILLIS  =  0;  [CE]  cannot  find  symbol  Opcodes  [FE]          AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  Opcodes.IASTORE_OPTIONAL_MILLIS  =  0;  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IASTORE_OPTIONAL_MILLIS  =  0;	      if(n    >    0)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    Math.pow(10.0,    v);    }    	non-compiled	[CE]  cannot  find  symbol  Opcodes	15	None	replace
44	[BUG]  [BUGGY]  Opcodes.IASTORE_OPCODES[n]  =  v;  [CE]  cannot  find  symbol  Opcodes  [FE]            AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  Opcodes.IASTORE_OPCODES[n]  =  v;  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IASTORE_OPCODES[n]  =  v;	      if(n    >    0)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    Math.pow(10.0,    v);    }    	non-compiled	[CE]  cannot  find  symbol  Opcodes	15	None	replace
45	[BUG]  [BUGGY]  v  =  Math.max(resultOffset,  resultOffset);  [CE]  cannot  find  symbol  v  [FE]            AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  v  =  Math.max(resultOffset,  resultOffset);  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	v  =  Math.max(resultOffset,  resultOffset);	      n    =    Math.max(resultOffset,    v);    	non-compiled	[CE]  cannot  find  symbol  v	7	None	replace
46	[BUG]  [BUGGY]      if(n  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  result[i];  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]      if(n  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  result[i];  }  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	        if(n  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  result[i];  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
47	[BUG]  [BUGGY]  compose(operandOffset,  resultOffset,  function,  n,  v);  [CE]  cannot  find  symbol  n  [FE]          AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  compose(operandOffset,  resultOffset,  function,  n,  v);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operandOffset,  resultOffset,  function,  n,  v);	  compose(resultOffset,    operandOffset,    function,    n,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  n	2	None	replace
48	[BUG]  [BUGGY]  v  =  Math.min(resultOffset,  v);  [CE]  cannot  find  symbol  v  [FE]          AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  v  =  Math.min(resultOffset,  v);  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	v  =  Math.min(resultOffset,  v);	      n    =    Math.min(resultOffset,    v);    	non-compiled	[CE]  cannot  find  symbol  v	6	None	replace
49	[BUG]  [BUGGY]  compose(operand,  resultOffset,  function,  n,  v);  [CE]  cannot  find  symbol  n  [FE]          AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  compose(operand,  resultOffset,  function,  n,  v);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operand,  resultOffset,  function,  n,  v);	  compose(operand,    resultOffset,    function,    n,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  n	13	None	replace
50	[BUG]  [BUGGY]  compose(resultOffset,  resultOffset,  function,  v,  n);  [CE]  cannot  find  symbol  v  [FE]        AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  compose(resultOffset,  resultOffset,  function,  v,  n);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(resultOffset,  resultOffset,  function,  v,  n);	  compose(resultOffset,    operandOffset,    function,    result,    n);    	non-compiled	[CE]  cannot  find  symbol  v	1	None	replace
51	[BUG]  [BUGGY]  compose(operandOffset,  resultOffset,  function,  result,  n);  [CE]  cannot  find  symbol  n  [FE]          AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  compose(operandOffset,  resultOffset,  function,  result,  n);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operandOffset,  resultOffset,  function,  result,  n);	  compose(resultOffset,    operandOffset,    function,    result,    n);    	non-compiled	[CE]  cannot  find  symbol  n	1	None	replace
52	[BUG]  [BUGGY]  compose(operand,  resultOffset,  function,  resultOffset);  [CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  compose(operand,  resultOffset,  function,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operand,  resultOffset,  function,  resultOffset);	  compose(result,    n,    function,    operandOffset,    resultOffset);    	non-compiled	[CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;	12	None	replace
53	[BUG]  [BUGGY]  if(n  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  new  double[1];  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }      [BUGGY]  if(n  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  new  double[1];  }  [BUGGY]    compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	if(n  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  new  double[1];  }	      if(n    >    0)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    function[i];    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
