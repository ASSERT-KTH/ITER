bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  c  tes[n]  =  Math.pow(10.0,  coeff);  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  c  tes[n]  =  Math.pow(10.0,  coeff);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	c  tes[n]  =  Math.pow(10.0,  coeff);	  côtes[n]    =    Math.pow(10.0,    v);    	non-compiled	[CE]  ']'  expected	13	None	replace
2	[BUG]  [BUGGY]  v  tes[n]  =  Math.pow(10.0,  v);  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  v  tes[n]  =  Math.pow(10.0,  v);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	v  tes[n]  =  Math.pow(10.0,  v);	  côtes[n]    =    Math.pow(10.0,    v);    	non-compiled	[CE]  ']'  expected	13	None	replace
3	[BUG]  [BUGGY]  n  =  Math.min(coeff,  resultOffset);  [CE]  cannot  find  symbol  n  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  n  =  Math.min(coeff,  resultOffset);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	n  =  Math.min(coeff,  resultOffset);	  n    =    Math.min(resultOffset,    coeff);    	non-compiled	[CE]  cannot  find  symbol  n	15	None	replace
4	[BUG]  [BUGGY]  n  =  Math.min(oeff,  resultOffset);  [CE]  cannot  find  symbol  n  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  n  =  Math.min(oeff,  resultOffset);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	n  =  Math.min(oeff,  resultOffset);	  n    =    Math.min(resultOffset,    coeff);    	non-compiled	[CE]  cannot  find  symbol  n	15	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  function.length;  i++)  {  operand[i]  =  resultOffset[i];  }  [CE]  array  required,  but  int  found  [FE]        AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  for(int  i  =  0;  i  <  function.length;  i++)  {  operand[i]  =  resultOffset[i];  }  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	for(int  i  =  0;  i  <  function.length;  i++)  {  operand[i]  =  resultOffset[i];  }	          if(n    >    0)    {    for(int    i    =    0;    i    <    function.length;    i++)    {    operand[i]    =    resultOffset[i];    }    	non-compiled	[CE]  array  required,  but  int  found	19	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  resultOffset.length;  i++)  {  operand[i]  =  resultOffset[i];  }  [CE]  int  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  for(int  i  =  0;  i  <  resultOffset.length;  i++)  {  operand[i]  =  resultOffset[i];  }  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	for(int  i  =  0;  i  <  resultOffset.length;  i++)  {  operand[i]  =  resultOffset[i];  }	          if(n    >    0)    {    for(int    i    =    0;    i    <    function.length;    i++)    {    operand[i]    =    resultOffset[i];    }    	non-compiled	[CE]  int  cannot  be  dereferenced	19	None	replace
7	[BUG]  [BUGGY]  n  =  Math.max(op,  resultOffset);  [CE]  cannot  find  symbol  n  [FE]                  AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  n  =  Math.max(op,  resultOffset);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	n  =  Math.max(op,  resultOffset);	  n    =    Math.max(v,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  n	24	None	replace
8	[BUG]  [BUGGY]  function[n]  =  function[x];  [CE]  cannot  find  symbol  n  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  function[n]  =  function[x];  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	function[n]  =  function[x];	  function[x]    =    function[x];    	non-compiled	[CE]  cannot  find  symbol  n	9	None	replace
9	[BUG]  [BUGGY]  function[x]  =  v;  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  function[x]  =  v;  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	function[x]  =  v;	  function[x]    =    function[x];    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
10	[BUG]  [BUGGY]  operand[n]  =  Math.pow(1  +  coeff);  [CE]  cannot  find  symbol  n  [FE]                AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  operand[n]  =  Math.pow(1  +  coeff);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	operand[n]  =  Math.pow(1  +  coeff);	  operand[n]    =    Math.pow(1    +    i);    	non-compiled	[CE]  cannot  find  symbol  n	7	None	replace
11	[BUG]  [BUGGY]  compose(operandOffset,  resultOffset,  function,  f,  v);  [CE]  cannot  find  symbol  f  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(operandOffset,  resultOffset,  function,  f,  v);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operandOffset,  resultOffset,  function,  f,  v);	  compose(operandOffset,    resultOffset,    function,    n,    v);    	non-compiled	[CE]  cannot  find  symbol  f	47	None	replace
12	[BUG]  [BUGGY]  Opcodes.IASTORE_OPCODES[n]  =  x;  [CE]  cannot  find  symbol  Opcodes  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  Opcodes.IASTORE_OPCODES[n]  =  x;  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IASTORE_OPCODES[n]  =  x;	  Opcodes.IASTORE_OPCODES[n]    =    f;    	non-compiled	[CE]  cannot  find  symbol  Opcodes	39	None	replace
13	[BUG]  [BUGGY]  compose(x,  resultOffset,  function,  x,  resultOffset);  [CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(x,  resultOffset,  function,  x,  resultOffset);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(x,  resultOffset,  function,  x,  resultOffset);	  compose(result,    x,    function,    operandOffset,    resultOffset);    	non-compiled	[CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;	40	None	replace
14	[BUG]  [BUGGY]  compose(x,  resultOffset,  function,  operandOffset,  n);  [CE]  cannot  find  symbol  n  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(x,  resultOffset,  function,  operandOffset,  n);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(x,  resultOffset,  function,  operandOffset,  n);	  compose(result,    x,    function,    operandOffset,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  n	40	None	replace
15	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  function[1]  =  function[1];  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	add	function[1]  =  function[1];	  function[0]    =    function[0];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	33	4	replace
16	[BUG]  [BUGGY]  function[1]  =  function[1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  function[1]  =  function[1];  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	function[1]  =  function[1];	  function[0]    =    function[0];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	33	4	replace
17	[BUG]  [BUGGY]  function[0]  =  v;  [CE]  cannot  find  symbol  v  [FE]      AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  function[0]  =  v;  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	function[0]  =  v;	  function[0]    =    function[0];    	non-compiled	[CE]  cannot  find  symbol  v	33	None	replace
18	[BUG]  [BUGGY]  function[n]  =  function[q];  [CE]  cannot  find  symbol  n  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  function[n]  =  function[q];  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	function[n]  =  function[q];	  function[q]    =    function[q];    	non-compiled	[CE]  cannot  find  symbol  n	10	None	replace
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  for(int  i  =  0;  i  <  function.length;  i++)  {  operand[i]  =  function[i];  }  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	add	for(int  i  =  0;  i  <  function.length;  i++)  {  operand[i]  =  function[i];  }	  if(n    >    0)    {    for(int    i    =    0;    i    <    function.length;    i++)    {    operand[i]    =    function[i];    }    	compilable	  [FE]  AssertionError  	16	4	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  function.length;  i++)  {  operand[i]  =  function[i];  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  for(int  i  =  0;  i  <  function.length;  i++)  {  operand[i]  =  function[i];  }  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	for(int  i  =  0;  i  <  function.length;  i++)  {  operand[i]  =  function[i];  }	  if(n    >    0)    {    for(int    i    =    0;    i    <    function.length;    i++)    {    operand[i]    =    function[i];    }    	compilable	  [FE]  AssertionError  	16	4	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coeff.length;  i++)  {  operand[i]  =  function[i];  }  [CE]  cannot  find  symbol  coeff  [FE]          AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  for(int  i  =  0;  i  <  coeff.length;  i++)  {  operand[i]  =  function[i];  }  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	for(int  i  =  0;  i  <  coeff.length;  i++)  {  operand[i]  =  function[i];  }	  if(n    >    0)    {    for(int    i    =    0;    i    <    function.length;    i++)    {    operand[i]    =    function[i];    }    	non-compiled	[CE]  cannot  find  symbol  coeff	16	None	replace
22	[BUG]  [BUGGY]  Opcodes.IS_OPTIONAL_COMPARATOR)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  coeff[i];  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  Opcodes.IS_OPTIONAL_COMPARATOR)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  coeff[i];  }  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IS_OPTIONAL_COMPARATOR)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  coeff[i];  }	  Opcodes.IS_OPTIONAL_COMPARATOR)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    function[i];    }    	non-compiled	[CE]  not  a  statement	5	None	replace
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  function[0]  =  function[0];  function[0]  =  function[0];  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	add	function[0]    =    function[0];    function[0]  =  function[0];	  	compilable	  [FE]  AssertionError  	32	1	add
24	[BUG]  [BUGGY]  function[0]  =  function[0];  function[0]  =  function[0];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  function[0]  =  function[0];  function[0]  =  function[0];  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	function[0]    =    function[0];    function[0]  =  function[0];	  	compilable	  [FE]  AssertionError  	32	1	add
25	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  function[0]  =  function[0];  function[1]  =  function[0];  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	add	function[0]    =    function[0];    function[1]  =  function[0];	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	4	add
26	[BUG]  [BUGGY]  function[0]  =  function[0];  function[1]  =  function[0];  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  function[0]  =  function[0];  function[1]  =  function[0];  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	function[0]    =    function[0];    function[1]  =  function[0];	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	4	add
27	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  function[0]  =  function[0];  function[1]  =  function[1];  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	add	function[0]    =    function[0];    function[1]  =  function[1];	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	4	add
28	[BUG]  [BUGGY]  function[0]  =  function[0];  function[1]  =  function[1];  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  function[0]  =  function[0];  function[1]  =  function[1];  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	function[0]    =    function[0];    function[1]  =  function[1];	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	4	add
29	[BUG]  [BUGGY]  System.arraycopy(functions,  0,  result,  0,  function.length);  [CE]  cannot  find  symbol  functions  [FE]        AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  System.arraycopy(functions,  0,  result,  0,  function.length);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	System.arraycopy(functions,  0,  result,  0,  function.length);	          System.arraycopy(function,    0,    result,    0,    n,    function.length);    	non-compiled	[CE]  cannot  find  symbol  functions	38	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  result[i];  }  [CE]  cannot  find  symbol  n  [FE]        AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  result[i];  }  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  result[i];  }	          if(n    >    0)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    result[i];    }    	non-compiled	[CE]  cannot  find  symbol  n	46	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  function[i];  }  [CE]  cannot  find  symbol  n  [FE]          AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  function[i];  }  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  function[i];  }	          if(n    >    0)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    result[i];    }    	non-compiled	[CE]  cannot  find  symbol  n	46	None	replace
32	[BUG]  [BUGGY]  compose(resultOffset,  resultOffset,  function,  n,  v);  [CE]  cannot  find  symbol  n  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(resultOffset,  resultOffset,  function,  n,  v);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(resultOffset,  resultOffset,  function,  n,  v);	  compose(resultOffset,    resultOffset,    function,    coeff,    v);    	non-compiled	[CE]  cannot  find  symbol  n	12	None	replace
33	[BUG]  [BUGGY]  compose(resultOffset,  resultOffset,  function,  n,  resultOffset);  [CE]  cannot  find  symbol  n  [FE]                AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(resultOffset,  resultOffset,  function,  n,  resultOffset);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(resultOffset,  resultOffset,  function,  n,  resultOffset);	  compose(resultOffset,    operandOffset,    function,    v,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  n	26	None	replace
34	[BUG]  [BUGGY]  v  =  Math.min(resultOffset,  n);  [CE]  cannot  find  symbol  v  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  v  =  Math.min(resultOffset,  n);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	v  =  Math.min(resultOffset,  n);	  v    =    Math.min(resultOffset,    v);    	non-compiled	[CE]  cannot  find  symbol  v	48	None	replace
35	[BUG]  [BUGGY]  v  =  Math.min(resultOffset,  x);  [CE]  cannot  find  symbol  v  [FE]                AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  v  =  Math.min(resultOffset,  x);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	v  =  Math.min(resultOffset,  x);	  v    =    Math.min(resultOffset,    v);    	non-compiled	[CE]  cannot  find  symbol  v	48	None	replace
36	[BUG]  [BUGGY]  Opcodes.IASTORE_OPTIONAL_PARAM)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  Math.pow(2  +  i);  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  Opcodes.IASTORE_OPTIONAL_PARAM)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  Math.pow(2  +  i);  }  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IASTORE_OPTIONAL_PARAM)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  Math.pow(2  +  i);  }	  Opcodes.IASTORE_OPTIONAL_PARAM)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    Math.pow(1    +    i);    }    	non-compiled	[CE]  not  a  statement	41	None	replace
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  for(int  i  =  0;  i  <  function.length;  i++)  {  operand[i]  =  result[i];  }  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	add	for(int  i  =  0;  i  <  function.length;  i++)  {  operand[i]  =  result[i];  }	  if(n    >    0)    {    for(int    i    =    0;    i    <    function.length;    i++)    {    operand[i]    =    result[i];    }    	compilable	  [FE]  AssertionError  	17	4	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  function.length;  i++)  {  operand[i]  =  result[i];  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  for(int  i  =  0;  i  <  function.length;  i++)  {  operand[i]  =  result[i];  }  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	for(int  i  =  0;  i  <  function.length;  i++)  {  operand[i]  =  result[i];  }	  if(n    >    0)    {    for(int    i    =    0;    i    <    function.length;    i++)    {    operand[i]    =    result[i];    }    	compilable	  [FE]  AssertionError  	17	4	replace
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  for(int  i  =  0;  i  <  resultOffset;  i++)  {  operand[i]  =  result[i];  }  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	add	for(int  i  =  0;  i  <  resultOffset;  i++)  {  operand[i]  =  result[i];  }	  if(n    >    0)    {    for(int    i    =    0;    i    <    function.length;    i++)    {    operand[i]    =    result[i];    }    	compilable	  [FE]  AssertionError  	17	4	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  resultOffset;  i++)  {  operand[i]  =  result[i];  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  for(int  i  =  0;  i  <  resultOffset;  i++)  {  operand[i]  =  result[i];  }  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	for(int  i  =  0;  i  <  resultOffset;  i++)  {  operand[i]  =  result[i];  }	  if(n    >    0)    {    for(int    i    =    0;    i    <    function.length;    i++)    {    operand[i]    =    result[i];    }    	compilable	  [FE]  AssertionError  	17	4	replace
41	[BUG]  [BUGGY]  compose(function,  resultOffset,  null);  [CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(function,  resultOffset,  null);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(function,  resultOffset,  null);	  compose(resultOffset,    function,    operand,    null);    	non-compiled	[CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;	36	None	replace
42	[BUG]  [BUGGY]  compose(operand,  resultOffset,  function,  null);  [CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(operand,  resultOffset,  function,  null);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operand,  resultOffset,  function,  null);	  compose(resultOffset,    function,    operand,    null);    	non-compiled	[CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;	36	None	replace
43	[BUG]  [BUGGY]  compose(result,  n,  function,  resultOffset,  resultOffset);  [CE]  cannot  find  symbol  n  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(result,  n,  function,  resultOffset,  resultOffset);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(result,  n,  function,  resultOffset,  resultOffset);	  compose(result,    v,    function,    resultOffset,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  n	3	None	replace
44	[BUG]  [BUGGY]  compose(function,  resultOffset,  function,  resultOffset);  [CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(function,  resultOffset,  function,  resultOffset);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(function,  resultOffset,  function,  resultOffset);	  compose(result,    v,    function,    resultOffset,    resultOffset);    	non-compiled	[CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;	3	None	replace
45	[BUG]  [BUGGY]  compose(resultOffset,  resultOffset,  function,  coeff,  n);  [CE]  cannot  find  symbol  coeff  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(resultOffset,  resultOffset,  function,  coeff,  n);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(resultOffset,  resultOffset,  function,  coeff,  n);	  compose(resultOffset,    resultOffset,    function,    v,    n);    	non-compiled	[CE]  cannot  find  symbol  coeff	50	None	replace
46	[BUG]  [BUGGY]  compose(resultOffset,  resultOffset,  function,  q,  n);  [CE]  cannot  find  symbol  q  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(resultOffset,  resultOffset,  function,  q,  n);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(resultOffset,  resultOffset,  function,  q,  n);	  compose(resultOffset,    resultOffset,    function,    v,    n);    	non-compiled	[CE]  cannot  find  symbol  q	50	None	replace
47	[BUG]  [BUGGY]  c  tes[n]  =  Math.pow(1  +  coeff);  [CE]  ']'  expected  [FE]                  AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  c  tes[n]  =  Math.pow(1  +  coeff);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	c  tes[n]  =  Math.pow(1  +  coeff);	  côtes[n]    =    Math.pow(1    +    i);    	non-compiled	[CE]  ']'  expected	8	None	replace
48	[BUG]  [BUGGY]  c  tes[n]  =  Math.pow(1  +  x);  [CE]  ']'  expected  [FE]                    AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  c  tes[n]  =  Math.pow(1  +  x);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	c  tes[n]  =  Math.pow(1  +  x);	  côtes[n]    =    Math.pow(1    +    i);    	non-compiled	[CE]  ']'  expected	8	None	replace
49	[BUG]  [BUGGY]  Opcodes.IASTORE_OPTIONAL_MILLIS  =  v  >  0;  [CE]  cannot  find  symbol  Opcodes  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  Opcodes.IASTORE_OPTIONAL_MILLIS  =  v  >  0;  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IASTORE_OPTIONAL_MILLIS  =  v  >  0;	  Opcodes.IASTORE_OPTIONAL_MILLIS    =    n    >    0;    	non-compiled	[CE]  cannot  find  symbol  Opcodes	35	None	replace
50	[BUG]  [BUGGY]  Opcodes.IASTORE_OPTIONAL_MILLIS  =  n  >  1;  [CE]  cannot  find  symbol  Opcodes  [FE]                AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  Opcodes.IASTORE_OPTIONAL_MILLIS  =  n  >  1;  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IASTORE_OPTIONAL_MILLIS  =  n  >  1;	  Opcodes.IASTORE_OPTIONAL_MILLIS    =    n    >    0;    	non-compiled	[CE]  cannot  find  symbol  Opcodes	35	None	replace
51	[BUG]  [BUGGY]  Opcodes.IS_OPTIONAL_COMPONENT)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  coeff[i];  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  Opcodes.IS_OPTIONAL_COMPONENT)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  coeff[i];  }  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IS_OPTIONAL_COMPONENT)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  coeff[i];  }	  Opcodes.IS_OPTIONAL_COMPONENT)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    function[i];    }    	non-compiled	[CE]  not  a  statement	6	None	replace
52	[BUG]  [BUGGY]  compose(function,  resultOffset,  operandOffset);  [CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(function,  resultOffset,  operandOffset);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(function,  resultOffset,  operandOffset);	  compose(result,    operandOffset,    function,    resultOffset);    	non-compiled	[CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;	4	None	replace
53	[BUG]  [BUGGY]  compose(result,  n,  function,  resultOffset);  [CE]  cannot  find  symbol  n  [FE]                AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(result,  n,  function,  resultOffset);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(result,  n,  function,  resultOffset);	  compose(result,    operandOffset,    function,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  n	4	None	replace
54	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  System.arraycopy(function,  0,  result,  0,  function.length);  System.arraycopy(function,  0,  result,  0,  function.length);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	add	System.arraycopy(function,    0,    result,    0,    function.length);    System.arraycopy(function,  0,  result,  0,  function.length);	  	compilable	  [FE]  AssertionError  	29	1	add
55	[BUG]  [BUGGY]  System.arraycopy(function,  0,  result,  0,  function.length);  System.arraycopy(function,  0,  result,  0,  function.length);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  System.arraycopy(function,  0,  result,  0,  function.length);  System.arraycopy(function,  0,  result,  0,  function.length);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	System.arraycopy(function,    0,    result,    0,    function.length);    System.arraycopy(function,  0,  result,  0,  function.length);	  	compilable	  [FE]  AssertionError  	29	1	add
56	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  System.arraycopy(function,  0,  result,  0,  function.length);  System.arraycopy(result,  0,  result,  0,  function.length);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	add	System.arraycopy(function,    0,    result,    0,    function.length);    System.arraycopy(result,  0,  result,  0,  function.length);	  	compilable	  [FE]  AssertionError  	29	1	add
57	[BUG]  [BUGGY]  System.arraycopy(function,  0,  result,  0,  function.length);  System.arraycopy(result,  0,  result,  0,  function.length);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  System.arraycopy(function,  0,  result,  0,  function.length);  System.arraycopy(result,  0,  result,  0,  function.length);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	System.arraycopy(function,    0,    result,    0,    function.length);    System.arraycopy(result,  0,  result,  0,  function.length);	  	compilable	  [FE]  AssertionError  	29	1	add
58	[BUG]  [BUGGY]  System.arraycopy(function,  0,  result,  0,  function.length);  System.arraycopy(variables,  0,  result,  0,  function.length);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  System.arraycopy(function,  0,  result,  0,  function.length);  System.arraycopy(variables,  0,  result,  0,  function.length);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	System.arraycopy(function,    0,    result,    0,    function.length);    System.arraycopy(variables,  0,  result,  0,  function.length);	  	non-compiled	[CE]  cannot  find  symbol  	29	None	add
59	[BUG]  [BUGGY]  function[x]  =  Math.abs(v  *  f);  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  function[x]  =  Math.abs(v  *  f);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	function[x]  =  Math.abs(v  *  f);	  function[n]    =    Math.abs(v    *    f);    	non-compiled	[CE]  possible  loss  of  precision	21	None	replace
60	[BUG]  [BUGGY]  function[q]  =  Math.abs(v  *  f);  [CE]  cannot  find  symbol  q  [FE]                    AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  function[q]  =  Math.abs(v  *  f);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	function[q]  =  Math.abs(v  *  f);	  function[n]    =    Math.abs(v    *    f);    	non-compiled	[CE]  cannot  find  symbol  q	21	None	replace
61	[BUG]  [BUGGY]  x  =  Math.max(resultOffset,  resultOffset);  [CE]  cannot  assign  a  value  to  final  variable  x  [FE]                AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  x  =  Math.max(resultOffset,  resultOffset);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	x  =  Math.max(resultOffset,  resultOffset);	  v    =    Math.max(resultOffset,    resultOffset);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  x	45	None	replace
62	[BUG]  [BUGGY]  operand[i]  =  Math.pow(1  +  n);  [CE]  cannot  find  symbol  i  [FE]                  AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  operand[i]  =  Math.pow(1  +  n);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	operand[i]  =  Math.pow(1  +  n);	  operand[i]    =    Math.pow(1    +    i);    	non-compiled	[CE]  cannot  find  symbol  i	42	None	replace
63	[BUG]  [BUGGY]  compose(resultOffset,  function,  operand,  v);  [CE]  cannot  find  symbol  v  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(resultOffset,  function,  operand,  v);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(resultOffset,  function,  operand,  v);	  compose(resultOffset,    function,    operand,    n);    	non-compiled	[CE]  cannot  find  symbol  v	22	None	replace
64	[BUG]  [BUGGY]  compose(resultOffset,  function,  operand,  q);  [CE]  cannot  find  symbol  q  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(resultOffset,  function,  operand,  q);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(resultOffset,  function,  operand,  q);	  compose(resultOffset,    function,    operand,    n);    	non-compiled	[CE]  cannot  find  symbol  q	22	None	replace
65	[BUG]  [BUGGY]  operand[x]  =  Math.abs(v  *  f);  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  operand[x]  =  Math.abs(v  *  f);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	operand[x]  =  Math.abs(v  *  f);	  operand[n]    =    Math.abs(v    *    f);    	non-compiled	[CE]  possible  loss  of  precision	20	None	replace
66	[BUG]  [BUGGY]  operand[q]  =  Math.abs(v  *  f);  [CE]  cannot  find  symbol  q  [FE]                  AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  operand[q]  =  Math.abs(v  *  f);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	operand[q]  =  Math.abs(v  *  f);	  operand[n]    =    Math.abs(v    *    f);    	non-compiled	[CE]  cannot  find  symbol  q	20	None	replace
67	[BUG]  [BUGGY]  function[x  -  1]  =  Math.abs(v  -  1);  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  function[x  -  1]  =  Math.abs(v  -  1);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	function[x  -  1]  =  Math.abs(v  -  1);	  function[n]    =    Math.abs(v    -    1);    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
68	[BUG]  [BUGGY]  function[x]  =  Math.abs(v  -  1);  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  function[x]  =  Math.abs(v  -  1);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	function[x]  =  Math.abs(v  -  1);	  function[n]    =    Math.abs(v    -    1);    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
69	[BUG]  [BUGGY]  compose(operandOffset,  resultOffset,  function,  result,  v);  [CE]  cannot  find  symbol  v  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(operandOffset,  resultOffset,  function,  result,  v);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operandOffset,  resultOffset,  function,  result,  v);	  compose(operandOffset,    resultOffset,    function,    result,    n);    	non-compiled	[CE]  cannot  find  symbol  v	51	None	replace
70	[BUG]  [BUGGY]  compose(operandOffset,  resultOffset,  function,  result,  x);  [CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(operandOffset,  resultOffset,  function,  result,  x);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operandOffset,  resultOffset,  function,  result,  x);	  compose(operandOffset,    resultOffset,    function,    result,    n);    	non-compiled	[CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;	51	None	replace
71	[BUG]  [BUGGY]  compose(operand,  resultOffset,  function,  q,  v);  [CE]  cannot  find  symbol  q  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(operand,  resultOffset,  function,  q,  v);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operand,  resultOffset,  function,  q,  v);	  compose(operand,    resultOffset,    function,    n,    v);    	non-compiled	[CE]  cannot  find  symbol  q	49	None	replace
72	[BUG]  [BUGGY]  n  =  Math.max(coeff,  resultOffset);  [CE]  cannot  find  symbol  n  [FE]                AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  n  =  Math.max(coeff,  resultOffset);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	n  =  Math.max(coeff,  resultOffset);	  n    =    Math.max(resultOffset,    coeff);    	non-compiled	[CE]  cannot  find  symbol  n	23	None	replace
73	[BUG]  [BUGGY]  System.arraycopy(function,  0,  result,  0,  coeff);  [CE]  cannot  find  symbol  coeff  [FE]          AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  System.arraycopy(function,  0,  result,  0,  coeff);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	System.arraycopy(function,  0,  result,  0,  coeff);	  System.arraycopy(function,    0,    result,    0,    n);    	non-compiled	[CE]  cannot  find  symbol  coeff	31	None	replace
74	[BUG]  [BUGGY]  System.arraycopy(function,  0,  result,  0,  v);  [CE]  cannot  find  symbol  v  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  System.arraycopy(function,  0,  result,  0,  v);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	System.arraycopy(function,  0,  result,  0,  v);	  System.arraycopy(function,    0,    result,    0,    n);    	non-compiled	[CE]  cannot  find  symbol  v	31	None	replace
75	[BUG]  [BUGGY]  Opcodes.IASTORE_OPTIONAL_MILLIS  =  false;  [CE]  cannot  find  symbol  Opcodes  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  Opcodes.IASTORE_OPTIONAL_MILLIS  =  false;  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IASTORE_OPTIONAL_MILLIS  =  false;	  Opcodes.IASTORE_OPTIONAL_MILLIS    =    true;    	non-compiled	[CE]  cannot  find  symbol  Opcodes	34	None	replace
76	[BUG]  [BUGGY]  operand[x]  =  Math.abs(v  -  1);  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  operand[x]  =  Math.abs(v  -  1);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	operand[x]  =  Math.abs(v  -  1);	  operand[n]    =    Math.abs(v    -    1);    	non-compiled	[CE]  possible  loss  of  precision	1	None	replace
77	[BUG]  [BUGGY]  operand[x  -  1]  =  Math.abs(v  -  1);  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  operand[x  -  1]  =  Math.abs(v  -  1);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	operand[x  -  1]  =  Math.abs(v  -  1);	  operand[n]    =    Math.abs(v    -    1);    	non-compiled	[CE]  possible  loss  of  precision	1	None	replace
78	[BUG]  [BUGGY]  compose(resultOffset,  operandOffset,  function,  v,  n);  [CE]  cannot  find  symbol  v  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(resultOffset,  operandOffset,  function,  v,  n);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(resultOffset,  operandOffset,  function,  v,  n);	  compose(resultOffset,    operandOffset,    function,    coeff,    n);    	non-compiled	[CE]  cannot  find  symbol  v	37	None	replace
79	[BUG]  [BUGGY]  Integer  n  =  getIntValue();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  Integer  n  =  getIntValue();  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Integer  n  =  getIntValue();	  if(n    >    0)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    new    double[1];    }    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
80	[BUG]  [BUGGY]  Integer  n  =  getOffsetInstantiator();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  Integer  n  =  getOffsetInstantiator();  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Integer  n  =  getOffsetInstantiator();	  if(n    >    0)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    new    double[1];    }    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
81	[BUG]  [BUGGY]  c  tes[n]  =  coeff.doubleValue();  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  c  tes[n]  =  coeff.doubleValue();  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	c  tes[n]  =  coeff.doubleValue();	  côtes[n]    =    v.doubleValue();    	non-compiled	[CE]  ']'  expected	14	None	replace
82	[BUG]  [BUGGY]  x  tes[n]  =  v.doubleValue();  [CE]  ']'  expected  [FE]                  AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  x  tes[n]  =  v.doubleValue();  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	x  tes[n]  =  v.doubleValue();	  côtes[n]    =    v.doubleValue();    	non-compiled	[CE]  ']'  expected	14	None	replace
83	[BUG]  [BUGGY]  compose(operand,  resultOffset,  function,  n);  [CE]  cannot  find  symbol  n  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(operand,  resultOffset,  function,  n);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operand,  resultOffset,  function,  n);	  compose(operand,    resultOffset,    function,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  n	52	None	replace
84	[BUG]  [BUGGY]  compose(resultOffset,  resultOffset,  function,  operand);  [CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(resultOffset,  resultOffset,  function,  operand);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(resultOffset,  resultOffset,  function,  operand);	  compose(operand,    resultOffset,    function,    resultOffset);    	non-compiled	[CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;	52	None	replace
85	[BUG]  [BUGGY]  compose(resultOffset,  operandOffset,  function,  result,  x);  [CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(resultOffset,  operandOffset,  function,  result,  x);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(resultOffset,  operandOffset,  function,  result,  x);	  compose(resultOffset,    operandOffset,    function,    result,    v);    	non-compiled	[CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;	11	None	replace
86	[BUG]  [BUGGY]  Opcodes.IASTORE_OPTIONAL_MILLIS  =  1;  [CE]  cannot  find  symbol  Opcodes  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  Opcodes.IASTORE_OPTIONAL_MILLIS  =  1;  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IASTORE_OPTIONAL_MILLIS  =  1;	  Opcodes.IASTORE_OPTIONAL_MILLIS    =    0;    	non-compiled	[CE]  cannot  find  symbol  Opcodes	43	None	replace
87	[BUG]  [BUGGY]  compose(operand,  resultOffset,  function,  f,  v);  [CE]  cannot  find  symbol  f  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(operand,  resultOffset,  function,  f,  v);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operand,  resultOffset,  function,  f,  v);	  compose(operand,    resultOffset,    function,    n,    v);    	non-compiled	[CE]  cannot  find  symbol  f	49	None	replace
88	[BUG]  [BUGGY]  compose(operand,  function,  resultOffset,  null);  [CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(operand,  function,  resultOffset,  null);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operand,  function,  resultOffset,  null);	  compose(resultOffset,    function,    operand,    null);    	non-compiled	[CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;	36	None	replace
89	[BUG]  [BUGGY]  function[n]  =  function[0];  [CE]  cannot  find  symbol  n  [FE]    AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  function[n]  =  function[0];  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	function[n]  =  function[0];	  function[0]    =    function[0];    	non-compiled	[CE]  cannot  find  symbol  n	33	None	replace
90	[BUG]  [BUGGY]  compose(optOffset,  resultOffset,  function,  coeff,  n);  [CE]  cannot  find  symbol  optOffset  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(optOffset,  resultOffset,  function,  coeff,  n);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(optOffset,  resultOffset,  function,  coeff,  n);	  compose(resultOffset,    operandOffset,    function,    coeff,    n);    	non-compiled	[CE]  cannot  find  symbol  optOffset	37	None	replace
91	[BUG]  [BUGGY]  compose(operandOffset,  resultOffset,  function,  n,  resultOffset);  [CE]  cannot  find  symbol  n  [FE]                AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(operandOffset,  resultOffset,  function,  n,  resultOffset);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operandOffset,  resultOffset,  function,  n,  resultOffset);	  compose(resultOffset,    operandOffset,    function,    v,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  n	26	None	replace
92	[BUG]  [BUGGY]  Opcodes.IS_OPTIONAL_COMPONENT)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  null;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  Opcodes.IS_OPTIONAL_COMPONENT)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  null;  }  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IS_OPTIONAL_COMPONENT)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  null;  }	  Opcodes.IS_OPTIONAL_COMPONENT)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    function[i];    }    	non-compiled	[CE]  not  a  statement	6	None	replace
93	[BUG]  [BUGGY]  c  tes[n]  =  Math.pow(10.0,  x);  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  c  tes[n]  =  Math.pow(10.0,  x);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	c  tes[n]  =  Math.pow(10.0,  x);	  côtes[n]    =    Math.pow(10.0,    v);    	non-compiled	[CE]  ']'  expected	13	None	replace
94	[BUG]  [BUGGY]  compose(operandOffset,  resultOffset,  function,  n);  [CE]  cannot  find  symbol  n  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(operandOffset,  resultOffset,  function,  n);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operandOffset,  resultOffset,  function,  n);	  compose(result,    operandOffset,    function,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  n	4	None	replace
95	[BUG]  [BUGGY]  System.arraycopy(function,  0,  result,  0,  functionOffset,  function.length);  [CE]  cannot  find  symbol  functionOffset  [FE]        AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  System.arraycopy(function,  0,  result,  0,  functionOffset,  function.length);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	System.arraycopy(function,  0,  result,  0,  functionOffset,  function.length);	          System.arraycopy(function,    0,    result,    0,    n,    function.length);    	non-compiled	[CE]  cannot  find  symbol  functionOffset	38	None	replace
96	[BUG]  [BUGGY]  function[0]  =  function[0];  Function[0]  =  function[0];  [CE]  cannot  find  symbol  Function  [FE]    AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  function[0]  =  function[0];  Function[0]  =  function[0];  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	function[0]    =    function[0];    Function[0]  =  function[0];	  	non-compiled	[CE]  cannot  find  symbol  Function	32	None	add
97	[BUG]  [BUGGY]  Opcodes.IS_OPTIONAL_COMPARATOR)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  null;  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  Opcodes.IS_OPTIONAL_COMPARATOR)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  null;  }  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IS_OPTIONAL_COMPARATOR)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  null;  }	  Opcodes.IS_OPTIONAL_COMPARATOR)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    function[i];    }    	non-compiled	[CE]  not  a  statement	5	None	replace
98	[BUG]  [BUGGY]  compose(operand,  x,  resultOffset,  function);  [CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(operand,  x,  resultOffset,  function);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operand,  x,  resultOffset,  function);	  compose(result,    x,    function,    operandOffset,    resultOffset);    	non-compiled	[CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;	40	None	replace
99	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  functions.length;  i++)  {  operand[i]  =  function[i];  }  [CE]  cannot  find  symbol  functions  [FE]        AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  for(int  i  =  0;  i  <  functions.length;  i++)  {  operand[i]  =  function[i];  }  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	for(int  i  =  0;  i  <  functions.length;  i++)  {  operand[i]  =  function[i];  }	  if(n    >    0)    {    for(int    i    =    0;    i    <    function.length;    i++)    {    operand[i]    =    function[i];    }    	non-compiled	[CE]  cannot  find  symbol  functions	16	None	replace
100	[BUG]  [BUGGY]  compose(operandOffset,  resultOffset,  function,  v,  n);  [CE]  cannot  find  symbol  v  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(operandOffset,  resultOffset,  function,  v,  n);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operandOffset,  resultOffset,  function,  v,  n);	  compose(operandOffset,    resultOffset,    function,    result,    n);    	non-compiled	[CE]  cannot  find  symbol  v	51	None	replace
101	[BUG]  [BUGGY]  compose(operandOffset,  resultOffset,  function,  coeff,  v);  [CE]  cannot  find  symbol  coeff  [FE]                AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(operandOffset,  resultOffset,  function,  coeff,  v);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operandOffset,  resultOffset,  function,  coeff,  v);	  compose(operandOffset,    resultOffset,    function,    result,    n);    	non-compiled	[CE]  cannot  find  symbol  coeff	51	None	replace
102	[BUG]  [BUGGY]  Opcodes.IASTORE_OPCODES[n]  =  coeff;  [CE]  cannot  find  symbol  Opcodes  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  Opcodes.IASTORE_OPCODES[n]  =  coeff;  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IASTORE_OPCODES[n]  =  coeff;	  Opcodes.IASTORE_OPCODES[n]    =    f;    	non-compiled	[CE]  cannot  find  symbol  Opcodes	39	None	replace
103	[BUG]  [BUGGY]  c  tes[n]  =  function.doubleValue();  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  c  tes[n]  =  function.doubleValue();  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	c  tes[n]  =  function.doubleValue();	  côtes[n]    =    v.doubleValue();    	non-compiled	[CE]  ']'  expected	14	None	replace
104	[BUG]  [BUGGY]  operand[f  -  1]  =  Math.abs(v  -  1);  [CE]  cannot  find  symbol  f  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  operand[f  -  1]  =  Math.abs(v  -  1);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	operand[f  -  1]  =  Math.abs(v  -  1);	  operand[n]    =    Math.abs(v    -    1);    	non-compiled	[CE]  cannot  find  symbol  f	1	None	replace
105	[BUG]  [BUGGY]  n  =  Math.max(optOffset,  coeff);  [CE]  cannot  find  symbol  n  [FE]                AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  n  =  Math.max(optOffset,  coeff);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	n  =  Math.max(optOffset,  coeff);	  n    =    Math.max(resultOffset,    coeff);    	non-compiled	[CE]  cannot  find  symbol  n	23	None	replace
106	[BUG]  [BUGGY]  compose(operand,  resultOffset,  function,  v,  v);  [CE]  cannot  find  symbol  v  [FE]                AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(operand,  resultOffset,  function,  v,  v);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operand,  resultOffset,  function,  v,  v);	  compose(operand,    resultOffset,    function,    q,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  v	28	None	replace
107	[BUG]  [BUGGY]  compose(function,  resultOffset,  v,  coeff,  v);  [CE]  cannot  find  symbol  v  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(function,  resultOffset,  v,  coeff,  v);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(function,  resultOffset,  v,  coeff,  v);	  compose(resultOffset,    resultOffset,    function,    coeff,    v);    	non-compiled	[CE]  cannot  find  symbol  v	12	None	replace
108	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  System.arraycopy(function,  0,  result,  0,  function.length);  System.arraycopy(function,  0,  result,  0,  function.length  -  1);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	add	System.arraycopy(function,    0,    result,    0,    function.length);    System.arraycopy(function,  0,  result,  0,  function.length  -  1);	  	compilable	  [FE]  AssertionError  	29	1	add
109	[BUG]  [BUGGY]  System.arraycopy(function,  0,  result,  0,  function.length);  System.arraycopy(function,  0,  result,  0,  function.length  -  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  System.arraycopy(function,  0,  result,  0,  function.length);  System.arraycopy(function,  0,  result,  0,  function.length  -  1);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	System.arraycopy(function,    0,    result,    0,    function.length);    System.arraycopy(function,  0,  result,  0,  function.length  -  1);	  	compilable	  [FE]  AssertionError  	29	1	add
110	[BUG]  [BUGGY]  compose(operandOffset,  resultOffset,  function,  q,  v);  [CE]  cannot  find  symbol  q  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(operandOffset,  resultOffset,  function,  q,  v);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operandOffset,  resultOffset,  function,  q,  v);	  compose(operandOffset,    resultOffset,    function,    n,    v);    	non-compiled	[CE]  cannot  find  symbol  q	47	None	replace
111	[BUG]  [BUGGY]  compose(result,  x,  function,  resultOffset,  resultOffset);  [CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(result,  x,  function,  resultOffset,  resultOffset);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(result,  x,  function,  resultOffset,  resultOffset);	  compose(result,    v,    function,    resultOffset,    resultOffset);    	non-compiled	[CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;	3	None	replace
112	[BUG]  [BUGGY]  System.arraycopy(function,  0,  result,  0,  functionOffset);  [CE]  cannot  find  symbol  functionOffset  [FE]          AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  System.arraycopy(function,  0,  result,  0,  functionOffset);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	System.arraycopy(function,  0,  result,  0,  functionOffset);	  System.arraycopy(function,    0,    result,    0,    n);    	non-compiled	[CE]  cannot  find  symbol  functionOffset	31	None	replace
113	[BUG]  [BUGGY]  v  =  Math.max(v,  resultOffset);  [CE]  cannot  find  symbol  v  [FE]                AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  v  =  Math.max(v,  resultOffset);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	v  =  Math.max(v,  resultOffset);	  v    =    Math.max(resultOffset,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  v	45	None	replace
114	[BUG]  [BUGGY]  v  =  Math.min(v,  resultOffset);  [CE]  cannot  find  symbol  v  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  v  =  Math.min(v,  resultOffset);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	v  =  Math.min(v,  resultOffset);	  v    =    Math.min(resultOffset,    v);    	non-compiled	[CE]  cannot  find  symbol  v	48	None	replace
115	[BUG]  [BUGGY]  operand[offset]  =  Math.pow(1  +  i);  [CE]  cannot  find  symbol  offset  [FE]                AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  operand[offset]  =  Math.pow(1  +  i);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	operand[offset]  =  Math.pow(1  +  i);	  operand[n]    =    Math.pow(1    +    i);    	non-compiled	[CE]  cannot  find  symbol  offset	7	None	replace
116	[BUG]  [BUGGY]  n  =  Math.min(v,  resultOffset  +  1);  [CE]  cannot  find  symbol  n  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  n  =  Math.min(v,  resultOffset  +  1);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	n  =  Math.min(v,  resultOffset  +  1);	  n    =    Math.min(v,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  n	18	None	replace
117	[BUG]  [BUGGY]  n  =  Math.max(oeff,  resultOffset);  [CE]  cannot  find  symbol  n  [FE]                AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  n  =  Math.max(oeff,  resultOffset);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	n  =  Math.max(oeff,  resultOffset);	  n    =    Math.max(resultOffset,    coeff);    	non-compiled	[CE]  cannot  find  symbol  n	23	None	replace
118	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  function[0]  =  function[0];  function[0]  =  function[1];  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	add	function[0]    =    function[0];    function[0]  =  function[1];	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	4	add
119	[BUG]  [BUGGY]  function[0]  =  function[0];  function[0]  =  function[1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  function[0]  =  function[0];  function[0]  =  function[1];  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	function[0]    =    function[0];    function[0]  =  function[1];	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	4	add
120	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  System.arraycopy(function,  0,  result,  0,  function.length);  if(function.length  >  0)  {  System.arraycopy(function,  0,  result,  0,  function.length);  }  else  {  System.arraycopy(function,  0,  result,  0,  function.length);  }  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	add	System.arraycopy(function,    0,    result,    0,    function.length);    if(function.length  >  0)  {  System.arraycopy(function,  0,  result,  0,  function.length);  }  else  {  System.arraycopy(function,  0,  result,  0,  function.length);  }	  	compilable	  [FE]  AssertionError  	29	1	add
121	[BUG]  [BUGGY]  System.arraycopy(function,  0,  result,  0,  function.length);  if(function.length  >  0)  {  System.arraycopy(function,  0,  result,  0,  function.length);  }  else  {  System.arraycopy(function,  0,  result,  0,  function.length);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  System.arraycopy(function,  0,  result,  0,  function.length);  if(function.length  >  0)  {  System.arraycopy(function,  0,  result,  0,  function.length);  }  else  {  System.arraycopy(function,  0,  result,  0,  function.length);  }  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	System.arraycopy(function,    0,    result,    0,    function.length);    if(function.length  >  0)  {  System.arraycopy(function,  0,  result,  0,  function.length);  }  else  {  System.arraycopy(function,  0,  result,  0,  function.length);  }	  	compilable	  [FE]  AssertionError  	29	1	add
122	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  System.arraycopy(function,  0,  result,  0,  function.length);  if(function.length  >  0)  {  System.arraycopy(function,  0,  result,  0,  function.length);  }  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	add	System.arraycopy(function,    0,    result,    0,    function.length);    if(function.length  >  0)  {  System.arraycopy(function,  0,  result,  0,  function.length);  }	  	compilable	  [FE]  AssertionError  	29	1	add
123	[BUG]  [BUGGY]  System.arraycopy(function,  0,  result,  0,  function.length);  if(function.length  >  0)  {  System.arraycopy(function,  0,  result,  0,  function.length);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  System.arraycopy(function,  0,  result,  0,  function.length);  if(function.length  >  0)  {  System.arraycopy(function,  0,  result,  0,  function.length);  }  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	System.arraycopy(function,    0,    result,    0,    function.length);    if(function.length  >  0)  {  System.arraycopy(function,  0,  result,  0,  function.length);  }	  	compilable	  [FE]  AssertionError  	29	1	add
124	[BUG]  [BUGGY]  operand[n]  =  Math.pow(1  +  n);  [CE]  cannot  find  symbol  n  [FE]                  AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  operand[n]  =  Math.pow(1  +  n);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	operand[n]  =  Math.pow(1  +  n);	  operand[i]    =    Math.pow(1    +    i);    	non-compiled	[CE]  cannot  find  symbol  n	42	None	replace
125	[BUG]  [BUGGY]  compose(op,  function,  resultOffset,  null);  [CE]  cannot  find  symbol  op  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(op,  function,  resultOffset,  null);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(op,  function,  resultOffset,  null);	  compose(resultOffset,    function,    operand,    null);    	non-compiled	[CE]  cannot  find  symbol  op	36	None	replace
126	[BUG]  [BUGGY]  compose(operandOffset,  resultOffset,  function,  v,  resultOffset);  [CE]  cannot  find  symbol  v  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(operandOffset,  resultOffset,  function,  v,  resultOffset);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operandOffset,  resultOffset,  function,  v,  resultOffset);	  compose(resultOffset,    operandOffset,    function,    q,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  v	25	None	replace
127	[BUG]  [BUGGY]  operand[xOffset]  =  Math.abs(v  -  1);  [CE]  cannot  find  symbol  xOffset  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  operand[xOffset]  =  Math.abs(v  -  1);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	operand[xOffset]  =  Math.abs(v  -  1);	  operand[n]    =    Math.abs(v    -    1);    	non-compiled	[CE]  cannot  find  symbol  xOffset	1	None	replace
128	[BUG]  [BUGGY]  compose(operandOffset,  resultOffset,  function,  v,  v);  [CE]  cannot  find  symbol  v  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(operandOffset,  resultOffset,  function,  v,  v);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operandOffset,  resultOffset,  function,  v,  v);	  compose(resultOffset,    resultOffset,    function,    coeff,    v);    	non-compiled	[CE]  cannot  find  symbol  v	12	None	replace
129	[BUG]  [BUGGY]  compose(resultOffset,  resultOffset,  function,  x,  n);  [CE]  cannot  find  symbol  n  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(resultOffset,  resultOffset,  function,  x,  n);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(resultOffset,  resultOffset,  function,  x,  n);	  compose(resultOffset,    resultOffset,    function,    v,    n);    	non-compiled	[CE]  cannot  find  symbol  n	50	None	replace
130	[BUG]  [BUGGY]  compose(operand,  n,  function,  v,  resultOffset);  [CE]  cannot  find  symbol  n  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(operand,  n,  function,  v,  resultOffset);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operand,  n,  function,  v,  resultOffset);	  compose(operand,    resultOffset,    function,    v,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  n	27	None	replace
131	[BUG]  [BUGGY]  compose(operand,  x,  resultOffset,  operandOffset);  [CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(operand,  x,  resultOffset,  operandOffset);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operand,  x,  resultOffset,  operandOffset);	  compose(result,    x,    function,    operandOffset,    resultOffset);    	non-compiled	[CE]  method  compose  in  class  DSCompiler  cannot  be  applied  to  given  types;	40	None	replace
132	[BUG]  [BUGGY]  c  tes[n]  =  Math.pow(10.0,  v);  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  c  tes[n]  =  Math.pow(10.0,  v);  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	c  tes[n]  =  Math.pow(10.0,  v);	  côtes[n]    =    Math.pow(10.0,    v);    	non-compiled	[CE]  ']'  expected	13	None	replace
133	[BUG]  [BUGGY]  Opcodes.IASTORE,  n  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  new  double[1];  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  Opcodes.IASTORE,  n  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  new  double[1];  }  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IASTORE,  n  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  new  double[1];  }	  if(n    >    0)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    new    double[1];    }    	non-compiled	[CE]  not  a  statement	53	None	replace
134	[BUG]  [BUGGY]  Opcodes.IASTORE,  n  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  new  double[2];  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  Opcodes.IASTORE,  n  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  new  double[2];  }  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IASTORE,  n  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  new  double[2];  }	  if(n    >    0)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    new    double[1];    }    	non-compiled	[CE]  not  a  statement	53	None	replace
135	[BUG]  [BUGGY]  Opcodes.IS_OPTIONAL_COMPONENT)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  operation[i];  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  Opcodes.IS_OPTIONAL_COMPONENT)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  operation[i];  }  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IS_OPTIONAL_COMPONENT)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  operation[i];  }	  Opcodes.IS_OPTIONAL_COMPONENT)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    function[i];    }    	non-compiled	[CE]  not  a  statement	6	None	replace
136	[BUG]  [BUGGY]  Opcodes.IS_OPTIONAL_COMPARATOR)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  operation[i];  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  Opcodes.IS_OPTIONAL_COMPARATOR)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  operation[i];  }  [BUGGY]      compose(operand,  operandOffset,  function,  result,  resultOffset);  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	Opcodes.IS_OPTIONAL_COMPARATOR)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  operation[i];  }	  Opcodes.IS_OPTIONAL_COMPARATOR)    {    for(int    i    =    0;    i    <    n;    i++)    {    operand[i]    =    function[i];    }    	non-compiled	[CE]  not  a  statement	5	None	replace
137	[BUG]  [BUGGY]  compose(operand,  n,  function,  resultOffset,  resultOffset);  [CE]  cannot  find  symbol  n  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(operand,  n,  function,  resultOffset,  resultOffset);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operand,  n,  function,  resultOffset,  resultOffset);	  compose(result,    v,    function,    resultOffset,    resultOffset);    	non-compiled	[CE]  cannot  find  symbol  n	3	None	replace
138	[BUG]  [BUGGY]  compose(operandOffset,  function,  resultOffset,  n);  [CE]  cannot  find  symbol  n  [FE]            AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(operandOffset,  function,  resultOffset,  n);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operandOffset,  function,  resultOffset,  n);	  compose(resultOffset,    function,    operand,    n);    	non-compiled	[CE]  cannot  find  symbol  n	22	None	replace
139	[BUG]  [BUGGY]  compose(operand,  resultOffset,  function,  v,  n);  [CE]  cannot  find  symbol  v  [FE]              AssertionError      [CONTEXT]      v  *=  x;  }  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }        [BUGGY]  compose(operand,  resultOffset,  function,  v,  n);  [BUGGY]        }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1368	1368	1	replace	compose(operand,  resultOffset,  function,  v,  n);	  compose(operand,    resultOffset,    function,    n,    v);    	non-compiled	[CE]  cannot  find  symbol  v	49	None	replace
