bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(v  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  v[i];  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }  compose(operand,  operandOffset,  function,  result,  resultOffset);  [BUGGY]  if(v  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  v[i];  }  [BUGGY]    [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1370	1370	1	replace	if(v  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  v[i];  }	}  	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
2	[BUG]  [BUGGY]  if(v  >  0.0)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  v[i];  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }  compose(operand,  operandOffset,  function,  result,  resultOffset);  [BUGGY]  if(v  >  0.0)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  v[i];  }  [BUGGY]    [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1370	1370	1	replace	if(v  >  0.0)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  v[i];  }	}  	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }  compose(operand,  operandOffset,  function,  result,  resultOffset);  [BUGGY]    [BUGGY]    [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1370	1370	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
4	[BUG]  [BUGGY]    if(v  >  0)  {  for(int  i  =  0;  i  <  resultOffset;  i++)  {  operand[i]  =  v[i];  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }  compose(operand,  operandOffset,  function,  result,  resultOffset);  [BUGGY]    if(v  >  0)  {  for(int  i  =  0;  i  <  resultOffset;  i++)  {  operand[i]  =  v[i];  }  [BUGGY]  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1370	1370	1	replace	    if(v  >  0)  {  for(int  i  =  0;  i  <  resultOffset;  i++)  {  operand[i]  =  v[i];  }		non-compiled	[CE]  illegal  start  of  expression	71	None	add
5	[BUG]  [BUGGY]    if(v  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  v[i]  *  f;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }  compose(operand,  operandOffset,  function,  result,  resultOffset);  [BUGGY]    if(v  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  v[i]  *  f;  }  [BUGGY]  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1370	1370	1	replace	    if(v  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  operand[i]  =  v[i]  *  f;  }		non-compiled	[CE]  illegal  start  of  expression	71	None	add
6	[BUG]  [BUGGY]  System.arraycopy(op,  0,  result,  0,  n);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }  compose(operand,  operandOffset,  function,  result,  resultOffset);  [BUGGY]  System.arraycopy(op,  0,  result,  0,  n);  [BUGGY]    [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1370	1370	1	replace	System.arraycopy(op,  0,  result,  0,  n);	}  	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
7	[BUG]  [BUGGY]  if(v  >  0.0)  {  for(int  i  =  0;  i  <  n;  ++i)  {  compose(v,  result,  i);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }  compose(operand,  operandOffset,  function,  result,  resultOffset);  [BUGGY]  if(v  >  0.0)  {  for(int  i  =  0;  i  <  n;  ++i)  {  compose(v,  result,  i);  }  [BUGGY]    [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1370	1370	1	replace	if(v  >  0.0)  {  for(int  i  =  0;  i  <  n;  ++i)  {  compose(v,  result,  i);  }	}  	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
8	[BUG]  [BUGGY]  if(v  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  compose(v,  result,  i);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }  compose(operand,  operandOffset,  function,  result,  resultOffset);  [BUGGY]  if(v  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  compose(v,  result,  i);  }  [BUGGY]    [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1370	1370	1	replace	if(v  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  compose(v,  result,  i);  }	}  	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
9	[BUG]  [BUGGY]    if(v  >  0)  {  for(int  i  =  0;  i  <  n;  ++i)  {  compose(operand,  operandOffset,  0,  i);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }  compose(operand,  operandOffset,  function,  result,  resultOffset);  [BUGGY]    if(v  >  0)  {  for(int  i  =  0;  i  <  n;  ++i)  {  compose(operand,  operandOffset,  0,  i);  }  [BUGGY]  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1370	1370	1	replace	    if(v  >  0)  {  for(int  i  =  0;  i  <  n;  ++i)  {  compose(operand,  operandOffset,  0,  i);  }		non-compiled	[CE]  illegal  start  of  expression	71	None	add
10	[BUG]  [BUGGY]    if(v  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  compose(v,  result,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  coeff  *=  f;  function[n]  =  coeff  *  v;  }  }  compose(operand,  operandOffset,  function,  result,  resultOffset);  [BUGGY]    if(v  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  compose(v,  result,  i  +  1);  }  [BUGGY]  }  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1370	1370	1	replace	    if(v  >  0)  {  for(int  i  =  0;  i  <  n;  i++)  {  compose(v,  result,  i  +  1);  }		non-compiled	[CE]  illegal  start  of  expression	71	None	add
