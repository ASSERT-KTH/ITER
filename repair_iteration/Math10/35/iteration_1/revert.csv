projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370if(v>0){for(inti=0;i<n;i++){operand[i]=v[i];}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370if(v>0.0){for(inti=0;i<n;i++){operand[i]=v[i];}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370if(v>0){for(inti=0;i<resultOffset;i++){operand[i]=v[i];}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370if(v>0){for(inti=0;i<n;i++){operand[i]=v[i]*f;}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370System.arraycopy(op,0,result,0,n);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370if(v>0.0){for(inti=0;i<n;++i){compose(v,result,i);}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370if(v>0){for(inti=0;i<n;i++){compose(v,result,i);}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370if(v>0){for(inti=0;i<n;++i){compose(operand,operandOffset,0,i);}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370if(v>0){for(inti=0;i<n;i++){compose(v,result,i+1);}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370cast(n,v,resultOffset);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370pendSizes.add(v);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370operand[n]=v[i];
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370operand[i]=v[i];
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370Opcodes.isDerivative(f)&&v>0){for(inti=0;i<n;i++){operand[i]=v[i];}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370Opcodes.IS_OPTIONAL_MODULE){for(inti=0;i<n;i++){operand[i]=v[i];}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370For(inti=0;i<n;i++){compose(v,result,i);}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370For(inti=0;i<n;i++){compose(op,result,i);}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370côteline(v,resultOffset,n);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370cast(v,resultOffset,n);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370srcDerivativesIndirection=compilers.getSrcDerivativesIndirection();
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370srcDerivativesIndirection.add(v);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370System.arraycopy(op,0,result,0,n+1);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370||(v>0&&operand[i]!=v[i])){for(inti=0;i<resultOffset;i++){operand[i]=v[i];}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370||(v>0&&operand[i]<resultOffset)){operand[i]=v[i];}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370Context.checkState(n<0||v>0){for(inti=0;i<n;i++){operand[i]=v[i]*f;}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370operand[n]=v[i]*f;
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370For(inti=0;i<n;++i){compose(v,result,i);}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370For(inti=0;i<n;++i){compose(op,result,i);}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370luate(v,n){for(inti=0;i<n;i++){compose(v,result,i+1);}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370luate(v,n)>0){for(inti=0;i<n;i++){compose(v,result,i+1);}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370Opcodes.IASTORE_OPTIONAL_PARAM||v>0){for(inti=0;i<resultOffset;i++){operand[i]=v[i];}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370Opcodes.IASTORE_OPTIONAL_PARAM||v>0){for(inti=0;i<resultOffset;i++){operand[i]=function[i];}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370Opcodes.WARNING(this,v,resultOffset);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370Integerv=createInteger(resultOffset);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370Integerv=createInteger(n);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370Opcodes.IASTORE_DETERMINISTIC_FACTOR){for(inti=0;i<n;i++){operand[i]=v[i]*f;}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370Opcodes.IASTORE_DETERMINISTIC_FIRST||v>0){for(inti=0;i<n;i++){operand[i]=v[i]*f;}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370luate(n,v){for(inti=0;i<v;++i){compose(operand,operandOffset,0,i);}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370luate(n,v)>0){for(inti=0;i<n;++i){compose(operand,operandOffset,0,i);}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370System.arraycopy(operand,0,result,0,n);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370luate(v,n){for(inti=0;i<n;i++){compose(v,result,i);}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370luate(v,n)>0){for(inti=0;i<n;i++){compose(v,result,i);}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370Opcodes.IASTORE_DETERMINISTIC_FACTOR;
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370if(v>0.0){for(inti=0;i<n;i++){operand[i]=f[i];}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370NeighborTraversal.traverse(compiler,v,result);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370NeighborTraversal.traverse(compiler,v,resultOffset);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370Opcodes.IASTORE_OPTIONAL_PARAM){for(inti=0;i<n;i++){operand[i]=v[i];}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370Opcodes.IASTORE_OPTIONAL_PARAM){for(inti=0;i<n;i++){operand[i]=Opcodes.IASTORE_OPTIONAL_PARAM;}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370if(n>0){for(inti=0;i<resultOffset;i++){operand[i]=v[i];}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370n>0.0){compose(v,result,i);}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370n>0.0){compose(v,result,i);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370n>0){compose(operand,operandOffset,0,i);}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370n>0){compose(operand,operandOffset,0,v);}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370if(n>0){for(inti=0;i<v.length;i++){operand[i]=v[i]*f;}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370if(n>0){for(inti=0;i<vs.length;i++){operand[i]=v[i]*f;}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370if(v>0){for(inti=0;i<n;++i){compose(operand[i],result[i]);}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370if(v>0){for(inti=0;i<n;++i){compose(operand[i],result[i][i]);}
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370côteices.put(v,resultOffset);
projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java1370côteices.put(v,result);
