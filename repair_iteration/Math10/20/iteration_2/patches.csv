bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  x2  =  x  *  q[0];  [CE]  variable  x2  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]              AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  x2  =  x  *  q[0];  [BUGGY]      final  double  f  =  1.0  /  (1  +  x2);  double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final  double  x2  =  x  *  q[0];	  final    double    x2    =    x    *    q;    	non-compiled	[CE]  variable  x2  is  already  defined  in  method  atan(double[],int,double[],int)	13	None	replace
2	[BUG]  [BUGGY]  final  double  f  =  1.0  /  (1  <  <  x2)/  1;  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  f  =  1.0  /  (1  <  <  x2)/  1;  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final  double  f  =  1.0  /  (1  <  <  x2)/  1;	  final    double    f    =    1.0    /    (1    <    <    x2)+    1;    	non-compiled	[CE]  >  expected	5	None	replace
3	[BUG]  [BUGGY]  final  double  x2  =  x  *  x.length;  [CE]  variable  x2  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]            AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  x2  =  x  *  x.length;  [BUGGY]      final  double  f  =  1.0  /  (1  +  x2);  double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final  double  x2  =  x  *  x.length;	  final    double    x2    =    x    *    q.length;    	non-compiled	[CE]  variable  x2  is  already  defined  in  method  atan(double[],int,double[],int)	12	None	replace
4	[BUG]  [BUGGY]  final  double  x2=(x  *  q2);  [CE]  variable  x2  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]              AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  x2=(x  *  q2);  [BUGGY]      final  double  f  =  1.0  /  (1  +  x2);  double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final  double  x2=(x  *  q2);	  final    double    x2=(q    *    x2);    	non-compiled	[CE]  variable  x2  is  already  defined  in  method  atan(double[],int,double[],int)	7	None	replace
5	[BUG]  [BUGGY]  double  f  =  x  *  q[0];  double  f  =  x  *  q[0];  [CE]  variable  f  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  double  f  =  x  *  q[0];  double  f  =  x  *  q[0];  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	double    f    =    x    *    q[0];    double  f  =  x  *  q[0];	  	non-compiled	[CE]  variable  f  is  already  defined  in  method  atan(double[],int,double[],int)	17	None	add
6	[BUG]  [BUGGY]  double  f  =  x  *  q[0];  Double  f  =  x  *  q[0];  [CE]  variable  f  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]      AssertionError    [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  double  f  =  x  *  q[0];  Double  f  =  x  *  q[0];  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	double    f    =    x    *    q[0];    Double  f  =  x  *  q[0];	  	non-compiled	[CE]  variable  f  is  already  defined  in  method  atan(double[],int,double[],int)	17	None	add
7	[BUG]  [BUGGY]  double  f  =  x  *  q[0];  double  f  =  x  *  q[1];  [CE]  variable  f  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]        AssertionError    [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  double  f  =  x  *  q[0];  double  f  =  x  *  q[1];  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	double    f    =    x    *    q[0];    double  f  =  x  *  q[1];	  	non-compiled	[CE]  variable  f  is  already  defined  in  method  atan(double[],int,double[],int)	17	None	add
8	[BUG]  [BUGGY]  final  double  f  =  1.0  /  (1  <  <  x2.length);  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  f  =  1.0  /  (1  <  <  x2.length);  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final  double  f  =  1.0  /  (1  <  <  x2.length);	  final    double    f    =    1.0    /    (1    <    <    q.length);    	non-compiled	[CE]  >  expected	22	None	replace
9	[BUG]  [BUGGY]  final  double  f  =  1.0  /(x2  <  <  q.length);  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  f  =  1.0  /(x2  <  <  q.length);  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final  double  f  =  1.0  /(x2  <  <  q.length);	  final    double    f    =    1.0    /    (1    <    <    q.length);    	non-compiled	[CE]  >  expected	22	None	replace
10	[BUG]  [BUGGY]  final  double  f  =  1.0  /  (1  +  x2)/  2;  final  double  f  =  1.0  /  (1  +  x2)/  2;  [CE]  variable  f  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  f  =  1.0  /  (1  +  x2)/  2;  final  double  f  =  1.0  /  (1  +  x2)/  2;  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final    double    f    =    1.0    /    (1    +    x2)/    2;    final  double  f  =  1.0  /  (1  +  x2)/  2;	  	non-compiled	[CE]  variable  f  is  already  defined  in  method  atan(double[],int,double[],int)	1	None	add
11	[BUG]  [BUGGY]  final  double  f  =  1.0  /  (1  +  x2)/  2;  double  f  =  1.0  /  (1  +  x2)/  2;  [CE]  variable  f  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]      AssertionError    [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  f  =  1.0  /  (1  +  x2)/  2;  double  f  =  1.0  /  (1  +  x2)/  2;  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final    double    f    =    1.0    /    (1    +    x2)/    2;    double  f  =  1.0  /  (1  +  x2)/  2;	  	non-compiled	[CE]  variable  f  is  already  defined  in  method  atan(double[],int,double[],int)	1	None	add
12	[BUG]  [BUGGY]  double  f  =  x  *  q[1];  double  f  =  x  *  q[1];  [CE]  variable  f  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  double  f  =  x  *  q[1];  double  f  =  x  *  q[1];  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	double    f    =    x    *    q[1];    double  f  =  x  *  q[1];	  	non-compiled	[CE]  variable  f  is  already  defined  in  method  atan(double[],int,double[],int)	19	None	add
13	[BUG]  [BUGGY]  double  f  =  x  *  q[1];  double  f  =  x  *  q[2];  [CE]  variable  f  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  double  f  =  x  *  q[1];  double  f  =  x  *  q[2];  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	double    f    =    x    *    q[1];    double  f  =  x  *  q[2];	  	non-compiled	[CE]  variable  f  is  already  defined  in  method  atan(double[],int,double[],int)	19	None	add
14	[BUG]  [BUGGY]  double  f  =  x  *  q[1];  Double  f  =  x  *  q[1];  [CE]  variable  f  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  double  f  =  x  *  q[1];  Double  f  =  x  *  q[1];  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	double    f    =    x    *    q[1];    Double  f  =  x  *  q[1];	  	non-compiled	[CE]  variable  f  is  already  defined  in  method  atan(double[],int,double[],int)	19	None	add
15	[BUG]  [BUGGY]  double  function[0]  =  function[1]  *  q[1];  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  double  function[0]  =  function[1]  *  q[1];  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	double  function[0]  =  function[1]  *  q[1];	  double    function[1]    =    function[1]    *    q[1];    	non-compiled	[CE]  ']'  expected	11	None	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  double  f  =  1.0  /  (1  +  x2)+  1;  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	add	double  f  =  1.0  /  (1  +  x2)+  1;	  final    double    f    =    1.0    /    (1    +    x2)+    1;    double    f    =    1.0    /    (1    +    x2)+    1;    	compilable	  [FE]  AssertionError  	9	4	replace
17	[BUG]  [BUGGY]  double  f  =  1.0  /  (1  +  x2)+  1;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  double  f  =  1.0  /  (1  +  x2)+  1;  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	double  f  =  1.0  /  (1  +  x2)+  1;	  final    double    f    =    1.0    /    (1    +    x2)+    1;    double    f    =    1.0    /    (1    +    x2)+    1;    	compilable	  [FE]  AssertionError  	9	4	replace
18	[BUG]  [BUGGY]  final  double  x2=(q  *  x);  [CE]  variable  x2  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]            AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  x2=(q  *  x);  [BUGGY]      final  double  f  =  1.0  /  (1  +  x2);  double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final  double  x2=(q  *  x);	  final    double    x2=(x    *    q);    	non-compiled	[CE]  variable  x2  is  already  defined  in  method  atan(double[],int,double[],int)	16	None	replace
19	[BUG]  [BUGGY]  final  double  x2=(x  *  q[0]);  [CE]  variable  x2  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]              AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  x2=(x  *  q[0]);  [BUGGY]      final  double  f  =  1.0  /  (1  +  x2);  double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final  double  x2=(x  *  q[0]);	  final    double    x2=(x    *    q);    	non-compiled	[CE]  variable  x2  is  already  defined  in  method  atan(double[],int,double[],int)	16	None	replace
20	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  f  =  1.  /  (1  +  x2)+  1;  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	add	final  double  f  =  1.  /  (1  +  x2)+  1;	  final    double    f    =    1.0    /    (1    +    x2)+    1;    final    double    f    =    1.    /    (1    +    x2)+    1;    	compilable	  [FE]  AssertionError  	21	4	replace
21	[BUG]  [BUGGY]  final  double  f  =  1.  /  (1  +  x2)+  1;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  f  =  1.  /  (1  +  x2)+  1;  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final  double  f  =  1.  /  (1  +  x2)+  1;	  final    double    f    =    1.0    /    (1    +    x2)+    1;    final    double    f    =    1.    /    (1    +    x2)+    1;    	compilable	  [FE]  AssertionError  	21	4	replace
22	[BUG]  [BUGGY]  final  double  f  =  1  +  x2)+  1;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  f  =  1  +  x2)+  1;  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final  double  f  =  1  +  x2)+  1;	  final    double    f    =    1.0    /    (1    +    x2)+    1;    final    double    f    =    1.    /    (1    +    x2)+    1;    	non-compiled	[CE]  ';'  expected	21	None	replace
23	[BUG]  [BUGGY]  double  function[0]  =  function[1]  *  q[2];  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  double  function[0]  =  function[1]  *  q[2];  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	double  function[0]  =  function[1]  *  q[2];	  double    function[1]    =    function[1]    *    q[2];    	non-compiled	[CE]  ']'  expected	10	None	replace
24	[BUG]  [BUGGY]  final  double  f  =  1.0  /  (1  +  x2)/  1;  final  double  f  =  1.0  /  (1  +  x2)/  1;  [CE]  variable  f  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  f  =  1.0  /  (1  +  x2)/  1;  final  double  f  =  1.0  /  (1  +  x2)/  1;  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final    double    f    =    1.0    /    (1    +    x2)/    1;    final  double  f  =  1.0  /  (1  +  x2)/  1;	  	non-compiled	[CE]  variable  f  is  already  defined  in  method  atan(double[],int,double[],int)	3	None	add
25	[BUG]  [BUGGY]  final  double  f  =  1.0  /  (1  +  x2)/  1;  double  f  =  1.0  /  (1  +  x2)/  1;  [CE]  variable  f  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]      AssertionError    [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  f  =  1.0  /  (1  +  x2)/  1;  double  f  =  1.0  /  (1  +  x2)/  1;  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final    double    f    =    1.0    /    (1    +    x2)/    1;    double  f  =  1.0  /  (1  +  x2)/  1;	  	non-compiled	[CE]  variable  f  is  already  defined  in  method  atan(double[],int,double[],int)	3	None	add
26	[BUG]  [BUGGY]  final  double  f  =  1.0  /(x2  <  <  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  f  =  1.0  /(x2  <  <  1);  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final  double  f  =  1.0  /(x2  <  <  1);	  final    double    f    =    1.0    /(x2    <    <    x);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
27	[BUG]  [BUGGY]  final  double  f  =  1.0  /(x2  <  <  2);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  f  =  1.0  /(x2  <  <  2);  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final  double  f  =  1.0  /(x2  <  <  2);	  final    double    f    =    1.0    /(x2    <    <    x);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
28	[BUG]  [BUGGY]  final  double  x2=(x  *  q.length)+  1;  [CE]  variable  x2  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]            AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  x2=(x  *  q.length)+  1;  [BUGGY]      final  double  f  =  1.0  /  (1  +  x2);  double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final  double  x2=(x  *  q.length)+  1;	  final    double    x2=(x    *    q.length);    	non-compiled	[CE]  variable  x2  is  already  defined  in  method  atan(double[],int,double[],int)	6	None	replace
29	[BUG]  [BUGGY]  final  double  f  =  1.0  /  (1  +  x2)/  2;  Final  double  f  =  1.0  /  (1  +  x2)/  2;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  f  =  1.0  /  (1  +  x2)/  2;  Final  double  f  =  1.0  /  (1  +  x2)/  2;  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final    double    f    =    1.0    /    (1    +    x2)/    2;    Final  double  f  =  1.0  /  (1  +  x2)/  2;	  	non-compiled	[CE]  not  a  statement	1	None	add
30	[BUG]  [BUGGY]  final  double  f  =  1.0  /(x2  <  <  x2)+  1;  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  f  =  1.0  /(x2  <  <  x2)+  1;  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final  double  f  =  1.0  /(x2  <  <  x2)+  1;	  final    double    f    =    1.0    /    (1    <    <    x2)+    1;    	non-compiled	[CE]  >  expected	5	None	replace
31	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  f  =  10.0  /  (1  +  x2)+  1;  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	add	final  double  f  =  10.0  /  (1  +  x2)+  1;	  final    double    f    =    1.0    /    (1    +    x2)+    1;    final    double    f    =    1.    /    (1    +    x2)+    1;    	compilable	  [FE]  AssertionError  	21	4	replace
32	[BUG]  [BUGGY]  final  double  f  =  10.0  /  (1  +  x2)+  1;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  f  =  10.0  /  (1  +  x2)+  1;  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final  double  f  =  10.0  /  (1  +  x2)+  1;	  final    double    f    =    1.0    /    (1    +    x2)+    1;    final    double    f    =    1.    /    (1    +    x2)+    1;    	compilable	  [FE]  AssertionError  	21	4	replace
33	[BUG]  [BUGGY]  final  double  q2=(x  *  q);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  q2=(x  *  q);  [BUGGY]      final  double  f  =  1.0  /  (1  +  x2);  double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final  double  q2=(x  *  q);	  final    double    x2=(x    *    q);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	16	None	replace
34	[BUG]  [BUGGY]  final  double  f  =  1.0  /  (1  +  x2)/  1;  Final  double  f  =  1.0  /  (1  +  x2)/  1;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  f  =  1.0  /  (1  +  x2)/  1;  Final  double  f  =  1.0  /  (1  +  x2)/  1;  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final    double    f    =    1.0    /    (1    +    x2)/    1;    Final  double  f  =  1.0  /  (1  +  x2)/  1;	  	non-compiled	[CE]  not  a  statement	3	None	add
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  Double  f  =  1.0  /  (1  +  x2)+  1;  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	add	Double  f  =  1.0  /  (1  +  x2)+  1;	  final    double    f    =    1.0    /    (1    +    x2)+    1;    double    f    =    1.0    /    (1    +    x2)+    1;    	compilable	  [FE]  AssertionError  	9	4	replace
36	[BUG]  [BUGGY]  Double  f  =  1.0  /  (1  +  x2)+  1;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  Double  f  =  1.0  /  (1  +  x2)+  1;  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	Double  f  =  1.0  /  (1  +  x2)+  1;	  final    double    f    =    1.0    /    (1    +    x2)+    1;    double    f    =    1.0    /    (1    +    x2)+    1;    	compilable	  [FE]  AssertionError  	9	4	replace
37	[BUG]  [BUGGY]  final  double  f  =  1.0  /  (1  <  <  x2)/  2;  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  f  =  1.0  /  (1  <  <  x2)/  2;  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final  double  f  =  1.0  /  (1  <  <  x2)/  2;	  final    double    f    =    1.0    /    (1    +    x2)/    2;    	non-compiled	[CE]  >  expected	2	None	replace
38	[BUG]  [BUGGY]  double  function[0]  =  function[0]  *  q[1];  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  double  function[0]  =  function[0]  *  q[1];  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	double  function[0]  =  function[0]  *  q[1];	  double    function[1]    =    function[1]    *    q[1];    	non-compiled	[CE]  ']'  expected	11	None	replace
39	[BUG]  [BUGGY]  final  double  f  =  1.0  /  (1  +  x2)/  1;  final  double  f  =  2.0  /  (1  +  x2)/  1;  [CE]  variable  f  is  already  defined  in  method  atan(double[],int,double[],int)  [FE]    AssertionError    [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  final  double  f  =  1.0  /  (1  +  x2)/  1;  final  double  f  =  2.0  /  (1  +  x2)/  1;  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	final    double    f    =    1.0    /    (1    +    x2)/    1;    final  double  f  =  2.0  /  (1  +  x2)/  1;	  	non-compiled	[CE]  variable  f  is  already  defined  in  method  atan(double[],int,double[],int)	3	None	add
40	[BUG]  [BUGGY]  double  function[1]  =  function[1]  *  q[0];  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]              final  double[]  q  =  new  double[order];  q[0]  =  1;  final  double  x2=  x  *  x;      [BUGGY]  double  function[1]  =  function[1]  *  q[0];  [BUGGY]      double  coeff  =  f;  function[1]  =  coeff  *  q[0];  for  (int  n  =  2;  n  <=  order;  ++n)  {  double  v  =  0;  q[n  -  1]  =  -n  *  q[n  -  2];  for  (int  k  =  n  -  1;  k  >=  0;  k  -=  2)  {  v  =  v  *  x2  +  q[k];  if  (k  >  2)  {  [CLASS]  DSCompiler  [METHOD]  atan  [RETURN_TYPE]  void  final  double[]  operand  final  int  operandOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  function  operand  q  result  double  coeff  f  v  x  x2  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  n  o  offset1  offset2  offset3  offset4  operandOffset  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  xOffset  yOffset  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.5	1341	1341	1	replace	double  function[1]  =  function[1]  *  q[0];	  double    function[1]    =    function[1]    *    q[2];    	non-compiled	[CE]  ']'  expected	10	None	replace
