bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  multiply(lhs,  rhs,  resultOffset,  0,  null);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  multiply(lhs,  rhs,  resultOffset,  0,  null);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	multiply(lhs,  rhs,  resultOffset,  0,  null);	  multiply(lhs,    rhs,    resultOffset,    null);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
2	[BUG]  [BUGGY]  luate(lhs,  lhsOffset,  result,  rhsOffset);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  luate(lhs,  lhsOffset,  result,  rhsOffset);  [BUGGY]        [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	luate(lhs,  lhsOffset,  result,  rhsOffset);	  luate(lhs,    rhsOffset,    result,    rhsOffset);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
3	[BUG]  [BUGGY]  pw(lhs,  lhsOffset,  rhs,  0,  resultOffset);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  pw(lhs,  lhsOffset,  rhs,  0,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	pw(lhs,  lhsOffset,  rhs,  0,  resultOffset);	  multiply(lhs,    rhsOffset,    result,    0,    resultOffset);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
4	[BUG]  [BUGGY]  divide(lhs,  rhs,  resultOffset,  reciprocal,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  divide(lhs,  rhs,  resultOffset,  reciprocal,  null);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	divide(lhs,  rhs,  resultOffset,  reciprocal,  null);	  divide(lhs,    rhs,    resultOffset,    null);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
5	[BUG]  [BUGGY]  pw(rhs,  lhsOffset,  0,  resultOffset);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  pw(rhs,  lhsOffset,  0,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	pw(rhs,  lhsOffset,  0,  resultOffset);	  multiply(lhs,    lhsOffset,    rhs,    0,    resultOffset);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  pow(rhs,  lhsOffset,  0,  resultOffset);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  pow(rhs,  lhsOffset,  0,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	pow(rhs,  lhsOffset,  0,  resultOffset);	  multiply(lhs,    lhsOffset,    rhs,    0,    resultOffset);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  pw(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  pw(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	pw(lhs,  lhsOffset,  rhs,  0,  result,  resultOffset);	  multiply(lhs,    lhsOffset,    rhs,    0,    result,    resultOffset);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
8	[BUG]  [BUGGY]  multiplier(lhs,  rhs,  resultOffset,  0,  reciprocal);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  multiplier(lhs,  rhs,  resultOffset,  0,  reciprocal);  [BUGGY]        [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	multiplier(lhs,  rhs,  resultOffset,  0,  reciprocal);	  multiplier(lhs,    rhs,    resultOffset,    reciprocal);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
9	[BUG]  [BUGGY]  multiply(lhs,  rhs,  resultOffset,  0,  reciprocal);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  multiply(lhs,  rhs,  resultOffset,  0,  reciprocal);  [BUGGY]        [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	multiply(lhs,  rhs,  resultOffset,  0,  reciprocal);	  multiplier(lhs,    rhs,    resultOffset,    reciprocal);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  pw(lhs,  rhsOffset,  0,  result,  rhsOffset);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  pw(lhs,  rhsOffset,  0,  result,  rhsOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	pw(lhs,  rhsOffset,  0,  result,  rhsOffset);	  multiply(lhs,    rhsOffset,    result,    0,    rhsOffset);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  luate(lhs,  rhs,  result);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  luate(lhs,  rhs,  result);  [BUGGY]        [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	luate(lhs,  rhs,  result);	  if(relativeOrder    ==    null)    {    divide(lhs,    lhsOffset,    rhs,    result);    }    else    {    multiplie(lhs,    rhsOffset,    0,    result,    resultOffset);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
12	[BUG]  [BUGGY]  pw(rhs,  lhsOffset,  resultOffset);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  pw(rhs,  lhsOffset,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	pw(rhs,  lhsOffset,  resultOffset);	  multiply(lhs,    lhsOffset,    rhs,    resultOffset);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
13	[BUG]  [BUGGY]  luate(lhs,  rhs,  result,  resultOffset);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  luate(lhs,  rhs,  result,  resultOffset);  [BUGGY]        [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	luate(lhs,  rhs,  result,  resultOffset);	  if(relativeOrder    ==    null)    {    divide(lhs,    lhsOffset,    rhs,    result,    resultOffset);    }    else    {    multiplie(lhs,    rhsOffset,    0,    result,    resultOffset);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
14	[BUG]  [BUGGY]  luate(lhs,  lhsOffset,  rhs,  result,  resultOffset);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  luate(lhs,  lhsOffset,  rhs,  result,  resultOffset);  [BUGGY]        [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	luate(lhs,  lhsOffset,  rhs,  result,  resultOffset);	  if(relativeOrder    ==    null)    {    divide(lhs,    lhsOffset,    rhs,    result,    resultOffset);    }    else    {    multiplie(lhs,    rhsOffset,    0,    result,    resultOffset);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
15	[BUG]  [BUGGY]  luate(lhs,  rhs,  resultOffset,  1));  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  luate(lhs,  rhs,  resultOffset,  1));  [BUGGY]        [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	luate(lhs,  rhs,  resultOffset,  1));	  luate(lhs,    rhs,    resultOffset));    	non-compiled	[CE]  ';'  expected	17	None	replace
16	[BUG]  [BUGGY]  luate(lhs,  rhs,  resultOffset,  0,  reciprocal);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  luate(lhs,  rhs,  resultOffset,  0,  reciprocal);  [BUGGY]        [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	luate(lhs,  rhs,  resultOffset,  0,  reciprocal);	  luate(lhs,    rhs,    resultOffset,    reciprocal);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
17	[BUG]  [BUGGY]  luate(lhs,  rhs,  resultOffset,  0,  null);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  luate(lhs,  rhs,  resultOffset,  0,  null);  [BUGGY]        [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	luate(lhs,  rhs,  resultOffset,  0,  null);	  luate(lhs,    rhs,    resultOffset,    reciprocal);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
18	[BUG]  [BUGGY]  multiplier(lhs,  rhs,  0,  result,  resultOffset);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  multiplier(lhs,  rhs,  0,  result,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	multiplier(lhs,  rhs,  0,  result,  resultOffset);	  multiplier(lhs,    rhsOffset,    0,    result,    resultOffset);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
19	[BUG]  [BUGGY]  multiply(lhs,  rhs,  lhsOffset,  resultOffset);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  multiply(lhs,  rhs,  lhsOffset,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	multiply(lhs,  rhs,  lhsOffset,  resultOffset);	  multiply(lhs,    lhsOffset,    rhsOffset,    resultOffset);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
20	[BUG]  [BUGGY]  multiplier(lhs,  lhsOffset,  rhs,  resultOffset);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  multiplier(lhs,  lhsOffset,  rhs,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	multiplier(lhs,  lhsOffset,  rhs,  resultOffset);	  multiplier(lhs,    lhsOffset,    rhsOffset,    resultOffset);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
21	[BUG]  [BUGGY]  multiplier(lhs,  rhs,  lhsOffset,  resultOffset);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  multiplier(lhs,  rhs,  lhsOffset,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	multiplier(lhs,  rhs,  lhsOffset,  resultOffset);	  multiplier(lhs,    lhsOffset,    rhsOffset,    resultOffset);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
22	[BUG]  [BUGGY]  divide(lhs,  rhs,  resultOffset,  0,  reciprocal);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  divide(lhs,  rhs,  resultOffset,  0,  reciprocal);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	divide(lhs,  rhs,  resultOffset,  0,  reciprocal);	  divide(lhs,    rhs,    resultOffset,    reciprocal);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
23	[BUG]  [BUGGY]  multiply(lhs,  rhs,  0,  result,  rhsOffset);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  multiply(lhs,  rhs,  0,  result,  rhsOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	multiply(lhs,  rhs,  0,  result,  rhsOffset);	  multiply(lhs,    lhsOffset,    rhs,    0,    result,    resultOffset);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
24	[BUG]  [BUGGY]  divide(lhs,  rhs,  resultOffset,  0,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  divide(lhs,  rhs,  resultOffset,  0,  null);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	divide(lhs,  rhs,  resultOffset,  0,  null);	  divide(lhs,    rhs,    resultOffset,    null);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
25	[BUG]  [BUGGY]  multiplier(lhs,  rhsOffset,  result,  0,  resultOffset);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  multiplier(lhs,  rhsOffset,  result,  0,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	multiplier(lhs,  rhsOffset,  result,  0,  resultOffset);	  multiply(lhs,    rhsOffset,    result,    0,    resultOffset);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
26	[BUG]  [BUGGY]  multiply(lhs,  rhs,  resultOffset,  0,  result);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  multiply(lhs,  rhs,  resultOffset,  0,  result);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	multiply(lhs,  rhs,  resultOffset,  0,  result);	  multiply(lhs,    rhs,    resultOffset,    reciprocal);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
27	[BUG]  [BUGGY]  luate(lhs,  lhsOffset,  rhs,  result);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  luate(lhs,  lhsOffset,  rhs,  result);  [BUGGY]        [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	luate(lhs,  lhsOffset,  rhs,  result);	  if(relativeOrder    ==    null)    {    divide(lhs,    lhsOffset,    rhs,    result);    }    else    {    multiplie(lhs,    rhsOffset,    0,    result,    resultOffset);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
28	[BUG]  [BUGGY]  multiply(lhs,  rhs,  0,  resultOffset);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  multiply(lhs,  rhs,  0,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	multiply(lhs,  rhs,  0,  resultOffset);	  multiply(lhs,    lhsOffset,    rhs,    0,    resultOffset);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
29	[BUG]  [BUGGY]  multiplier(lhs,  rhs,  0,  resultOffset);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  multiplier(lhs,  rhs,  0,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	multiplier(lhs,  rhs,  0,  resultOffset);	  multiply(lhs,    lhsOffset,    rhs,    0,    resultOffset);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
30	[BUG]  [BUGGY]  multiplier(lhs,  rhs,  resultOffset,  null);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  multiplier(lhs,  rhs,  resultOffset,  null);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	multiplier(lhs,  rhs,  resultOffset,  null);	  multiply(lhs,    rhs,    resultOffset,    null);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
31	[BUG]  [BUGGY]  multiply(lhs,  rhsOffset,  0,  result,  resultOffset,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  multiply(lhs,  rhsOffset,  0,  result,  resultOffset,  1);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	multiply(lhs,  rhsOffset,  0,  result,  resultOffset,  1);	  multiply(lhs,    rhsOffset,    0,    result,    resultOffset,    multiplier);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
32	[BUG]  [BUGGY]  luate(lhs,  rhs,  resultOffset),  reciprocal);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  luate(lhs,  rhs,  resultOffset),  reciprocal);  [BUGGY]        [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	luate(lhs,  rhs,  resultOffset),  reciprocal);	  luate(lhs,    rhs,    resultOffset));    	non-compiled	[CE]  ';'  expected	17	None	replace
33	[BUG]  [BUGGY]  multiplier(lhs,  rhsOffset,  0,  result,  rhsOffset);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  multiplier(lhs,  rhsOffset,  0,  result,  rhsOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	multiplier(lhs,  rhsOffset,  0,  result,  rhsOffset);	  multiply(lhs,    rhsOffset,    0,    result,    rhsOffset);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
34	[BUG]  [BUGGY]  luate(lhs,  rhs,  resultOffset,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  luate(lhs,  rhs,  resultOffset,  1);  [BUGGY]        [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	luate(lhs,  rhs,  resultOffset,  1);	  luate(lhs,    rhs,    resultOffset,    reciprocal);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
35	[BUG]  [BUGGY]  divide(lhs,  rhs,  resultOffset,  0,  result);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  divide(lhs,  rhs,  resultOffset,  0,  result);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	divide(lhs,  rhs,  resultOffset,  0,  result);	  divide(lhs,    rhs,    resultOffset,    reciprocal);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
36	[BUG]  [BUGGY]  luate(lhs,  rhs,  resultOffset,  0,  result);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  luate(lhs,  rhs,  resultOffset,  0,  result);  [BUGGY]        [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	luate(lhs,  rhs,  resultOffset,  0,  result);	  luate(lhs,    rhs,    resultOffset,    reciprocal);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
37	[BUG]  [BUGGY]  luate(lhs,  rhsOffset,  reciprocal);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  luate(lhs,  rhsOffset,  reciprocal);  [BUGGY]        [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	luate(lhs,  rhsOffset,  reciprocal);	  luate(lhs,    rhsOffset,    resultOffset);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
38	[BUG]  [BUGGY]  pokew(rhs,  lhsOffset,  resultOffset);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  pokew(rhs,  lhsOffset,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	pokew(rhs,  lhsOffset,  resultOffset);	  multiply(lhs,    lhsOffset,    rhs,    resultOffset);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
39	[BUG]  [BUGGY]  multiplier(lhs,  rhsOffset,  reciprocal,  0,  result,  resultOffset);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  multiplier(lhs,  rhsOffset,  reciprocal,  0,  result,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	multiplier(lhs,  rhsOffset,  reciprocal,  0,  result,  resultOffset);	  multiplier(lhs,    rhsOffset,    0,    result,    resultOffset);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
40	[BUG]  [BUGGY]  multiplier(lhs,  rhs,  resultOffset,  0,  result);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  multiplier(lhs,  rhs,  resultOffset,  0,  result);  [BUGGY]        [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	multiplier(lhs,  rhs,  resultOffset,  0,  result);	  multiplier(lhs,    rhs,    resultOffset,    reciprocal);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
41	[BUG]  [BUGGY]  pomw(rhs,  lhsOffset,  0,  result,  rhsOffset);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  pomw(rhs,  lhsOffset,  0,  result,  rhsOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	pomw(rhs,  lhsOffset,  0,  result,  rhsOffset);	  multiply(lhs,    rhsOffset,    0,    result,    rhsOffset);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
42	[BUG]  [BUGGY]  pomw(rhs,  lhsOffset,  0,  result,  resultOffset);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  pomw(rhs,  lhsOffset,  0,  result,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	pomw(rhs,  lhsOffset,  0,  result,  resultOffset);	  multiply(lhs,    lhsOffset,    rhs,    0,    result,    resultOffset);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
43	[BUG]  [BUGGY]  divide(lhs,  rhs,  result,  resultOffset);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  divide(lhs,  rhs,  result,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	divide(lhs,  rhs,  result,  resultOffset);	  divide(lhs,    rhs,    resultOffset,    reciprocal);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
44	[BUG]  [BUGGY]  parent.divide(lhs,  lhsOffset,  rhs,  result,  resultOffset);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  parent.divide(lhs,  lhsOffset,  rhs,  result,  resultOffset);  [BUGGY]        [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	parent.divide(lhs,  lhsOffset,  rhs,  result,  resultOffset);	  if(relativeOrder    ==    null)    {    divide(lhs,    lhsOffset,    rhs,    result,    resultOffset);    }    else    {    multiplie(lhs,    rhsOffset,    0,    result,    resultOffset);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
45	[BUG]  [BUGGY]  pomw(rhs,  lhsOffset,  0,  resultOffset);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  pomw(rhs,  lhsOffset,  0,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	pomw(rhs,  lhsOffset,  0,  resultOffset);	  multiply(lhs,    lhsOffset,    rhs,    0,    resultOffset);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
46	[BUG]  [BUGGY]  pomw(rhs,  lhsOffset,  result,  0,  resultOffset);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  pomw(rhs,  lhsOffset,  result,  0,  resultOffset);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	pomw(rhs,  lhsOffset,  result,  0,  resultOffset);	  multiply(lhs,    rhsOffset,    result,    0,    resultOffset);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
47	[BUG]  [BUGGY]  multiply(lhs,  lhsOffset,  rhsOffset,  0,  result);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  divide(final  double[]  lhs,  final  int  lhsOffset,  final  double[]  rhs,  final  int  rhsOffset,  final  double[]  result,  final  int  resultOffset)  {  final  double[]  reciprocal  =  new  double[getSize()];  pow(rhs,  lhsOffset,  -1,  reciprocal,  0);  multiply(lhs,  lhsOffset,  reciprocal,  0,  result,  resultOffset);      [BUGGY]  multiply(lhs,  lhsOffset,  rhsOffset,  0,  result);  [BUGGY]      }  [CLASS]  DSCompiler  [METHOD]  divide  [RETURN_TYPE]  void  final  double[]  lhs  final  int  lhsOffset  final  double[]  rhs  final  int  rhsOffset  final  double[]  result  final  int  resultOffset  [VARIABLES]  int[][][]  compIndirection  multIndirection  int[][]  dRow  derivativesIndirection  destSizes  mappingI  sizes  srcDerivativesIndirection  boolean  double[]  lhs  reciprocal  result  rhs  AtomicReference  compilers  int[]  derivedTermF  derivedTermG  lowerIndirection  orders  term  termJ  termK  int  dSize  derivativeOrder  destO  destP  diag  i  index  j  k  l  lhsOffset  m  maxOrder  maxParameters  o  offset1  offset2  offset3  offset4  order  ordersSum  p  parameters  resultOffset  rhsOffset  srcP  vSize  	projects/Math10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java	0.35355339059327373	799	799	1	replace	multiply(lhs,  lhsOffset,  rhsOffset,  0,  result);	  multiply(lhs,    lhsOffset,    rhsOffset,    resultOffset);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
