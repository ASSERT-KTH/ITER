projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173sum+=jacobian[k+i]*jacobian[k+j];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173sum+=jTj[k+i]*jacobian[k+k];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173sum+=jacobian[k+i]*jTj[k+j];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173sum+=jacobian[k+i]*cols[k+j];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173sum+=jacobian[k+j]*jTj;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173jTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173((EstimationProblem)problem).setMeasurements(cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173doublejTj=Math.max(sum,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173((EstimationProblem)problem).setMeasures(rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173((EstimationProblem)problem).setMeasurements(rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173sum+=jacobian[0+i]*jacobian[0+j];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173sum+=jacobian[j+i]*jacobian[k+k];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173sum+=jacobian[0+i]*jacobian[1+j];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173sum+=residuals[k+i]*jacobian[k+j];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173jTj[i]=Math.max(sum,jTj[i]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173jTj[i]=Math.max(sum,jTj[i].doubleValue());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173doublejTj=Math.max(sum,jTj.doubleValue());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173for(intj=0;j<cols;++j){if(remaining[j][j]>max){sum+=residuals[j][j];}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173for(intj=0;j<cols;++j){if(remaining[j][j]>0){sum+=residuals[j][j];}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173for(intj=0;j<cols;++j){if(remaining[j][j]>max){sum+=residuals[j].doubleValue();}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173for(intj=0;j<cols;++j){if(remaining[j][j]>max){sum+=residuals[j][j].doubleValue();}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173for(intj=0;j<cols;++j){jTj[j][j]=sum;}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java173sum+=jacobian[i+k]*jacobian[k+j];
