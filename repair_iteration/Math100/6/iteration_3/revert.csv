projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters[i].getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<cols;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<rows;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<columns;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters[i].getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnIndex();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<2;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<index;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColsCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColsCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColsCount()*factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=factor.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters[i].getColumnCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=measurements[i].getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++j){for(intj=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++j){intindex=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++j){For(intj=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++j){intj=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++i){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length+1;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;intcols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;Integercols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;introws=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;intcolumns=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnSize()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnSize()+factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnSize()*factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<rows;++j){for(intj=0;j<rows;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<rows;++j){For(intj=0;j<rows;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<rows;++j){intindex=0;j<rows;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<rows;++j){for(intj=0;j<columns;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<rows;++j){intj=0;j<rows;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnIndex()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnIndex()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnsCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnsCount()*factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getRowsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnCount()*factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=measurements[i].getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters[i].getCols()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getCols()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.cols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++j){Arrays.fill(jacobian,0);for(intj=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++j){for(intj=0;j<parameters.length);++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getCols()*factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getCols()+factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters[i].getColumnCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<metrics.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnIndex()*factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColsCount()+factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<rows;++j){Arrays.fill(jacobian,0);for(intj=0;j<rows;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<rows;++j){for(intj=0;j<rows);++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnCount()+factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnsCount()+factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0,j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;Intcols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;intcols=variables.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=measurements[i].getCols()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length-1;introws=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;introws=0;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;introws=parameters.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=measurements[i].getCols()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.cols()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.cols()*factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.cols()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0,cols=parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78For(intj=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<measurements.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length+1;++j){for(intj=0;j<parameters.length+1;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length+1;++j){intindex=0;j<parameters.length+1;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length+1;++j){For(intj=0;j<parameters.length+1;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length+1;++j){intj=0;j<parameters.length+1;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnSize()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getRowIndex();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<2;++j){for(intj=0;j<2;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<2;++j){For(intj=0;j<2;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<2;++j){intindex=0;j<2;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<2;++j){intj=0;j<2;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length);++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnCount()/factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnCount()-factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnCount()*factor+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=measurements[i].getColumnCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=measurements[i].getColumnCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=measurements[i].getColumnSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intindex=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0,cols=parameters.length;++j){intindex=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<measurements.length;++j){intindex=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;introws=parameters.length;intcols=parameters.length;introws=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;introws=parameters.length;intcols=measurements.length;introws=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;introws=parameters.length;intcols=variables.length;introws=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;introws=parameters.length;Integercols=parameters.length;introws=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColsCount()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnSize()/factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getRowSize()+factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnIndex()/factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnIndex()-factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnIndex()*factor+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<3;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<1;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters[i].getColumnCount()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=variables.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.length;intcolumns=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length-1;intcolumns=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<index;++j){for(intj=0;j<index;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<index;++j){intindex=0;j<index;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<index;++j){For(intj=0;j<index;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<index;++j){intj=0;j<index;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intj=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0,cols=parameters.length;++j){intj=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;intcolumns=parameters.length;intcols=parameters.length;intcolumns=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;intcolumns=parameters.length;intcols=variables.length;intcolumns=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;intcolumns=parameters.length;intcols=measurements.length;intcolumns=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;intcolumns=parameters.length;intcolumns=parameters.length;intcolumns=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length+2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getRows()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnsCount()/factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnsCount()-factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0,cols=parameters.length;++j){For(intj=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78Integercols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length+2;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length+3;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length+1;++i){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78Intcols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.length;Integercols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++j){intindex=0;j<rows;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<cols;++j){intindex=0;j<rows;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intindex=0;j<rows;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=factor.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=factor.length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=factor.length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnSize()*factor+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getRowSize()*factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=factors.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++i){for(intj=0;j<parameters.length;++i){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++i){intindex=0;j<parameters.length;++i){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++i){For(intj=0;j<parameters.length;++i){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++i){intj=0;j<parameters.length;++i){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColsCount()/factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColsCount()*factor+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColsCount()-factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getCols()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length/2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getCols()/factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getCols()+coefficient;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getCols()*factor+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getCols()*factor+2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getRowSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters[i].getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(inti=0;j<parameters.length;++i){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length-1;++i){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0,cols<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0,len=parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78For(intj=0;j<cols;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnsCount()*factor+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=factor.getColsCount()+wm.getColsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++j){intj=0;j<rows;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<cols;++j){intj=0;j<rows;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intj=0;j<rows;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnsCount()*2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<2;++j){Arrays.fill(jacobian,0,j);for(intj=0;j<2;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<2;++j){for(intj=0;j<2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++j){intindex=0;j<parameters.length;++j){}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnCount()*2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<0;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnLength();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<metrics.length;++j){intindex=0;j<rows;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;intcolumns=parameters.length;Integercols=parameters.length;intcolumns=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;intcolumns=parameters.length;intcolls=parameters.length;intcolumns=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumns(index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters[i].getCols().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnSize()*factor+2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnsCount()+factor+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++i){Integerindex=wm.getIndex(variants[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++i){Integerindex=wm.getIndex(variants[i]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColsCount()+factor+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length+1;++j){intindex=0;for(intj=0;j<parameters.length+1;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length+1;++j){Arrays.fill(jacobian,0,j);for(intj=0;j<parameters.length+1;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;intcolumns=parameters.length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;intcolumns=parameters.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnSize()+factor+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<index;++j){Arrays.fill(jacobian,0);for(intj=0;j<index;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<index;++j){for(intj=0;j<index);++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0,index=parameters.length;++j){For(intj=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78Arrays.fill(jacobian,0);for(intj=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78Arrays.fill(jacobian,0,parameters.length);for(intj=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0,j=parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0,index<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;introws=parameters.length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++j){For(intj=0;j<rows;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<cols;++j){For(intj=0;j<rows;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColsCount()*2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length-1+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnSize()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=factor.length/2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<variables;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=variables.length;introws=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++i){intindex=-Math.sqrt(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++i){for(intj=0;j<parameters.length);++i){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78Integerj=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumns(variants);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters[i].getColumnSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length-1;Integercols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intj=0;j<columns;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intj=0;j<cols;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<measurements.length;++i){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=measurements[i].getColumnCount()*factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameter.length;Intcols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=0;intcolumns=0;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length+1;++j){intindex=wm.getIndex(parameters[index]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length+1;++j){intindex=wm.getIndex(parameters[i]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length+1;++j){intindex=wm.getIndex(variants[index]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length-3;
