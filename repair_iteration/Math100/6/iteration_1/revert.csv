projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters[i].getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<cols;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<rows;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<columns;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters[i].getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnIndex();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<2;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<index;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColsCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColsCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColsCount()*factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=factor.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters[i].getColumnCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=measurements[i].getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++j){for(intj=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++j){intindex=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++j){For(intj=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++j){intj=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++i){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length+1;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;intcols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;Integercols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;introws=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;intcolumns=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnSize()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnSize()+factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnSize()*factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<rows;++j){for(intj=0;j<rows;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<rows;++j){For(intj=0;j<rows;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<rows;++j){intindex=0;j<rows;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<rows;++j){for(intj=0;j<columns;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<rows;++j){intj=0;j<rows;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnIndex()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnIndex()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnsCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnsCount()*factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getRowsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnCount()*factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=measurements[i].getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters[i].getCols()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getCols()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.cols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++j){Arrays.fill(jacobian,0);for(intj=0;j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<parameters.length;++j){for(intj=0;j<parameters.length);++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getCols()*factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getCols()+factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters[i].getColumnCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<metrics.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnIndex()*factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColsCount()+factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<rows;++j){Arrays.fill(jacobian,0);for(intj=0;j<rows;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0;j<rows;++j){for(intj=0;j<rows);++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnCount()+factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=wm.getColumnsCount()+factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78for(intj=0,j<parameters.length;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;Intcols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java78intcols=parameters.length;intcols=variables.length;
