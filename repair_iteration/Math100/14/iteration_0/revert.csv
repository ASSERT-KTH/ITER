projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java170
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java170intcols=problem.getMeasurements().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java170for(inti=0;i<cols;++i){jTj[i][i]=jTj[i].doubleValue();}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java170intcols=problem.getColumns().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java170for(inti=0;i<cols;++i){jTj[i][i]=jTj[i];}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java170intcols=problem.getColumnsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java170for(intj=i;j<cols;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java170for(intj=0;j<cols;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java170for(intj=cols;j<i;++j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java170intcols=problem.getAllParameters().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java170double[][]jTj=newdouble[cols][i].doubleValue();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java170double[][]jTj=newdouble[cols][i];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java170cols=problem.getAllParameters().length;
