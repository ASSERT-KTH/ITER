projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(cols,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(remainings.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Integercols=getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(remainings.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(remainders.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(runs,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(remainders.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(remainders.size()-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols.length,jacobian.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(rows.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols.length,measurements.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(results.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(random,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(parameters[i]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(cols[i]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(variables[i]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(cols[0]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols.length,residuals.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(results.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(remainders.length,cols.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(periods.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols.length,cols.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Integercols=getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Integercols=getRowCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Integercols=getRowCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Integercols=getRowCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=0;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=this.parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rawRows,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index,jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(cols,0,jacobian);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,cols,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(cols,0,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,jacobian);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,rows,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.jacobian,0,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(random,rows,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(cols,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,cols,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,1,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jocobian,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,this.cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,this.rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(remainders.size());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(results.size());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols.size()-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(random.size()-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;intcols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;introws=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;intcolumns=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;intparameters=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(rows,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(index,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getRowCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getRowCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getRowCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getRowCount()-cols.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=getColumnCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=getColumnCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=getColumnCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(index,jacobian,0,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(index,jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(colons.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(random,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=measurements.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(remainings,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(remainings,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(resultEvaluations.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(remainings.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(random,measurements.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(remainings.length,measurements.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(results.size()-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols.length,data.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,this.results.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(randoms.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;intcols=measurements.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,4);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jocobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,index,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;Integercols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(remainings.length,jacobian.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(array,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(last,jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index,0,jacobianEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]*parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(variables[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(jacobian[i]*parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(remainings.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Arrays.asList(remainders);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(remainders.length,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Integercols=getColumnCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,metrics.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,columns);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,index,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(array.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,residuals.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(colons.length,residuals.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(last.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(measures.size()-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,cols,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index,0,jacobian);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(cols,0,cols,jacobianEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,cols,0,jacobian);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols.length,jacobian.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols.length,parameters.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols.length,cols.length-1,parameters.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length-1;intcolumns=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=0;intcolumns=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;intcolumns=0;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(rows!=null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(rows==null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(rows!=null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);}else{thrownewIllegalArgumentException("");}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,1);Arrays.fill(jacobian,1);Arrays.fill(jacobian,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,1);Arrays.fill(jocobian,1);Arrays.fill(jacobian,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,1);Arrays.fill(jacobian,2);Arrays.fill(jacobian,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,1);Arrays.fill(jacobian,1);Arrays.fill(jacobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(rows.length,cols.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols.length,rows.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(rows.length,rows.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(random.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.jacobian,0,rows,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.jacobian,0,index,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.jacobian,0,jacobianEvaluations,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Arrays.asList(jacobianEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Arrays.asList(this.remainders);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Arrays.asList(JacobianEvaluations.size());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Arrays.asList(randomEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(array,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(runtime,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.rows,0,this.results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,this.rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.data,0,this.rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.cols,0,this.results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(results.length,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(maxCostEval,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(random.length,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,rows,cols);Arrays.fill(jacobian,0,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,rows,cols);Arrays.fill(jocobian,0,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,rows,cols);Arrays.fill(jacobian,0,columns,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,rows,cols);Collections.fill(jacobian,0,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(parameters.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(parameters.length,data.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,1,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);Arrays.fill(jocobian,2);Arrays.fill(jacobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);Arrays.fill(jacobian,3);Arrays.fill(jacobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);Arrays.fill(data,2);Arrays.fill(jacobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(index,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols.length,parameters.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(random,cols.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(random,cols.length+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(random,cols.length,maxCostEval);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(random.size());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(random.size()-1,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(random.size()-1,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,rows,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,rows,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,cols,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(rows.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getRowCount()-cols.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getColsCount()-cols.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getRowCount()-cols.length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols.length,cols.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols.length,residuals.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,cols,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,parameters.length,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,maxCostEval,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols.length,jacobian.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(runRows,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=getRowCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=this.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,3);Arrays.fill(jacobian,1);Arrays.fill(jacobian,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,3);Arrays.fill(jacobian,2);Arrays.fill(jacobian,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,3);Arrays.fill(jocobian,1);Arrays.fill(jacobian,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,3);Arrays.fill(jacobian,3);Arrays.fill(jacobian,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,3);Arrays.fill(jacobian,1);Arrays.fill(jacobian,4);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Integercols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.remainings,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(random,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=this.parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=parameters.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=parameters.length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=0;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Integercols=getColumnCount()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index,cols,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(cols,rows,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,parameters.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.max(parameters.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,parameters.length+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=getRowCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=getRowCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getColumnCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=this.maxCostEval;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getColsCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getColumnCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=0;intcols=0;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=0;Integercols=0;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=0;booleancols=0;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=0;floatcols=0;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,cols,jacobian);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index,jacobian);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.remainings,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=this.parameters.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=this.parameters.length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=this.parameters.length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols.size());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols.size(),cols.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols.size()-1,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getColsCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(parameters,0,this.results.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,parameters.length+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols!=null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(jacobian[i]*parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols==null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(jacobian[i]*parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols!=null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(jacobian[i]*parameters[
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols!=null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(jacobian[i]*parameters[i]
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols.length,jacobian.length+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols.length,jacobian.length-2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(results.size(),cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(results.size(),parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(results.length,cols.size());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(maxCostEval,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(rows,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=parameters.length;introws=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=parameters.length;intcolumns=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=parameters.length;intcols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=parameters.length;intlines=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=parameters.length;intfields=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(rows!=null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,4);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,4);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(rows!=null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,4);}else{thrownewIllegalArgumentException("");}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols!=null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols==null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(rows!=null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,measurements.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=getColumnsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(rows!=null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,3);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(rows!=null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,3);}else{thrownewIllegalArgumentException("");}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(rows!=null){Arrays.fill(this.cols,2);Arrays.fill(jacobian,3);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols!=null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]*parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols==null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]*parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]*parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols!=null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]*parameters[i]
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,rows,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,cols,index,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index,0,cols,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,rows,cols,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,cols,jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,rows,jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,columns,jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(random,parameters.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(random,parameters.length,maxCostEval);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(random,parameters.length+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=this.parameters.length;intcols=this.parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=this.parameters.length;introws=this.parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=this.parameters.length;Integercols=this.parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=this.parameters.length;intcolumns=this.parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=measurements.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=this.measurements.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=this.resultEvaluations.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=getColumnCount()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(measures.size());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(remainings.size()-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(measurements.size()-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(resultEvaluations.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(resultEvaluations.length,data.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length-1;introws=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;introws=0;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;introws=parameters.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,rows,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,columns,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,parameters.length);introws=Math.min(parameters.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,parameters.length);introws=Math.max(parameters.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,parameters.length);Integerrows=Math.min(parameters.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,parameters.length);intcolumns=Math.min(parameters.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(random,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(random,index,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.random,rows,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols!=null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(variables[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols==null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(variables[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(variables,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(variables[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols!=null){Arrays.fill(variables,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(variables[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index,0,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,rows,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,index,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(variables,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(variables,2);jacobian[index++]=-Math.sqrt(variables[i]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(variables[i]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(variables[i],2);jacobian[index++]=-Math.sqrt(variables[i]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,rows,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,1,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(redefinitions.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.max(results.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Integercols=getColumnCount()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(measurements.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(measurements.length,measurements.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(results.length,measurements.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(results.length,jacobian.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(maxCostEval,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index,jacobianEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,cols,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(rows!=null){Arrays.fill(jacobian,1);Arrays.fill(jacobian,3);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(rows!=null){Arrays.fill(jacobian,1);Arrays.fill(jacobian,3);}else{thrownewIllegalArgumentException("");}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,rows,index,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(cols,0,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(measurements.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(mappings.length,measurements.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,rowCount,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,columns,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(cols,0,rows,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,residuals.length);introws=Math.min(parameters.length,residuals.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,residuals.length);introws=Math.max(parameters.length,residuals.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,residuals.length);introws=Math.min(parameters.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,residuals.length);introws=Math.min(parameters.length,remaining.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length-2;intcols=parameters.length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length-2;Integercols=parameters.length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length-2;introws=parameters.length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length-2;intcolumns=parameters.length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;introws=parameters.length;intcols=parameters.length;introws=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;introws=parameters.length;Integercols=parameters.length;introws=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;introws=parameters.length;intcols=variables.length;introws=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;introws=parameters.length;intcols=measurements.length;introws=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(data.length,data.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(data.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols.length,data.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(random.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(results.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length/2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=measurements.length;intcols=measurements.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=measurements.length;introws=measurements.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=measurements.length;Integercols=measurements.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=measurements.length;intcolumns=measurements.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jocobian,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(random,measurements.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(random,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(random,measurements.length,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(random,measurements.length,maxCostEval);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols!=null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(parameters[i]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols!=null){Arrays.fill(jacobian,2);}else{jacobian[index++]=-Math.sqrt(parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,cols,0,jacobianEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,rows,0,jacobianEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,columns,0,jacobianEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(randoms.length,parameters.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(randoms.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index1,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(random,rows,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,index,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.remainings,0,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,3);Arrays.fill(jacobian,2);Arrays.fill(jacobian,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,3);Arrays.fill(jacobian,3);Arrays.fill(jacobian,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,3);Arrays.fill(jocobian,2);Arrays.fill(jacobian,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,3);Arrays.fill(jacobian,2);Arrays.fill(jacobian,4);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,2);Arrays.fill(jacobian,1);Arrays.fill(jacobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,2);Arrays.fill(jocobian,1);Arrays.fill(jacobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,2);Arrays.fill(jacobian,1);Arrays.fill(jacobian,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length-1;intcols=parameters.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length-1;introws=parameters.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length-1;intparameters=parameters.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length-1;intcolumns=parameters.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Integercols=getColsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,this.results.length+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,this.results.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,this.results.length+2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length-1+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Integercols=getColumnCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Integercols=getColumnCount()*2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,columns);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,column);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,this.cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.cols,0,this.results.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=variables.length;intparameters=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,cols,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,column,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(results.length,cols.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getColsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(remainings,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(random,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(rows!=null){Arrays.fill(jacobian,1);Arrays.fill(jacobian,2);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(rows!=null){Arrays.fill(jacobian,1);Arrays.fill(jacobian,2);}else{thrownewIllegalArgumentException("");}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(rows!=null){Arrays.fill(this.cols,1);Arrays.fill(jacobian,2);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(remainings.size());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols.length,cols.length+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;intcolumns=parameters.length;intcols=parameters.length;intcolumns=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;intcolumns=parameters.length;Integercols=parameters.length;intcolumns=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;intcolumns=parameters.length;intcols=variables.length;intcolumns=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;intcolumns=parameters.length;intcolumns=parameters.length;intcolumns=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index2,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(random,rows,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(maxCostEval,residuals.size());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,rows,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,rows,weightEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,rows,column);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,3);Arrays.fill(jacobian,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,3);Arrays.fill(jacobian,4);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,3);Arrays.fill(jocobian,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,3);Arrays.fill(jacobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(remainings.length,jacobian.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(remainings.length,jacobian.length+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,4);Arrays.fill(jacobian,2);Arrays.fill(jacobian,4);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,4);Arrays.fill(jacobian,2);Arrays.fill(jacobian,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,4);Arrays.fill(jacobian,3);Arrays.fill(jacobian,4);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,4);Arrays.fill(jocobian,2);Arrays.fill(jacobian,4);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(rows,maxCostEval);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(rows,column);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(rows,i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.remainings,jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(cols,jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(random,jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(cols,0,cols.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(cols,0,cols.length+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(cols[i]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,cols.length);jacobian[index++]=-Math.sqrt(cols[i]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);jacobian[rows++]=-Math.sqrt(cols[i]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,jacobian,0,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(cols,jacobian,0,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,jacobian,0,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,jacobian,0,columns);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(rows!=null){Arrays.fill(jacobian,1);Arrays.fill(jacobian,1);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(rows!=null){Arrays.fill(jacobian,1);Arrays.fill(jacobian,1);}else{thrownewIllegalArgumentException("");}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(rows!=null){Arrays.fill(this.cols,1);Arrays.fill(jacobian,1);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(cols[0]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,cols.length);jacobian[index++]=-Math.sqrt(cols[0]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols,costEvaluations.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(randoms,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);Arrays.fill(jacobian,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(results.length,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(results.length,data.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,data.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(arrayCount,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;intcolumns=parameters.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;intcolumns=parameters.length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,1);Arrays.fill(jacobian,2);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,1);Arrays.fill(jacobian,2);}else{
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,1);Arrays.fill(jacobian,2);}else{for(inti=0;i<rows;++i){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(resultEvaluations.length,measurements.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(resultEvaluations.length,results.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(colons.length,cols.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(jacobian[i]*parameters[i]
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings!=null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(jacobian[i]*parameters[i]
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(jacobian[i]*parameters[
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(results!=null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(jacobian[i]*parameters[i]
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,index,cols,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(index,0,cols,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(random,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,parameters.length);intcols=Math.min(parameters.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,parameters.length);intfields=Math.min(parameters.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,parameters.length);intlines=Math.min(parameters.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=measurements.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,1);Arrays.fill(jacobian,1);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,1);Arrays.fill(jacobian,1);}else{
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,1);Arrays.fill(jacobian,1);}else{for(inti=0;i<rows;++i){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,1);Arrays.fill(jacobian,1);}else{for(inti=0;i<rows;i++){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings!=null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(!remainings.isEmpty()){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(!remainings.isEmpty()){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings!=null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(!remainings.isEmpty()){Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(cols,0,rows.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(cols,0,cols.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getRowCount()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols,data.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(data.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.cols,0,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(measures.length,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,4);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,4);}else{for(inti=0;i<rows;++i){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,4);}else{
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(maxCostEval,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(index,0,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,cols,jacobian,0,ratings);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,rows,index,jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols.length,columns.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;intcolumns=parameters.length;introws=parameters.length;intcolumns=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,3);Arrays.fill(jacobian,5);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(results.size(),cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(variables!=null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(variables[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(variables!=null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(variables[i]
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=0;Arrays.fill(jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=0;Arrays.fill(jacobian,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(results,0,this.results.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,rows,metrics.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Integercols=getColumnCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,4);Arrays.fill(jacobian,2);Arrays.fill(jacobian,5);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Arrays.asList(measurements);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Arrays.asList(JacobianMeasurement.class);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols.length,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cos.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,residuals.length);intcolumns=Math.min(parameters.length,residuals.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,residuals.length);intcols=Math.min(parameters.length,residuals.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,residuals.length);intresults=Math.min(parameters.length,residuals.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,residuals.length);intfields=Math.min(parameters.length,residuals.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length-1;intcols=measurements.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,this.maxCostEval);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,rows,cols,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(random,rows,cols,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,cols,0,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,cols,0,ratings);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(!remainings.isEmpty()){Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);}else{
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);}else{for(inti=0;i<rows;++i){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Integercols=parameters.length;intparameters=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,measurements.length,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(array,0,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,ratings);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(runtime,jacobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.rows,0,this.results.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.rows,0,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,this.rows,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]*parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings!=null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]*parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]*parameters[i]
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(results!=null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]*parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols!=null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(cols[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(cols[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings!=null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(cols[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(cols[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols,jacobian.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);Arrays.fill(jacobian,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);Arrays.fill(colons,2);Arrays.fill(jacobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(array,jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(rows,rows.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(rows.length,columns.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,index,jacobian);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=this.getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(measures.length,measurements.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(measures.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(variables!=null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(variables[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(variables!=null){Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(variables[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(variables!=null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);parameters[index++]=-Math.sqrt(variables[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(variables!=null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(variables[i]);}else{
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,1);Arrays.fill(jacobian,3);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,1);Arrays.fill(jacobian,3);}else{
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,1);Arrays.fill(jacobian,3);}else{for(inti=0;i<rows;++i){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.jacobian,0,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length-2;intcols=measurements.length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(data,0,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,jacobian,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(random.size()-1,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols.size()-1,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols.size()-1,ratings.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(array,jacobian,0,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(random,jacobian,0,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,1);Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getColumnCount()-cols.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols!=null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(cols[0]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(cols[0]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings!=null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(cols[0]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(cols[0]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=parameters.length;intparameters=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=parameters.length;intparameters.length=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(indices.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(measurements.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;introws=parameters.length;Arrays.fill(jacobian,0,cols);introws=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;introws=parameters.length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,3);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(!remainings.isEmpty()){Arrays.fill(jacobian,2);Arrays.fill(jacobian,3);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(remainings==null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,3);}else{
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(random,jacobian.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(resultEvaluations.length,jacobian.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(measurements.length,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(Math.log(index),measurements.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,1,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=measurements.length;intparameters=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(jacobian.size()-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,this.results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);jacobian[rows++]=-Math.sqrt(parameters[i]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2,2);jacobian[index++]=-Math.sqrt(parameters[i]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols.length,data.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length-1;Integercols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(lastIndex,jacobian,0,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length-1;Integercols=parameters.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(cols,0,columns.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(runtimeRows,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols>0){Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(rows!=null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);}else{thrownewIllegalStateException("");}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(estimates.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(results.length,measurements.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,4);Arrays.fill(jacobian,2);Arrays.fill(jacobian,6);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,3);Arrays.fill(jacobian,3);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]*parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,3);Arrays.fill(jacobian,3);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(variables[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,3);Arrays.fill(jacobian,3);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,3);Arrays.fill(jacobian,3);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(variants[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(Math.log(index,measurements.length),measurements.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,rows,index,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,columns,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,rows,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);jacobian[rows++]=-Math.sqrt(cols[0]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);jacobian[index++]=-Math.sqrt(cols[0]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,3);Arrays.fill(jacobian,2));Arrays.fill(jacobian,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);jacobian[index++]=-Math.sqrt(cols[i]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);Arrays.fill(bracebian,2);Arrays.fill(jacobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,rows,cols);Arrays.fill(jacobian,1,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(remainders.size(),residuals.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(parameters.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols>0){Arrays.fill(jacobian,2);Arrays.fill(jacobian,3);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(rows!=null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,3);}else{for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,this.results.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,this.rows.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(items.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,column,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols>0){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,3);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols>cols){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(jacobian[i]*parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols>cols){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(jacobian[i]*parameters[i]
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(jacobian[i]*parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols>cols){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(jacobian[i]*parameters[
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(variables[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(variables!=null){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(variables[i].getWeight());}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Arrays.asList(JacksonEvaluation.class);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Arrays.asList(Math.rint(cols));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols>0){Arrays.fill(jacobian,1);Arrays.fill(jacobian,2);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getRowCount()-jacobian.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getRowCount()-jacobianEvaluations.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=0;introws=0;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(results.size(),index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(results.size(),estimates.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=0;Intcols=0;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.jacobian,0,this.cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(rows!=null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,4);}else{for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(rows!=null){Arrays.fill(jacobian,2);Arrays.fill(jacobian,4);}else{thrownewIllegalStateException("");}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(jacobian.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,residuals.length);introws=Math.min(parameters.length,remainings.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(remainders.length,jacobian.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,2);Arrays.fill(jacobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(remainders.length,measurements.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols>0){Arrays.fill(jacobian,1);Arrays.fill(jacobian,3);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=parameters.length;Integerrows=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=parameters.length;introws=measurements.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,rows,coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,row);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(last,rows,cols,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols>0){Arrays.fill(jacobian,1);Arrays.fill(jacobian,1);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,dataArea,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.jacobian,0,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(results.size()-2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(periods.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=0;intcolumns=0;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=dimensions.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index,1,jacobianEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols.size(),parameters.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols.size()-1,jacobianEvaluations.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(measures.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(methods.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(array.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,columns,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols>0){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]*parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74if(cols>0){Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]*parameters[i]
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,3);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]*parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(array.length,jacobian.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(remainders.length,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,index,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(colons.length,parameters.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(remainders.length,parameters.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(array,0,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(lastIndex,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(rows,j);
