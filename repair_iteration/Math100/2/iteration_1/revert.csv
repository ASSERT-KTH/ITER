projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(cols,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(remainings.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Integercols=getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(remainings.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(remainders.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(runs,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(remainders.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(remainders.size()-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols.length,jacobian.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(rows.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols.length,measurements.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(results.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(random,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(parameters[i]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(cols[i]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(variables[i]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);jacobian[index++]=-Math.sqrt(cols[0]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols.length,residuals.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(results.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(remainders.length,cols.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(periods.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols.length,cols.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Integercols=getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Integercols=getRowCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Integercols=getRowCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Integercols=getRowCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=0;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=this.parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rawRows,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index,jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(cols,0,jacobian);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,cols,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(cols,0,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,jacobian);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,0,rows,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.jacobian,0,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(random,rows,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(cols,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,cols,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jacobian,1,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,1);Arrays.fill(jocobian,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,this.cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,this.rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(remainders.size());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(results.size());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols.size()-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(random.size()-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;intcols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;introws=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;intcolumns=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;intparameters=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(rows,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(cols.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(index,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getRowCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getRowCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getRowCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getRowCount()-cols.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=getColumnCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=getColumnCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=getColumnCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(index,jacobian,0,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(index,jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(colons.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(random,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=measurements.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(remainings,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(remainings,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(resultEvaluations.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(remainings.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(random,measurements.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(remainings.length,measurements.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(results.size()-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(cols.length,data.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,this.results.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(randoms.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;intcols=measurements.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,4);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jocobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,0,index,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=parameters.length;Integercols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74intcols=Math.min(remainings.length,jacobian.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(array,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(last,jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(rows,index,0,jacobianEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]*parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(variables[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(jacobian[i]*parameters[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,2);Arrays.fill(jacobian,2);for(inti=0;i<rows;++i){jacobian[index++]=-Math.sqrt(data[i]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(remainings.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Arrays.asList(remainders);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(remainders.length,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Integercols=getColumnCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,metrics.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(this.results,0,columns);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,index,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(array.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(parameters.length,residuals.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74Arrays.fill(jacobian,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(colons.length,residuals.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(last.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java74introws=Math.min(measures.size()-1);
