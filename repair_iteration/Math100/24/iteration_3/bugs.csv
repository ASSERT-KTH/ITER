bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  this.costEvaluations  *  1;	  return    costEvaluations    *    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	82	1	replace
2	[BUG]  [BUGGY]  return  this.costEvaluations  *  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations  *  1;	  return    costEvaluations    *    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	82	1	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  costEvaluations  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  parameters.length  *  costEvaluations  -  1;	  return    costEvaluations    *    parameters.length    -    1;    	compilable	  [FE]  AssertionFailedError  	67	2	replace
4	[BUG]  [BUGGY]  return  parameters.length  *  costEvaluations  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  costEvaluations  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  *  costEvaluations  -  1;	  return    costEvaluations    *    parameters.length    -    1;    	compilable	  [FE]  AssertionFailedError  	67	2	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  parameters.length  /  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  *  parameters.length  /  1;	  return    costEvaluations    *    parameters.length    -    1;    	compilable	  [FE]  AssertionFailedError  	67	2	replace
6	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length  /  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  parameters.length  /  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  *  parameters.length  /  1;	  return    costEvaluations    *    parameters.length    -    1;    	compilable	  [FE]  AssertionFailedError  	67	2	replace
7	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.getMeasures()  -  1;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.getMeasures()  -  1;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.getMeasures()  -  1;	  int    costEvaluations    =    parameters.getMeasures();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
8	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.getMeasures()  -  2;  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.getMeasures()  -  2;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.getMeasures()  -  2;	  int    costEvaluations    =    parameters.getMeasures();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
9	[BUG]  [BUGGY]  [FE]  EstimationException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  /  costEvaluations;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  parameters.length  /  costEvaluations;	  return    costEvaluations    /    parameters.length;    	compilable	  [FE]  EstimationException  	69	5	replace
10	[BUG]  [BUGGY]  return  parameters.length  /  costEvaluations;  [FE]  EstimationException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  /  costEvaluations;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  /  costEvaluations;	  return    costEvaluations    /    parameters.length;    	compilable	  [FE]  EstimationException  	69	5	replace
11	[BUG]  [BUGGY]  return  measurements  *  parameters.length;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  measurements  *  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  measurements  *  parameters.length;	  return    costEvaluations    /    parameters.length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	69	None	replace
12	[BUG]  [BUGGY]  return  results  *  parameters.length;  [CE]  cannot  find  symbol  results  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  results  *  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  results  *  parameters.length;	  return    costEvaluations    /    parameters.length;    	non-compiled	[CE]  cannot  find  symbol  results	69	None	replace
13	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  /  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  this.costEvaluations  /  1;	  return    this.costEvaluations    +    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	51	1	replace
14	[BUG]  [BUGGY]  return  this.costEvaluations  /  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  /  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations  /  1;	  return    this.costEvaluations    +    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	51	1	replace
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  +  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  this.costEvaluations  +  2;	  return    this.costEvaluations    +    1;    	compilable	  [FE]  AssertionFailedError  	51	2	replace
16	[BUG]  [BUGGY]  return  this.costEvaluations  +  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  +  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations  +  2;	  return    this.costEvaluations    +    1;    	compilable	  [FE]  AssertionFailedError  	51	2	replace
17	[BUG]  [BUGGY]  int  costEvaluations  =  getRowEvaluations(maxCostEval);  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getRowEvaluations(maxCostEval);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getRowEvaluations(maxCostEval);	  int    costEvaluations    =    getRowEvaluations();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
18	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  /  1;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  /  1;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.getCostEvaluations()  /  1;	  int    costEvaluations    =    parameters.getCostEvaluations()    +    1;    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
19	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  *  1;  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  *  1;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.getCostEvaluations()  *  1;	  int    costEvaluations    =    parameters.getCostEvaluations()    +    1;    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  parameters.length  /  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  *  parameters.length  /  2;	  return    costEvaluations    *    parameters.length    -    2;    	compilable	  [FE]  AssertionFailedError  	71	2	replace
21	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length  /  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  parameters.length  /  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  *  parameters.length  /  2;	  return    costEvaluations    *    parameters.length    -    2;    	compilable	  [FE]  AssertionFailedError  	71	2	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  costEvaluations  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  parameters.length  *  costEvaluations  -  2;	  return    costEvaluations    *    parameters.length    -    2;    	compilable	  [FE]  AssertionFailedError  	71	2	replace
23	[BUG]  [BUGGY]  return  parameters.length  *  costEvaluations  -  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  costEvaluations  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  *  costEvaluations  -  2;	  return    costEvaluations    *    parameters.length    -    2;    	compilable	  [FE]  AssertionFailedError  	71	2	replace
24	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  2  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  /  2  +  1;	  return    costEvaluations    *    2    +    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	93	1	replace
25	[BUG]  [BUGGY]  return  costEvaluations  /  2  +  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  2  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  /  2  +  1;	  return    costEvaluations    *    2    +    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	93	1	replace
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  /  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  *  2  /  1;	  return    costEvaluations    *    2    +    1;    	compilable	  [FE]  AssertionFailedError  	93	2	replace
27	[BUG]  [BUGGY]  return  costEvaluations  *  2  /  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  /  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  *  2  /  1;	  return    costEvaluations    *    2    +    1;    	compilable	  [FE]  AssertionFailedError  	93	2	replace
28	[BUG]  [BUGGY]  int  costEvaluations  =  getMeasurementEvaluations();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeasurementEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeasurementEvaluations();	  return    costEvaluations    -    1;    int    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
29	[BUG]  [BUGGY]  int  costEvaluations  =  measurements.size()  -  1;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  measurements.size()  -  1;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  measurements.size()  -  1;	  int    costEvaluations    =    parameters.size()    -    1;    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
30	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.size()  *  2  -  1;  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.size()  *  2  -  1;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.size()  *  2  -  1;	  int    costEvaluations    =    parameters.size()    -    1;    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
31	[BUG]  [BUGGY]  int  costEvaluations  =  getCostEvaluations().length  -  1;  [CE]  int  cannot  be  dereferenced  [FE]            StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getCostEvaluations().length  -  1;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getCostEvaluations().length  -  1;	  int    costEvaluations    =    getCostEvaluations()    -    1;    	non-compiled	[CE]  int  cannot  be  dereferenced	34	None	replace
32	[BUG]  [BUGGY]  int  costEvaluations  =  getMeasurementEvaluations()  -  1;  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeasurementEvaluations()  -  1;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeasurementEvaluations()  -  1;	  int    costEvaluations    =    getCostEvaluations()    -    1;    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
33	[BUG]  [BUGGY]  int  maxCostEval  =  parameters.length;  [CE]  missing  return  statement  [FE]          EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  maxCostEval  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  maxCostEval  =  parameters.length;	  return    parameters.length;    int    maxCostEval    =    parameters.length;    	non-compiled	[CE]  missing  return  statement	5	None	replace
34	[BUG]  [BUGGY]  int  maxCostEval  =  parameters.length  -  1;  [CE]  missing  return  statement  [FE]            EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  maxCostEval  =  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  maxCostEval  =  parameters.length  -  1;	  return    parameters.length;    int    maxCostEval    =    parameters.length;    	non-compiled	[CE]  missing  return  statement	5	None	replace
35	[BUG]  [BUGGY]  while(parameters.length  >  maxCostEval)  {  return  parameters.length;  }  [CE]  missing  return  statement  [FE]              EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  while(parameters.length  >  maxCostEval)  {  return  parameters.length;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	while(parameters.length  >  maxCostEval)  {  return  parameters.length;  }	  return    parameters.length;    int    maxCostEval    =    parameters.length;    	non-compiled	[CE]  missing  return  statement	5	None	replace
36	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(remainings,  maxCostEval,  jacobianEvaluations);  [CE]  cannot  find  symbol  remainings  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations(remainings,  maxCostEval,  jacobianEvaluations);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(remainings,  maxCostEval,  jacobianEvaluations);	  int    costEvaluations    =    getMeanEvaluations(maxCostEval,    jacobianEvaluations);    	non-compiled	[CE]  cannot  find  symbol  remainings	110	None	replace
37	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(maxCostEval,  jacobianEvaluations,  parameters);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations(maxCostEval,  jacobianEvaluations,  parameters);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(maxCostEval,  jacobianEvaluations,  parameters);	  int    costEvaluations    =    getMeanEvaluations(maxCostEval,    jacobianEvaluations);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
38	[BUG]  [BUGGY]  return  this.costEvaluations  -  1;  this.costEvaluations  -  1;  [CE]  not  a  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  -  1;  this.costEvaluations  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    -    1;    this.costEvaluations  -  1;	  	non-compiled	[CE]  not  a  statement	48	None	add
39	[BUG]  [BUGGY]  return  this.costEvaluations  -  1;  int  costEvaluations  =  this.costEvaluations  -  1;  [CE]  unreachable  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  -  1;  int  costEvaluations  =  this.costEvaluations  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    -    1;    int  costEvaluations  =  this.costEvaluations  -  1;	  	non-compiled	[CE]  unreachable  statement	48	None	add
40	[BUG]  [BUGGY]  return  this.costEvaluations  -  1;  int  costEvaluations  =  getCostEvaluations();  [CE]  unreachable  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  -  1;  int  costEvaluations  =  getCostEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    -    1;    int  costEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  unreachable  statement	48	None	add
41	[BUG]  [BUGGY]  return  this.costEvaluations  -  1;  int  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  -  1;  int  costEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    -    1;    int  costEvaluations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	48	None	add
42	[BUG]  [BUGGY]  return  this.costEvaluations  -  1;  int  costEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  -  1;  int  costEvaluations  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    -    1;    int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	48	None	add
43	[BUG]  [BUGGY]  int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameters[i].getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    measurements[i]    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
44	[BUG]  [BUGGY]  int  cols  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  cols  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  cols  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameters[i].getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    measurements[i]    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
45	[BUG]  [BUGGY]  int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameters[i].getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    measurements[i]    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
46	[BUG]  [BUGGY]  int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  measurements[i]  =  parameters[i].getParameters();  for(int  i  =  [CE]  ']'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  measurements[i]  =  parameters[i].getParameters();  for(int  i  =  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  measurements[i]  =  parameters[i].getParameters();  for(int  i  =	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameters[i].getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    measurements[i]    	non-compiled	[CE]  ']'  expected	132	None	replace
47	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  this.maxCostEval;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  *  2  +  this.maxCostEval;	  return    costEvaluations    /    2;    	compilable	  [FE]  AssertionFailedError  	91	2	replace
48	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  this.maxCostEval;  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  this.maxCostEval;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  *  2  +  this.maxCostEval;	  return    costEvaluations    /    2;    	compilable	  [FE]  AssertionFailedError  	91	2	replace
49	[BUG]  [BUGGY]  Integer  costEvaluations  =  getCostEvaluations();  [CE]  missing  return  statement  [FE]          StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  Integer  costEvaluations  =  getCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	Integer  costEvaluations  =  getCostEvaluations();	          int    costEvaluations    =    getCostEvaluations();    Integer    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  missing  return  statement	73	None	replace
50	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations();  Integer  costEvaluations  =  getCostEvaluations();  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations();  Integer  costEvaluations  =  getCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations();  Integer  costEvaluations  =  getCostEvaluations();	          int    costEvaluations    =    getCostEvaluations();    Integer    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
51	[BUG]  [BUGGY]  int  costEvaluations  =  getMeasurementEvaluations();  Integer  costEvaluations  =  getCostEvaluations();  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeasurementEvaluations();  Integer  costEvaluations  =  getCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeasurementEvaluations();  Integer  costEvaluations  =  getCostEvaluations();	          int    costEvaluations    =    getCostEvaluations();    Integer    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
52	[BUG]  [BUGGY]  int  costEvaluations  =  measurements.length();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  measurements.length();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  measurements.length();	  int    costEvaluations    =    parameters.length()    -    2;    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
53	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(results);  [CE]  cannot  find  symbol  results  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations(results);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(results);	  int    costEvaluations    =    getMeanEvaluations(    jacobianEvaluations);    	non-compiled	[CE]  cannot  find  symbol  results	30	None	replace
54	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(remainings,  jacobianEvaluations);  [CE]  cannot  find  symbol  remainings  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations(remainings,  jacobianEvaluations);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(remainings,  jacobianEvaluations);	  int    costEvaluations    =    getMeanEvaluations(    jacobianEvaluations);    	non-compiled	[CE]  cannot  find  symbol  remainings	30	None	replace
55	[BUG]  [BUGGY]  float  costEvaluations  =  parameters.length;  [CE]  missing  return  statement  [FE]        EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  float  costEvaluations  =  parameters.length;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	float  costEvaluations  =  parameters.length;	          int    costEvaluations    =    parameters.length;    float    costEvaluations    =    parameters.length;    	non-compiled	[CE]  missing  return  statement	136	None	replace
56	[BUG]  [BUGGY]  double  costEvaluations  =  parameters.length;  [CE]  missing  return  statement  [FE]          EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  double  costEvaluations  =  parameters.length;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	double  costEvaluations  =  parameters.length;	          int    costEvaluations    =    parameters.length;    float    costEvaluations    =    parameters.length;    	non-compiled	[CE]  missing  return  statement	136	None	replace
57	[BUG]  [BUGGY]  return  this.costEvaluations  *  parameters.length;  int  costEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  parameters.length;  int  costEvaluations  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    *    parameters.length;    int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	140	None	add
58	[BUG]  [BUGGY]  return  this.costEvaluations  *  parameters.length;  int  cols  =  parameters.length;  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  parameters.length;  int  cols  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    *    parameters.length;    int  cols  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	140	None	add
59	[BUG]  [BUGGY]  return  this.costEvaluations  *  parameters.length;  int  maxCostEval  =  parameters.length;  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  parameters.length;  int  maxCostEval  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    *    parameters.length;    int  maxCostEval  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	140	None	add
60	[BUG]  [BUGGY]  return  this.costEvaluations  *  parameters.length;  int  maxCostEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  parameters.length;  int  maxCostEvaluations  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    *    parameters.length;    int  maxCostEvaluations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	140	None	add
61	[BUG]  [BUGGY]  return  this.costEvaluations  *  parameters.length;  int  maxCostEval  =  parameters.size();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  parameters.length;  int  maxCostEval  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    *    parameters.length;    int  maxCostEval  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	140	None	add
62	[BUG]  [BUGGY]  return  costEvaluations  /  1;  int  costEvaluations  /  1;  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  1;  int  costEvaluations  /  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    /    1;    int  costEvaluations  /  1;	  	non-compiled	[CE]  ';'  expected	79	None	add
63	[BUG]  [BUGGY]  return  costEvaluations  /  1;  int  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  1;  int  costEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    /    1;    int  costEvaluations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	79	None	add
64	[BUG]  [BUGGY]  return  costEvaluations  /  1;  int  costEvaluations  /  2;  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  1;  int  costEvaluations  /  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    /    1;    int  costEvaluations  /  2;	  	non-compiled	[CE]  ';'  expected	79	None	add
65	[BUG]  [BUGGY]  return  costEvaluations  /  1;  int  costEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  1;  int  costEvaluations  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    /    1;    int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	79	None	add
66	[BUG]  [BUGGY]  return  costEvaluations  /  1;  int  costEvaluations  =  parameters.size()  /  2;  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  1;  int  costEvaluations  =  parameters.size()  /  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    /    1;    int  costEvaluations  =  parameters.size()  /  2;	  	non-compiled	[CE]  cannot  find  symbol	79	None	add
67	[BUG]  [BUGGY]  return  costEvaluations  /  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  /  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i]    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
68	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  1;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  1;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  *  2  +  1;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i]    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
69	[BUG]  [BUGGY]  return  this.costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i]    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
70	[BUG]  [BUGGY]  return  costEvaluations  /  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  /  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i]    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
71	[BUG]  [BUGGY]  Integer  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  Integer  costEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	Integer  costEvaluations  =  parameters.size();	  return    costEvaluations    *    2;    int    costEvaluations    =    parameters.size();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
72	[BUG]  [BUGGY]  [FE]  EstimationException  [FE]    EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  -  3;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  parameters.length  -  3;	  return    parameters.length    -    2;    	compilable	  [FE]  EstimationException  	22	8	replace
73	[BUG]  [BUGGY]  return  parameters.length  -  3;  [FE]  EstimationException  [FE]    EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  -  3;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  -  3;	  return    parameters.length    -    2;    	compilable	  [FE]  EstimationException  	22	8	replace
74	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.get( "CostEvaluations ",  jacobianEvaluations);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.get( "CostEvaluations ",  jacobianEvaluations);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.get( "CostEvaluations ",  jacobianEvaluations);	  int    costEvaluations    =    parameters.get(   "CostEvaluations   ");    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
75	[BUG]  [BUGGY]  int  costEvaluations  =  this.parameters.get( "CostEvaluations ");  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  this.parameters.get( "CostEvaluations ");  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  this.parameters.get( "CostEvaluations ");	  int    costEvaluations    =    parameters.get(   "CostEvaluations   ");    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
76	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  parameters[i]  =  parameters[i];  }  [CE]  int  cannot  be  dereferenced  [FE]                EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  parameters[i]  =  parameters[i];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  int  cannot  be  dereferenced	8	None	replace
77	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  measurements.length;  i  <  cols.length;  i++)  {  parameters[i]  =  parameters[i];  }  [CE]  int  cannot  be  dereferenced  [FE]                  EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  cols  =  measurements.length;  i  <  cols.length;  i++)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  measurements.length;  i  <  cols.length;  i++)  {  parameters[i]  =  parameters[i];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  int  cannot  be  dereferenced	8	None	replace
78	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  variables[i]  =  parameters[i];  }  [CE]  int  cannot  be  dereferenced  [FE]                    EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  variables[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  variables[i]  =  parameters[i];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  int  cannot  be  dereferenced	8	None	replace
79	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  parameters[i]  =  new  EstimatedParameter[cols.length];  }  [CE]  int  cannot  be  dereferenced  [FE]                      EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  parameters[i]  =  new  EstimatedParameter[cols.length];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  parameters[i]  =  new  EstimatedParameter[cols.length];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  int  cannot  be  dereferenced	8	None	replace
80	[BUG]  [BUGGY]  Integer  costEvaluations  =  parameters.length;  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  Integer  costEvaluations  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	Integer  costEvaluations  =  parameters.length;	  return    costEvaluations    *    parameters.length;    int    costEvaluations    =    parameters.length;    	non-compiled	[CE]  missing  return  statement	59	None	replace
81	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.getMeasurements()  -  2;  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.getMeasurements()  -  2;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.getMeasurements()  -  2;	  int    costEvaluations    =    parameters.getMeasurements();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
82	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.getMeasurements()  -  1;  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.getMeasurements()  -  1;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.getMeasurements()  -  1;	  int    costEvaluations    =    parameters.getMeasurements();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
83	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations()  *  1;  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations()  *  1;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations()  *  1;	  int    costEvaluations    =    getMeanEvaluations()    -    1;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
84	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations().length  -  1;  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations().length  -  1;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations().length  -  1;	  int    costEvaluations    =    getMeanEvaluations()    -    1;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
85	[BUG]  [BUGGY]  ;  int  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  ;  int  costEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	;  int  costEvaluations  =  parameters.size();	  return    this.costEvaluations;    int    costEvaluations    =    parameters.size();    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
86	[BUG]  [BUGGY]  int  costEvaluations  =  this.costEvaluations;  [CE]  missing  return  statement  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  this.costEvaluations;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  this.costEvaluations;	  return    this.costEvaluations;    int    costEvaluations    =    this.costEvaluations;    	non-compiled	[CE]  missing  return  statement	42	None	replace
87	[BUG]  [BUGGY]  int  costEvaluations  =  this.costEvaluations  +  1;  [CE]  missing  return  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  this.costEvaluations  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  this.costEvaluations  +  1;	  return    this.costEvaluations;    int    costEvaluations    =    this.costEvaluations;    	non-compiled	[CE]  missing  return  statement	42	None	replace
88	[BUG]  [BUGGY]  int  rows  =  parameters.size()  -  2;  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  rows  =  parameters.size()  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  rows  =  parameters.size()  -  2;	  int    rows    =    parameters.size();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
89	[BUG]  [BUGGY]  int  rows  =  parameters.size()  -  1;  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  rows  =  parameters.size()  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  rows  =  parameters.size()  -  1;	  int    rows    =    parameters.size();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
90	[BUG]  [BUGGY]  int  rows  =  parameters.size()  -  cols;  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  rows  =  parameters.size()  -  cols;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  rows  =  parameters.size()  -  cols;	  int    rows    =    parameters.size();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
91	[BUG]  [BUGGY]  Int  costEvaluations  =  getCostEvaluations();  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  Int  costEvaluations  =  getCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	Int  costEvaluations  =  getCostEvaluations();	          int    costEvaluations    =    getCostEvaluations();    Int    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  cannot  find  symbol	148	None	replace
92	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations();  Int  costEvaluations  =  getCostEvaluations();  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations();  Int  costEvaluations  =  getCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations();  Int  costEvaluations  =  getCostEvaluations();	          int    costEvaluations    =    getCostEvaluations();    Int    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  cannot  find  symbol	148	None	replace
93	[BUG]  [BUGGY]  int  costEvaluations  =  getMeasurementEvaluations();  Int  costEvaluations  =  getCostEvaluations();  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeasurementEvaluations();  Int  costEvaluations  =  getCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeasurementEvaluations();  Int  costEvaluations  =  getCostEvaluations();	          int    costEvaluations    =    getCostEvaluations();    Int    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  cannot  find  symbol	148	None	replace
94	[BUG]  [BUGGY]  Integer  costEvaluations  =  getMeanEvaluations();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  Integer  costEvaluations  =  getMeanEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	Integer  costEvaluations  =  getMeanEvaluations();	  return    this.costEvaluations;    int    costEvaluations    =    getMeanEvaluations();    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
95	[BUG]  [BUGGY]  [FE]  EstimationException  [FE]    EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  /  2  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  parameters.length  /  2  +  1;	  return    parameters.length    /    2;    	compilable	  [FE]  EstimationException  	121	3	replace
96	[BUG]  [BUGGY]  return  parameters.length  /  2  +  1;  [FE]  EstimationException  [FE]    EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  /  2  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  /  2  +  1;	  return    parameters.length    /    2;    	compilable	  [FE]  EstimationException  	121	3	replace
97	[BUG]  [BUGGY]  return  parameters.length  /  2  +  this.maxCostEvaluations;  [CE]  cannot  find  symbol  maxCostEvaluations  [FE]      EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  /  2  +  this.maxCostEvaluations;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  /  2  +  this.maxCostEvaluations;	  return    parameters.length    /    2;    	non-compiled	[CE]  cannot  find  symbol  maxCostEvaluations	121	None	replace
98	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  /  2  +  costEvaluations;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  parameters.length  /  2  +  costEvaluations;	  return    parameters.length    /    2;    	compilable	  [FE]  AssertionFailedError  	121	2	replace
99	[BUG]  [BUGGY]  return  parameters.length  /  2  +  costEvaluations;  [FE]  AssertionFailedError  [FE]        EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  /  2  +  costEvaluations;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  /  2  +  costEvaluations;	  return    parameters.length    /    2;    	compilable	  [FE]  AssertionFailedError  	121	2	replace
100	[BUG]  [BUGGY]  int  results  =  parameters.length  -  1;  [CE]  missing  return  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  results  =  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  results  =  parameters.length  -  1;	  int    results    =    parameters.length;    	non-compiled	[CE]  missing  return  statement	124	None	replace
101	[BUG]  [BUGGY]  int  results  =  parameters.length  -  2;  [CE]  missing  return  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  results  =  parameters.length  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  results  =  parameters.length  -  2;	  int    results    =    parameters.length;    	non-compiled	[CE]  missing  return  statement	124	None	replace
102	[BUG]  [BUGGY]  int  results  =  this.resultEvaluations.length;  [CE]  cannot  find  symbol  resultEvaluations  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  results  =  this.resultEvaluations.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  results  =  this.resultEvaluations.length;	  int    results    =    parameters.length;    	non-compiled	[CE]  cannot  find  symbol  resultEvaluations	124	None	replace
103	[BUG]  [BUGGY]  int  results  =  this.results.length;  [CE]  cannot  find  symbol  results  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  results  =  this.results.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  results  =  this.results.length;	  int    results    =    parameters.length;    	non-compiled	[CE]  cannot  find  symbol  results	124	None	replace
104	[BUG]  [BUGGY]  return  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
105	[BUG]  [BUGGY]  int  cols  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  cols  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  cols  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
106	[BUG]  [BUGGY]  int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
107	[BUG]  [BUGGY]  int  cols  =  parameters.length;  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  cols  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  cols  =  parameters.length;	  return    costEvaluations    *    parameters.length;    int    cols    =    parameters.length;    	non-compiled	[CE]  missing  return  statement	61	None	replace
108	[BUG]  [BUGGY]  int  cols  =  parameters.length  -  costEvaluations;  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  cols  =  parameters.length  -  costEvaluations;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  cols  =  parameters.length  -  costEvaluations;	  return    costEvaluations    *    parameters.length;    int    cols    =    parameters.length;    	non-compiled	[CE]  missing  return  statement	61	None	replace
109	[BUG]  [BUGGY]  int  cols  =  parameters.length  -  1;  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  cols  =  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  cols  =  parameters.length  -  1;	  return    costEvaluations    *    parameters.length;    int    cols    =    parameters.length;    	non-compiled	[CE]  missing  return  statement	61	None	replace
110	[BUG]  [BUGGY]  int  costEvaluations  =  0;  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  0;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  0;	  return    costEvaluations    *    2;    int    costEvaluations    *    2;    	non-compiled	[CE]  missing  return  statement	14	None	replace
111	[BUG]  [BUGGY]  int  costEvaluations  =  2;  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  2;	  return    costEvaluations    *    2;    int    costEvaluations    *    2;    	non-compiled	[CE]  missing  return  statement	14	None	replace
112	[BUG]  [BUGGY]  int  costEvaluations  -  1;  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  -  1;	  return    costEvaluations    -    1;    int    costEvaluations    -    1;    	non-compiled	[CE]  ';'  expected	35	None	replace
113	[BUG]  [BUGGY]  int  costEvaluations  =  getRowCostEvaluations();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getRowCostEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getRowCostEvaluations();	  return    costEvaluations    -    1;    int    costEvaluations    -    1;    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
114	[BUG]  [BUGGY]  int  costEvaluations  =  Math.max(0,  costEvaluations  -  1);  [CE]  variable  costEvaluations  might  not  have  been  initialized  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  Math.max(0,  costEvaluations  -  1);  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  Math.max(0,  costEvaluations  -  1);	  return    costEvaluations    -    1;    int    costEvaluations    -    1;    	non-compiled	[CE]  variable  costEvaluations  might  not  have  been  initialized	35	None	replace
115	[BUG]  [BUGGY]  Integer  costEvaluations  =  parameters.length  -  1;  [CE]  missing  return  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  Integer  costEvaluations  =  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	Integer  costEvaluations  =  parameters.length  -  1;	  return    costEvaluations    -    1;    int    costEvaluations    =    parameters.length    -    1;    	non-compiled	[CE]  missing  return  statement	38	None	replace
116	[BUG]  [BUGGY]  long  costEvaluations  =  parameters.length  -  1;  [CE]  missing  return  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  long  costEvaluations  =  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	long  costEvaluations  =  parameters.length  -  1;	  return    costEvaluations    -    1;    int    costEvaluations    =    parameters.length    -    1;    	non-compiled	[CE]  missing  return  statement	38	None	replace
117	[BUG]  [BUGGY]  return  costEvaluations  *  2  -  1;  int  costEvaluations  *  2  -  1;  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  -  1;  int  costEvaluations  *  2  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    -    1;    int  costEvaluations  *  2  -  1;	  	non-compiled	[CE]  ';'  expected	96	None	add
118	[BUG]  [BUGGY]  return  costEvaluations  *  2  -  1;  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  -  1;  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    -    1;    for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]	  	non-compiled	[CE]  not  a  statement	96	None	add
119	[BUG]  [BUGGY]  return  costEvaluations  *  2  -  1;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  -  1;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    -    1;    for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]	  	non-compiled	[CE]  not  a  statement	96	None	add
120	[BUG]  [BUGGY]  return  costEvaluations  *  2  -  1;  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  -  1;  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    -    1;    for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]	  	non-compiled	[CE]  not  a  statement	96	None	add
121	[BUG]  [BUGGY]  return  costEvaluations  *  2  -  1;  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  -  1;  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    -    1;    for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]	  	non-compiled	[CE]  ';'  expected	96	None	add
122	[BUG]  [BUGGY]  double  costEvaluations  =  getCostEvaluations();  [CE]  missing  return  statement  [FE]            StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  double  costEvaluations  =  getCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	double  costEvaluations  =  getCostEvaluations();	          int    costEvaluations    =    getCostEvaluations();    double    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  missing  return  statement	150	None	replace
123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  2  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  /  2  -  1;	  return    costEvaluations    *    2    -    1;    	compilable	  [FE]  AssertionFailedError  	97	2	replace
124	[BUG]  [BUGGY]  return  costEvaluations  /  2  -  1;  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  2  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  /  2  -  1;	  return    costEvaluations    *    2    -    1;    	compilable	  [FE]  AssertionFailedError  	97	2	replace
125	[BUG]  [BUGGY]  this.costEvaluations;  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  this.costEvaluations;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	this.costEvaluations;	  return    this.costEvaluations;    this.costEvaluations;    	non-compiled	[CE]  not  a  statement	40	None	replace
126	[BUG]  [BUGGY]  this.costEvaluations  =  0;  [CE]  missing  return  statement  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  this.costEvaluations  =  0;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	this.costEvaluations  =  0;	  return    this.costEvaluations;    this.costEvaluations;    	non-compiled	[CE]  missing  return  statement	40	None	replace
127	[BUG]  [BUGGY]  this.costEvaluations  =  costEvaluations;  [CE]  missing  return  statement  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  this.costEvaluations  =  costEvaluations;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	this.costEvaluations  =  costEvaluations;	  return    this.costEvaluations;    this.costEvaluations;    	non-compiled	[CE]  missing  return  statement	40	None	replace
128	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  2  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  this.costEvaluations  *  2  +  1;	  return    this.costEvaluations    *    2;    	compilable	  [FE]  AssertionFailedError  	53	2	replace
129	[BUG]  [BUGGY]  return  this.costEvaluations  *  2  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  2  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations  *  2  +  1;	  return    this.costEvaluations    *    2;    	compilable	  [FE]  AssertionFailedError  	53	2	replace
130	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  2  +  0;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  this.costEvaluations  *  2  +  0;	  return    this.costEvaluations    *    2;    	compilable	  [FE]  AssertionFailedError  	53	2	replace
131	[BUG]  [BUGGY]  return  this.costEvaluations  *  2  +  0;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  2  +  0;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations  *  2  +  0;	  return    this.costEvaluations    *    2;    	compilable	  [FE]  AssertionFailedError  	53	2	replace
132	[BUG]  [BUGGY]  return  parameters.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameters[i].getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    costEvaluations    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
133	[BUG]  [BUGGY]  return  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameters[i].getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    costEvaluations    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
134	[BUG]  [BUGGY]  return  parameters.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameters[i].getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    costEvaluations    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
135	[BUG]  [BUGGY]  return  costEvaluations  /  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  /  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameters[i].getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    costEvaluations    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
136	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations().length  +  1;  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations().length  +  1;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations().length  +  1;	  int    costEvaluations    =    getMeanEvaluations().length;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
137	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations().length  -  2;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations().length  -  2;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations().length  -  2;	  int    costEvaluations    =    getMeanEvaluations().length;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
138	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  *  2;  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  *  2;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.getCostEvaluations()  *  2;	  int    costEvaluations    =    parameters.getCostEvaluations()    -    2;    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
139	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  /  2;  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  /  2;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.getCostEvaluations()  /  2;	  int    costEvaluations    =    parameters.getCostEvaluations()    -    2;    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
140	[BUG]  [BUGGY]  return  resultEvaluations  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(results.length);  [CE]  cannot  find  symbol  resultEvaluations  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  resultEvaluations  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(results.length);  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  resultEvaluations  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(results.length);	  return    costEvaluations    -    1;    ArrayIndexOutOfBoundsException    costEvaluations    =    new    ArrayIndexOutOfBoundsException(results.length);    	non-compiled	[CE]  cannot  find  symbol  resultEvaluations	103	None	replace
141	[BUG]  [BUGGY]  resultEvaluations  =  new  ArrayIndexOutOfBoundsException(results.length);  [CE]  cannot  find  symbol  resultEvaluations  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  resultEvaluations  =  new  ArrayIndexOutOfBoundsException(results.length);  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	resultEvaluations  =  new  ArrayIndexOutOfBoundsException(results.length);	  return    costEvaluations    -    1;    ArrayIndexOutOfBoundsException    costEvaluations    =    new    ArrayIndexOutOfBoundsException(results.length);    	non-compiled	[CE]  cannot  find  symbol  resultEvaluations	103	None	replace
142	[BUG]  [BUGGY]  resultEvaluations  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(results.length);  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  resultEvaluations  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(results.length);  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	resultEvaluations  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(results.length);	  return    costEvaluations    -    1;    ArrayIndexOutOfBoundsException    costEvaluations    =    new    ArrayIndexOutOfBoundsException(results.length);    	non-compiled	[CE]  not  a  statement	103	None	replace
143	[BUG]  [BUGGY]          int    costEvaluations    =    parameters.length;    int  costsEvaluations  =  parameters.length;  int  costEvaluations  =  parameters.length;  int  costsEvaluations  =  parameters.length;  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]    EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]          int    costEvaluations    =    parameters.length;    int  costsEvaluations  =  parameters.length;  int  costEvaluations  =  parameters.length;  int  costsEvaluations  =  parameters.length;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	                int        costEvaluations        =        parameters.length;        int    costsEvaluations    =    parameters.length;    int  costEvaluations  =  parameters.length;  int  costsEvaluations  =  parameters.length;	  	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	88	None	add
144	[BUG]  [BUGGY]          int    costEvaluations    =    parameters.length;    int  costsEvaluations  =  parameters.length;  int  costEvaluations  =  measurements.length;  int  costsEvaluations  =  parameters.length;  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]      EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]          int    costEvaluations    =    parameters.length;    int  costsEvaluations  =  parameters.length;  int  costEvaluations  =  measurements.length;  int  costsEvaluations  =  parameters.length;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	                int        costEvaluations        =        parameters.length;        int    costsEvaluations    =    parameters.length;    int  costEvaluations  =  measurements.length;  int  costsEvaluations  =  parameters.length;	  	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	88	None	add
145	[BUG]  [BUGGY]          int    costEvaluations    =    parameters.length;    int  costsEvaluations  =  parameters.length;  Integer  costEvaluations  =  parameters.length;  int  costsEvaluations  =  parameters.length;  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]        EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]          int    costEvaluations    =    parameters.length;    int  costsEvaluations  =  parameters.length;  Integer  costEvaluations  =  parameters.length;  int  costsEvaluations  =  parameters.length;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	                int        costEvaluations        =        parameters.length;        int    costsEvaluations    =    parameters.length;    Integer  costEvaluations  =  parameters.length;  int  costsEvaluations  =  parameters.length;	  	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	88	None	add
146	[BUG]  [BUGGY]          int    costEvaluations    =    parameters.length;    int  costsEvaluations  =  parameters.length;  int  costEvaluations  =  parameters.length;  int  costsEvaluations  =  parameter.length;  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]          EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]          int    costEvaluations    =    parameters.length;    int  costsEvaluations  =  parameters.length;  int  costEvaluations  =  parameters.length;  int  costsEvaluations  =  parameter.length;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	                int        costEvaluations        =        parameters.length;        int    costsEvaluations    =    parameters.length;    int  costEvaluations  =  parameters.length;  int  costsEvaluations  =  parameter.length;	  	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	88	None	add
147	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(parameters);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations(parameters);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(parameters);	  int    costEvaluations    =    getMeanEvaluations(remainings);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
148	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(  measurements);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations(  measurements);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(  measurements);	  int    costEvaluations    =    getMeanEvaluations(remainings);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
149	[BUG]  [BUGGY]  return  costEvaluations  /  2;  int  costEvaluations  /  2;  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  2;  int  costEvaluations  /  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    /    2;    int  costEvaluations  /  2;	  	non-compiled	[CE]  ';'  expected	90	None	add
150	[BUG]  [BUGGY]  return  costEvaluations  /  2;  int  costEvaluations  /  2  =  parameters.length;  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  2;  int  costEvaluations  /  2  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    /    2;    int  costEvaluations  /  2  =  parameters.length;	  	non-compiled	[CE]  ';'  expected	90	None	add
151	[BUG]  [BUGGY]  return  costEvaluations  /  2;  int  costEvaluations  /  2  =  parameters.size();  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  2;  int  costEvaluations  /  2  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    /    2;    int  costEvaluations  /  2  =  parameters.size();	  	non-compiled	[CE]  ';'  expected	90	None	add
152	[BUG]  [BUGGY]  return  costEvaluations  /  2;  int  costEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  2;  int  costEvaluations  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    /    2;    int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	90	None	add
153	[BUG]  [BUGGY]  return  costEvaluations  /  2;  int  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  2;  int  costEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    /    2;    int  costEvaluations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	90	None	add
154	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.length  /  1;  [CE]  missing  return  statement  [FE]            EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.length  /  1;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.length  /  1;	  int    costEvaluations    =    parameters.length    +    1;    	non-compiled	[CE]  missing  return  statement	58	None	replace
155	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.length  +  2;  [CE]  missing  return  statement  [FE]              EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.length  +  2;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.length  +  2;	  int    costEvaluations    =    parameters.length    +    1;    	non-compiled	[CE]  missing  return  statement	58	None	replace
156	[BUG]  [BUGGY]  [FE]  EstimationException  [FE]    EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  /  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  parameters.length  /  1;	  return    parameters.length    -    1;    	compilable	  [FE]  EstimationException  	20	3	replace
157	[BUG]  [BUGGY]  return  parameters.length  /  1;  [FE]  EstimationException  [FE]    EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  /  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  /  1;	  return    parameters.length    -    1;    	compilable	  [FE]  EstimationException  	20	3	replace
158	[BUG]  [BUGGY]  return  results.length  -  1;  [CE]  cannot  find  symbol  results  [FE]      EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  results.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  results.length  -  1;	  return    parameters.length    -    1;    	non-compiled	[CE]  cannot  find  symbol  results	20	None	replace
159	[BUG]  [BUGGY]  int[]  rows  =  getRows().length;  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int[]  rows  =  getRows().length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int[]  rows  =  getRows().length;	  int[]    rows    =    getRows();    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
160	[BUG]  [BUGGY]  int[]  rows  =  getRows(),  costEvaluations;  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int[]  rows  =  getRows(),  costEvaluations;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int[]  rows  =  getRows(),  costEvaluations;	  int[]    rows    =    getRows();    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
161	[BUG]  [BUGGY]  int[]  rows  =  getRows()  /  cols;  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int[]  rows  =  getRows()  /  cols;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int[]  rows  =  getRows()  /  cols;	  int[]    rows    =    getRows();    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
162	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  measurements.length;  ++i)  {	  for(int    i    =    0;    i    <    parameters.length;    ++i)    {    EstimatedMeasurement[]    measurements[i]    =    parameters[i].getCostEvaluations();    for(int    cols    =    0;    cols    <    measurements.length;    cols++)    {    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
163	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {	  for(int    i    =    0;    i    <    parameters.length;    ++i)    {    EstimatedMeasurement[]    measurements[i]    =    parameters[i].getCostEvaluations();    for(int    cols    =    0;    cols    <    measurements.length;    cols++)    {    	non-compiled	[CE]  ']'  expected	133	None	replace
164	[BUG]  [BUGGY]  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  [CE]  ']'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	EstimatedMeasurement[]  measurements[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {	  for(int    i    =    0;    i    <    parameters.length;    ++i)    {    EstimatedMeasurement[]    measurements[i]    =    parameters[i].getCostEvaluations();    for(int    cols    =    0;    cols    <    measurements.length;    cols++)    {    	non-compiled	[CE]  ']'  expected	133	None	replace
165	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  -  jacobianEvaluations;  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  -  jacobianEvaluations;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.getCostEvaluations()  -  jacobianEvaluations;	  int    costEvaluations    =    parameters.getCostEvaluations()    -    cols;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
166	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  -  maxCostEval;  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  -  maxCostEval;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.getCostEvaluations()  -  maxCostEval;	  int    costEvaluations    =    parameters.getCostEvaluations()    -    cols;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
167	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  *  cols;  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  *  cols;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.getCostEvaluations()  *  cols;	  int    costEvaluations    =    parameters.getCostEvaluations()    -    cols;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
168	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.get( "cost ").remove( "cost ");  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.get( "cost ").remove( "cost ");  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.get( "cost ").remove( "cost ");	  int    costEvaluations    =    parameters.remove(   "cost   ");    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
169	[BUG]  [BUGGY]  float  costEvaluations  =  getCostEvaluations();  [CE]  missing  return  statement  [FE]              StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  float  costEvaluations  =  getCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	float  costEvaluations  =  getCostEvaluations();	          int    costEvaluations    =    getCostEvaluations();    float    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  missing  return  statement	76	None	replace
170	[BUG]  [BUGGY]  int  costEvaluations  =  measurements.length()  -  1;  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  measurements.length()  -  1;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  measurements.length()  -  1;	  int    costEvaluations    =    parameters.length()    -    1;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
171	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.get( "cost-evaluations ").intValue();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.get( "cost-evaluations ").intValue();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.get( "cost-evaluations ").intValue();	  int    costEvaluations    =    parameters.get(   "cost   ").intValue();    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
172	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.get(0).intValue();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.get(0).intValue();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.get(0).intValue();	  int    costEvaluations    =    parameters.get(   "cost   ").intValue();    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
173	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.get( "cost ",  0).intValue();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.get( "cost ",  0).intValue();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.get( "cost ",  0).intValue();	  int    costEvaluations    =    parameters.get(   "cost   ").intValue();    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
174	[BUG]  [BUGGY]  return  parameters.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    ++i)    {    parameters[i]    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
175	[BUG]  [BUGGY]  int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    ++i)    {    parameters[i]    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
176	[BUG]  [BUGGY]  return  parameters.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    ++i)    {    parameters[i]    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
177	[BUG]  [BUGGY]  return  parameters.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    ++i)    {    parameters[i]    	non-compiled	[CE]  ';'  expected	16	None	replace
178	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  0;  int  costEvaluations  *  2  +  0;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  0;  int  costEvaluations  *  2  +  0;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    0;    int  costEvaluations  *  2  +  0;	  	non-compiled	[CE]  ';'  expected	94	None	add
179	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  0;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  0;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    0;    for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]	  	non-compiled	[CE]  ';'  expected	94	None	add
180	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  0;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  costEvaluations  *  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  0;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  costEvaluations  *  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    0;    for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  costEvaluations  *	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
181	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  0;  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  0;  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    0;    for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]	  	non-compiled	[CE]  not  a  statement	94	None	add
182	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  0;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  parameters[i]  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  0;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  parameters[i]  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    0;    for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  parameters[i]	  	non-compiled	[CE]  not  a  statement	94	None	add
183	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  *  2  -  1;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  *  2  -  1;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.getCostEvaluations()  *  2  -  1;	  int    costEvaluations    =    parameters.getCostEvaluations()    -    1;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
184	[BUG]  [BUGGY]  int  costEvaluations  =  this.costEvaluations.size();  [CE]  int  cannot  be  dereferenced  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  this.costEvaluations.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  this.costEvaluations.size();	  return    this.costEvaluations;    int    costEvaluations    =    this.costEvaluations.size();    	non-compiled	[CE]  int  cannot  be  dereferenced	111	None	replace
185	[BUG]  [BUGGY]  if(this.costEvaluations!=  null)  {  return  this.costEvaluations;  int  costEvaluations  =  this.costEvaluations.size();  }  [CE]  incomparable  types:  int  and  <null>  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(this.costEvaluations!=  null)  {  return  this.costEvaluations;  int  costEvaluations  =  this.costEvaluations.size();  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(this.costEvaluations!=  null)  {  return  this.costEvaluations;  int  costEvaluations  =  this.costEvaluations.size();  }	  return    this.costEvaluations;    int    costEvaluations    =    this.costEvaluations.size();    	non-compiled	[CE]  incomparable  types:  int  and  <null>	111	None	replace
186	[BUG]  [BUGGY]  if(this.costEvaluations!=  null)  {  return  costEvaluations;  int  costEvaluations  =  this.costEvaluations.size();  }  [CE]  incomparable  types:  int  and  <null>  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(this.costEvaluations!=  null)  {  return  costEvaluations;  int  costEvaluations  =  this.costEvaluations.size();  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(this.costEvaluations!=  null)  {  return  costEvaluations;  int  costEvaluations  =  this.costEvaluations.size();  }	  return    this.costEvaluations;    int    costEvaluations    =    this.costEvaluations.size();    	non-compiled	[CE]  incomparable  types:  int  and  <null>	111	None	replace
187	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();  [CE]  missing  return  statement  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();	  return    costEvaluations    -    1;    ArrayIndexOutOfBoundsException    costEvaluations    =    new    ArrayIndexOutOfBoundsException();    	non-compiled	[CE]  missing  return  statement	102	None	replace
188	[BUG]  [BUGGY]  int  costEvaluations  =  costEvaluations  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  costEvaluations  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  costEvaluations  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();	  return    costEvaluations    -    1;    ArrayIndexOutOfBoundsException    costEvaluations    =    new    ArrayIndexOutOfBoundsException();    	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	102	None	replace
189	[BUG]  [BUGGY]  int  costEvaluations  =  cost.length  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();  [CE]  double  cannot  be  dereferenced  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  cost.length  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  cost.length  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();	  return    costEvaluations    -    1;    ArrayIndexOutOfBoundsException    costEvaluations    =    new    ArrayIndexOutOfBoundsException();    	non-compiled	[CE]  double  cannot  be  dereferenced	102	None	replace
190	[BUG]  [BUGGY]  int  costEvaluations  =  getCostEvaluations();  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getCostEvaluations();  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getCostEvaluations();  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();	  return    costEvaluations    -    1;    ArrayIndexOutOfBoundsException    costEvaluations    =    new    ArrayIndexOutOfBoundsException();    	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	102	None	replace
191	[BUG]  [BUGGY]  boolean  costEvaluations  =  getCostEvaluations();  [CE]  incompatible  types  [FE]          StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  boolean  costEvaluations  =  getCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	boolean  costEvaluations  =  getCostEvaluations();	          int    costEvaluations    =    getCostEvaluations();    boolean    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  incompatible  types	149	None	replace
192	[BUG]  [BUGGY]  null  costEvaluations  =  getCostEvaluations();  [CE]  not  a  statement  [FE]            StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  null  costEvaluations  =  getCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	null  costEvaluations  =  getCostEvaluations();	          int    costEvaluations    =    getCostEvaluations();    boolean    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  not  a  statement	149	None	replace
193	[BUG]  [BUGGY]  return  costEvaluations.length  *  parameters;  [CE]  int  cannot  be  dereferenced  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations.length  *  parameters;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations.length  *  parameters;	  return    parameters.length    *    costEvaluations;    	non-compiled	[CE]  int  cannot  be  dereferenced	65	None	replace
194	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  parameters.length  *  2;	  return    parameters.length    *    costEvaluations;    	compilable	  [FE]  AssertionFailedError  	65	2	replace
195	[BUG]  [BUGGY]  return  parameters.length  *  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  *  2;	  return    parameters.length    *    costEvaluations;    	compilable	  [FE]  AssertionFailedError  	65	2	replace
196	[BUG]  [BUGGY]  return  costEvaluations  *  parameters;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]        AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  parameters;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  *  parameters;	  return    parameters.length    *    costEvaluations;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	65	None	replace
197	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  +  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  parameters.length  +  2;	  return    parameters.length    +    1;    	compilable	  [FE]  AssertionFailedError  	119	2	replace
198	[BUG]  [BUGGY]  return  parameters.length  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  +  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  +  2;	  return    parameters.length    +    1;    	compilable	  [FE]  AssertionFailedError  	119	2	replace
199	[BUG]  [BUGGY]  return  costEvaluations  -  2;  int  costEvaluations  -  2;  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  -  2;  int  costEvaluations  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    -    2;    int  costEvaluations  -  2;	  	non-compiled	[CE]  ';'  expected	83	None	add
200	[BUG]  [BUGGY]  return  costEvaluations  -  2;  int  costEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  -  2;  int  costEvaluations  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    -    2;    int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	83	None	add
201	[BUG]  [BUGGY]  return  costEvaluations  -  2;  int  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  -  2;  int  costEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    -    2;    int  costEvaluations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	83	None	add
202	[BUG]  [BUGGY]  return  costEvaluations  -  2;  int  costEvaluations  =  parameters.length  -  2;  [CE]  unreachable  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  -  2;  int  costEvaluations  =  parameters.length  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    -    2;    int  costEvaluations  =  parameters.length  -  2;	  	non-compiled	[CE]  unreachable  statement	83	None	add
203	[BUG]  [BUGGY]  return  costEvaluations  -  2;  int  costEvaluations  -  2  =  parameters.length;  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  -  2;  int  costEvaluations  -  2  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    -    2;    int  costEvaluations  -  2  =  parameters.length;	  	non-compiled	[CE]  ';'  expected	83	None	add
204	[BUG]  [BUGGY]  return  parameters.length  *  2;  int  costEvaluations  *  2  =  costEvaluations;  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  2;  int  costEvaluations  *  2  =  costEvaluations;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  *  2;  int  costEvaluations  *  2  =  costEvaluations;	  return    costEvaluations    *    2;    int    costEvaluations    *    2    =    parameters.length;    	non-compiled	[CE]  ';'  expected	100	None	replace
205	[BUG]  [BUGGY]  int  costEvaluations  *  2  =  parameters.length;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  *  2  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  *  2  =  parameters.length;	  return    costEvaluations    *    2;    int    costEvaluations    *    2    =    parameters.length;    	non-compiled	[CE]  ';'  expected	100	None	replace
206	[BUG]  [BUGGY]  int  costEvaluations  /  2  =  parameters.length;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  /  2  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  /  2  =  parameters.length;	  return    costEvaluations    *    2;    int    costEvaluations    *    2    =    parameters.length;    	non-compiled	[CE]  ';'  expected	100	None	replace
207	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(remainings,  maxCostEval);  [CE]  cannot  find  symbol  remainings  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations(remainings,  maxCostEval);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(remainings,  maxCostEval);	  int    costEvaluations    =    getMeanEvaluations(maxCostEval,    residuals);    	non-compiled	[CE]  cannot  find  symbol  remainings	31	None	replace
208	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(results,  maxCostEval);  [CE]  cannot  find  symbol  results  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations(results,  maxCostEval);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(results,  maxCostEval);	  int    costEvaluations    =    getMeanEvaluations(maxCostEval,    residuals);    	non-compiled	[CE]  cannot  find  symbol  results	31	None	replace
209	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.size()  /  1;  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.size()  /  1;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.size()  /  1;	  int    costEvaluations    =    parameters.size()    +    1;    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
210	[BUG]  [BUGGY]  int  costEvaluations  =  this.costEvaluations.length;  [CE]  int  cannot  be  dereferenced  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  this.costEvaluations.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  this.costEvaluations.length;	  return    this.costEvaluations;    int    costEvaluations    =    this.costEvaluations.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	112	None	replace
211	[BUG]  [BUGGY]  Integer  costEvaluations  =  this.costEvaluations.length;  [CE]  int  cannot  be  dereferenced  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  Integer  costEvaluations  =  this.costEvaluations.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	Integer  costEvaluations  =  this.costEvaluations.length;	  return    this.costEvaluations;    int    costEvaluations    =    this.costEvaluations.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	112	None	replace
212	[BUG]  [BUGGY]  int  costEvaluations  =  getCostEvaluations()  /  1;  [CE]  missing  return  statement  [FE]        StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getCostEvaluations()  /  1;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getCostEvaluations()  /  1;	  int    costEvaluations    =    getCostEvaluations()    +    1;    	non-compiled	[CE]  missing  return  statement	113	None	replace
213	[BUG]  [BUGGY]  int  costEvaluations  =  getCostEvaluations().length;  [CE]  int  cannot  be  dereferenced  [FE]          StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getCostEvaluations().length;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getCostEvaluations().length;	  int    costEvaluations    =    getCostEvaluations()    +    1;    	non-compiled	[CE]  int  cannot  be  dereferenced	113	None	replace
214	[BUG]  [BUGGY]  return  costEvaluations  /  parameters.length;  int  costEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  parameters.length;  int  costEvaluations  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    /    parameters.length;    int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	68	None	add
215	[BUG]  [BUGGY]  return  costEvaluations  /  parameters.length;  int  costEvaluations  /  parameters.length;  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  parameters.length;  int  costEvaluations  /  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    /    parameters.length;    int  costEvaluations  /  parameters.length;	  	non-compiled	[CE]  ';'  expected	68	None	add
216	[BUG]  [BUGGY]  return  costEvaluations  /  parameters.length;  int  cols  =  parameters.length;  [CE]  unreachable  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  parameters.length;  int  cols  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    /    parameters.length;    int  cols  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	68	None	add
217	[BUG]  [BUGGY]  return  costEvaluations  /  parameters.length;  int  maxCostEval  =  parameters.length;  [CE]  unreachable  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  parameters.length;  int  maxCostEval  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    /    parameters.length;    int  maxCostEval  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	68	None	add
218	[BUG]  [BUGGY]  return  costEvaluations  /  parameters.length;  int  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  parameters.length;  int  costEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    /    parameters.length;    int  costEvaluations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
219	[BUG]  [BUGGY]  return  cost  *  parameters.length;  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  cost  *  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  cost  *  parameters.length;	  return    parameters    *    cost.length;    	non-compiled	[CE]  possible  loss  of  precision	105	None	replace
220	[BUG]  [BUGGY]  return  costEvaluations  *  1;  int  costEvaluations  *  1;  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  1;  int  costEvaluations  *  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    1;    int  costEvaluations  *  1;	  	non-compiled	[CE]  ';'  expected	81	None	add
221	[BUG]  [BUGGY]  return  costEvaluations  *  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBounds();  costEvaluations  *  1;  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBounds();  costEvaluations  *  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    1;    ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBounds();  costEvaluations  *  1;	  	non-compiled	[CE]  not  a  statement	81	None	add
222	[BUG]  [BUGGY]  return  costEvaluations  *  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBounds();  costEvaluations  *  2;  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBounds();  costEvaluations  *  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    1;    ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBounds();  costEvaluations  *  2;	  	non-compiled	[CE]  not  a  statement	81	None	add
223	[BUG]  [BUGGY]  return  costEvaluations  *  1;  ArrayIndexOutOfBoundsException  costEvaluations  *  1;  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  1;  ArrayIndexOutOfBoundsException  costEvaluations  *  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    1;    ArrayIndexOutOfBoundsException  costEvaluations  *  1;	  	non-compiled	[CE]  ';'  expected	81	None	add
224	[BUG]  [BUGGY]  return  costEvaluations  *  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();  costEvaluations  *  1;  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();  costEvaluations  *  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    1;    ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();  costEvaluations  *  1;	  	non-compiled	[CE]  not  a  statement	81	None	add
225	[BUG]  [BUGGY]  return  parameters.length  -  2;  int  cols  =  parameters.length  -  2;  [CE]  unreachable  statement  [FE]    EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  -  2;  int  cols  =  parameters.length  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    -    2;    int  cols  =  parameters.length  -  2;	  	non-compiled	[CE]  unreachable  statement	21	None	add
226	[BUG]  [BUGGY]  return  parameters.length  -  2;  int  maxCostEval  =  parameters.length  -  2;  [CE]  unreachable  statement  [FE]      EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  -  2;  int  maxCostEval  =  parameters.length  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    -    2;    int  maxCostEval  =  parameters.length  -  2;	  	non-compiled	[CE]  unreachable  statement	21	None	add
227	[BUG]  [BUGGY]  return  parameters.length  -  2;  int  parameters  =  parameters.length  -  2;  [CE]  int  cannot  be  dereferenced  [FE]        EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  -  2;  int  parameters  =  parameters.length  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    -    2;    int  parameters  =  parameters.length  -  2;	  	non-compiled	[CE]  int  cannot  be  dereferenced	21	None	add
228	[BUG]  [BUGGY]  return  parameters.length  -  2;  int  maxCostEval  =  parameters.length  -  1;  [CE]  unreachable  statement  [FE]          EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  -  2;  int  maxCostEval  =  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    -    2;    int  maxCostEval  =  parameters.length  -  1;	  	non-compiled	[CE]  unreachable  statement	21	None	add
229	[BUG]  [BUGGY]  return  parameters.length  -  2;  int  results  =  parameters.length  -  2;  [CE]  unreachable  statement  [FE]            EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  -  2;  int  results  =  parameters.length  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    -    2;    int  results  =  parameters.length  -  2;	  	non-compiled	[CE]  unreachable  statement	21	None	add
230	[BUG]  [BUGGY]  return  this.costEvaluations  /  2;  int  costEvaluations  =  this.costEvaluations  /  2;  [CE]  unreachable  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  /  2;  int  costEvaluations  =  this.costEvaluations  /  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    /    2;    int  costEvaluations  =  this.costEvaluations  /  2;	  	non-compiled	[CE]  unreachable  statement	54	None	add
231	[BUG]  [BUGGY]  return  this.costEvaluations  /  2;  int  costEvaluations  =  getCostEvaluations();  [CE]  unreachable  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  /  2;  int  costEvaluations  =  getCostEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    /    2;    int  costEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  unreachable  statement	54	None	add
232	[BUG]  [BUGGY]  return  this.costEvaluations  /  2;  this.costEvaluations  /  2;  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  /  2;  this.costEvaluations  /  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    /    2;    this.costEvaluations  /  2;	  	non-compiled	[CE]  not  a  statement	54	None	add
233	[BUG]  [BUGGY]  return  this.costEvaluations  /  2;  int  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  /  2;  int  costEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    /    2;    int  costEvaluations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	54	None	add
234	[BUG]  [BUGGY]  return  this.costEvaluations  /  2;  int  costEvaluations  =  this.costEvaluations  %  2;  [CE]  unreachable  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  /  2;  int  costEvaluations  =  this.costEvaluations  %  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    /    2;    int  costEvaluations  =  this.costEvaluations  %  2;	  	non-compiled	[CE]  unreachable  statement	54	None	add
235	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.get( "Cost ",  jacobianEvaluations);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.get( "Cost ",  jacobianEvaluations);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.get( "Cost ",  jacobianEvaluations);	  int    costEvaluations    =    parameters.get(   "Cost   ");    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
236	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.get( "Cost_Evaluations ");  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.get( "Cost_Evaluations ");  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.get( "Cost_Evaluations ");	  int    costEvaluations    =    parameters.get(   "Cost   ");    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
237	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length  -  1;  int  costEvaluations  =  parameters.length  -  1;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  parameters.length  -  1;  int  costEvaluations  =  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    parameters.length    -    1;    int  costEvaluations  =  parameters.length  -  1;	  	non-compiled	[CE]  unreachable  statement	66	None	add
238	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length  -  1;  int  costEvaluations  *  parameters.length  -  1;  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  parameters.length  -  1;  int  costEvaluations  *  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    parameters.length    -    1;    int  costEvaluations  *  parameters.length  -  1;	  	non-compiled	[CE]  ';'  expected	66	None	add
239	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length  -  1;  int  costEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  parameters.length  -  1;  int  costEvaluations  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    parameters.length    -    1;    int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	66	None	add
240	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length  -  1;  int  costEvaluations  =  parameters.length  -  2;  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  parameters.length  -  1;  int  costEvaluations  =  parameters.length  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    parameters.length    -    1;    int  costEvaluations  =  parameters.length  -  2;	  	non-compiled	[CE]  unreachable  statement	66	None	add
241	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length  -  1;  int  cols  =  parameters.length  -  1;  [CE]  unreachable  statement  [FE]            AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  parameters.length  -  1;  int  cols  =  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    parameters.length    -    1;    int  cols  =  parameters.length  -  1;	  	non-compiled	[CE]  unreachable  statement	66	None	add
242	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  parameters[  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  parameters[  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  parameters[	  for(int    i    =    0;    i    <    parameters.length;    ++i)    {    EstimatedMeasurement[]    measurements[i]    =    parameters[i].getCostEvaluations();    for(int    cols    =    0;    cols    <    measurements.length;    cols++)    {    parameters[    	non-compiled	[CE]  ']'  expected	134	None	replace
243	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getRangeEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  parameters[  [CE]  ']'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getRangeEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  parameters[  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getRangeEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  parameters[	  for(int    i    =    0;    i    <    parameters.length;    ++i)    {    EstimatedMeasurement[]    measurements[i]    =    parameters[i].getCostEvaluations();    for(int    cols    =    0;    cols    <    measurements.length;    cols++)    {    parameters[    	non-compiled	[CE]  ']'  expected	134	None	replace
244	[BUG]  [BUGGY]  int  maxCostEval  =  parameters.length  -  costEvaluations;  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  maxCostEval  =  parameters.length  -  costEvaluations;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  maxCostEval  =  parameters.length  -  costEvaluations;	  return    costEvaluations    *    parameters.length;    int    maxCostEval    =    parameters.length;    	non-compiled	[CE]  missing  return  statement	62	None	replace
245	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(parameters,  maxCostEval);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations(parameters,  maxCostEval);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(parameters,  maxCostEval);	  int    costEvaluations    =    getMeanEvaluations(maxCostEval,    parameters);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
246	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(maxCostEval,  parameters,  jacobianEvaluations);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations(maxCostEval,  parameters,  jacobianEvaluations);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(maxCostEval,  parameters,  jacobianEvaluations);	  int    costEvaluations    =    getMeanEvaluations(maxCostEval,    parameters);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
247	[BUG]  [BUGGY]  int  cols  =  parameters.length  -  2;  [CE]  missing  return  statement  [FE]        EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  cols  =  parameters.length  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  cols  =  parameters.length  -  2;	  return    parameters.length;    int    cols    =    parameters.length;    	non-compiled	[CE]  missing  return  statement	4	None	replace
248	[BUG]  [BUGGY]  return  parameters.length  -  1;  int  cols  =  parameters.length  -  1;  [CE]  unreachable  statement  [FE]    EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  -  1;  int  cols  =  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    -    1;    int  cols  =  parameters.length  -  1;	  	non-compiled	[CE]  unreachable  statement	19	None	add
249	[BUG]  [BUGGY]  return  parameters.length  -  1;  int  maxCostEval  =  parameters.length  -  1;  [CE]  unreachable  statement  [FE]      EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  -  1;  int  maxCostEval  =  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    -    1;    int  maxCostEval  =  parameters.length  -  1;	  	non-compiled	[CE]  unreachable  statement	19	None	add
250	[BUG]  [BUGGY]  return  parameters.length  -  1;  int  parameters  =  parameters.length  -  1;  [CE]  int  cannot  be  dereferenced  [FE]        EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  -  1;  int  parameters  =  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    -    1;    int  parameters  =  parameters.length  -  1;	  	non-compiled	[CE]  int  cannot  be  dereferenced	19	None	add
251	[BUG]  [BUGGY]  return  parameters.length  -  1;  int  cols  =  parameters.length;  [CE]  unreachable  statement  [FE]          EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  -  1;  int  cols  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    -    1;    int  cols  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	19	None	add
252	[BUG]  [BUGGY]  return  parameters.length  -  1;  int  maxCostEval  =  parameters.length  -  2;  [CE]  unreachable  statement  [FE]            EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  -  1;  int  maxCostEval  =  parameters.length  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    -    1;    int  maxCostEval  =  parameters.length  -  2;	  	non-compiled	[CE]  unreachable  statement	19	None	add
253	[BUG]  [BUGGY]  int  maxCostEvalations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]          EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  maxCostEvalations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  maxCostEvalations  =  parameters.size();	  return    parameters.length;    int    maxCostEvalations    =    parameters.size();    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
254	[BUG]  [BUGGY]  int  maxCostEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]            EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  maxCostEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  maxCostEvaluations  =  parameters.size();	  return    parameters.length;    int    maxCostEvalations    =    parameters.size();    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
255	[BUG]  [BUGGY]  int  maxCostEval  =  parameters.size();  [CE]  cannot  find  symbol  [FE]          EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  maxCostEval  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  maxCostEval  =  parameters.size();	  return    parameters.length;    int    maxCostEval    =    parameters.size();    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
256	[BUG]  [BUGGY]  int  maxCostEval  =  parameters.length();  [CE]  cannot  find  symbol  [FE]            EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  maxCostEval  =  parameters.length();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  maxCostEval  =  parameters.length();	  return    parameters.length;    int    maxCostEval    =    parameters.size();    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
257	[BUG]  [BUGGY]  return  this.results.length  -  1;  [CE]  cannot  find  symbol  results  [FE]            EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.results.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.results.length  -  1;	  return    this.results.length;    	non-compiled	[CE]  cannot  find  symbol  results	23	None	replace
258	[BUG]  [BUGGY]  return  this.results.length  -(this.maxCostEvaluations  *  parameters.length);  [CE]  cannot  find  symbol  results  [FE]              EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.results.length  -(this.maxCostEvaluations  *  parameters.length);  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.results.length  -(this.maxCostEvaluations  *  parameters.length);	  return    this.results.length;    	non-compiled	[CE]  cannot  find  symbol  results	23	None	replace
259	[BUG]  [BUGGY]  return  this.results.length  -(this.maxCostEval);  [CE]  cannot  find  symbol  results  [FE]                EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.results.length  -(this.maxCostEval);  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.results.length  -(this.maxCostEval);	  return    this.results.length;    	non-compiled	[CE]  cannot  find  symbol  results	23	None	replace
260	[BUG]  [BUGGY]  int  costEvaluations  =  getMeasurements().length;  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeasurements().length;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeasurements().length;	  int    costEvaluations    =    getMeasurements();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
261	[BUG]  [BUGGY]  int  costEvaluations  =  getMeasurements()  /  2;  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeasurements()  /  2;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeasurements()  /  2;	  int    costEvaluations    =    getMeasurements();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
262	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  1;  int  costEvaluations  *  2  +  1;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  1;  int  costEvaluations  *  2  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    1;    int  costEvaluations  *  2  +  1;	  	non-compiled	[CE]  ';'  expected	92	None	add
263	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  1;  Integer  costEvaluations  *  2  +  1;  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  1;  Integer  costEvaluations  *  2  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    1;    Integer  costEvaluations  *  2  +  1;	  	non-compiled	[CE]  ';'  expected	92	None	add
264	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  1;  int  costEvaluations  =  getCostEvaluations();  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  1;  int  costEvaluations  =  getCostEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    1;    int  costEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  unreachable  statement	92	None	add
265	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  1;  resultEvaluations  *  2  +  1;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  1;  resultEvaluations  *  2  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    1;    resultEvaluations  *  2  +  1;	  	non-compiled	[CE]  not  a  statement	92	None	add
266	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  1;  int  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  1;  int  costEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    1;    int  costEvaluations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	92	None	add
267	[BUG]  [BUGGY]  int  parameters  =  parameters.length;  [CE]  int  cannot  be  dereferenced  [FE]        EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  parameters  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  parameters  =  parameters.length;	  return    parameters.length;    int    parameters    =    parameters.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	115	None	replace
268	[BUG]  [BUGGY]  while(parameters.length  >  0)  {  parameters  =  parameters.length;  [CE]  illegal  start  of  expression  [FE]          EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  while(parameters.length  >  0)  {  parameters  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	while(parameters.length  >  0)  {  parameters  =  parameters.length;	  return    parameters.length;    int    parameters    =    parameters.length;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
269	[BUG]  [BUGGY]  while(parameters.length  <  2)  {  parameters  =  parameters.length;  [CE]  illegal  start  of  expression  [FE]            EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  while(parameters.length  <  2)  {  parameters  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	while(parameters.length  <  2)  {  parameters  =  parameters.length;	  return    parameters.length;    int    parameters    =    parameters.length;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
270	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  /  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  *  2  /  parameters.length;	  return    costEvaluations    *    2    +    parameters.length;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	128	1	replace
271	[BUG]  [BUGGY]  return  costEvaluations  *  2  /  parameters.length;  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  /  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  *  2  /  parameters.length;	  return    costEvaluations    *    2    +    parameters.length;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	128	1	replace
272	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  2  +  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  /  2  +  parameters.length;	  return    costEvaluations    *    2    +    parameters.length;    	compilable	  [FE]  AssertionFailedError  	128	2	replace
273	[BUG]  [BUGGY]  return  costEvaluations  /  2  +  parameters.length;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  2  +  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  /  2  +  parameters.length;	  return    costEvaluations    *    2    +    parameters.length;    	compilable	  [FE]  AssertionFailedError  	128	2	replace
274	[BUG]  [BUGGY]  return  parameters  *  2  +  costEvaluations.length;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]        AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters  *  2  +  costEvaluations.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  *  2  +  costEvaluations.length;	  return    costEvaluations    *    2    +    parameters.length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	128	None	replace
275	[BUG]  [BUGGY]  return  parameters  *  2  +  cost.length;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]          AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters  *  2  +  cost.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  *  2  +  cost.length;	  return    costEvaluations    *    2    +    parameters.length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	128	None	replace
276	[BUG]  [BUGGY]  return  parameters.length  /  2;  int  cols  =  parameters.length  /  2;  [CE]  unreachable  statement  [FE]    EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  /  2;  int  cols  =  parameters.length  /  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    /    2;    int  cols  =  parameters.length  /  2;	  	non-compiled	[CE]  unreachable  statement	120	None	add
277	[BUG]  [BUGGY]  return  parameters.length  /  2;  int  maxCostEval  =  parameters.length  /  2;  [CE]  unreachable  statement  [FE]      EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  /  2;  int  maxCostEval  =  parameters.length  /  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    /    2;    int  maxCostEval  =  parameters.length  /  2;	  	non-compiled	[CE]  unreachable  statement	120	None	add
278	[BUG]  [BUGGY]  return  parameters.length  /  2;  int  cols  =  parameters.length;  [CE]  unreachable  statement  [FE]        EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  /  2;  int  cols  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    /    2;    int  cols  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	120	None	add
279	[BUG]  [BUGGY]  return  parameters.length  /  2;  int  parameters  =  parameters.length  /  2;  [CE]  int  cannot  be  dereferenced  [FE]          EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  /  2;  int  parameters  =  parameters.length  /  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    /    2;    int  parameters  =  parameters.length  /  2;	  	non-compiled	[CE]  int  cannot  be  dereferenced	120	None	add
280	[BUG]  [BUGGY]  return  parameters.length  /  2;  int  cols  =  parameters.length  /  2  *  parameters.length;  [CE]  unreachable  statement  [FE]            EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  /  2;  int  cols  =  parameters.length  /  2  *  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    /    2;    int  cols  =  parameters.length  /  2  *  parameters.length;	  	non-compiled	[CE]  unreachable  statement	120	None	add
281	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length  -  2;  int  costEvaluations  *  parameters.length  -  2;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  parameters.length  -  2;  int  costEvaluations  *  parameters.length  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    parameters.length    -    2;    int  costEvaluations  *  parameters.length  -  2;	  	non-compiled	[CE]  ';'  expected	70	None	add
282	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length  -  2;  int  costEvaluations  =  parameters.length  -  2;  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  parameters.length  -  2;  int  costEvaluations  =  parameters.length  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    parameters.length    -    2;    int  costEvaluations  =  parameters.length  -  2;	  	non-compiled	[CE]  unreachable  statement	70	None	add
283	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length  -  2;  int  costEvaluations  =  parameters.length  -  1;  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  parameters.length  -  2;  int  costEvaluations  =  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    parameters.length    -    2;    int  costEvaluations  =  parameters.length  -  1;	  	non-compiled	[CE]  unreachable  statement	70	None	add
284	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length  -  2;  Integer  costEvaluations  *  parameters.length  -  2;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  parameters.length  -  2;  Integer  costEvaluations  *  parameters.length  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    parameters.length    -    2;    Integer  costEvaluations  *  parameters.length  -  2;	  	non-compiled	[CE]  ';'  expected	70	None	add
285	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length  -  2;  int  costEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]            AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  parameters.length  -  2;  int  costEvaluations  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    parameters.length    -    2;    int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	70	None	add
286	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.length()  /  1;  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.length()  /  1;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.length()  /  1;	  int    costEvaluations    =    parameters.length()    +    1;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
287	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[	  for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i]    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
288	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[	  for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i]    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
289	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  int  costEvaluations  *  2  +  parameters.length;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  int  costEvaluations  *  2  +  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    parameters.length;    int  costEvaluations  *  2  +  parameters.length;	  	non-compiled	[CE]  ';'  expected	127	None	add
290	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  int  costEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  int  costEvaluations  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    parameters.length;    int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	127	None	add
291	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  Integer  costEvaluations  *  2  +  parameters.length;  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  Integer  costEvaluations  *  2  +  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    parameters.length;    Integer  costEvaluations  *  2  +  parameters.length;	  	non-compiled	[CE]  ';'  expected	127	None	add
292	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  int  costEvaluations  =  parameters.length  -  parameters.length;  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  int  costEvaluations  =  parameters.length  -  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    parameters.length;    int  costEvaluations  =  parameters.length  -  parameters.length;	  	non-compiled	[CE]  unreachable  statement	127	None	add
293	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  int  cols  =  parameters.length;  [CE]  unreachable  statement  [FE]            AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  int  cols  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    parameters.length;    int  cols  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	127	None	add
294	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.get( "cost-evaluations ",  jacobianEvaluations);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.get( "cost-evaluations ",  jacobianEvaluations);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.get( "cost-evaluations ",  jacobianEvaluations);	  int    costEvaluations    =    parameters.get(   "cost-evaluations   ");    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
295	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.get( "cost-evaluations. ");  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.get( "cost-evaluations. ");  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.get( "cost-evaluations. ");	  int    costEvaluations    =    parameters.get(   "cost-evaluations   ");    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
296	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.length  -  3;  [CE]  missing  return  statement  [FE]        EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.length  -  3;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.length  -  3;	  int    costEvaluations    =    parameters.length    -    1;    	non-compiled	[CE]  missing  return  statement	56	None	replace
297	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  2  +  0;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  /  2  +  0;	  return    costEvaluations    *    2    +    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	95	1	replace
298	[BUG]  [BUGGY]  return  costEvaluations  /  2  +  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  2  +  0;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  /  2  +  0;	  return    costEvaluations    *    2    +    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	95	1	replace
299	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  /  0;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  *  2  /  0;	  return    costEvaluations    *    2    +    0;    	compilable	  [FE]  ArithmeticException  	95	12	replace
300	[BUG]  [BUGGY]  return  costEvaluations  *  2  /  0;  [FE]  ArithmeticException  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  /  0;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  *  2  /  0;	  return    costEvaluations    *    2    +    0;    	compilable	  [FE]  ArithmeticException  	95	12	replace
301	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(scales);  [CE]  cannot  find  symbol  scales  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations(scales);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(scales);	  int    costEvaluations    =    getMeanEvaluations(remainders);    	non-compiled	[CE]  cannot  find  symbol  scales	144	None	replace
302	[BUG]  [BUGGY]  int  parameters.length  =  parameters.length;  [CE]  ';'  expected  [FE]            EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  parameters.length  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  parameters.length  =  parameters.length;	  return    parameters.length;    int    parameters.length    =    parameters.length;    	non-compiled	[CE]  ';'  expected	117	None	replace
303	[BUG]  [BUGGY]  if(parameters!=  null)  {  return  parameters.length;  }  [CE]  missing  return  statement  [FE]              EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(parameters!=  null)  {  return  parameters.length;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(parameters!=  null)  {  return  parameters.length;  }	  return    parameters.length;    int    parameters.length    =    parameters.length;    	non-compiled	[CE]  missing  return  statement	117	None	replace
304	[BUG]  [BUGGY]  if(parameters  ==  null)  {  return  parameters.length;  }  [CE]  missing  return  statement  [FE]                EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(parameters  ==  null)  {  return  parameters.length;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(parameters  ==  null)  {  return  parameters.length;  }	  return    parameters.length;    int    parameters.length    =    parameters.length;    	non-compiled	[CE]  missing  return  statement	117	None	replace
305	[BUG]  [BUGGY]  return  parameters  *  jacobianEvaluations.length;  [CE]  int  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters  *  jacobianEvaluations.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  *  jacobianEvaluations.length;	  return    parameters    *    costEvaluations.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	104	None	replace
306	[BUG]  [BUGGY]  return  parameters  *  maxCostEvaluations.length;  [CE]  cannot  find  symbol  maxCostEvaluations  [FE]          AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters  *  maxCostEvaluations.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  *  maxCostEvaluations.length;	  return    parameters    *    costEvaluations.length;    	non-compiled	[CE]  cannot  find  symbol  maxCostEvaluations	104	None	replace
307	[BUG]  [BUGGY]  return  this.costEvaluations.length;  [CE]  int  cannot  be  dereferenced  [FE]              EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations.length;	  return    this.resultEvaluations.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	24	None	replace
308	[BUG]  [BUGGY]  return  this.resultEvaluations.length  -  1;  [CE]  cannot  find  symbol  resultEvaluations  [FE]                EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.resultEvaluations.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.resultEvaluations.length  -  1;	  return    this.resultEvaluations.length;    	non-compiled	[CE]  cannot  find  symbol  resultEvaluations	24	None	replace
309	[BUG]  [BUGGY]  return  parameters.length  +  1;  int  cols  =  parameters.length;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  +  1;  int  cols  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    +    1;    int  cols  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	118	None	add
310	[BUG]  [BUGGY]  return  parameters.length  +  1;  int  maxCostEval  =  parameters.length  +  1;  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  +  1;  int  maxCostEval  =  parameters.length  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    +    1;    int  maxCostEval  =  parameters.length  +  1;	  	non-compiled	[CE]  unreachable  statement	118	None	add
311	[BUG]  [BUGGY]  return  parameters.length  +  1;  int  maxCostEval  =  parameters.length;  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  +  1;  int  maxCostEval  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    +    1;    int  maxCostEval  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	118	None	add
312	[BUG]  [BUGGY]  return  parameters.length  +  1;  int  cols  =  parameters.length  +  1;  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  +  1;  int  cols  =  parameters.length  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    +    1;    int  cols  =  parameters.length  +  1;	  	non-compiled	[CE]  unreachable  statement	118	None	add
313	[BUG]  [BUGGY]  return  parameters.length  +  1;  int  maxCostEval  =  parameters.length  +  2;  [CE]  unreachable  statement  [FE]            AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  +  1;  int  maxCostEval  =  parameters.length  +  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    +    1;    int  maxCostEval  =  parameters.length  +  2;	  	non-compiled	[CE]  unreachable  statement	118	None	add
314	[BUG]  [BUGGY]  return  parameters  *  maxCostEvaluations;  [CE]  cannot  find  symbol  maxCostEvaluations  [FE]            AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters  *  maxCostEvaluations;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  *  maxCostEvaluations;	  return    parameters    *    costEvaluations;    	non-compiled	[CE]  cannot  find  symbol  maxCostEvaluations	106	None	replace
315	[BUG]  [BUGGY]  return  parameters  *  maxCostEval;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]              AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters  *  maxCostEval;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  *  maxCostEval;	  return    parameters    *    costEvaluations;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	106	None	replace
316	[BUG]  [BUGGY]  return  parameters  *  jacobianEvaluations;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters  *  jacobianEvaluations;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  *  jacobianEvaluations;	  return    parameters    *    costEvaluations;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	106	None	replace
317	[BUG]  [BUGGY]  return  this.costEvaluations  +  1;  int  costEvaluations  =  this.costEvaluations  +  1;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  +  1;  int  costEvaluations  =  this.costEvaluations  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    +    1;    int  costEvaluations  =  this.costEvaluations  +  1;	  	non-compiled	[CE]  unreachable  statement	50	None	add
318	[BUG]  [BUGGY]  return  this.costEvaluations  +  1;  int  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  +  1;  int  costEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    +    1;    int  costEvaluations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	50	None	add
319	[BUG]  [BUGGY]  return  this.costEvaluations  +  1;  int  costEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  +  1;  int  costEvaluations  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    +    1;    int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	50	None	add
320	[BUG]  [BUGGY]  return  this.costEvaluations  +  1;  int  costEvaluations  =  getCostEvaluations();  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  +  1;  int  costEvaluations  =  getCostEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    +    1;    int  costEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  unreachable  statement	50	None	add
321	[BUG]  [BUGGY]  return  this.costEvaluations  +  1;  this.costEvaluations  +  1;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  +  1;  this.costEvaluations  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    +    1;    this.costEvaluations  +  1;	  	non-compiled	[CE]  not  a  statement	50	None	add
322	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[	  for(int    i    =    0;    i    <    parameters.length;    ++i)    {    EstimatedParameter[]    parameters    =    parameters[i].getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
323	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  }  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  }	  for(int    i    =    0;    i    <    parameters.length;    ++i)    {    EstimatedParameter[]    parameters    =    parameters[i].getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    	non-compiled	[CE]  not  a  statement	135	None	replace
324	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]	  for(int    i    =    0;    i    <    parameters.length;    ++i)    {    EstimatedParameter[]    parameters    =    parameters[i].getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    	non-compiled	[CE]  not  a  statement	135	None	replace
325	[BUG]  [BUGGY]  return  parameters.length  *  costEvaluations;  int  costEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  costEvaluations;  int  costEvaluations  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    *    costEvaluations;    int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	64	None	add
326	[BUG]  [BUGGY]  return  parameters.length  *  costEvaluations;  int  cols  =  parameters.length;  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  costEvaluations;  int  cols  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    *    costEvaluations;    int  cols  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	64	None	add
327	[BUG]  [BUGGY]  return  parameters.length  *  costEvaluations;  int  costEvaluations  =  parameters.length  -  costEvaluations;  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  costEvaluations;  int  costEvaluations  =  parameters.length  -  costEvaluations;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    *    costEvaluations;    int  costEvaluations  =  parameters.length  -  costEvaluations;	  	non-compiled	[CE]  unreachable  statement	64	None	add
328	[BUG]  [BUGGY]  return  parameters.length  *  costEvaluations;  int  maxCostEval  =  parameters.length;  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  costEvaluations;  int  maxCostEval  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    *    costEvaluations;    int  maxCostEval  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	64	None	add
329	[BUG]  [BUGGY]  return  parameters.length  *  costEvaluations;  int  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  costEvaluations;  int  costEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    *    costEvaluations;    int  costEvaluations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	64	None	add
330	[BUG]  [BUGGY]  return  this.costEvaluations  -  2;  int  costEvaluations  =  this.costEvaluations  -  2;  [CE]  unreachable  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  -  2;  int  costEvaluations  =  this.costEvaluations  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    -    2;    int  costEvaluations  =  this.costEvaluations  -  2;	  	non-compiled	[CE]  unreachable  statement	125	None	add
331	[BUG]  [BUGGY]  return  this.costEvaluations  -  2;  this.costEvaluations  -  2;  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  -  2;  this.costEvaluations  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    -    2;    this.costEvaluations  -  2;	  	non-compiled	[CE]  not  a  statement	125	None	add
332	[BUG]  [BUGGY]  return  this.costEvaluations  -  2;  int  costEvaluations  =  getCostEvaluations();  [CE]  unreachable  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  -  2;  int  costEvaluations  =  getCostEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    -    2;    int  costEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  unreachable  statement	125	None	add
333	[BUG]  [BUGGY]  return  this.costEvaluations  -  2;  int  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  -  2;  int  costEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    -    2;    int  costEvaluations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	125	None	add
334	[BUG]  [BUGGY]  return  this.costEvaluations  -  2;  int  costEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  -  2;  int  costEvaluations  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    -    2;    int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	125	None	add
335	[BUG]  [BUGGY]  return  this.costEvaluations  *  2;  int  costEvaluations  =  this.costEvaluations  *  2;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  2;  int  costEvaluations  =  this.costEvaluations  *  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    *    2;    int  costEvaluations  =  this.costEvaluations  *  2;	  	non-compiled	[CE]  unreachable  statement	52	None	add
336	[BUG]  [BUGGY]  return  this.costEvaluations  *  2;  int  costEvaluations  =  getCostEvaluations();  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  2;  int  costEvaluations  =  getCostEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    *    2;    int  costEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  unreachable  statement	52	None	add
337	[BUG]  [BUGGY]  return  this.costEvaluations  *  2;  int  costEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  2;  int  costEvaluations  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    *    2;    int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	52	None	add
338	[BUG]  [BUGGY]  return  this.costEvaluations  *  2;  int  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  2;  int  costEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    *    2;    int  costEvaluations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
339	[BUG]  [BUGGY]  return  this.costEvaluations  *  2;  this.costEvaluations  *  2;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  2;  this.costEvaluations  *  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    *    2;    this.costEvaluations  *  2;	  	non-compiled	[CE]  not  a  statement	52	None	add
340	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  /  2  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  this.costEvaluations  /  2  +  1;	  return    this.costEvaluations    /    2;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	55	1	replace
341	[BUG]  [BUGGY]  return  this.costEvaluations  /  2  +  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  /  2  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations  /  2  +  1;	  return    this.costEvaluations    /    2;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	55	1	replace
342	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]  }	  for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    EstimatedParameter[]    parameters    =    parameters[i];    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i]    	non-compiled	[CE]  ';'  expected	46	None	replace
343	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[	  for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    EstimatedParameter[]    parameters    =    parameters[i];    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i]    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
344	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[	  for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    EstimatedParameter[]    parameters    =    parameters[i];    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i]    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
345	[BUG]  [BUGGY]  int  maxCostEvalations  =  parameters.length;  [CE]  missing  return  statement  [FE]        EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  maxCostEvalations  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  maxCostEvalations  =  parameters.length;	  return    parameters.length;    int    maxCostEvalations    =    parameters.length;    	non-compiled	[CE]  missing  return  statement	138	None	replace
346	[BUG]  [BUGGY]  int  maxCostEvalations  =  parameters.length  -  1;  [CE]  missing  return  statement  [FE]          EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  maxCostEvalations  =  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  maxCostEvalations  =  parameters.length  -  1;	  return    parameters.length;    int    maxCostEvalations    =    parameters.length;    	non-compiled	[CE]  missing  return  statement	138	None	replace
347	[BUG]  [BUGGY]  Int  costEvaluations  =  parameters.length;  [CE]  cannot  find  symbol  [FE]            EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  Int  costEvaluations  =  parameters.length;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	Int  costEvaluations  =  parameters.length;	          int    costEvaluations    =    parameters.length;    Int    costEvaluations    =    parameters.length;    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
348	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  +  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  +  2;	  return    costEvaluations    -    2;    	compilable	  [FE]  AssertionFailedError  	84	2	replace
349	[BUG]  [BUGGY]  return  costEvaluations  +  2;  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  +  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  +  2;	  return    costEvaluations    -    2;    	compilable	  [FE]  AssertionFailedError  	84	2	replace
350	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }  [CE]  missing  return  statement  [FE]            EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  missing  return  statement	6	None	replace
351	[BUG]  [BUGGY]  int  cols  =  parameters.length;  if(parameters!=  null)  {  for(int  i  =  0;  i  <  cols;  ++i)  {  parameters[i]  =  parameters[i];  }  [CE]  illegal  start  of  expression  [FE]              EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  cols  =  parameters.length;  if(parameters!=  null)  {  for(int  i  =  0;  i  <  cols;  ++i)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  cols  =  parameters.length;  if(parameters!=  null)  {  for(int  i  =  0;  i  <  cols;  ++i)  {  parameters[i]  =  parameters[i];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
352	[BUG]  [BUGGY]  int  cols  =  parameters.length;  if(cols!=  null)  {  for(int  i  =  0;  i  <  cols;  ++i)  {  parameters[i]  =  parameters[i];  }  [CE]  illegal  start  of  expression  [FE]                EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  cols  =  parameters.length;  if(cols!=  null)  {  for(int  i  =  0;  i  <  cols;  ++i)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  cols  =  parameters.length;  if(cols!=  null)  {  for(int  i  =  0;  i  <  cols;  ++i)  {  parameters[i]  =  parameters[i];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
353	[BUG]  [BUGGY]  int  cols  =  parameters.length;  if(remainings!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }  [CE]  illegal  start  of  expression  [FE]                  EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  cols  =  parameters.length;  if(remainings!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  cols  =  parameters.length;  if(remainings!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
354	[BUG]  [BUGGY]  int  costEvaluations  *  parameters.length;  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  *  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  *  parameters.length;	  return    costEvaluations    *    parameters.length;    int    costEvaluations    *    parameters.length;    	non-compiled	[CE]  ';'  expected	60	None	replace
355	[BUG]  [BUGGY]  int  costEvaluations  /  parameters.length;  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  /  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  /  parameters.length;	  return    costEvaluations    *    parameters.length;    int    costEvaluations    *    parameters.length;    	non-compiled	[CE]  ';'  expected	60	None	replace
356	[BUG]  [BUGGY]  if(parameters!=  null)  {  return  this.costEvaluations;  int  costEvaluations  =  parameters.length;  }  else  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(parameters!=  null)  {  return  this.costEvaluations;  int  costEvaluations  =  parameters.length;  }  else  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(parameters!=  null)  {  return  this.costEvaluations;  int  costEvaluations  =  parameters.length;  }  else  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }	  return    this.costEvaluations;    int    costEvaluations    =    parameters.length;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
357	[BUG]  [BUGGY]  if(parameters!=  null)  {  return  this.costEvaluations;  int  costEvaluations  =  parameters.length;  }  [CE]  unreachable  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(parameters!=  null)  {  return  this.costEvaluations;  int  costEvaluations  =  parameters.length;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(parameters!=  null)  {  return  this.costEvaluations;  int  costEvaluations  =  parameters.length;  }	  return    this.costEvaluations;    int    costEvaluations    =    parameters.length;    	non-compiled	[CE]  unreachable  statement	44	None	replace
358	[BUG]  [BUGGY]  if(parameters!=  null)  {  return  this.costEvaluations;  int  costEvaluations  =  parameters.length;  }  else  {  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  parameters[i];  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(parameters!=  null)  {  return  this.costEvaluations;  int  costEvaluations  =  parameters.length;  }  else  {  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(parameters!=  null)  {  return  this.costEvaluations;  int  costEvaluations  =  parameters.length;  }  else  {  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  parameters[i];  }	  return    this.costEvaluations;    int    costEvaluations    =    parameters.length;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
359	[BUG]  [BUGGY]  int  costEvaluations  =  0;  Integer  costEvaluations  =  0;  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]              AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  0;  Integer  costEvaluations  =  0;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  0;  Integer  costEvaluations  =  0;	  return    costEvaluations    *    2;    Integer    costEvaluations    *    2;    	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	101	None	replace
360	[BUG]  [BUGGY]  int  costEvaluations  =  getCostEvaluations();  Integer  costEvaluations  =  0;  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]                AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getCostEvaluations();  Integer  costEvaluations  =  0;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getCostEvaluations();  Integer  costEvaluations  =  0;	  return    costEvaluations    *    2;    Integer    costEvaluations    *    2;    	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	101	None	replace
361	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.get( "cost ",  cols);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.get( "cost ",  cols);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.get( "cost ",  cols);	  int    costEvaluations    =    parameters.get(   "cost   ",    jacobianEvaluations);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
362	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.get( "cost ", "cocobianEvaluations ");  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.get( "cost ", "cocobianEvaluations ");  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.get( "cost ", "cocobianEvaluations ");	  int    costEvaluations    =    parameters.get(   "cost   ",    jacobianEvaluations);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
363	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {	  for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
364	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i	  for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    	non-compiled	[CE]  ']'  expected	45	None	replace
365	[BUG]  [BUGGY]          int    costEvaluations    =    getCostEvaluations();    int  costsEvaluations  =  getCostEvaluations();  int  costEvaluations  =  getCostEvaluations();  int  costsEvaluations  =  getCostEvaluations();  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]    StackOverflowError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]          int    costEvaluations    =    getCostEvaluations();    int  costsEvaluations  =  getCostEvaluations();  int  costEvaluations  =  getCostEvaluations();  int  costsEvaluations  =  getCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	                int        costEvaluations        =        getCostEvaluations();        int    costsEvaluations    =    getCostEvaluations();    int  costEvaluations  =  getCostEvaluations();  int  costsEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	74	None	add
366	[BUG]  [BUGGY]          int    costEvaluations    =    getCostEvaluations();    int  costsEvaluations  =  getCostEvaluations();  Integer  costEvaluations  =  getCostEvaluations();  int  costsEvaluations  =  getCostEvaluations();  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]      StackOverflowError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]          int    costEvaluations    =    getCostEvaluations();    int  costsEvaluations  =  getCostEvaluations();  Integer  costEvaluations  =  getCostEvaluations();  int  costsEvaluations  =  getCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	                int        costEvaluations        =        getCostEvaluations();        int    costsEvaluations    =    getCostEvaluations();    Integer  costEvaluations  =  getCostEvaluations();  int  costsEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	74	None	add
367	[BUG]  [BUGGY]          int    costEvaluations    =    getCostEvaluations();    int  costsEvaluations  =  getCostEvaluations();  int  costEvaluations  =  getCostEvaluations();  int  ratesEvaluations  =  getCostEvaluations();  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]        StackOverflowError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]          int    costEvaluations    =    getCostEvaluations();    int  costsEvaluations  =  getCostEvaluations();  int  costEvaluations  =  getCostEvaluations();  int  ratesEvaluations  =  getCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	                int        costEvaluations        =        getCostEvaluations();        int    costsEvaluations    =    getCostEvaluations();    int  costEvaluations  =  getCostEvaluations();  int  ratesEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	74	None	add
368	[BUG]  [BUGGY]          int    costEvaluations    =    getCostEvaluations();    int  costsEvaluations  =  getCostEvaluations();  int  costEvaluations  =  getCostEvaluations();  int  pricesEvaluations  =  getCostEvaluations();  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]          StackOverflowError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]          int    costEvaluations    =    getCostEvaluations();    int  costsEvaluations  =  getCostEvaluations();  int  costEvaluations  =  getCostEvaluations();  int  pricesEvaluations  =  getCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	                int        costEvaluations        =        getCostEvaluations();        int    costsEvaluations    =    getCostEvaluations();    int  costEvaluations  =  getCostEvaluations();  int  pricesEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	74	None	add
369	[BUG]  [BUGGY]  int  costEvaluations  =  getCostEvaluations(maxCostEval,  parameters);  [CE]  method  getCostEvaluations  in  class  AbstractEstimator  cannot  be  applied  to  given  types;  [FE]        StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getCostEvaluations(maxCostEval,  parameters);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getCostEvaluations(maxCostEval,  parameters);	  int    costEvaluations    =    getCostEvaluations(maxCostEval);    	non-compiled	[CE]  method  getCostEvaluations  in  class  AbstractEstimator  cannot  be  applied  to  given  types;	142	None	replace
370	[BUG]  [BUGGY]  int  costEvaluations  =  getCostEvaluations(remainings,  maxCostEval);  [CE]  cannot  find  symbol  remainings  [FE]          StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getCostEvaluations(remainings,  maxCostEval);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getCostEvaluations(remainings,  maxCostEval);	  int    costEvaluations    =    getCostEvaluations(maxCostEval);    	non-compiled	[CE]  cannot  find  symbol  remainings	142	None	replace
371	[BUG]  [BUGGY]  int  costEvaluations  =  getCostEvaluations(parameters,  maxCostEval);  [CE]  method  getCostEvaluations  in  class  AbstractEstimator  cannot  be  applied  to  given  types;  [FE]            StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getCostEvaluations(parameters,  maxCostEval);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getCostEvaluations(parameters,  maxCostEval);	  int    costEvaluations    =    getCostEvaluations(maxCostEval);    	non-compiled	[CE]  method  getCostEvaluations  in  class  AbstractEstimator  cannot  be  applied  to  given  types;	142	None	replace
372	[BUG]  [BUGGY]  int  costEvaluations  =  getCostEvaluations(variables,  maxCostEval);  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getCostEvaluations(variables,  maxCostEval);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getCostEvaluations(variables,  maxCostEval);	  int    costEvaluations    =    getCostEvaluations(maxCostEval);    	non-compiled	[CE]  cannot  find  symbol  	142	None	replace
373	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.length  /  2;  [CE]  missing  return  statement  [FE]          EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.length  /  2;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.length  /  2;	  int    costEvaluations    =    parameters.length    -    2;    	non-compiled	[CE]  missing  return  statement	57	None	replace
374	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  parameters[i];  }  [CE]  missing  return  statement  [FE]              EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  parameters[i];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0;    i    <    parameters.length;    i++)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  missing  return  statement	7	None	replace
375	[BUG]  [BUGGY]  int  cols  =  parameters.length;  if(remainings!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  parameters[i];  }  [CE]  illegal  start  of  expression  [FE]                EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  cols  =  parameters.length;  if(remainings!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  cols  =  parameters.length;  if(remainings!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  parameters[i];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0;    i    <    parameters.length;    i++)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
376	[BUG]  [BUGGY]  int  cols  =  parameters.length;  if(cols!=  null)  {  for(int  i  =  0;  i  <  cols;  i++)  {  parameters[i]  =  parameters[i];  }  [CE]  illegal  start  of  expression  [FE]                  EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  cols  =  parameters.length;  if(cols!=  null)  {  for(int  i  =  0;  i  <  cols;  i++)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  cols  =  parameters.length;  if(cols!=  null)  {  for(int  i  =  0;  i  <  cols;  i++)  {  parameters[i]  =  parameters[i];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0;    i    <    parameters.length;    i++)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
377	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  this.costEvaluations  *  parameters.length  -  1;	  return    this.costEvaluations    *    parameters.length;    	compilable	  [FE]  AssertionFailedError  	141	2	replace
378	[BUG]  [BUGGY]  return  this.costEvaluations  *  parameters.length  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations  *  parameters.length  -  1;	  return    this.costEvaluations    *    parameters.length;    	compilable	  [FE]  AssertionFailedError  	141	2	replace
379	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  parameters.length  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  this.costEvaluations  *  parameters.length  +  1;	  return    this.costEvaluations    *    parameters.length;    	compilable	  [FE]  AssertionFailedError  	141	2	replace
380	[BUG]  [BUGGY]  return  this.costEvaluations  *  parameters.length  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  parameters.length  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations  *  parameters.length  +  1;	  return    this.costEvaluations    *    parameters.length;    	compilable	  [FE]  AssertionFailedError  	141	2	replace
381	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  /  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  this.costEvaluations  /  parameters.length;	  return    this.costEvaluations    *    parameters.length;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	141	1	replace
382	[BUG]  [BUGGY]  return  this.costEvaluations  /  parameters.length;  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  /  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations  /  parameters.length;	  return    this.costEvaluations    *    parameters.length;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	141	1	replace
383	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  parameters.length  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  this.costEvaluations  *  parameters.length  -  2;	  return    this.costEvaluations    *    parameters.length;    	compilable	  [FE]  AssertionFailedError  	141	2	replace
384	[BUG]  [BUGGY]  return  this.costEvaluations  *  parameters.length  -  2;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  parameters.length  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations  *  parameters.length  -  2;	  return    this.costEvaluations    *    parameters.length;    	compilable	  [FE]  AssertionFailedError  	141	2	replace
385	[BUG]  [BUGGY]  double  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  double  costEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	double  costEvaluations  =  parameters.size();	  return    costEvaluations    -    1;    int    costEvaluations    =    parameters.size();    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
386	[BUG]  [BUGGY]  int  costEvaluations  =  getMeasurements()  -  1;  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeasurements()  -  1;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeasurements()  -  1;	  int    costEvaluations    =    getMeasurements();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
387	[BUG]  [BUGGY]  int  costEvaluations  =  getRostEvaluations();  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getRostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getRostEvaluations();	          int    costEvaluations    =    getCostEvaluations();    int    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
388	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length  -  2;  int  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  parameters.length  -  2;  int  costEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    parameters.length    -    2;    int  costEvaluations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	70	None	add
389	[BUG]  [BUGGY]  long  costEvaluations  =  getCostEvaluations();  [CE]  missing  return  statement  [FE]            StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  long  costEvaluations  =  getCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	long  costEvaluations  =  getCostEvaluations();	          int    costEvaluations    =    getCostEvaluations();    double    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  missing  return  statement	150	None	replace
390	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.length;  Int  costEvaluations  =  parameter.length;  [CE]  cannot  find  symbol  [FE]            EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.length;  Int  costEvaluations  =  parameter.length;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.length;  Int  costEvaluations  =  parameter.length;	          int    costEvaluations    =    parameters.length;    Int    costEvaluations    =    parameters.length;    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
391	[BUG]  [BUGGY]  return  parameters  *  cost  -  2;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters  *  cost  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  *  cost  -  2;	  return    costEvaluations    *    parameters.length    -    2;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	71	None	replace
392	[BUG]  [BUGGY]  return  parameters  *  this.costEvaluations;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters  *  this.costEvaluations;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  *  this.costEvaluations;	  return    this.costEvaluations    *    parameters.length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	141	None	replace
393	[BUG]  [BUGGY]  return  this.results.length  -  2;  [CE]  cannot  find  symbol  results  [FE]            EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.results.length  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.results.length  -  2;	  return    this.results.length;    	non-compiled	[CE]  cannot  find  symbol  results	23	None	replace
394	[BUG]  [BUGGY]  int  parametersEvaluations  =  parameters.length;  [CE]  missing  return  statement  [FE]                EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  parametersEvaluations  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  parametersEvaluations  =  parameters.length;	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  missing  return  statement	8	None	replace
395	[BUG]  [BUGGY]  int  parametersEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]                  EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  parametersEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  parametersEvaluations  =  parameters.size();	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
396	[BUG]  [BUGGY]  int  parametersEval  =  parameters.size();  [CE]  cannot  find  symbol  [FE]          EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  parametersEval  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  parametersEval  =  parameters.size();	  return    parameters.length;    int    maxCostEval    =    parameters.size();    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
397	[BUG]  [BUGGY]  int  parameters  =  parameters.size();  [CE]  int  cannot  be  dereferenced  [FE]            EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  parameters  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  parameters  =  parameters.size();	  return    parameters.length;    int    maxCostEval    =    parameters.size();    	non-compiled	[CE]  int  cannot  be  dereferenced	116	None	replace
398	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i	  for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    EstimatedParameter[]    parameters    =    parameters[i];    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i]    	non-compiled	[CE]  ']'  expected	46	None	replace
399	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]	  for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    EstimatedParameter[]    parameters    =    parameters[i];    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i]    	non-compiled	[CE]  ';'  expected	46	None	replace
400	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.get( "cost-evaluations, ");  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.get( "cost-evaluations, ");  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.get( "cost-evaluations, ");	  int    costEvaluations    =    parameters.get(   "cost-evaluations   ");    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
401	[BUG]  [BUGGY]  if(this.costEvaluations!=  costEvaluations)  {  return  this.costEvaluations;  costEvaluations  =  this.costEvaluations.size();  }  [CE]  int  cannot  be  dereferenced  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(this.costEvaluations!=  costEvaluations)  {  return  this.costEvaluations;  costEvaluations  =  this.costEvaluations.size();  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(this.costEvaluations!=  costEvaluations)  {  return  this.costEvaluations;  costEvaluations  =  this.costEvaluations.size();  }	  return    this.costEvaluations;    int    costEvaluations    =    this.costEvaluations.size();    	non-compiled	[CE]  int  cannot  be  dereferenced	111	None	replace
402	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.size();  Integer  costEvaluations  =  parameters.get(costEvaluations);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.size();  Integer  costEvaluations  =  parameters.get(costEvaluations);  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.size();  Integer  costEvaluations  =  parameters.get(costEvaluations);	  return    costEvaluations    *    2;    Integer    costEvaluations    *    2;    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
403	[BUG]  [BUGGY]  int  costEvaluations  =  0;  Integer  costEvaluations  *  2;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  0;  Integer  costEvaluations  *  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  0;  Integer  costEvaluations  *  2;	  return    costEvaluations    *    2;    Integer    costEvaluations    *    2;    	non-compiled	[CE]  ';'  expected	101	None	replace
404	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.getStandardMeasures();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.getStandardMeasures();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.getStandardMeasures();	  int    costEvaluations    =    parameters.getMeasures();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
405	[BUG]  [BUGGY]  int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    	non-compiled	[CE]  ';'  expected	17	None	replace
406	[BUG]  [BUGGY]  int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    	non-compiled	[CE]  <identifier>  expected	17	None	replace
407	[BUG]  [BUGGY]  return  this.costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
408	[BUG]  [BUGGY]  int  costEvaluations  =  cost.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  cost.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  cost.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameters[i].getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    measurements[i]    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
409	[BUG]  [BUGGY]  return  this.costEvaluations  /  2;  int  costEvaluations  =  this.costEvaluations  *  parameters.length;  [CE]  unreachable  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  /  2;  int  costEvaluations  =  this.costEvaluations  *  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    /    2;    int  costEvaluations  =  this.costEvaluations  *  parameters.length;	  	non-compiled	[CE]  unreachable  statement	54	None	add
410	[BUG]  [BUGGY]  return  costEvaluations  *  2  -  1;  int  costEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  -  1;  int  costEvaluations  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    -    1;    int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	96	None	add
411	[BUG]  [BUGGY]  return  costEvaluations  *  2  -  1;  int  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  -  1;  int  costEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    -    1;    int  costEvaluations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	96	None	add
412	[BUG]  [BUGGY]  return  costEvaluations  *  2  -  1;  Integer  costEvaluations  *  2  -  1;  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  -  1;  Integer  costEvaluations  *  2  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    -    1;    Integer  costEvaluations  *  2  -  1;	  	non-compiled	[CE]  ';'  expected	96	None	add
413	[BUG]  [BUGGY]  return  costEvaluations  *  2  -  1;  int  costEvaluations  =  Math.min(  costEvaluations  *  2  -  1);  [CE]  no  suitable  method  found  for  min(int)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  -  1;  int  costEvaluations  =  Math.min(  costEvaluations  *  2  -  1);  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    -    1;    int  costEvaluations  =  Math.min(  costEvaluations  *  2  -  1);	  	non-compiled	[CE]  no  suitable  method  found  for  min(int)	96	None	add
414	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  parameters[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  parameters[  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  parameters[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  parameters[  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  parameters[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  parameters[	  for(int    i    =    0;    i    <    parameters.length;    ++i)    {    EstimatedMeasurement[]    measurements[i]    =    parameters[i].getCostEvaluations();    for(int    cols    =    0;    cols    <    measurements.length;    cols++)    {    parameters[    	non-compiled	[CE]  ']'  expected	134	None	replace
415	[BUG]  [BUGGY]  return  this.costEvaluations  +  1;  int  costEvaluations  =  this.costEvaluations  +  2;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  +  1;  int  costEvaluations  =  this.costEvaluations  +  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    +    1;    int  costEvaluations  =  this.costEvaluations  +  2;	  	non-compiled	[CE]  unreachable  statement	50	None	add
416	[BUG]  [BUGGY]  return  parameters  *  cost  -  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters  *  cost  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  *  cost  -  1;	  return    costEvaluations    *    parameters.length    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	67	None	replace
417	[BUG]  [BUGGY]  return  parameters  *  cost.length  -  1;  [CE]  double  cannot  be  dereferenced  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters  *  cost.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  *  cost.length  -  1;	  return    costEvaluations    *    parameters.length    -    1;    	non-compiled	[CE]  double  cannot  be  dereferenced	67	None	replace
418	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  1;  int  costEvaluations  *  2;  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  1;  int  costEvaluations  *  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  *  2  +  1;  int  costEvaluations  *  2;	  return    costEvaluations    *    2;    int    costEvaluations    *    2;    	non-compiled	[CE]  ';'  expected	14	None	replace
419	[BUG]  [BUGGY]  return  parameters  /  costEvaluations.length;  [CE]  int  cannot  be  dereferenced  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters  /  costEvaluations.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  /  costEvaluations.length;	  return    costEvaluations    /    parameters.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	69	None	replace
420	[BUG]  [BUGGY]  return  costEvaluations  *  1;  int  costEvaluations  *  2;  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  1;  int  costEvaluations  *  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    1;    int  costEvaluations  *  2;	  	non-compiled	[CE]  ';'  expected	81	None	add
421	[BUG]  [BUGGY]  return  costEvaluations  *  1;  int  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  1;  int  costEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    1;    int  costEvaluations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	81	None	add
422	[BUG]  [BUGGY]  return  costEvaluations  *  1;  int  costEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  1;  int  costEvaluations  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    1;    int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	81	None	add
423	[BUG]  [BUGGY]  return  this.costEvaluations  -  1;  int  costEvaluations  =  this.costEvaluations  -  2;  [CE]  unreachable  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  -  1;  int  costEvaluations  =  this.costEvaluations  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    -    1;    int  costEvaluations  =  this.costEvaluations  -  2;	  	non-compiled	[CE]  unreachable  statement	48	None	add
424	[BUG]  [BUGGY]  if(this.costEvaluations!=  parameters.length)  {  return  this.costEvaluations;  int  costEvaluations  =  parameters.length;  }  else  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(this.costEvaluations!=  parameters.length)  {  return  this.costEvaluations;  int  costEvaluations  =  parameters.length;  }  else  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(this.costEvaluations!=  parameters.length)  {  return  this.costEvaluations;  int  costEvaluations  =  parameters.length;  }  else  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }	  return    this.costEvaluations;    int    costEvaluations    =    parameters.length;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
425	[BUG]  [BUGGY]  if(this.costEvaluations!=  parameters.length)  {  return  this.costEvaluations;  costEvaluations  =  parameters.length;  }  else  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(this.costEvaluations!=  parameters.length)  {  return  this.costEvaluations;  costEvaluations  =  parameters.length;  }  else  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(this.costEvaluations!=  parameters.length)  {  return  this.costEvaluations;  costEvaluations  =  parameters.length;  }  else  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }	  return    this.costEvaluations;    int    costEvaluations    =    parameters.length;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
426	[BUG]  [BUGGY]  if(this.costEvaluations!=  parameters.length)  {  return  this.costEvaluations;  costEvaluations  =  parameters.length;  }  [CE]  unreachable  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(this.costEvaluations!=  parameters.length)  {  return  this.costEvaluations;  costEvaluations  =  parameters.length;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(this.costEvaluations!=  parameters.length)  {  return  this.costEvaluations;  costEvaluations  =  parameters.length;  }	  return    this.costEvaluations;    int    costEvaluations    =    parameters.length;    	non-compiled	[CE]  unreachable  statement	44	None	replace
427	[BUG]  [BUGGY]  return  this.costEvaluations  *  parameters.length;  int  maxCostEval  =  parameters.length  -  1;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  parameters.length;  int  maxCostEval  =  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    *    parameters.length;    int  maxCostEval  =  parameters.length  -  1;	  	non-compiled	[CE]  unreachable  statement	140	None	add
428	[BUG]  [BUGGY]  return  costEvaluations  /  1;  int  costEvaluations  /  2  =  parameters.length;  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  1;  int  costEvaluations  /  2  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    /    1;    int  costEvaluations  /  2  =  parameters.length;	  	non-compiled	[CE]  ';'  expected	79	None	add
429	[BUG]  [BUGGY]  if(this.costEvaluations!=  costEvaluations)  {  return  this.costEvaluations;  costEvaluations  =  this.costEvaluations.length;  }  [CE]  int  cannot  be  dereferenced  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(this.costEvaluations!=  costEvaluations)  {  return  this.costEvaluations;  costEvaluations  =  this.costEvaluations.length;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(this.costEvaluations!=  costEvaluations)  {  return  this.costEvaluations;  costEvaluations  =  this.costEvaluations.length;  }	  return    this.costEvaluations;    int    costEvaluations    =    this.costEvaluations.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	112	None	replace
430	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(results,  jacobianEvaluations);  [CE]  cannot  find  symbol  results  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations(results,  jacobianEvaluations);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(results,  jacobianEvaluations);	  int    costEvaluations    =    getMeanEvaluations(    jacobianEvaluations);    	non-compiled	[CE]  cannot  find  symbol  results	30	None	replace
431	[BUG]  [BUGGY]  for(int  costEvaluations  =  parameters.size();  costEvaluations  >=  0;)  {  if(costEvaluations  >  maxCostEval)  {  return  this.costEvaluations;  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  costEvaluations  =  parameters.size();  costEvaluations  >=  0;)  {  if(costEvaluations  >  maxCostEval)  {  return  this.costEvaluations;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  costEvaluations  =  parameters.size();  costEvaluations  >=  0;)  {  if(costEvaluations  >  maxCostEval)  {  return  this.costEvaluations;  }	  return    this.costEvaluations;    int    costEvaluations    =    parameters.size();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
432	[BUG]  [BUGGY]  for(int  costEvaluations  =  parameters.size();  costEvaluations  >=  0;)  {  if(this.costEvaluations  >  costEvaluations)  {  return  costEvaluations;  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  costEvaluations  =  parameters.size();  costEvaluations  >=  0;)  {  if(this.costEvaluations  >  costEvaluations)  {  return  costEvaluations;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  costEvaluations  =  parameters.size();  costEvaluations  >=  0;)  {  if(this.costEvaluations  >  costEvaluations)  {  return  costEvaluations;  }	  return    this.costEvaluations;    int    costEvaluations    =    parameters.size();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
433	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.length  *  2;  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.length  *  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.length  *  2;	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameters[i].getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    costEvaluations    	non-compiled	[CE]  missing  return  statement	131	None	replace
434	[BUG]  [BUGGY]  return  parameters  *  2;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters  *  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  *  2;	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameters[i].getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    costEvaluations    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	131	None	replace
435	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  1;  int  costEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  1;  int  costEvaluations  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    1;    int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	92	None	add
436	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  1;  int  costEvaluations  =  getCostEvaluations().length;  [CE]  int  cannot  be  dereferenced  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  1;  int  costEvaluations  =  getCostEvaluations().length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    1;    int  costEvaluations  =  getCostEvaluations().length;	  	non-compiled	[CE]  int  cannot  be  dereferenced	92	None	add
437	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(methods,  maxCostEval);  [CE]  cannot  find  symbol  methods  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations(methods,  maxCostEval);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(methods,  maxCostEval);	  int    costEvaluations    =    getMeanEvaluations(maxCostEval,    parameters);    	non-compiled	[CE]  cannot  find  symbol  methods	28	None	replace
438	[BUG]  [BUGGY]  if(parameters!=  null)  {  return  parameters.length;  int  parameters  =  parameters.length;  }  else  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }  [CE]  illegal  start  of  expression  [FE]        EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(parameters!=  null)  {  return  parameters.length;  int  parameters  =  parameters.length;  }  else  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(parameters!=  null)  {  return  parameters.length;  int  parameters  =  parameters.length;  }  else  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }	  return    parameters.length;    int    parameters    =    parameters.length;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
439	[BUG]  [BUGGY]  if(parameters!=  null)  {  return  parameters.length;  int  parameters  =  parameters.length;  }  else  {  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  parameters[i];  }  [CE]  illegal  start  of  expression  [FE]          EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(parameters!=  null)  {  return  parameters.length;  int  parameters  =  parameters.length;  }  else  {  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(parameters!=  null)  {  return  parameters.length;  int  parameters  =  parameters.length;  }  else  {  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  parameters[i];  }	  return    parameters.length;    int    parameters    =    parameters.length;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
440	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(measures);  [CE]  cannot  find  symbol  measures  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations(measures);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(measures);	  int    costEvaluations    =    getMeanEvaluations(remainders);    	non-compiled	[CE]  cannot  find  symbol  measures	144	None	replace
441	[BUG]  [BUGGY]  for(int  costEvaluations  =  parameters.length  -  1;  costEvaluations  >=  0;  costEvaluations++)  {  if(parameters[costEvaluations]!=  null)  {  return  costEvaluations  *  parameters.length;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  costEvaluations  =  parameters.length  -  1;  costEvaluations  >=  0;  costEvaluations++)  {  if(parameters[costEvaluations]!=  null)  {  return  costEvaluations  *  parameters.length;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  costEvaluations  =  parameters.length  -  1;  costEvaluations  >=  0;  costEvaluations++)  {  if(parameters[costEvaluations]!=  null)  {  return  costEvaluations  *  parameters.length;  }	  return    costEvaluations    *    parameters.length;    int    costEvaluations    =    parameters.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
442	[BUG]  [BUGGY]  for(int  costEvaluations  =  parameters.length  -  1;  costEvaluations  >=  0;  costEvaluations++)  {  if(parameters[costEvaluations]!=  null)  {  return  costEvaluations  *  parameters.length  -  1;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  costEvaluations  =  parameters.length  -  1;  costEvaluations  >=  0;  costEvaluations++)  {  if(parameters[costEvaluations]!=  null)  {  return  costEvaluations  *  parameters.length  -  1;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  costEvaluations  =  parameters.length  -  1;  costEvaluations  >=  0;  costEvaluations++)  {  if(parameters[costEvaluations]!=  null)  {  return  costEvaluations  *  parameters.length  -  1;  }	  return    costEvaluations    *    parameters.length;    int    costEvaluations    =    parameters.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
443	[BUG]  [BUGGY]  for(int  costEvaluations  =  parameters.length  -  1;  costEvaluations  >=  0;  costEvaluations++)  {  if(parameters[costEvaluations]  ==  null)  {  return  costEvaluations  *  parameters.length;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  costEvaluations  =  parameters.length  -  1;  costEvaluations  >=  0;  costEvaluations++)  {  if(parameters[costEvaluations]  ==  null)  {  return  costEvaluations  *  parameters.length;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  costEvaluations  =  parameters.length  -  1;  costEvaluations  >=  0;  costEvaluations++)  {  if(parameters[costEvaluations]  ==  null)  {  return  costEvaluations  *  parameters.length;  }	  return    costEvaluations    *    parameters.length;    int    costEvaluations    =    parameters.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
444	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations().size;  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations().size;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations().size;	  int    costEvaluations    =    getMeanEvaluations().length;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
445	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.size()  -  1L;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.size()  -  1L;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.size()  -  1L;	  int    costEvaluations    =    parameters.size()    -    1;    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
446	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.length;  float  costEvaluations  =  parameters.length  +  1;  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]        EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.length;  float  costEvaluations  =  parameters.length  +  1;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.length;  float  costEvaluations  =  parameters.length  +  1;	          int    costEvaluations    =    parameters.length;    float    costEvaluations    =    parameters.length;    	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	136	None	replace
447	[BUG]  [BUGGY]  for(int  costEvaluations  =  parameters.length;  costEvaluations  >=  0;  costEvaluations++)  {  if(parameters[costEvaluations]!=  null)  {  return  costEvaluations  *  2;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  costEvaluations  =  parameters.length;  costEvaluations  >=  0;  costEvaluations++)  {  if(parameters[costEvaluations]!=  null)  {  return  costEvaluations  *  2;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  costEvaluations  =  parameters.length;  costEvaluations  >=  0;  costEvaluations++)  {  if(parameters[costEvaluations]!=  null)  {  return  costEvaluations  *  2;  }	  return    costEvaluations    *    2;    int    costEvaluations    =    parameters.length;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
448	[BUG]  [BUGGY]  for(int  costEvaluations  =  parameters.length;  costEvaluations  >=  0;  costEvaluations++)  {  if(costEvaluations  >  maxCostEval)  {  return  costEvaluations  *  2;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  costEvaluations  =  parameters.length;  costEvaluations  >=  0;  costEvaluations++)  {  if(costEvaluations  >  maxCostEval)  {  return  costEvaluations  *  2;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  costEvaluations  =  parameters.length;  costEvaluations  >=  0;  costEvaluations++)  {  if(costEvaluations  >  maxCostEval)  {  return  costEvaluations  *  2;  }	  return    costEvaluations    *    2;    int    costEvaluations    =    parameters.length;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
449	[BUG]  [BUGGY]  for(int  costEvaluations  =  parameters.length;  costEvaluations  >=  0;  costEvaluations++)  {  if(results[costEvaluations]!=  null)  {  return  costEvaluations  *  2;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  costEvaluations  =  parameters.length;  costEvaluations  >=  0;  costEvaluations++)  {  if(results[costEvaluations]!=  null)  {  return  costEvaluations  *  2;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  costEvaluations  =  parameters.length;  costEvaluations  >=  0;  costEvaluations++)  {  if(results[costEvaluations]!=  null)  {  return  costEvaluations  *  2;  }	  return    costEvaluations    *    2;    int    costEvaluations    =    parameters.length;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
450	[BUG]  [BUGGY]  if(parameters!=  null)  {  return  parameters.length;  int  cols  =  parameters.length;  }  [CE]  unreachable  statement  [FE]        EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(parameters!=  null)  {  return  parameters.length;  int  cols  =  parameters.length;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(parameters!=  null)  {  return  parameters.length;  int  cols  =  parameters.length;  }	  return    parameters.length;    int    cols    =    parameters.length;    	non-compiled	[CE]  unreachable  statement	4	None	replace
451	[BUG]  [BUGGY]  return  parameters.length;  int  cols  =  cols;  [CE]  unreachable  statement  [FE]          EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length;  int  cols  =  cols;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length;  int  cols  =  cols;	  return    parameters.length;    int    cols    =    parameters.length;    	non-compiled	[CE]  unreachable  statement	4	None	replace
452	[BUG]  [BUGGY]  return  parameters  *  2  +  cost;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters  *  2  +  cost;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  *  2  +  cost;	  return    costEvaluations    *    2    +    parameters.length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	128	None	replace
453	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.length  -  4;  [CE]  missing  return  statement  [FE]          EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.length  -  4;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.length  -  4;	  int    costEvaluations    =    parameters.length    -    2;    	non-compiled	[CE]  missing  return  statement	57	None	replace
454	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  0;  Integer  costEvaluations  *  2  +  0;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  0;  Integer  costEvaluations  *  2  +  0;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    0;    Integer  costEvaluations  *  2  +  0;	  	non-compiled	[CE]  ';'  expected	94	None	add
455	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  0;  int  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  0;  int  costEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    0;    int  costEvaluations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	94	None	add
456	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  0;  int  costEvaluations  =  getCostEvaluations();  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  0;  int  costEvaluations  =  getCostEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    0;    int  costEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  unreachable  statement	94	None	add
457	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  0;  int  costEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  0;  int  costEvaluations  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    0;    int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	94	None	add
458	[BUG]  [BUGGY]  return  parameters.length  -  2;  int  parameters.length  -  2;  [CE]  ';'  expected  [FE]    EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  -  2;  int  parameters.length  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    -    2;    int  parameters.length  -  2;	  	non-compiled	[CE]  ';'  expected	21	None	add
459	[BUG]  [BUGGY]  return  costEvaluations;  int  costEvaluations  =  getMeanEvaluations();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations;  int  costEvaluations  =  getMeanEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations;  int  costEvaluations  =  getMeanEvaluations();	  return    this.costEvaluations;    int    costEvaluations    =    getMeanEvaluations();    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
460	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.length  *  parameters.length;  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.length  *  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.length  *  parameters.length;	  return    costEvaluations    *    parameters.length;    int    costEvaluations    *    parameters.length;    	non-compiled	[CE]  missing  return  statement	60	None	replace
461	[BUG]  [BUGGY]  return  this.resultEvaluations.length  +  1;  [CE]  cannot  find  symbol  resultEvaluations  [FE]              EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.resultEvaluations.length  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.resultEvaluations.length  +  1;	  return    this.resultEvaluations.length;    	non-compiled	[CE]  cannot  find  symbol  resultEvaluations	24	None	replace
462	[BUG]  [BUGGY]          int    costEvaluations    =    parameters.length;    int  costsEvaluations  =  parameters.length;  int  costsEvaluations  =  parameters.length;  int  costsEvaluations  =  parameters.length;  [CE]  variable  costsEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]    EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]          int    costEvaluations    =    parameters.length;    int  costsEvaluations  =  parameters.length;  int  costsEvaluations  =  parameters.length;  int  costsEvaluations  =  parameters.length;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	                int        costEvaluations        =        parameters.length;        int    costsEvaluations    =    parameters.length;    int  costsEvaluations  =  parameters.length;  int  costsEvaluations  =  parameters.length;	  	non-compiled	[CE]  variable  costsEvaluations  is  already  defined  in  method  getCostEvaluations()	88	None	add
463	[BUG]  [BUGGY]  return  parameters  *  costEvaluations  +  maxCostEval;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters  *  costEvaluations  +  maxCostEval;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  *  costEvaluations  +  maxCostEval;	  return    parameters    *    costEvaluations;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	106	None	replace
464	[BUG]  [BUGGY]  return  parameters  *  costEvaluations.length;  int  cols  =  parameters.length;  [CE]  int  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters  *  costEvaluations.length;  int  cols  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  *  costEvaluations.length;  int  cols  =  parameters.length;	  return    costEvaluations    *    parameters.length;    int    cols    =    parameters.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	61	None	replace
465	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations();  float  costEvaluations  =  getCostEvaluations();  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations();  float  costEvaluations  =  getCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations();  float  costEvaluations  =  getCostEvaluations();	          int    costEvaluations    =    getCostEvaluations();    float    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
466	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.remove( "cost ",  jacobianEvaluations);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.remove( "cost ",  jacobianEvaluations);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.remove( "cost ",  jacobianEvaluations);	  int    costEvaluations    =    parameters.remove(   "cost   ");    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
467	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.indexOf( "cost ");  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.indexOf( "cost ");  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.indexOf( "cost ");	  int    costEvaluations    =    parameters.remove(   "cost   ");    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
468	[BUG]  [BUGGY]          int    costEvaluations    =    getCostEvaluations();    int  costsEvaluations  =  getCostEvaluations();  int  costEvaluations  =  getCostEvaluations();  int  CostEvaluations  =  getCostEvaluations();  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]    StackOverflowError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]          int    costEvaluations    =    getCostEvaluations();    int  costsEvaluations  =  getCostEvaluations();  int  costEvaluations  =  getCostEvaluations();  int  CostEvaluations  =  getCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	                int        costEvaluations        =        getCostEvaluations();        int    costsEvaluations    =    getCostEvaluations();    int  costEvaluations  =  getCostEvaluations();  int  CostEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	74	None	add
469	[BUG]  [BUGGY]          int    costEvaluations    =    getCostEvaluations();    int  costsEvaluations  =  getCostEvaluations();  int  costEvaluations  =  getCostEvaluations();  int  costsEvaluations  =  getSecondEvaluations();  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]      StackOverflowError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]          int    costEvaluations    =    getCostEvaluations();    int  costsEvaluations  =  getCostEvaluations();  int  costEvaluations  =  getCostEvaluations();  int  costsEvaluations  =  getSecondEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	                int        costEvaluations        =        getCostEvaluations();        int    costsEvaluations    =    getCostEvaluations();    int  costEvaluations  =  getCostEvaluations();  int  costsEvaluations  =  getSecondEvaluations();	  	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	74	None	add
470	[BUG]  [BUGGY]  int  costEvaluations  =  getCostEvaluations()  *  1;  [CE]  missing  return  statement  [FE]            StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getCostEvaluations()  *  1;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getCostEvaluations()  *  1;	  int    costEvaluations    =    getCostEvaluations()    -    1;    	non-compiled	[CE]  missing  return  statement	34	None	replace
471	[BUG]  [BUGGY]  int  parametersEvalations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]          EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  parametersEvalations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  parametersEvalations  =  parameters.size();	  return    parameters.length;    int    maxCostEvalations    =    parameters.size();    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
472	[BUG]  [BUGGY]  return  costEvaluations  -  2;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();  [CE]  incompatible  types  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  -  2;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    -    2;    ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();	  	non-compiled	[CE]  incompatible  types	83	None	add
473	[BUG]  [BUGGY]  return  costEvaluations  -  2;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBounds();  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  -  2;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBounds();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    -    2;    ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBounds();	  	non-compiled	[CE]  cannot  find  symbol	83	None	add
474	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.get( "cost   ",  maxCostEval);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.get( "cost   ",  maxCostEval);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.get( "cost   ",  maxCostEval);	  int    costEvaluations    =    parameters.get(   "cost   ",    jacobianEvaluations);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
475	[BUG]  [BUGGY]  return  parameters.length  -  1;  int  parameters.length  -  1;  [CE]  ';'  expected  [FE]    EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  -  1;  int  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    -    1;    int  parameters.length  -  1;	  	non-compiled	[CE]  ';'  expected	19	None	add
476	[BUG]  [BUGGY]  int  costEvaluations  =  getCostEvaluations(  jacobianEvaluations,  maxCostEval);  [CE]  method  getCostEvaluations  in  class  AbstractEstimator  cannot  be  applied  to  given  types;  [FE]        StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getCostEvaluations(  jacobianEvaluations,  maxCostEval);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getCostEvaluations(  jacobianEvaluations,  maxCostEval);	  int    costEvaluations    =    getCostEvaluations(maxCostEval);    	non-compiled	[CE]  method  getCostEvaluations  in  class  AbstractEstimator  cannot  be  applied  to  given  types;	142	None	replace
477	[BUG]  [BUGGY]  int  costEvaluations  =  getCostEvaluations(maxCostEval,  residuals);  [CE]  method  getCostEvaluations  in  class  AbstractEstimator  cannot  be  applied  to  given  types;  [FE]          StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getCostEvaluations(maxCostEval,  residuals);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getCostEvaluations(maxCostEval,  residuals);	  int    costEvaluations    =    getCostEvaluations(maxCostEval);    	non-compiled	[CE]  method  getCostEvaluations  in  class  AbstractEstimator  cannot  be  applied  to  given  types;	142	None	replace
478	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  i++)  {  if(parameters[i]!=  null)  {  parameters[i]  =  parameters[i];  }  [CE]  illegal  start  of  expression  [FE]              EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  i++)  {  if(parameters[i]!=  null)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  parameters.length;  i++)  {  if(parameters[i]!=  null)  {  parameters[i]  =  parameters[i];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0;    i    <    parameters.length;    i++)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
479	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  i++)  {  if(parameters[i]!=  null)  {  parameters[i]  =  new  EstimatedParameter[1];  }  [CE]  illegal  start  of  expression  [FE]                EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  i++)  {  if(parameters[i]!=  null)  {  parameters[i]  =  new  EstimatedParameter[1];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  parameters.length;  i++)  {  if(parameters[i]!=  null)  {  parameters[i]  =  new  EstimatedParameter[1];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0;    i    <    parameters.length;    i++)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
480	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  i++)  {  variables[i]  =  parameters[i];  }  [CE]  cannot  find  symbol  [FE]                  EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  i++)  {  variables[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  parameters.length;  i++)  {  variables[i]  =  parameters[i];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0;    i    <    parameters.length;    i++)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  cannot  find  symbol  	7	None	replace
481	[BUG]  [BUGGY]  int  costEvaluations  =  getRangeEvaluations();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getRangeEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getRangeEvaluations();	  return    costEvaluations    *    parameters.length;    int    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
482	[BUG]  [BUGGY]  int  rows  =  this.parameters.size();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  rows  =  this.parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  rows  =  this.parameters.size();	  int    rows    =    parameters.size();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
483	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.remove( "CostEvaluations ");  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.remove( "CostEvaluations ");  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.remove( "CostEvaluations ");	  int    costEvaluations    =    parameters.get(   "CostEvaluations   ");    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
484	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.get( "CostEvaluations. ");  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.get( "CostEvaluations. ");  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.get( "CostEvaluations. ");	  int    costEvaluations    =    parameters.get(   "CostEvaluations   ");    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
485	[BUG]  [BUGGY]  return  parameters.length  *  costEvaluations;  int  costEvaluations  =  getCostEvaluations();  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  costEvaluations;  int  costEvaluations  =  getCostEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    *    costEvaluations;    int  costEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  unreachable  statement	64	None	add
486	[BUG]  [BUGGY]  return  parameters.length  *  costEvaluations;  int  costEvaluations  =  parameters.length  -  1;  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  costEvaluations;  int  costEvaluations  =  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    *    costEvaluations;    int  costEvaluations  =  parameters.length  -  1;	  	non-compiled	[CE]  unreachable  statement	64	None	add
487	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  2  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  this.costEvaluations  *  2  -  1;	  return    this.costEvaluations    *    2;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	53	1	replace
488	[BUG]  [BUGGY]  return  this.costEvaluations  *  2  -  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  2  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations  *  2  -  1;	  return    this.costEvaluations    *    2;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	53	1	replace
489	[BUG]  [BUGGY]  return  parameters.length  +  1;  int  parameters.length  +  1;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  +  1;  int  parameters.length  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    +    1;    int  parameters.length  +  1;	  	non-compiled	[CE]  ';'  expected	118	None	add
490	[BUG]  [BUGGY]  return  parameters.length  +  1;  int  parameters  =  parameters.length;  [CE]  int  cannot  be  dereferenced  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  +  1;  int  parameters  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    +    1;    int  parameters  =  parameters.length;	  	non-compiled	[CE]  int  cannot  be  dereferenced	118	None	add
491	[BUG]  [BUGGY]  return  parameters.length  +  1;  int  parameters  =  parameters.length  +  1;  [CE]  int  cannot  be  dereferenced  [FE]        AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  +  1;  int  parameters  =  parameters.length  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    +    1;    int  parameters  =  parameters.length  +  1;	  	non-compiled	[CE]  int  cannot  be  dereferenced	118	None	add
492	[BUG]  [BUGGY]  return  parameters.length  +  1;  int  maxCostEval  =  parameters.size();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  +  1;  int  maxCostEval  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    +    1;    int  maxCostEval  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	118	None	add
493	[BUG]  [BUGGY]  int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    EstimatedParameter[]    parameters    =    parameters[i].getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    	non-compiled	[CE]  ';'  expected	130	None	replace
494	[BUG]  [BUGGY]  return  costEvaluations  *  2;  int  costEvaluations  *  2  =  parameters.length  -  1;  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2;  int  costEvaluations  *  2  =  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  *  2;  int  costEvaluations  *  2  =  parameters.length  -  1;	  return    costEvaluations    *    2;    int    costEvaluations    *    2    =    parameters.length;    	non-compiled	[CE]  ';'  expected	100	None	replace
495	[BUG]  [BUGGY]  int  costEvaluations  =  getMeasurements();  Integer  costEvaluations  =  getCostEvaluations();  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeasurements();  Integer  costEvaluations  =  getCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeasurements();  Integer  costEvaluations  =  getCostEvaluations();	          int    costEvaluations    =    getCostEvaluations();    Integer    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
496	[BUG]  [BUGGY]  return  parameters  *  costEvaluations.length;  int  maxCostEval  =  parameters.length;  [CE]  int  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters  *  costEvaluations.length;  int  maxCostEval  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  *  costEvaluations.length;  int  maxCostEval  =  parameters.length;	  return    costEvaluations    *    parameters.length;    int    maxCostEval    =    parameters.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	62	None	replace
497	[BUG]  [BUGGY]  return  parameters  *  costEvaluations.length;  int  costEvaluations  =  parameters.size();  [CE]  int  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters  *  costEvaluations.length;  int  costEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  *  costEvaluations.length;  int  costEvaluations  =  parameters.size();	  return    costEvaluations    *    parameters.length;    int    costEvaluations    =    parameters.size();    	non-compiled	[CE]  int  cannot  be  dereferenced	63	None	replace
498	[BUG]  [BUGGY]  int  costEvaluations  =  cost.length  -  1;  [CE]  double  cannot  be  dereferenced  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  cost.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  cost.length  -  1;	  return    costEvaluations    -    1;    ArrayIndexOutOfBoundsException    costEvaluations    =    new    ArrayIndexOutOfBoundsException();    	non-compiled	[CE]  double  cannot  be  dereferenced	102	None	replace
499	[BUG]  [BUGGY]  int  costEvaluations  =  cost.size();  [CE]  double  cannot  be  dereferenced  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  cost.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  cost.size();	  return    costEvaluations    -    1;    ArrayIndexOutOfBoundsException    costEvaluations    =    new    ArrayIndexOutOfBoundsException();    	non-compiled	[CE]  double  cannot  be  dereferenced	102	None	replace
500	[BUG]  [BUGGY]  int  costEvaluations  =  cost.size()  -  1;  [CE]  double  cannot  be  dereferenced  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  cost.size()  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  cost.size()  -  1;	  return    costEvaluations    -    1;    ArrayIndexOutOfBoundsException    costEvaluations    =    new    ArrayIndexOutOfBoundsException();    	non-compiled	[CE]  double  cannot  be  dereferenced	102	None	replace
501	[BUG]  [BUGGY]  int  costEvaluations  =  cost.evaluations();  [CE]  double  cannot  be  dereferenced  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  cost.evaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  cost.evaluations();	  return    costEvaluations    -    1;    ArrayIndexOutOfBoundsException    costEvaluations    =    new    ArrayIndexOutOfBoundsException();    	non-compiled	[CE]  double  cannot  be  dereferenced	102	None	replace
502	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  int  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  int  costEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    parameters.length;    int  costEvaluations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	127	None	add
503	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  int  costEvaluations  =  parameters[0].getCostEvaluations();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  int  costEvaluations  =  parameters[0].getCostEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    parameters.length;    int  costEvaluations  =  parameters[0].getCostEvaluations();	  	non-compiled	[CE]  cannot  find  symbol	127	None	add
504	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  int  costEvaluations  =  parameters.length  -  1;  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  int  costEvaluations  =  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    parameters.length;    int  costEvaluations  =  parameters.length  -  1;	  	non-compiled	[CE]  unreachable  statement	127	None	add
505	[BUG]  [BUGGY]  return  this.costEvaluations  *  2;  int  costEvaluations  =  this.costEvaluations  *  1;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  2;  int  costEvaluations  =  this.costEvaluations  *  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    *    2;    int  costEvaluations  =  this.costEvaluations  *  1;	  	non-compiled	[CE]  unreachable  statement	52	None	add
506	[BUG]  [BUGGY]  int  costEvaluations  =  cost.length  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(results.length);  [CE]  double  cannot  be  dereferenced  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  cost.length  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(results.length);  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  cost.length  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(results.length);	  return    costEvaluations    -    1;    ArrayIndexOutOfBoundsException    costEvaluations    =    new    ArrayIndexOutOfBoundsException(results.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	103	None	replace
507	[BUG]  [BUGGY]  int  costEvaluations  =  cost.length  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(costEvaluations);  [CE]  double  cannot  be  dereferenced  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  cost.length  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(costEvaluations);  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  cost.length  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(costEvaluations);	  return    costEvaluations    -    1;    ArrayIndexOutOfBoundsException    costEvaluations    =    new    ArrayIndexOutOfBoundsException(results.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	103	None	replace
508	[BUG]  [BUGGY]  int  costEvaluations  =  cost.length  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(variables.length);  [CE]  double  cannot  be  dereferenced  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  cost.length  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(variables.length);  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  cost.length  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(variables.length);	  return    costEvaluations    -    1;    ArrayIndexOutOfBoundsException    costEvaluations    =    new    ArrayIndexOutOfBoundsException(results.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	103	None	replace
509	[BUG]  [BUGGY]  if(parameters!=  null)  {  return  parameters.length;  int  parameters.length  =  parameters.length;  }  else  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }  [CE]  ';'  expected  [FE]            EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(parameters!=  null)  {  return  parameters.length;  int  parameters.length  =  parameters.length;  }  else  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(parameters!=  null)  {  return  parameters.length;  int  parameters.length  =  parameters.length;  }  else  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }	  return    parameters.length;    int    parameters.length    =    parameters.length;    	non-compiled	[CE]  ';'  expected	117	None	replace
510	[BUG]  [BUGGY]  if(parameters!=  null)  {  return  parameters.length;  int  parameters.length  =  parameters.length;  }  [CE]  ';'  expected  [FE]              EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(parameters!=  null)  {  return  parameters.length;  int  parameters.length  =  parameters.length;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(parameters!=  null)  {  return  parameters.length;  int  parameters.length  =  parameters.length;  }	  return    parameters.length;    int    parameters.length    =    parameters.length;    	non-compiled	[CE]  ';'  expected	117	None	replace
511	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(maxCostEval,  jacobianEvaluations,  residuals);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations(maxCostEval,  jacobianEvaluations,  residuals);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(maxCostEval,  jacobianEvaluations,  residuals);	  int    costEvaluations    =    getMeanEvaluations(maxCostEval,    jacobianEvaluations);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
512	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {	  for(int    i    =    0;    i    <    parameters.length;    ++i)    {    EstimatedParameter[]    parameters    =    parameters[i].getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
513	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i  [CE]  ']'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i	  for(int    i    =    0;    i    <    parameters.length;    ++i)    {    EstimatedParameter[]    parameters    =    parameters[i].getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    	non-compiled	[CE]  ']'  expected	135	None	replace
514	[BUG]  [BUGGY]  int  results  =  parameters.length  +  1;  [CE]  missing  return  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  results  =  parameters.length  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  results  =  parameters.length  +  1;	  int    results    =    parameters.length;    	non-compiled	[CE]  missing  return  statement	124	None	replace
515	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  4;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  *  4;	  return    costEvaluations    *    1;    	compilable	  [FE]  AssertionFailedError  	82	2	replace
516	[BUG]  [BUGGY]  return  costEvaluations  *  4;  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  4;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  *  4;	  return    costEvaluations    *    1;    	compilable	  [FE]  AssertionFailedError  	82	2	replace
517	[BUG]  [BUGGY]  return  this.costEvaluations  -  2;  int  costEvaluations  =  this.costEvaluations  -  1;  [CE]  unreachable  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  -  2;  int  costEvaluations  =  this.costEvaluations  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    -    2;    int  costEvaluations  =  this.costEvaluations  -  1;	  	non-compiled	[CE]  unreachable  statement	125	None	add
518	[BUG]  [BUGGY]  return  this.costEvaluations  -  2;  int  costEvaluations  =  this.costEvaluations  *  parameters.length;  [CE]  unreachable  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  -  2;  int  costEvaluations  =  this.costEvaluations  *  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    -    2;    int  costEvaluations  =  this.costEvaluations  *  parameters.length;	  	non-compiled	[CE]  unreachable  statement	125	None	add
519	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  variables[i]  =  parameters[i];  }  [CE]  cannot  find  symbol  [FE]            EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  variables[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  parameters.length;  ++i)  {  variables[i]  =  parameters[i];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  cannot  find  symbol  	6	None	replace
520	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i].getMeasurement();  }  [CE]  cannot  find  symbol  [FE]              EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i].getMeasurement();  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i].getMeasurement();  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
521	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  new  EstimatedParameter[maxCostEval];  }  [CE]  incompatible  types  [FE]                EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  new  EstimatedParameter[maxCostEval];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  new  EstimatedParameter[maxCostEval];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  incompatible  types	6	None	replace
522	[BUG]  [BUGGY]  for(int  i  =  0,  maxCostEvalations  =  parameters.length;  i  <  maxCostEvalations;  i++)  {  if(parameters[i]!=  null)  {  return  parameters[i];  }  [CE]  illegal  start  of  expression  [FE]        EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  maxCostEvalations  =  parameters.length;  i  <  maxCostEvalations;  i++)  {  if(parameters[i]!=  null)  {  return  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  maxCostEvalations  =  parameters.length;  i  <  maxCostEvalations;  i++)  {  if(parameters[i]!=  null)  {  return  parameters[i];  }	  return    parameters.length;    int    maxCostEvalations    =    parameters.length;    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
523	[BUG]  [BUGGY]  for(int  i  =  0,  maxCostEvalations  =  parameters.length;  i  <  maxCostEvalations;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  [CE]  illegal  start  of  expression  [FE]          EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  maxCostEvalations  =  parameters.length;  i  <  maxCostEvalations;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  maxCostEvalations  =  parameters.length;  i  <  maxCostEvalations;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)	  return    parameters.length;    int    maxCostEvalations    =    parameters.length;    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
524	[BUG]  [BUGGY]  for(int  i  =  0,  maxCostEvalations  =  parameters.length;  i  <  maxCostEvalations;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  [CE]  illegal  start  of  expression  [FE]            EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  maxCostEvalations  =  parameters.length;  i  <  maxCostEvalations;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  maxCostEvalations  =  parameters.length;  i  <  maxCostEvalations;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;	  return    parameters.length;    int    maxCostEvalations    =    parameters.length;    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
525	[BUG]  [BUGGY]  return  parameters  *  maxCostEvalations.length;  [CE]  cannot  find  symbol  maxCostEvalations  [FE]        AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters  *  maxCostEvalations.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  *  maxCostEvalations.length;	  return    parameters    *    costEvaluations.length;    	non-compiled	[CE]  cannot  find  symbol  maxCostEvalations	104	None	replace
526	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.get( "Cost ").intValue();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.get( "Cost ").intValue();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.get( "Cost ").intValue();	  int    costEvaluations    =    parameters.get(   "cost   ").intValue();    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
527	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  }  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  }	  for(int    i    =    0;    i    <    parameters.length;    ++i)    {    EstimatedMeasurement[]    measurements[i]    =    parameters[i].getCostEvaluations();    for(int    cols    =    0;    cols    <    measurements.length;    cols++)    {    	non-compiled	[CE]  ']'  expected	133	None	replace
528	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  parameters[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  parameters[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  parameters[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {	  for(int    i    =    0;    i    <    parameters.length;    ++i)    {    EstimatedMeasurement[]    measurements[i]    =    parameters[i].getCostEvaluations();    for(int    cols    =    0;    cols    <    measurements.length;    cols++)    {    	non-compiled	[CE]  ']'  expected	133	None	replace
529	[BUG]  [BUGGY]  int[]  rows  =  getColumns();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int[]  rows  =  getColumns();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int[]  rows  =  getColumns();	  int[]    rows    =    getRows();    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
530	[BUG]  [BUGGY]  int[]  rows  =  getRowsArray();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int[]  rows  =  getRowsArray();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int[]  rows  =  getRowsArray();	  int[]    rows    =    getRows();    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
531	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length  -  1;  int  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  parameters.length  -  1;  int  costEvaluations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    parameters.length    -    1;    int  costEvaluations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	66	None	add
532	[BUG]  [BUGGY]  return  costEvaluations  /  parameters.length;  int  costEvaluations  =  parameters.length  -  1;  [CE]  unreachable  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  parameters.length;  int  costEvaluations  =  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    /    parameters.length;    int  costEvaluations  =  parameters.length  -  1;	  	non-compiled	[CE]  unreachable  statement	68	None	add
533	[BUG]  [BUGGY]  return  parameters.length  -  1;  int  costEvaluations  =  parameters.length  -  2;  [CE]  unreachable  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  -  1;  int  costEvaluations  =  parameters.length  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  -  1;  int  costEvaluations  =  parameters.length  -  2;	  return    costEvaluations    -    1;    int    costEvaluations    =    parameters.length    -    2;    	non-compiled	[CE]  unreachable  statement	39	None	replace
534	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  -  1  +  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  parameters.length  -  1  +  2;	  return    parameters.length    -    1;    	compilable	  [FE]  AssertionFailedError  	20	2	replace
535	[BUG]  [BUGGY]  return  parameters.length  -  1  +  2;  [FE]  AssertionFailedError  [FE]    EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  -  1  +  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  -  1  +  2;	  return    parameters.length    -    1;    	compilable	  [FE]  AssertionFailedError  	20	2	replace
536	[BUG]  [BUGGY]  return  parameters.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    ++i)    {    parameters[i]    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
537	[BUG]  [BUGGY]  return  parameters.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  *  2;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    ++i)    {    parameters[i]    	non-compiled	[CE]  ')'  expected	16	None	replace
538	[BUG]  [BUGGY]  return  parameters.length  /  2;  int  maxCostEval  =  parameters.length  %  2;  [CE]  unreachable  statement  [FE]    EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  /  2;  int  maxCostEval  =  parameters.length  %  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    /    2;    int  maxCostEval  =  parameters.length  %  2;	  	non-compiled	[CE]  unreachable  statement	120	None	add
539	[BUG]  [BUGGY]  return  parameters.length  /  2;  int  maxCostEval  =  parameters.size();  [CE]  cannot  find  symbol  [FE]      EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  /  2;  int  maxCostEval  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    /    2;    int  maxCostEval  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	120	None	add
540	[BUG]  [BUGGY]  return  parameters.length  -  1;  int  costEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  -  1;  int  costEvaluations  =  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  -  1;  int  costEvaluations  =  parameters.length;	  return    costEvaluations    -    1;    int    costEvaluations    =    parameters.length;    	non-compiled	[CE]  unreachable  statement	37	None	replace
541	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  /  2  +  this.maxCostEval;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  parameters.length  /  2  +  this.maxCostEval;	  return    parameters.length    /    2;    	compilable	  [FE]  AssertionFailedError  	121	2	replace
542	[BUG]  [BUGGY]  return  parameters.length  /  2  +  this.maxCostEval;  [FE]  AssertionFailedError  [FE]    EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  /  2  +  this.maxCostEval;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  /  2  +  this.maxCostEval;	  return    parameters.length    /    2;    	compilable	  [FE]  AssertionFailedError  	121	2	replace
543	[BUG]  [BUGGY]  return  parameters.length  /  2  +  cost;  [CE]  possible  loss  of  precision  [FE]      EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  /  2  +  cost;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  /  2  +  cost;	  return    parameters.length    /    2;    	non-compiled	[CE]  possible  loss  of  precision	121	None	replace
544	[BUG]  [BUGGY]  return  this.costEvaluations  /  2  +(this.maxCostEvaluations  *  parameters.length);  [CE]  cannot  find  symbol  maxCostEvaluations  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  /  2  +(this.maxCostEvaluations  *  parameters.length);  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations  /  2  +(this.maxCostEvaluations  *  parameters.length);	  return    this.costEvaluations    /    2;    	non-compiled	[CE]  cannot  find  symbol  maxCostEvaluations	55	None	replace
545	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  0;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  0;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    0;    for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]	  	non-compiled	[CE]  not  a  statement	94	None	add
546	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  0;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  0;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    0;    for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]	  	non-compiled	[CE]  not  a  statement	94	None	add
547	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  0;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  0;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    0;    for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
548	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  0;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  0;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    0;    for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
549	[BUG]  [BUGGY]  return  costEvaluations  -  2;  int  costEvaluations  =  getCostEvaluations();  [CE]  unreachable  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  -  2;  int  costEvaluations  =  getCostEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    -    2;    int  costEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  unreachable  statement	83	None	add
550	[BUG]  [BUGGY]  return  costEvaluations  -  2;  int  costEvaluations  =  getMeanEvaluations();  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  -  2;  int  costEvaluations  =  getMeanEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    -    2;    int  costEvaluations  =  getMeanEvaluations();	  	non-compiled	[CE]  cannot  find  symbol	83	None	add
551	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  2  *  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  /  2  *  parameters.length;	  return    costEvaluations    /    2;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	1	replace
552	[BUG]  [BUGGY]  return  costEvaluations  /  2  *  parameters.length;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  2  *  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  /  2  *  parameters.length;	  return    costEvaluations    /    2;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	1	replace
553	[BUG]  [BUGGY]  int  costEvaluations  =  getStandardCostEvaluations();  Int  costEvaluations  =  getCostEvaluations();  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getStandardCostEvaluations();  Int  costEvaluations  =  getCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getStandardCostEvaluations();  Int  costEvaluations  =  getCostEvaluations();	          int    costEvaluations    =    getCostEvaluations();    Int    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  cannot  find  symbol	148	None	replace
554	[BUG]  [BUGGY]  int  parametersEvaluations  =  getCostEvaluations();  [CE]  missing  return  statement  [FE]                EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  parametersEvaluations  =  getCostEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  parametersEvaluations  =  getCostEvaluations();	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  missing  return  statement	8	None	replace
555	[BUG]  [BUGGY]  int[]  parameters  =  getParameters();  [CE]  cannot  find  symbol  [FE]                  EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int[]  parameters  =  getParameters();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int[]  parameters  =  getParameters();	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
556	[BUG]  [BUGGY]  int  costEvaluations  =  getCostEvaluations(remainders,  maxCostEval);  [CE]  cannot  find  symbol  remainders  [FE]        StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getCostEvaluations(remainders,  maxCostEval);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getCostEvaluations(remainders,  maxCostEval);	  int    costEvaluations    =    getCostEvaluations(maxCostEval);    	non-compiled	[CE]  cannot  find  symbol  remainders	142	None	replace
557	[BUG]  [BUGGY]  int  costEvaluations  =  getCostEvaluations(maxCostEval,  measurements);  [CE]  method  getCostEvaluations  in  class  AbstractEstimator  cannot  be  applied  to  given  types;  [FE]          StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getCostEvaluations(maxCostEval,  measurements);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getCostEvaluations(maxCostEval,  measurements);	  int    costEvaluations    =    getCostEvaluations(maxCostEval);    	non-compiled	[CE]  method  getCostEvaluations  in  class  AbstractEstimator  cannot  be  applied  to  given  types;	142	None	replace
558	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.get( "cost ",  cost).intValue();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.get( "cost ",  cost).intValue();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.get( "cost ",  cost).intValue();	  int    costEvaluations    =    parameters.get(   "cost   ").intValue();    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
559	[BUG]  [BUGGY]  return  this.resultEvaluations.length  -  2;  [CE]  cannot  find  symbol  resultEvaluations  [FE]              EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.resultEvaluations.length  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.resultEvaluations.length  -  2;	  return    this.resultEvaluations.length;    	non-compiled	[CE]  cannot  find  symbol  resultEvaluations	24	None	replace
560	[BUG]  [BUGGY]  return  parameters.length  -  2;  int  maxCostEvalations  =  parameters.length  -  2;  [CE]  unreachable  statement  [FE]    EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  -  2;  int  maxCostEvalations  =  parameters.length  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    -    2;    int  maxCostEvalations  =  parameters.length  -  2;	  	non-compiled	[CE]  unreachable  statement	21	None	add
561	[BUG]  [BUGGY]  return  parameters.length  -  2;  int  cols  =  parameters.length  -  1;  [CE]  unreachable  statement  [FE]      EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  -  2;  int  cols  =  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    -    2;    int  cols  =  parameters.length  -  1;	  	non-compiled	[CE]  unreachable  statement	21	None	add
562	[BUG]  [BUGGY]  int  costEvaluations  =  getNegativeCostEvaluations();  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getNegativeCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getNegativeCostEvaluations();	          int    costEvaluations    =    getCostEvaluations();    int    costsEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
563	[BUG]  [BUGGY]  for(int  costEvaluations  =  parameters.size();  costEvaluations  >=  0;  costEvaluations++)  {  if(this.costEvaluations  >  costEvaluations)  {  return  costEvaluations;  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  costEvaluations  =  parameters.size();  costEvaluations  >=  0;  costEvaluations++)  {  if(this.costEvaluations  >  costEvaluations)  {  return  costEvaluations;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  costEvaluations  =  parameters.size();  costEvaluations  >=  0;  costEvaluations++)  {  if(this.costEvaluations  >  costEvaluations)  {  return  costEvaluations;  }	  return    this.costEvaluations;    int    costEvaluations    =    parameters.size();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
564	[BUG]  [BUGGY]  for(int  costEvaluations  =  parameters.size();  costEvaluations  >=  0;  costEvaluations++)  {  if(this.costEvaluations  >  costEvaluations)  {  return  this.costEvaluations;  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  costEvaluations  =  parameters.size();  costEvaluations  >=  0;  costEvaluations++)  {  if(this.costEvaluations  >  costEvaluations)  {  return  this.costEvaluations;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  costEvaluations  =  parameters.size();  costEvaluations  >=  0;  costEvaluations++)  {  if(this.costEvaluations  >  costEvaluations)  {  return  this.costEvaluations;  }	  return    this.costEvaluations;    int    costEvaluations    =    parameters.size();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
565	[BUG]  [BUGGY]  for(int  costEvaluations  =  parameters.size();  costEvaluations  >=  0;  costEvaluations++)  {  if(costEvaluations  >  maxCostEval)  {  return  this.costEvaluations;  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  costEvaluations  =  parameters.size();  costEvaluations  >=  0;  costEvaluations++)  {  if(costEvaluations  >  maxCostEval)  {  return  this.costEvaluations;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  costEvaluations  =  parameters.size();  costEvaluations  >=  0;  costEvaluations++)  {  if(costEvaluations  >  maxCostEval)  {  return  this.costEvaluations;  }	  return    this.costEvaluations;    int    costEvaluations    =    parameters.size();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
566	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  costEvaluations  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  parameters.length  *  costEvaluations  +  1;	  return    parameters.length    *    costEvaluations;    	compilable	  [FE]  AssertionFailedError  	65	2	replace
567	[BUG]  [BUGGY]  return  parameters.length  *  costEvaluations  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  costEvaluations  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  *  costEvaluations  +  1;	  return    parameters.length    *    costEvaluations;    	compilable	  [FE]  AssertionFailedError  	65	2	replace
568	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  measurements.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  cols  =  measurements.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  measurements.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]	  for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    EstimatedParameter[]    parameters    =    parameters[i];    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i]    	non-compiled	[CE]  ';'  expected	46	None	replace
569	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  measurements.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  cols  =  measurements.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  measurements.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]	  for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    EstimatedParameter[]    parameters    =    parameters[i];    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i]    	non-compiled	[CE]  ';'  expected	46	None	replace
570	[BUG]  [BUGGY]  if(maxCostEvalations  <  parameters.length)  {  return  parameters.length;  }  [CE]  cannot  find  symbol  maxCostEvalations  [FE]        EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(maxCostEvalations  <  parameters.length)  {  return  parameters.length;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(maxCostEvalations  <  parameters.length)  {  return  parameters.length;  }	  return    parameters.length;    int    maxCostEvalations    =    parameters.length;    	non-compiled	[CE]  cannot  find  symbol  maxCostEvalations	138	None	replace
571	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(remainders,  maxCostEval);  [CE]  cannot  find  symbol  remainders  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations(remainders,  maxCostEval);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(remainders,  maxCostEval);	  int    costEvaluations    =    getMeanEvaluations(maxCostEval,    residuals);    	non-compiled	[CE]  cannot  find  symbol  remainders	31	None	replace
572	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(remainings,  maxCostEval,  parameters);  [CE]  cannot  find  symbol  remainings  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations(remainings,  maxCostEval,  parameters);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(remainings,  maxCostEval,  parameters);	  int    costEvaluations    =    getMeanEvaluations(maxCostEval,    parameters);    	non-compiled	[CE]  cannot  find  symbol  remainings	28	None	replace
573	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(methods,  maxCostEval,  parameters);  [CE]  cannot  find  symbol  methods  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations(methods,  maxCostEval,  parameters);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(methods,  maxCostEval,  parameters);	  int    costEvaluations    =    getMeanEvaluations(maxCostEval,    parameters);    	non-compiled	[CE]  cannot  find  symbol  methods	28	None	replace
574	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.length  -  costEvaluations;  [CE]  variable  costEvaluations  might  not  have  been  initialized  [FE]          AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.length  -  costEvaluations;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.length  -  costEvaluations;	  return    costEvaluations    *    parameters.length;    int    costEvaluations    *    parameters.length;    	non-compiled	[CE]  variable  costEvaluations  might  not  have  been  initialized	60	None	replace
575	[BUG]  [BUGGY]  return  costEvaluations  *  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBounds();  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBounds();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    1;    ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBounds();	  	non-compiled	[CE]  cannot  find  symbol	81	None	add
576	[BUG]  [BUGGY]  return  costEvaluations  *  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();  [CE]  incompatible  types  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    1;    ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();	  	non-compiled	[CE]  incompatible  types	81	None	add
577	[BUG]  [BUGGY]  return  costEvaluations  *  1;  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBounds();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  1;  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBounds();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    1;    ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBounds();	  	non-compiled	[CE]  cannot  find  symbol	81	None	add
578	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]	  for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i]    	non-compiled	[CE]  ';'  expected	47	None	replace
579	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[	  for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i]    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
580	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =	  for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i]    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
581	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]	  for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i]    	non-compiled	[CE]  not  a  statement	47	None	replace
582	[BUG]  [BUGGY]  return  this.costEvaluations  /  2;  int  costEvaluations  =  this.costEvaluations  -  1;  [CE]  unreachable  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  /  2;  int  costEvaluations  =  this.costEvaluations  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    /    2;    int  costEvaluations  =  this.costEvaluations  -  1;	  	non-compiled	[CE]  unreachable  statement	54	None	add
583	[BUG]  [BUGGY]  return  this.costEvaluations  /  2;  int  costEvaluations  =  getMeanEvaluations();  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  /  2;  int  costEvaluations  =  getMeanEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    /    2;    int  costEvaluations  =  getMeanEvaluations();	  	non-compiled	[CE]  cannot  find  symbol	54	None	add
584	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.remove( "Cost ");  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.remove( "Cost ");  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.remove( "Cost ");	  int    costEvaluations    =    parameters.get(   "Cost   ");    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
585	[BUG]  [BUGGY]  return  measurements  *  cost.length;  [CE]  double  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  measurements  *  cost.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  measurements  *  cost.length;	  return    parameters    *    cost.length;    	non-compiled	[CE]  double  cannot  be  dereferenced	105	None	replace
586	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.remove( "cost-evaluations ");  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.remove( "cost-evaluations ");  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.remove( "cost-evaluations ");	  int    costEvaluations    =    parameters.get(   "cost-evaluations   ");    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
587	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.length  *  1;  [CE]  missing  return  statement  [FE]            EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.length  *  1;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.length  *  1;	  int    costEvaluations    =    parameters.length    +    1;    	non-compiled	[CE]  missing  return  statement	58	None	replace
588	[BUG]  [BUGGY]  Integer  costEvaluations  =  this.costEvaluations.size();  [CE]  int  cannot  be  dereferenced  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  Integer  costEvaluations  =  this.costEvaluations.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	Integer  costEvaluations  =  this.costEvaluations.size();	  return    this.costEvaluations;    int    costEvaluations    =    this.costEvaluations.size();    	non-compiled	[CE]  int  cannot  be  dereferenced	111	None	replace
589	[BUG]  [BUGGY]  return  costEvaluations  /  1;  int  costEvaluations  =  getCostEvaluations();  [CE]  unreachable  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  /  1;  int  costEvaluations  =  getCostEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    /    1;    int  costEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  unreachable  statement	79	None	add
590	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  1;  int  costEvaluations  =  parameters.size();  return  costEvaluations  *  2  +  1;  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  1;  int  costEvaluations  =  parameters.size();  return  costEvaluations  *  2  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    1;    int  costEvaluations  =  parameters.size();  return  costEvaluations  *  2  +  1;	  	non-compiled	[CE]  cannot  find  symbol	92	None	add
591	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  1;  int  costEvaluations  =  getCostEvaluations();  return  costEvaluations  *  2  +  1;  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  1;  int  costEvaluations  =  getCostEvaluations();  return  costEvaluations  *  2  +  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    1;    int  costEvaluations  =  getCostEvaluations();  return  costEvaluations  *  2  +  1;	  	non-compiled	[CE]  unreachable  statement	92	None	add
592	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getStandardMeasurements();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  parameters[  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getStandardMeasurements();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  parameters[  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getStandardMeasurements();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  parameters[	  for(int    i    =    0;    i    <    parameters.length;    ++i)    {    EstimatedMeasurement[]    measurements[i]    =    parameters[i].getCostEvaluations();    for(int    cols    =    0;    cols    <    measurements.length;    cols++)    {    parameters[    	non-compiled	[CE]  ']'  expected	134	None	replace
593	[BUG]  [BUGGY]  int  costEvaluations  =  Math.max(results.length,  maxCostEval);  [CE]  cannot  find  symbol  results  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  Math.max(results.length,  maxCostEval);  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  Math.max(results.length,  maxCostEval);	  return    costEvaluations    -    1;    int    costEvaluations    -    1;    	non-compiled	[CE]  cannot  find  symbol  results	35	None	replace
594	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.remainders.get( "CostEvaluations ");  [CE]  cannot  find  symbol  remainders  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.remainders.get( "CostEvaluations ");  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.remainders.get( "CostEvaluations ");	  int    costEvaluations    =    parameters.get(   "CostEvaluations   ");    	non-compiled	[CE]  cannot  find  symbol  remainders	26	None	replace
595	[BUG]  [BUGGY]  return  costEvaluations  *  2;  int  costEvaluations  *  2  =  jacobianEvaluations.length;  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2;  int  costEvaluations  *  2  =  jacobianEvaluations.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  *  2;  int  costEvaluations  *  2  =  jacobianEvaluations.length;	  return    costEvaluations    *    2;    int    costEvaluations    *    2    =    parameters.length;    	non-compiled	[CE]  ';'  expected	100	None	replace
596	[BUG]  [BUGGY]  return  this.costEvaluations  +  1;  int  costEvaluations  =  this.costEvaluations  +  0.5;  [CE]  possible  loss  of  precision  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  +  1;  int  costEvaluations  =  this.costEvaluations  +  0.5;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    +    1;    int  costEvaluations  =  this.costEvaluations  +  0.5;	  	non-compiled	[CE]  possible  loss  of  precision	50	None	add
597	[BUG]  [BUGGY]  return  this.costEvaluations  *  2;  int  costEvaluations  =  getMeanEvaluations();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  2;  int  costEvaluations  =  getMeanEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    *    2;    int  costEvaluations  =  getMeanEvaluations();	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
598	[BUG]  [BUGGY]  if(this.costEvaluations!=  parameters.length)  {  return  this.costEvaluations;  int  costEvaluations  =  parameters.length;  }  [CE]  unreachable  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(this.costEvaluations!=  parameters.length)  {  return  this.costEvaluations;  int  costEvaluations  =  parameters.length;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(this.costEvaluations!=  parameters.length)  {  return  this.costEvaluations;  int  costEvaluations  =  parameters.length;  }	  return    this.costEvaluations;    int    costEvaluations    =    parameters.length;    	non-compiled	[CE]  unreachable  statement	44	None	replace
599	[BUG]  [BUGGY]  if(this.costEvaluations!=  parameters.length)  {  return  this.costEvaluations;  }  else  {  for(int  costEvaluations  =  parameters.length;  costEvaluations  >  cols;  costEvaluations--)  {  parameters[0]  =  parameters[cols];  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(this.costEvaluations!=  parameters.length)  {  return  this.costEvaluations;  }  else  {  for(int  costEvaluations  =  parameters.length;  costEvaluations  >  cols;  costEvaluations--)  {  parameters[0]  =  parameters[cols];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(this.costEvaluations!=  parameters.length)  {  return  this.costEvaluations;  }  else  {  for(int  costEvaluations  =  parameters.length;  costEvaluations  >  cols;  costEvaluations--)  {  parameters[0]  =  parameters[cols];  }	  return    this.costEvaluations;    int    costEvaluations    =    parameters.length;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
600	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {	  for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
601	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i	  for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    	non-compiled	[CE]  ']'  expected	45	None	replace
602	[BUG]  [BUGGY]  int[]  rows  =  getRows()  -  1;  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int[]  rows  =  getRows()  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int[]  rows  =  getRows()  -  1;	  int[]    rows    =    getRows();    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
603	[BUG]  [BUGGY]  int[]  rows  =  getRows()  -  2;  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int[]  rows  =  getRows()  -  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int[]  rows  =  getRows()  -  2;	  int[]    rows    =    getRows();    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
604	[BUG]  [BUGGY]  int  costEvaluations  =  cost  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();  [CE]  possible  loss  of  precision  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  cost  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  cost  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();	  return    costEvaluations    -    1;    ArrayIndexOutOfBoundsException    costEvaluations    =    new    ArrayIndexOutOfBoundsException();    	non-compiled	[CE]  possible  loss  of  precision	102	None	replace
605	[BUG]  [BUGGY]  int  costEvaluations  =  cost.evaluations  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();  [CE]  double  cannot  be  dereferenced  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  cost.evaluations  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  cost.evaluations  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();	  return    costEvaluations    -    1;    ArrayIndexOutOfBoundsException    costEvaluations    =    new    ArrayIndexOutOfBoundsException();    	non-compiled	[CE]  double  cannot  be  dereferenced	102	None	replace
606	[BUG]  [BUGGY]  int  costEvaluations  =  cost.evaluations  -  1;  [CE]  double  cannot  be  dereferenced  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  cost.evaluations  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  cost.evaluations  -  1;	  return    costEvaluations    -    1;    ArrayIndexOutOfBoundsException    costEvaluations    =    new    ArrayIndexOutOfBoundsException();    	non-compiled	[CE]  double  cannot  be  dereferenced	102	None	replace
607	[BUG]  [BUGGY]  this.costEvaluations  =  Math.max(0,  this.costEvaluations);  [CE]  missing  return  statement  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  this.costEvaluations  =  Math.max(0,  this.costEvaluations);  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	this.costEvaluations  =  Math.max(0,  this.costEvaluations);	  return    this.costEvaluations;    this.costEvaluations;    	non-compiled	[CE]  missing  return  statement	40	None	replace
608	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.length  -  1;  Integer  costEvaluations  =  parameters.length;  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]          EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.length  -  1;  Integer  costEvaluations  =  parameters.length;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.length  -  1;  Integer  costEvaluations  =  parameters.length;	          int    costEvaluations    =    parameters.length;    Integer    costEvaluations    =    parameters.length;    	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	86	None	replace
609	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getStandardMeasurements();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getStandardMeasurements();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  measurements.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getStandardMeasurements();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {	  for(int    i    =    0;    i    <    parameters.length;    ++i)    {    EstimatedMeasurement[]    measurements[i]    =    parameters[i].getCostEvaluations();    for(int    cols    =    0;    cols    <    measurements.length;    cols++)    {    	non-compiled	[CE]  ']'  expected	133	None	replace
610	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  parameters.length  /  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  this.costEvaluations  *  parameters.length  /  2;	  return    this.costEvaluations    *    parameters.length;    	compilable	  [FE]  AssertionFailedError  	141	2	replace
611	[BUG]  [BUGGY]  return  this.costEvaluations  *  parameters.length  /  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  parameters.length  /  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations  *  parameters.length  /  2;	  return    this.costEvaluations    *    parameters.length;    	compilable	  [FE]  AssertionFailedError  	141	2	replace
612	[BUG]  [BUGGY]  double  costEvaluations  =  parameters.length  -  1;  [CE]  missing  return  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  double  costEvaluations  =  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	double  costEvaluations  =  parameters.length  -  1;	  return    costEvaluations    -    1;    int    costEvaluations    =    parameters.length    -    1;    	non-compiled	[CE]  missing  return  statement	38	None	replace
613	[BUG]  [BUGGY]  return  parameters.length  *  costEvaluations;  int  costEvaluations  =  getMeanEvaluations();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  *  costEvaluations;  int  costEvaluations  =  getMeanEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    *    costEvaluations;    int  costEvaluations  =  getMeanEvaluations();	  	non-compiled	[CE]  cannot  find  symbol	64	None	add
614	[BUG]  [BUGGY]  if(maxCostEval  <  parameters.length)  {  return  parameters.length;  }  [CE]  missing  return  statement  [FE]          EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(maxCostEval  <  parameters.length)  {  return  parameters.length;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(maxCostEval  <  parameters.length)  {  return  parameters.length;  }	  return    parameters.length;    int    maxCostEval    =    parameters.length;    	non-compiled	[CE]  missing  return  statement	5	None	replace
615	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(methods);  [CE]  cannot  find  symbol  methods  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations(methods);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(methods);	  int    costEvaluations    =    getMeanEvaluations(remainings);    	non-compiled	[CE]  cannot  find  symbol  methods	29	None	replace
616	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(remainders,  jacobianEvaluations);  [CE]  cannot  find  symbol  remainders  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMeanEvaluations(remainders,  jacobianEvaluations);  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(remainders,  jacobianEvaluations);	  int    costEvaluations    =    getMeanEvaluations(    jacobianEvaluations);    	non-compiled	[CE]  cannot  find  symbol  remainders	30	None	replace
617	[BUG]  [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  parameters[i];  }  [CE]  illegal  start  of  expression  [FE]              EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(remainings!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  parameters[i];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0;    i    <    parameters.length;    i++)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
618	[BUG]  [BUGGY]  if(remainders!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  parameters[i];  }  [CE]  illegal  start  of  expression  [FE]                EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(remainders!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(remainders!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  parameters[i];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0;    i    <    parameters.length;    i++)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
619	[BUG]  [BUGGY]  int  cols  =  parameters.length;  if(remainders!=  null)  {  for(int  i  =  0;  i  <  cols;  i++)  {  parameters[i]  =  parameters[i];  }  [CE]  illegal  start  of  expression  [FE]                  EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  cols  =  parameters.length;  if(remainders!=  null)  {  for(int  i  =  0;  i  <  cols;  i++)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  cols  =  parameters.length;  if(remainders!=  null)  {  for(int  i  =  0;  i  <  cols;  i++)  {  parameters[i]  =  parameters[i];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0;    i    <    parameters.length;    i++)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
620	[BUG]  [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  new  EstimatedParameter[i];  }  [CE]  illegal  start  of  expression  [FE]                    EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  new  EstimatedParameter[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(remainings!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  new  EstimatedParameter[i];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0;    i    <    parameters.length;    i++)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
621	[BUG]  [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }  [CE]  illegal  start  of  expression  [FE]            EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(remainings!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
622	[BUG]  [BUGGY]  if(remainders!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }  [CE]  illegal  start  of  expression  [FE]              EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(remainders!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(remainders!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
623	[BUG]  [BUGGY]  int  cols  =  parameters.length;  if(remainders!=  null)  {  for(int  i  =  0;  i  <  cols;  ++i)  {  parameters[i]  =  parameters[i];  }  [CE]  illegal  start  of  expression  [FE]                EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  cols  =  parameters.length;  if(remainders!=  null)  {  for(int  i  =  0;  i  <  cols;  ++i)  {  parameters[i]  =  parameters[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  cols  =  parameters.length;  if(remainders!=  null)  {  for(int  i  =  0;  i  <  cols;  ++i)  {  parameters[i]  =  parameters[i];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
624	[BUG]  [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  new  EstimatedParameter[i];  }  [CE]  illegal  start  of  expression  [FE]                  EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(remainings!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  new  EstimatedParameter[i];  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(remainings!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  new  EstimatedParameter[i];  }	  return    parameters.length;    if(parameters!=    null)    {    for(int    i    =    0;    i    <    parameters.length;    ++i)    {    parameters[i]    =    parameters[i];    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
625	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  *  2  +  1;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  *  2  +  1;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.getCostEvaluations()  *  2  +  1;	  int    costEvaluations    =    parameters.getCostEvaluations()    -    1;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
626	[BUG]  [BUGGY]  return  this.costEvaluations  *  2  -(this.maxCostEvaluations  *  parameters.length);  [CE]  cannot  find  symbol  maxCostEvaluations  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  2  -(this.maxCostEvaluations  *  parameters.length);  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations  *  2  -(this.maxCostEvaluations  *  parameters.length);	  return    this.costEvaluations    *    2;    	non-compiled	[CE]  cannot  find  symbol  maxCostEvaluations	53	None	replace
627	[BUG]  [BUGGY]  return  parameters.length  -  1;  int  maxCostEvalations  =  parameters.length  -  1;  [CE]  unreachable  statement  [FE]    EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  -  1;  int  maxCostEvalations  =  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    -    1;    int  maxCostEvalations  =  parameters.length  -  1;	  	non-compiled	[CE]  unreachable  statement	19	None	add
628	[BUG]  [BUGGY]  return  parameters.length  -  1;  int  maxCostEval  =  parameters.size();  [CE]  cannot  find  symbol  [FE]      EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  -  1;  int  maxCostEval  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    -    1;    int  maxCostEval  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
629	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length  -  2;  int  costEvaluations  =  getCostEvaluations();  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  parameters.length  -  2;  int  costEvaluations  =  getCostEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    parameters.length    -    2;    int  costEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  unreachable  statement	70	None	add
630	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  int  costEvaluations  =  getCostEvaluations();  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  int  costEvaluations  =  getCostEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    parameters.length;    int  costEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  unreachable  statement	127	None	add
631	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  int  costEvaluations  =  Math.max(results.length,  parameters.length);  [CE]  cannot  find  symbol  results  [FE]      AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  int  costEvaluations  =  Math.max(results.length,  parameters.length);  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    +    parameters.length;    int  costEvaluations  =  Math.max(results.length,  parameters.length);	  	non-compiled	[CE]  cannot  find  symbol  results	127	None	add
632	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(results.length);  [CE]  cannot  find  symbol  results  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(results.length);  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(results.length);	  return    costEvaluations    -    1;    ArrayIndexOutOfBoundsException    costEvaluations    =    new    ArrayIndexOutOfBoundsException(results.length);    	non-compiled	[CE]  cannot  find  symbol  results	103	None	replace
633	[BUG]  [BUGGY]  return  costEvaluations  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(results,  parameters.length);  [CE]  cannot  find  symbol  results  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(results,  parameters.length);  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(results,  parameters.length);	  return    costEvaluations    -    1;    ArrayIndexOutOfBoundsException    costEvaluations    =    new    ArrayIndexOutOfBoundsException(results.length);    	non-compiled	[CE]  cannot  find  symbol  results	103	None	replace
634	[BUG]  [BUGGY]          int    costEvaluations    =    parameters.length;    int  costsEvaluations  =  parameters.length;  Int  costEvaluations  =  parameters.length;  int  costsEvaluations  =  parameters.length;  [CE]  cannot  find  symbol  [FE]    EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]          int    costEvaluations    =    parameters.length;    int  costsEvaluations  =  parameters.length;  Int  costEvaluations  =  parameters.length;  int  costsEvaluations  =  parameters.length;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	                int        costEvaluations        =        parameters.length;        int    costsEvaluations    =    parameters.length;    Int  costEvaluations  =  parameters.length;  int  costsEvaluations  =  parameters.length;	  	non-compiled	[CE]  cannot  find  symbol	88	None	add
635	[BUG]  [BUGGY]          int    costEvaluations    =    parameters.length;    int  costsEvaluations  =  parameters.length;  int  costEvaluations  =  parameters.length;  int  CostEvaluations  =  parameters.length;  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]      EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]          int    costEvaluations    =    parameters.length;    int  costsEvaluations  =  parameters.length;  int  costEvaluations  =  parameters.length;  int  CostEvaluations  =  parameters.length;  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	                int        costEvaluations        =        parameters.length;        int    costsEvaluations    =    parameters.length;    int  costEvaluations  =  parameters.length;  int  CostEvaluations  =  parameters.length;	  	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	88	None	add
636	[BUG]  [BUGGY]  int  costEvaluations  =  getMostCostEvaluations();  Integer  costEvaluations  =  getCostEvaluations();  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  getMostCostEvaluations();  Integer  costEvaluations  =  getCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMostCostEvaluations();  Integer  costEvaluations  =  getCostEvaluations();	          int    costEvaluations    =    getCostEvaluations();    Integer    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
637	[BUG]  [BUGGY]          int    costEvaluations    =    getCostEvaluations();    int  costsEvaluations  =  getCostEvaluations();  Int  costEvaluations  =  getCostEvaluations();  int  costsEvaluations  =  getCostEvaluations();  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]          int    costEvaluations    =    getCostEvaluations();    int  costsEvaluations  =  getCostEvaluations();  Int  costEvaluations  =  getCostEvaluations();  int  costsEvaluations  =  getCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	                int        costEvaluations        =        getCostEvaluations();        int    costsEvaluations    =    getCostEvaluations();    Int  costEvaluations  =  getCostEvaluations();  int  costsEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
638	[BUG]  [BUGGY]          int    costEvaluations    =    getCostEvaluations();    int  costsEvaluations  =  getCostEvaluations();  int  costEvaluations  =  getSostEvaluations();  int  costsEvaluations  =  getCostEvaluations();  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]      StackOverflowError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]          int    costEvaluations    =    getCostEvaluations();    int  costsEvaluations  =  getCostEvaluations();  int  costEvaluations  =  getSostEvaluations();  int  costsEvaluations  =  getCostEvaluations();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	                int        costEvaluations        =        getCostEvaluations();        int    costsEvaluations    =    getCostEvaluations();    int  costEvaluations  =  getSostEvaluations();  int  costsEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	74	None	add
639	[BUG]  [BUGGY]  return  this.costEvaluations  -  2;  int  costEvaluations  =  this.costEvaluations  /  2;  [CE]  unreachable  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  -  2;  int  costEvaluations  =  this.costEvaluations  /  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    -    2;    int  costEvaluations  =  this.costEvaluations  /  2;	  	non-compiled	[CE]  unreachable  statement	125	None	add
640	[BUG]  [BUGGY]  return  costEvaluations  *  2  -  1;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [CE]  not  a  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  -  1;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    -    1;    for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]	  	non-compiled	[CE]  not  a  statement	96	None	add
641	[BUG]  [BUGGY]  return  costEvaluations  *  2  -  1;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  -  1;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    -    1;    for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
642	[BUG]  [BUGGY]  return  costEvaluations  *  2  -  1;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  costEvaluations  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  costEvaluations  *  2  -  1;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  costEvaluations  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2    -    1;    for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  costEvaluations	  	non-compiled	[CE]  not  a  statement	96	None	add
643	[BUG]  [BUGGY]  return  parameters  *  maxCostEvalations;  [CE]  cannot  find  symbol  maxCostEvalations  [FE]            AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters  *  maxCostEvalations;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  *  maxCostEvalations;	  return    parameters    *    costEvaluations;    	non-compiled	[CE]  cannot  find  symbol  maxCostEvalations	106	None	replace
644	[BUG]  [BUGGY]  return  parameters.length  /  2;  int  maxCostEval  =  parameters.length  /  2  *  parameters.length;  [CE]  unreachable  statement  [FE]    EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  /  2;  int  maxCostEval  =  parameters.length  /  2  *  parameters.length;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    /    2;    int  maxCostEval  =  parameters.length  /  2  *  parameters.length;	  	non-compiled	[CE]  unreachable  statement	120	None	add
645	[BUG]  [BUGGY]  return  parameters.length  /  2;  int  cols  =  parameters.size();  [CE]  cannot  find  symbol  [FE]      EstimationException    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  parameters.length  /  2;  int  cols  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length    /    2;    int  cols  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	120	None	add
646	[BUG]  [BUGGY]  int  parameters.length  =  parameters.length  -  1;  [CE]  ';'  expected  [FE]            EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  parameters.length  =  parameters.length  -  1;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  parameters.length  =  parameters.length  -  1;	  return    parameters.length;    int    parameters.length    =    parameters.length;    	non-compiled	[CE]  ';'  expected	117	None	replace
647	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  cols  *  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  cols  *  2;	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    ++i)    {    parameters[i]    	compilable	  [FE]  AssertionFailedError  	16	2	replace
648	[BUG]  [BUGGY]  return  cols  *  2;  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  cols  *  2;  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  cols  *  2;	  return    costEvaluations    *    2;    for(int    i    =    0;    i    <    parameters.length;    i++)    {    EstimatedParameter[]    parameters    =    parameter.getParameters();    for(int    i    =    0,    cols    =    parameters.length;    i    <    cols.length;    ++i)    {    parameters[i]    	compilable	  [FE]  AssertionFailedError  	16	2	replace
649	[BUG]  [BUGGY]  if(parameters!=  null)  {  return  parameters.length;  }  if(parameters  ==  null)  {  parameters  =  parameters.length;  }  [CE]  incompatible  types  [FE]        EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(parameters!=  null)  {  return  parameters.length;  }  if(parameters  ==  null)  {  parameters  =  parameters.length;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(parameters!=  null)  {  return  parameters.length;  }  if(parameters  ==  null)  {  parameters  =  parameters.length;  }	  return    parameters.length;    int    parameters    =    parameters.length;    	non-compiled	[CE]  incompatible  types	115	None	replace
650	[BUG]  [BUGGY]  if(parameters!=  null)  {  return  parameters.length;  int  parameters  =  parameters.length;  }  [CE]  int  cannot  be  dereferenced  [FE]          EstimationException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  if(parameters!=  null)  {  return  parameters.length;  int  parameters  =  parameters.length;  }  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	if(parameters!=  null)  {  return  parameters.length;  int  parameters  =  parameters.length;  }	  return    parameters.length;    int    parameters    =    parameters.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	115	None	replace
651	[BUG]  [BUGGY]  return  this.costEvaluations  *  parameters.length;  int  maxCostEvalations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  return  this.costEvaluations  *  parameters.length;  int  maxCostEvalations  =  parameters.size();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations    *    parameters.length;    int  maxCostEvalations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	140	None	add
652	[BUG]  [BUGGY]  int  costEvaluations  =  measurements.size();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  measurements.size();  [BUGGY]      return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  measurements.size();	  int    costEvaluations    =    parameters.size()    -    2;    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
653	[BUG]  [BUGGY]  int  costEvaluations  =  super.getCostEvaluations();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  final  int  getCostEvaluations()  {      [BUGGY]  int  costEvaluations  =  super.getCostEvaluations();  [BUGGY]      }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  super.getCostEvaluations();	  return    this.costEvaluations;    int    costEvaluations    =    this.costEvaluations;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
